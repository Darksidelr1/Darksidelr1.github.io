<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>薯片菌のBlog</title>
  
  <subtitle>人生当苦 良人当归</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-12-22T06:33:34.376Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>薯片菌</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++学习笔记</title>
    <link href="http://example.com/posts/ad4f1e09.html"/>
    <id>http://example.com/posts/ad4f1e09.html</id>
    <published>2024-10-05T11:23:00.000Z</published>
    <updated>2024-12-22T06:33:34.376Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>由于我也是第一次学习C++，很多概念我自己也不清楚，所以此处基本上用来记录我学习过程中写的代码<br>各类概念和知识点理论，则是想到多少学到多少记多少。</p><h2 id="输出helloworld代码"><a href="#输出helloworld代码" class="headerlink" title="输出helloworld代码"></a>输出helloworld代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第六行cout语句实现了输出的功能，除去第六行的语句，整体就是C++代码的基本框架<br>类似java中的类体+方法体</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>C++的注释有以下几种</p><h3 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h3><p>//</p><h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h3><p>/**/<br>同样的，编译器编译代码的时候，会忽略注释的内容。</p><h2 id="C-基本-语法"><a href="#C-基本-语法" class="headerlink" title="C++基本 语法"></a>C++基本 语法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">///*这个include相当于import的意思</span></span><br><span class="line"><span class="comment">//相当于是导入了iostream这个包</span></span><br><span class="line"><span class="comment">//然后这个iostream是c++中进行输入输出操作的标准库</span></span><br><span class="line"><span class="comment">//*/</span></span><br><span class="line"><span class="comment">//using namespace std;</span></span><br><span class="line"><span class="comment">///*这条指令是告诉编译器 程序要使用std中的所有内容</span></span><br><span class="line"><span class="comment">//* 相当于是java lang类 如果不导入</span></span><br><span class="line"><span class="comment">//* 每次输入输出都要加上std 代码会变得很冗长</span></span><br><span class="line"><span class="comment">//* 所以这里导入std</span></span><br><span class="line"><span class="comment">//*/</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//int main() &#123;</span></span><br><span class="line"><span class="comment">///*这里就是普通的定义了一个main方法</span></span><br><span class="line"><span class="comment">//和Java类似 但是没有public static那一套</span></span><br><span class="line"><span class="comment">//然后这里下面的return 0 表示了程序正常结束</span></span><br><span class="line"><span class="comment">//在C++中程序正常结束就是返回0*/</span></span><br><span class="line"><span class="comment">//    cout &lt;&lt; &quot;爷回来辣&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    system(&quot;pause&quot;);</span></span><br><span class="line"><span class="comment">//    /*system() 是 C 标准库中的一个函数</span></span><br><span class="line"><span class="comment">//    它的参数是一个字符串，表示要执行的命令。</span></span><br><span class="line"><span class="comment">//    用来暂停程序的执行并显示提示信息</span></span><br><span class="line"><span class="comment">//    这个命令的作用是让用户有时间查看程序输出的内容</span></span><br><span class="line"><span class="comment">//    而不会让控制台窗口在程序结束后立刻关闭*/</span></span><br><span class="line"><span class="comment">//    return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="变量和常量"><a href="#变量和常量" class="headerlink" title="变量和常量"></a>变量和常量</h2><h3 id="变量基本介绍"><a href="#变量基本介绍" class="headerlink" title="变量基本介绍"></a>变量基本介绍</h3><p>变量存在的意义： 管理内存空间<br>变量创建语法：数据类型 变量名 =  变量初始值；</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">10</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*cout的意思就是把对象输出到控制台</span></span><br><span class="line"><span class="comment">&lt;&lt;就是把右侧的内容插入到左边*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"> <span class="comment">//这里system(&quot;pause&quot;)的作用是运行完了之后暂停窗口</span></span><br><span class="line"> <span class="comment">//方便你查看 结果 就不会直接结束程序</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>c++中和java中不一样 还存在常量，常量就是定义之后不可以发生改变的数据<br>可以看成java中用final修饰的变量<br>定义的两种方法<br>1、用#define定义在文件的上方 作为宏常量</p><h1 id="define-常量名-常量值"><a href="#define-常量名-常量值" class="headerlink" title="define 常量名 常量值"></a>define 常量名 常量值</h1><p>2、用const修饰一个变量<br>const 数据类型 数据名 = 数据值<br>两种方法定义的常量都不可以发生改变 如果尝试在代码中改变就会报错</p><p>关于const：我认为的const本质：限定修改</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//#define day 7;</span></span><br><span class="line"><span class="comment">/*上方代码报错</span></span><br><span class="line"><span class="comment">为什么 因为用#defin 定义常量 不需要使用分号结尾 </span></span><br><span class="line"><span class="comment">按下面的方式定义就正确了*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> day 7</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//day = 14;</span></span><br><span class="line"><span class="comment">/*上面的代码会报错 因为常量不能被改变*/</span></span><br><span class="line"><span class="comment">/*const 修饰的变量*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> month = <span class="number">12</span>;</span><br><span class="line"><span class="comment">//month = 24;</span></span><br><span class="line"><span class="comment">/*同样报错 用const修饰的变量也会变成常量*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a year have &quot;</span> &lt;&lt; month &lt;&lt; <span class="string">&quot; months&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a week have &quot;</span> &lt;&lt; day &lt;&lt; <span class="string">&quot; days&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="comment">/*可以理解为导入string 的包</span></span><br><span class="line"><span class="comment">* 再用C++风格的字符串的时候 要包含这个头文件</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*C++的数据类型*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 整型</span></span><br><span class="line"><span class="comment">C++的整型分成 </span></span><br><span class="line"><span class="comment">短整型 short 最小的表述范围都特别大 +-3w多</span></span><br><span class="line"><span class="comment">整型 int </span></span><br><span class="line"><span class="comment">长整型 long </span></span><br><span class="line"><span class="comment">长长整型 longlong*/</span></span><br><span class="line"><span class="type">short</span> num1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> num2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> num3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> num4 = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num3 = &quot;</span> &lt;&lt; num3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num4 = &quot;</span> &lt;&lt; num4 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*size of 关键字</span></span><br><span class="line"><span class="comment">通过这个关键字可以求出数据类型的所占的内存大小*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num4 的大小: &quot;</span> &lt;&lt;<span class="built_in">sizeof</span>(num4) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;short 的大小: &quot;</span> &lt;&lt;<span class="built_in">sizeof</span>(<span class="type">short</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*实型（浮点型</span></span><br><span class="line"><span class="comment">作用：表示小数</span></span><br><span class="line"><span class="comment">C++中有两种浮点型</span></span><br><span class="line"><span class="comment">单精度 float</span></span><br><span class="line"><span class="comment">双进度 double</span></span><br><span class="line"><span class="comment">双精度的有效范围更大*/</span></span><br><span class="line"><span class="comment">/*float的定义*/</span></span><br><span class="line"><span class="type">float</span> f1 = <span class="number">3.14f</span>;</span><br><span class="line"><span class="comment">/*为什么这里用3.14f而不用3.14</span></span><br><span class="line"><span class="comment">因为程序运行的逻辑是先创建了3.14 再通过指针</span></span><br><span class="line"><span class="comment">把f1指向这个3.14的位置 然后在程序创建3.14的时候会默认创建为一个double</span></span><br><span class="line"><span class="comment">的数据 所以要在后面先加上f 让他在创建的时候就创建为float的</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">上面的理解是全部错误的</span></span><br><span class="line"><span class="comment">cpp中将没有后缀的浮点数全部默认解释为double 因为double有更高的精度和更大的表数范围*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f1 = &quot;</span> &lt;&lt; f1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f1 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f1) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;d1 = &quot;</span> &lt;&lt; f1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;d1 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(d1) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*科学计数法*/</span></span><br><span class="line"><span class="type">float</span> f2 = <span class="number">3e2</span>;</span><br><span class="line"><span class="comment">/*3*10^2  </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f2 = &quot;</span> &lt;&lt; f2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f2 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f2) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f3 = <span class="number">3e-2</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f3 = &quot;</span> &lt;&lt; f3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f3 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f3) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*字符型*/</span></span><br><span class="line"><span class="comment">/*字符型就是表示单个字符的数据类型</span></span><br><span class="line"><span class="comment">下面依次 写  </span></span><br><span class="line"><span class="comment">字符型变量的创建方式</span></span><br><span class="line"><span class="comment">所占的内存大小</span></span><br><span class="line"><span class="comment">常见错误</span></span><br><span class="line"><span class="comment">对应的ASCII编码</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">char</span> ch1 = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ch1 = &quot;</span> &lt;&lt; ch1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ch1 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(ch1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ch1 &quot;</span> &lt;&lt; ch1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*加入字符的时候用单引号应用</span></span><br><span class="line"><span class="comment">这点在java里面其实也是 一样 的 </span></span><br><span class="line"><span class="comment">java中的双引号是用来引入字符串string的 </span></span><br><span class="line"><span class="comment">string和char有本质的区别 所以确实不同</span></span><br><span class="line"><span class="comment">字符型只占用一个字节</span></span><br><span class="line"><span class="comment">字符型变量并不是把字符本身放到内存 中存储</span></span><br><span class="line"><span class="comment">而是讲ASCII编码放到存储单元中 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*转义字符 </span></span><br><span class="line"><span class="comment">作用 用于表示一些不能显示出来的ASCII字符</span></span><br><span class="line"><span class="comment">现阶段我们常用的转义字符 有 \n \\ \t</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;转义字符\\ n &quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;hello\n world  &quot;</span>  &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;转义字符\\ t &quot;</span> &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;转义字符\\ \ &quot;</span> &lt;&lt; <span class="string">&quot;\\&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*在c中没有endl  结束语句也是通过\n*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;hello world \n&quot;</span>;</span><br><span class="line"><span class="comment">/*上面的代码可以执行*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*水平制表符\t</span></span><br><span class="line"><span class="comment">水平制表符具体输出 几个空格并不确定</span></span><br><span class="line"><span class="comment">取决于一种叫制表位的概念</span></span><br><span class="line"><span class="comment">一般来说是八个字符占一个制表位置 </span></span><br><span class="line"><span class="comment">所以输出 的时候 就是输出到最开始的八个字符 之后</span></span><br><span class="line"><span class="comment">如果已经输出了 3个字符 那么他就会输出到五个字符 的后面*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaaaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*字符串类型</span></span><br><span class="line"><span class="comment">字符串类型分为两种 C类型和C++类型</span></span><br><span class="line"><span class="comment">C类型的本质我认为就是一个字符的数组</span></span><br><span class="line"><span class="comment">C风格 char 变量名[] = &quot;字符串值&quot;</span></span><br><span class="line"><span class="comment">C++ 风格字符串 string 变量名 = &quot;字符串值&quot;*/</span></span><br><span class="line"><span class="type">char</span> str1[] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;str1:&quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*注意事项1、一定要加[]表示数组</span></span><br><span class="line"><span class="comment">2、一定要用 双引号 因为是多个字符 */</span></span><br><span class="line"></span><br><span class="line">string str2 = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;str2:&quot;</span> &lt;&lt; str2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*注意事项1、 C++中的string 是小写S开头</span></span><br><span class="line"><span class="comment">java中是大写s开头</span></span><br><span class="line"><span class="comment">2、一定要导入include string*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*布尔数据类型</span></span><br><span class="line"><span class="comment">只有真假 true false</span></span><br><span class="line"><span class="comment">本质就是0 和1  所以只占1字节 </span></span><br><span class="line"><span class="comment">创建布尔类型数据</span></span><br><span class="line"><span class="comment">查看所占用的空间</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> bl1 = <span class="literal">true</span>;;</span><br><span class="line"><span class="type">bool</span> bl2 = <span class="literal">false</span>;;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;bl1 = &quot;</span> &lt;&lt; bl1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;所占字节： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(bl1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;bl1 = &quot;</span> &lt;&lt; bl2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;所占字节 &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(bl1) &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*本质上1代表真 0带代表假*/</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*关于c++的命名规则</span></span><br><span class="line"><span class="comment">1、不能是关键字</span></span><br><span class="line"><span class="comment">2、字母、数字、下划线组成</span></span><br><span class="line"><span class="comment">3、第一个字符不能是数字</span></span><br><span class="line"><span class="comment">4、区分大小写</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">和java的主要区别</span></span><br><span class="line"><span class="comment">1、java中可以使用美元符号，且可以用$作为开头*/</span></span><br></pre></td></tr></table></figure><h3 id="数据的输入"><a href="#数据的输入" class="headerlink" title="数据的输入"></a>数据的输入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*数据的输入</span></span><br><span class="line"><span class="comment">使用关键字 cin</span></span><br><span class="line"><span class="comment">使用语法 cin &gt;&gt; 变量;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*依次输入整型浮点型字符型字符串布尔型等*/</span></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给整型变量a1赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a的值：&quot;</span> &lt;&lt; a1&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> a2 = <span class="number">0.0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给浮点型a2赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a2的值：&quot;</span> &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> a3 = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给字符型a3赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a3的值：&quot;</span> &lt;&lt; a3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">string a4 = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给字符串型a4赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a4;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a4的值：&quot;</span> &lt;&lt; a4 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> a5 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给布尔型a5赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a5;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a5的值：&quot;</span> &lt;&lt; a5 &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="comment">/*布尔类型的值赋值 只要是非0的值 都代表真*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基本运算符"><a href="#基本运算符" class="headerlink" title="基本运算符"></a>基本运算符</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*基本运算符</span></span><br><span class="line"><span class="comment">+- * /%</span></span><br><span class="line"><span class="comment">++ --  */</span></span><br><span class="line"><span class="type">int</span> n1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> n2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;给 整型数据 n1赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; n1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;给 整型数据 n2赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; n2;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n3 = n1;</span><br><span class="line"><span class="type">int</span> n4 = n2;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;加:&quot;</span> &lt;&lt; n1 + n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;减:&quot;</span> &lt;&lt; n1 - n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;乘:&quot;</span> &lt;&lt; n1 * n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;除:&quot;</span> &lt;&lt; n1 / n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;取余:&quot;</span> &lt;&lt; n1 % n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">n1 = ++n2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = ++n2 &quot;</span> &lt;&lt;<span class="string">&quot;n1:&quot;</span>&lt;&lt;n1&lt;&lt;<span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*等号右边的代码从左往右运行 首先先自增++ n2 = n2+1</span></span><br><span class="line"><span class="comment">n2本来是15 现在是16 然后赋值给n1 所以n1 = n2  = 16*/</span></span><br><span class="line"></span><br><span class="line">n1 = n3;</span><br><span class="line">n2 = n4;</span><br><span class="line">n1 = n2++;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 =n2++ &quot;</span> &lt;&lt; <span class="string">&quot;n1:&quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*这里就是先赋值再加减 先是n1 = n2 = 15 然后n2 + 1 = 16</span></span><br><span class="line"><span class="comment">下面的减法代码也是同理*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n1 = n3;</span><br><span class="line">n2 = n4;</span><br><span class="line">n1 = --n2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = --n2 &quot;</span> &lt;&lt; <span class="string">&quot;n1:&quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">n1 = n3;</span><br><span class="line">n2 = n4;</span><br><span class="line">n1 = n2--;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = n2-- &quot;</span> &lt;&lt; <span class="string">&quot;n1:&quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">float</span> m2 = <span class="number">3.14</span>;</span><br><span class="line"><span class="type">float</span> m3 = <span class="number">3.1415926535f</span>;</span><br><span class="line"><span class="type">double</span> m4 = <span class="number">3.1415926535</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; m1 / m2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; m3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; m4 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*关于除法</span></span><br><span class="line"><span class="comment">1、除数不能为0</span></span><br><span class="line"><span class="comment">2、不能对0取余*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*赋值运算符*/</span></span><br><span class="line"><span class="type">int</span> z1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> z2 = z1 += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;z1+=1:&quot;</span> &lt;&lt; z2 &lt;&lt; endl;</span><br><span class="line">z2 = z1 -= <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;z1-=1:&quot;</span> &lt;&lt; z2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*这里把加号换成- * / % 都是同理</span></span><br><span class="line"><span class="comment">所以就不逐个演示了</span></span><br><span class="line"><span class="comment">下面讲一讲与或非</span></span><br><span class="line"><span class="comment">符号分别是！非</span></span><br><span class="line"><span class="comment">&amp;&amp;  与</span></span><br><span class="line"><span class="comment">||  或 */</span></span><br><span class="line"></span><br><span class="line">n1 = <span class="number">0</span>;</span><br><span class="line">n2 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = &quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;/n&quot;</span> &lt;&lt; <span class="string">&quot;n2 = &quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> z3 = (n1 &amp;&amp; n2);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 &amp;&amp; n2:&quot;</span> &lt;&lt; z3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">z3 = (n1 || n2);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 || n2:&quot;</span> &lt;&lt; z3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环结构和分支结构"><a href="#循环结构和分支结构" class="headerlink" title="循环结构和分支结构"></a>循环结构和分支结构</h2><h3 id="if分支"><a href="#if分支" class="headerlink" title="if分支"></a>if分支</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*程序执行的三种结构</span></span><br><span class="line"><span class="comment">顺序结构 就是直接按照顺序执行代码</span></span><br><span class="line"><span class="comment">选择结构 就是执行满足条件 的代码</span></span><br><span class="line"><span class="comment">循环结构 满足条件时重复执行代码 直到不满足条件为止*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*if 语句 </span></span><br><span class="line"><span class="comment">输入分数  大于100 则打印考上了*/</span></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*在Cpp中变量不会默认初始化，所以你定义完了一个数字之后必须要赋值一个值</span></span><br><span class="line"><span class="comment">这点和java不同*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;please enter a score&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you score is:&quot;</span> &lt;&lt;score&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">100</span>)</span><br><span class="line">&#123; </span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you can go to the college!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">60</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Maybe next time&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;stupid&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="if循环练习"><a href="#if循环练习" class="headerlink" title="if循环练习"></a>if循环练习</h3><p>三只小猪称体重，找出最大的那一只</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*一个小程序 三只小猪比体重*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> p1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> p2 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> p3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第一只小猪的体重 \n &quot;</span>;</span><br><span class="line">cin &gt;&gt; p1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第一只小猪的体重是：&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第二只小猪的体重 \n &quot;</span>;</span><br><span class="line">cin &gt;&gt; p2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第二只小猪的体重是：&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第三只小猪的体重 \n &quot;</span>;</span><br><span class="line">cin &gt;&gt; p3;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第三 只小猪的体重是：&quot;</span> &lt;&lt; p3&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (p1 &gt; p2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p1 &gt; p3) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第一只小猪,重量为：&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第三只小猪,重量为：&quot;</span> &lt;&lt; p3 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p2 &gt; p3)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第二只小猪,重量为：&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第三只小猪,重量为：&quot;</span> &lt;&lt; p3 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*三目运算符</span></span><br><span class="line"><span class="comment">表达式一 ？ 表达式二 ： 表达式3</span></span><br><span class="line"><span class="comment">对表达式1判断 真执行2假执行3*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*三目运算符</span></span><br><span class="line"><span class="comment">创建abc变量</span></span><br><span class="line"><span class="comment">ab比较 大的赋值c*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">c= (a &gt; b ? a : b);</span><br><span class="line">cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*在cpp中 三目运算符返回的是变量，可以继续赋值*/</span></span><br><span class="line">(a &gt; b ? a : b) = <span class="number">100</span>;</span><br><span class="line"><span class="comment">/*返回 的值是b </span></span><br><span class="line"><span class="comment">这里是把返回的b重新赋值了*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt;<span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;b:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="switch和do-while基本语法"><a href="#switch和do-while基本语法" class="headerlink" title="switch和do while基本语法"></a>switch和do while基本语法</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="comment">/*time系统时间头文件包含*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*switch 语句</span></span><br><span class="line"><span class="comment">switch基本语法</span></span><br><span class="line"><span class="comment">switch（ 表达式）&#123;</span></span><br><span class="line"><span class="comment">case 结果1： 执行语句 ；break；</span></span><br><span class="line"><span class="comment">default：执行语句；break；</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">根据表达式产生的结果不同</span></span><br><span class="line"><span class="comment">执行 不同 的 语句，</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*给电影进行打分</span></span><br><span class="line"><span class="comment">10-9 经典</span></span><br><span class="line"><span class="comment">8-7 非常好</span></span><br><span class="line"><span class="comment">6-5 一般</span></span><br><span class="line"><span class="comment">5以下 烂片*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">short</span> <span class="type">int</span> a1 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;please enter  your score:&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//cin &gt;&gt; a1;</span></span><br><span class="line">a1 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//switch (a1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//case 10:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;经典&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 9 :</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;经典&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 8:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;非常好&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 7:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;非常好&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 6:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;一般&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 5:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;一般&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//default:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;不行&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (a1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;经典&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;非常好&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一般&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;不行&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*循环 结构</span></span><br><span class="line"><span class="comment">while循环</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (n1 &lt; <span class="number">10</span>) &#123;</span><br><span class="line">cout &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">n1++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line"><span class="comment">/*猜数字游戏*/</span></span><br><span class="line"><span class="type">int</span> a2 = (<span class="built_in">rand</span>() % <span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> b1 = (<span class="built_in">rand</span>() % <span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; b1 &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> b2 = (<span class="built_in">rand</span>() % <span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; b2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*这个函数可以随机生成 一个不小于后面数字的 数</span></span><br><span class="line"><span class="comment">这里 就是随机生成了一个 0-99之间 的 数*/</span></span><br><span class="line"><span class="comment">/*然后发现这个随机数不是真的随机数 每次生成的都是一样 </span></span><br><span class="line"><span class="comment">重复生成的数字也是固定的</span></span><br><span class="line"><span class="comment">然后看到网上说要添加随机数的种子，才能防止每次生成的都一样</span></span><br><span class="line"><span class="comment">可以根据系统时间生成随机数*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;enter  your guess:&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line"><span class="type">int</span> a4 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (a3 &gt; a2)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2 is smaller&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line">a4++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a3 &lt; a2) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2 is bigger&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line">a4++;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you god damn right&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you guess &quot;</span> &lt;&lt; a4 &lt;&lt; <span class="string">&quot; times&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*do while 循环语句</span></span><br><span class="line"><span class="comment">dowhile先 执行一次 循环语句</span></span><br><span class="line"><span class="comment">再判断 循环条件</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> n2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">cout &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line">n2++;</span><br><span class="line">&#125; <span class="keyword">while</span> (n2 &lt; <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="水仙花数练习"><a href="#水仙花数练习" class="headerlink" title="水仙花数练习"></a>水仙花数练习</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*水仙花数练习</span></span><br><span class="line"><span class="comment">解题思路 </span></span><br><span class="line"><span class="comment">1、输出所有三位数 （100-999）</span></span><br><span class="line"><span class="comment">2、找到水仙花数字</span></span><br><span class="line"><span class="comment">3、取模取各个位 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">判断 个位^3+十位^3+百位^3 = 本身</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印三位数*/</span></span><br><span class="line"><span class="type">int</span> num = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="comment">/*添加判断条件 如果是水仙花数才打印*/</span></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> a3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">a1 = num % <span class="number">10</span>;</span><br><span class="line">a2 = (num/<span class="number">10</span>)%<span class="number">10</span>;</span><br><span class="line">a3 = num/<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> b1 = a1 * a1 * a1;</span><br><span class="line"><span class="type">int</span> b2 = a2 * a2 * a2;</span><br><span class="line"><span class="type">int</span> b3 = a3 * a3 * a3;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> c1 = b1 + b2 + b3;</span><br><span class="line"><span class="keyword">if</span> ( c1 == num )</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (num &lt; <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*for 循环</span></span><br><span class="line"><span class="comment">满足循环条件时</span></span><br><span class="line"><span class="comment">执行循环语句</span></span><br><span class="line"><span class="comment">语法</span></span><br><span class="line"><span class="comment">for(起始表达式;条件表达式；末尾循环体)&#123;</span></span><br><span class="line"><span class="comment">循环语句 &#125;</span></span><br><span class="line"><span class="comment">起始表达式不参与循环，</span></span><br><span class="line"><span class="comment">条件表达式就是循环执行的条件</span></span><br><span class="line"><span class="comment">末尾循环体在循环每次结束之后运行</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*用for循环从数字0打印到9*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;<span class="comment">/*需要声明变量的类型</span></span><br><span class="line"><span class="comment"> java和c++中都需要声明*/</span></span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; a &lt; <span class="number">10</span>; a++)</span><br><span class="line">&#123;<span class="comment">/*声明也可以写外面</span></span><br><span class="line"><span class="comment"> 但是声明如果写在外面，不管写不写起始表达式都要加一个分号*/</span></span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for循环练习案例"><a href="#for循环练习案例" class="headerlink" title="for循环练习案例"></a>for循环练习案例</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*练习案例 敲桌子 </span></span><br><span class="line"><span class="comment">从数字1数到100 如果数字个位</span></span><br><span class="line"><span class="comment">十位 含有7或者是7的倍数 我们打印敲桌子</span></span><br><span class="line"><span class="comment">其他数字直接打印*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line"><span class="type">int</span> a = (i % <span class="number">10</span>);</span><br><span class="line"><span class="type">int</span> b = i / <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">7</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;flap desk&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(b == <span class="number">7</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;flap desk&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i % <span class="number">7</span> ==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;flap desk&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="嵌套循环练习"><a href="#嵌套循环练习" class="headerlink" title="嵌套循环练习"></a>嵌套循环练习</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*嵌套循环*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*练习1 打印10x10图*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j&lt;<span class="number">11</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *&quot;</span> ;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>打印乘法口诀表</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印乘法口诀表*/</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; <span class="string">&quot;x&quot;</span> &lt;&lt; j &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; i * j &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="跳转语句"><a href="#跳转语句" class="headerlink" title="跳转语句"></a>跳转语句</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*跳转语句</span></span><br><span class="line"><span class="comment">1、出现在switch语句中 跳出循环</span></span><br><span class="line"><span class="comment">2、出现在循环中，作用是跳出当前的循环</span></span><br><span class="line"><span class="comment">3、出现在嵌套循环中，跳出内层的循环*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;please choice level&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1、easy&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2、normal&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;3、difficult&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (select)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you choice easy mode&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you choice normal mode&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you choice difficult mode&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*出现在for循环中*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*嵌套循环*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">11</span>;j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (j==<span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><p>一维数组定义的三种方法</p><p>数据类型 数据名 [数组长度];<br>数据类型 数据名 [数组长度] = {值1，值2};<br>数据类型 数据名 [] = {值1，值2};</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*数组</span></span><br><span class="line"><span class="comment">数组就是一个集合 里面装了相同类型的数据元素</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">特点1 数组中的每个数据元素都是相同的数据类型</span></span><br><span class="line"><span class="comment">特点2 数组是由连续的内存位置组成的*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*一维数组的三种定义方式</span></span><br><span class="line"><span class="comment">2、数据类型 数据名 [数组长度];</span></span><br><span class="line"><span class="comment">首先根据特点1 数组里面所有元素都需要是相同的数据类型</span></span><br><span class="line"><span class="comment">所以声明数据类型特别重要 </span></span><br><span class="line"><span class="comment">数据名就是数组的总体名称</span></span><br><span class="line"><span class="comment">最后因为数组是一个定长 同时内存位置连续</span></span><br><span class="line"><span class="comment">所以需要声明数组长度 提前规划数组内存位置</span></span><br><span class="line"><span class="comment">2、数据类型 数据名 [数组长度] = &#123;值1，值2&#125;;</span></span><br><span class="line"><span class="comment">3、数据类型 数据名 [] = &#123;值1，值2&#125;;</span></span><br><span class="line"><span class="comment">第三种方法是你直接 把值写入进去 然后不人为定义的数组长度</span></span><br><span class="line"><span class="comment">那么他会根据你写入的值默认定义数组的长度</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">数组自动生成下标 我们可以通过下标来访问数组中的元素</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*第一种方法 */</span></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">5</span>];</span><br><span class="line"><span class="comment">/*给数组中的元素进行赋值</span></span><br><span class="line"><span class="comment">数组下标从0开始*/</span></span><br><span class="line">arr1[<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line">arr1[<span class="number">1</span>] = <span class="number">20</span>;</span><br><span class="line">arr1[<span class="number">2</span>] = <span class="number">30</span>;</span><br><span class="line">arr1[<span class="number">3</span>] = <span class="number">40</span>;</span><br><span class="line">arr1[<span class="number">4</span>] = <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*访问数据元素*/</span></span><br><span class="line">cout &lt;&lt; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*第二种*/</span></span><br><span class="line"><span class="type">int</span> arr2[<span class="number">5</span>] = &#123; <span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span> &#125;;</span><br><span class="line"><span class="comment">//cout &lt;&lt; arr2[0] &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用循环的方式输出*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr2[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr3[<span class="number">5</span>] = &#123; <span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>&#125;;</span><br><span class="line">cout &lt;&lt; arr3[<span class="number">4</span>] &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*如果在初始化的时候没有填写完全部的数据</span></span><br><span class="line"><span class="comment">，剩下的数据会用0来填补*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义数组的时候必须有数组初始长度*/</span></span><br><span class="line"><span class="type">int</span> arr4[] = &#123; <span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr4[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一维数名的用途"><a href="#一维数名的用途" class="headerlink" title="一维数名的用途"></a>一维数名的用途</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*一维数组数组名的用途</span></span><br><span class="line"><span class="comment">1、统计整个数组在内存中的长途*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">5</span>] = &#123; <span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span> &#125;;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(arr1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(arr1)/ <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*输出数组名称查看首地址*/</span></span><br><span class="line">cout &lt;&lt; arr1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; &amp;arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>)arr1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>) &amp; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>) &amp; arr1[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">arr1[<span class="number">0</span>] = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一维数组练习"><a href="#一维数组练习" class="headerlink" title="一维数组练习"></a>一维数组练习</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*五只小猪称重</span></span><br><span class="line"><span class="comment">一个数组中记录了五只小猪的体重</span></span><br><span class="line"><span class="comment">从中选出最重的*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> pig[<span class="number">5</span>] = &#123; <span class="number">100</span>,<span class="number">300</span>,<span class="number">500</span>,<span class="number">200</span>,<span class="number">400</span> &#125;;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (pig[i] &gt; j)</span><br><span class="line">&#123;</span><br><span class="line">j = pig[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; j &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*冒泡排序*/</span></span><br><span class="line"><span class="comment">/*最常用的排序算法</span></span><br><span class="line"><span class="comment">对数组内的元素进行排序</span></span><br><span class="line"><span class="comment">比较相邻的元素，如果第一个比第二个大，就交换</span></span><br><span class="line"><span class="comment">对比每一对相邻元素做同样的工作，执行完毕后，找到第一个最大值</span></span><br><span class="line"><span class="comment">重复以上的步骤，每次比较次数-1直到不需要比较</span></span><br><span class="line"><span class="comment">总的比较次数 = 数组长度 - 1</span></span><br><span class="line"><span class="comment">数组长度 用size of可以计算</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//void swapValues(int&amp; a, int&amp; b) &#123;</span></span><br><span class="line"><span class="comment">//int temp = a;  // 使用临时变量来交换</span></span><br><span class="line"><span class="comment">//a = b;</span></span><br><span class="line"><span class="comment">//b = temp;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[] = &#123; <span class="number">4</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*计算数组长度*/</span></span><br><span class="line"><span class="type">int</span> length = <span class="built_in">sizeof</span>(arr1) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组长度&quot;</span> &lt;&lt; length &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> times = length - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tempo = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*排序总轮数 = 元素个数 -1</span></span><br><span class="line"><span class="comment">每轮对比的次数 = 元素个数 - 排序轮数*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//总排序轮数 times</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; times; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; times  - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arr1[j] &gt; arr1[j<span class="number">+1</span>])</span><br><span class="line">&#123;</span><br><span class="line">tempo = arr1[j];</span><br><span class="line">arr1[j] = arr1[j + <span class="number">1</span>];</span><br><span class="line">arr1[j + <span class="number">1</span>] = tempo;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;冒泡排序 排序后&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr1[i];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*调用函数实现*/</span></span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; times; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//for (int j = 0; j &lt; times - i; j++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (arr5[j]&gt;arr5[j+1])</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//swapValues(arr5[j], arr5[j+1]);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><p>二维数组的四种定义方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据类型 数据名[行数][列数];</span><br><span class="line">数据类型 数据名[行数][列数]=&#123;&#123;数据1,数据2&#125;,&#123;数据3,数据4&#125;&#125;;</span><br><span class="line">数据类型 数据名[行数][列数]=&#123;数据1，数据2，数据3，数据4&#125;;</span><br><span class="line">数据类型 数据名[][列数]=&#123;数据1,数据2,数据3,数据4&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*二维数组</span></span><br><span class="line"><span class="comment">二维数组就是在一维数组基础上个多加了一个维度</span></span><br><span class="line"><span class="comment">二维数组定义有四种方式</span></span><br><span class="line"><span class="comment">数据类型 数据名[行数][列数];</span></span><br><span class="line"><span class="comment">数据类型 数据名[行数][列数]=&#123;&#123;数据1,数据2&#125;,&#123;数据3,数据4&#125;&#125;;</span></span><br><span class="line"><span class="comment">数据类型 数据名[行数][列数]=&#123;数据1，数据2，数据3，数据4&#125;;</span></span><br><span class="line"><span class="comment">数据类型 数据名[][列数]=&#123;数据1,数据2,数据3,数据4&#125;*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*第一种二维数组的定义方式*/</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">4</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">5</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr2[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr2[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr3[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr3[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;<span class="comment">/*默认情况下他先按照行输入，满了之后换下一行*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr4[][<span class="number">3</span>] =</span><br><span class="line">&#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr3[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二维数组名的用途"><a href="#二维数组名的用途" class="headerlink" title="二维数组名的用途"></a>二维数组名的用途</h3><p>查看二维数组所占内存空间<br>获取二维数组首地址</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组所占内存空间：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一行所占内存 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一个元素所占内存 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组有多少行 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1)/ <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组有多少列 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*可以查看二维数组首地址*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组的首地址&quot;</span> &lt;&lt; (<span class="type">int</span>)arr1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一行的首地址&quot;</span> &lt;&lt; (<span class="type">int</span>)arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第二行的首地址&quot;</span> &lt;&lt; (<span class="type">int</span>)arr1[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二维数组应用案例"><a href="#二维数组应用案例" class="headerlink" title="二维数组应用案例"></a>二维数组应用案例</h3><p>在一次考试中成绩分别如下表，请分别输出三名同学的总成绩</p><div class="table-container"><table><thead><tr><th></th><th>语文</th><th>数学</th><th>英语</th></tr></thead><tbody><tr><td>张三</td><td>100</td><td>100</td><td>100</td></tr><tr><td>李四</td><td>90</td><td>50</td><td>100</td></tr><tr><td>王五</td><td>60</td><td>70</td><td>80</td></tr></tbody></table></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*二维数组应用案例</span></span><br><span class="line"><span class="comment">案例描述：有三名同学（张三李四王五）</span></span><br><span class="line"><span class="comment">在一次考试中成绩分别如下表，请分别输出三名同学的总成绩</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*自己写的*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;========自己写的==========&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score[<span class="number">3</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">90</span>,<span class="number">50</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">string name = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">sum += score[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> (i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">name = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">name = <span class="string">&quot;王五&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; name &lt;&lt; <span class="string">&quot;的总成绩：&quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;========视频写的==========&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> score2[<span class="number">3</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">90</span>,<span class="number">50</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line">string name1[<span class="number">3</span>] = &#123; <span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span> &#125;; </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;<span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sum2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">sum2 += score2[i][j];</span><br><span class="line">cout &lt;&lt; score[i][j]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cout &lt;&lt;&quot;\n&quot; &lt;&lt; &quot;第&quot; &lt;&lt; i + 1 &lt;&lt; &quot;个人的总分为:&quot; &lt;&lt; sum2 &lt;&lt; endl;</span></span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\n&quot;</span> &lt;&lt; name1[i] &lt;&lt; <span class="string">&quot;的总分为:&quot;</span> &lt;&lt; sum2 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>作用：将一段经常使用的代码封装起来，减少重复代码<br>一个较大的程序，一半分为若干个程序块，每个模块时下按特定的功能</p><h3 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h3><p>函数的定义一般主要有五个步骤<br>1、返回值类型<br>2、函数名<br>3、参数列表<br>4、函数体语句<br>5、return表达式<br><strong>语法</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">返回值类型 函数名 （参数列表）</span><br><span class="line">&#123;</span><br><span class="line">函数体</span><br><span class="line">return语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义一个加法函数，传入两个参数，相加</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*1、返回值类型</span></span><br><span class="line"><span class="comment">2、函数名</span></span><br><span class="line"><span class="comment">3、参数列表</span></span><br><span class="line"><span class="comment">4、函数体语句</span></span><br><span class="line"><span class="comment">5、return表达式*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*实现一个加法函数，功能是，传入两个整型数据</span></span><br><span class="line"><span class="comment">计算数据相加的结果，并且返回*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">( <span class="type">int</span> num1,<span class="type">int</span> num2 )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a3 = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> a4 = <span class="built_in">add</span>(a2, a3);</span><br><span class="line"><span class="type">int</span> a5 = <span class="built_in">add</span>(a1, a2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">2</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1:&quot;</span>&lt;&lt;a1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a4:&quot;</span>&lt;&lt;a4 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a5:&quot;</span>&lt;&lt;a5 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数调用，形参和实参"><a href="#函数调用，形参和实参" class="headerlink" title="函数调用，形参和实参"></a>函数调用，形参和实参</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数调用*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*函数调用语法: 函数名(参数)*/</span></span><br><span class="line"><span class="comment">/*a和b称为 实际参数 实际上是有值的 </span></span><br><span class="line"><span class="comment">实参 传入的参数</span></span><br><span class="line"><span class="comment">再看函数在定义的时候 num1 和 num2</span></span><br><span class="line"><span class="comment">并没有实际的值 所以是形式参数 也就是形参*/</span></span><br><span class="line"><span class="type">int</span> c = <span class="built_in">add</span>(a, b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h3><p>所谓值传递，就是函数调用时实参将数值传入给形参<br>值传递时，如果<strong>形参发生改变，并不会影响实参</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义函数 实现两个数字进行交换*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> n1, <span class="type">int</span> n2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;before&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1=&quot;</span>&lt;&lt; n1&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n2=&quot;</span>&lt;&lt; n2&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n3 = n1;</span><br><span class="line">n1 = n2;</span><br><span class="line">n2 = n3;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;after&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1=&quot;</span> &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n2=&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//return; 返回值不需要的时候 可以不写return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap</span>(a1, a2);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1=&quot;</span> &lt;&lt; a1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2=&quot;</span> &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*输出了之后发现a1 a2的值没变</span></span><br><span class="line"><span class="comment">说明交换只在函数内有效*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*用专业的语句来说 就是我们做值传递的时候</span></span><br><span class="line"><span class="comment">函数的形参发生改变，并不会影响实参数</span></span><br><span class="line"><span class="comment">现在根据我的理解，值传递就是赋值</span></span><br><span class="line"><span class="comment">就是调用函数的时候把实际的两个变量 传递进函数的两个变量</span></span><br><span class="line"><span class="comment">也就是传递进函数的两个实参的值，传递给函数内的形参</span></span><br><span class="line"><span class="comment">到上面为止的所有方法都是值传递</span></span><br><span class="line"><span class="comment">值传递的时候形参发生的任何改变都不会影响实参*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>( <span class="string">&quot;pause&quot;</span> );</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：值传递时，形参改变（修饰）不了实参</p><h3 id="函数的常见样式"><a href="#函数的常见样式" class="headerlink" title="函数的常见样式"></a>函数的常见样式</h3><p>常见的函数样式有四种<br>1、无参无返<br>2、有参无返<br>3、无参有返<br>4、有参有返</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*四种常见的函数*/</span></span><br><span class="line"><span class="comment">/*无参无返*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test01&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*有参无返*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;int a is :&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*无参有返*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test03&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test04</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test04&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*无参无返的函数调用*/</span></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="comment">/*有参无返的函数调用*/</span></span><br><span class="line"><span class="built_in">test02</span>(<span class="number">2</span>);</span><br><span class="line"><span class="comment">/*无参有返的函数调用*/</span></span><br><span class="line"><span class="type">int</span> a1 = <span class="built_in">test03</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1=&quot;</span> &lt;&lt; a1 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*有参有返的函数调用*/</span></span><br><span class="line"><span class="type">int</span> a2 = <span class="built_in">test04</span>(<span class="number">10000</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2=&quot;</span> &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数的声明"><a href="#函数的声明" class="headerlink" title="函数的声明"></a>函数的声明</h3><p><strong>作用</strong>：告诉编译器函数名称一集如何调用函数。函数的实际主体可以单独定义。<br>函数的什么可以多次，但是函数的定义只能有一次</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数的声明*/</span></span><br><span class="line"><span class="comment">/*比较函数，实现两个整形的数字进行比较</span></span><br><span class="line"><span class="comment">返回较大的值*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*提前告诉编译器函数存在 可以利用函数的声明*/</span></span><br><span class="line"><span class="comment">/*函数的声明*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="comment">/*声明可以写多次，但是定义只能有一次*/</span></span><br><span class="line"><span class="comment">/*个人看法 就是把函数体中的部分去掉*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">max</span>(a1, a2) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义函数*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数的分文件编写"><a href="#函数的分文件编写" class="headerlink" title="函数的分文件编写"></a>函数的分文件编写</h3><p><strong>作用</strong>：让代码结构更加清晰<br>函数分文件编写一般有4个步骤<br>1、创建后缀名为.h的头文件<br>2、创建后缀名为.cpp的源文件<br>3、再头文件中写函数的声明<br>4、在源文件中写函数的定义</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">swap.h</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数的声明*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line">swap.cpp</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = a;</span><br><span class="line">a = b;</span><br><span class="line">b = tempo;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">test<span class="number">035.</span>cpp</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*函数的分文件编写*/</span></span><br><span class="line"><span class="comment">/*实现两个数字*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap</span>(a1, a2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><h3 id="指针的基本概念"><a href="#指针的基本概念" class="headerlink" title="指针的基本概念"></a>指针的基本概念</h3><p>作用：通过指针间接访问内存</p><p>内存编号是从0开始记录的，一般用十六进制表示<br>可以利用指针变量保存地址</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241220203516452.png" alt="image-20241220203516452"></p><h3 id="指针变量的定义和使用"><a href="#指针变量的定义和使用" class="headerlink" title="指针变量的定义和使用"></a>指针变量的定义和使用</h3><p>指针变量定义语法：数据类型 *变量名;</p><p>为什么要写数据类型：定义指针时需要指定数据类型，是为了保证指针的正确行为，包括内存访问、数据解释以及指针算术操作。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*定义指针*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*指针定义的语法： 数据类型 * 指针变量名;*/</span></span><br><span class="line"><span class="type">int</span> * p;</span><br><span class="line"><span class="comment">/*p代表point point 代表的就是指针的意思</span></span><br><span class="line"><span class="comment">指向性 指针</span></span><br><span class="line"><span class="comment">不同的数据类型在内存中占用不同大小</span></span><br><span class="line"><span class="comment">不同指针*/</span></span><br><span class="line"><span class="comment">/*&amp;a 获得a的地址</span></span><br><span class="line"><span class="comment">后面引用传递的时候也会记载*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*让指针记录变量a的地址*/</span></span><br><span class="line">p = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a的地址&quot;</span> &lt;&lt; &amp;a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;指针p为&quot;</span> &lt;&lt; p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用指针*/</span></span><br><span class="line"><span class="comment">/*可以通过解引用的方式来找到指针指向的内存*/</span></span><br><span class="line"><span class="comment">/*指针前加一个*就是解引用，找到指针指向的内存中的数据*/</span></span><br><span class="line">*p = <span class="number">1000</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a的现在为&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p现在为&quot;</span> &lt;&lt; p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p现在为&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*个人理解：首先我们定义了一个int变量a 他的地址可能是0x00</span></span><br><span class="line"><span class="comment">* 然后内存中 0x00 的位置的变量就是a 假设为0</span></span><br><span class="line"><span class="comment">* 然后我们定义了一个 int 指针 p</span></span><br><span class="line"><span class="comment">* 然后让这个指针指向 a 就是说 p = 0x00</span></span><br><span class="line"><span class="comment">* 然后解引用就是找到这个地址中的数据 比如说找到0x00</span></span><br><span class="line"><span class="comment">* 然后看一下这个位置4个字节长度的数据是0000 那就是0 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解引用<br>*p 表示 解引用操作，也就是通过指针 p 获取它所指向的地址，并操作该地址中的数据。<br>然后指针的定义中 </p><ul><li><strong>功能上</strong>，<code>int *p;</code>、<code>int * p;</code> 和 <code>int* p;</code> 是等价的，指向 <code>int</code> 类型的指针。</li><li><strong>空格的使用</strong> 完全是风格问题，取决于个人或团队的编码习惯。</li></ul><h3 id="指针所占内存空间"><a href="#指针所占内存空间" class="headerlink" title="指针所占内存空间"></a>指针所占内存空间</h3><p>指针也是种数据类型，那么这种数据类型占用多少内存空间？</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*指针所占内存空间*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//int* p;</span></span><br><span class="line"><span class="comment">//p = &amp;a;</span></span><br><span class="line"><span class="comment">/*更加简洁的写法*/</span></span><br><span class="line"><span class="type">int</span> * p = &amp;a;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of (int *)&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">int</span> * ) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of (double *)&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">double</span> * ) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of (p)&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(p) &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*在32位操作系统下 所有指针都占4个字节</span></span><br><span class="line"><span class="comment">在64位操作系统下，所有指针都占8个字节</span></span><br><span class="line"><span class="comment">我是64位系统，所以这里都是显示占8字节*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="空指针和野指针"><a href="#空指针和野指针" class="headerlink" title="空指针和野指针"></a>空指针和野指针</h3><p><strong>空指针</strong>：指针变量指向内存中编号为0的空间<br><strong>用途</strong>：初始化指针变量<br><strong>注意</strong>：空指针指向的内存是不可以访问的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span>  <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*空指针*/</span></span><br><span class="line"><span class="comment">/*空指针用于初始化*/</span></span><br><span class="line"><span class="type">int</span> *p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*空指针是不可以访问 的</span></span><br><span class="line"><span class="comment">下面 尝试解引用，然后 就失败了*/</span></span><br><span class="line"><span class="comment">//*p = 100;</span></span><br><span class="line"><span class="comment">//0-255之间的内存编号是系统占用的，因此不可以访问</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>野指针</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*野指针*/</span></span><br><span class="line"><span class="comment">/*在程序中尽量避免出现野指针</span></span><br><span class="line"><span class="comment">野指针就是直接赋值了一块地址</span></span><br><span class="line"><span class="comment">但是这块地址实际上是没有权限去操作的</span></span><br><span class="line"><span class="comment">因为正常可以操作的地址是通过正常定义申请得来的*/</span></span><br><span class="line"><span class="type">int</span>* p = (<span class="type">int</span>*)<span class="number">0x1100</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><u>空指针和野指针都不是我们申请的空间，因此不要访问。</u></p><h3 id="const修饰指针"><a href="#const修饰指针" class="headerlink" title="const修饰指针"></a>const修饰指针</h3><p>const 修饰指针有三种情况<br>const修饰指针 常量指针<br>const修饰常量 指针常量<br>const既修饰指针 又修饰常量</p><h4 id="常量指针"><a href="#常量指针" class="headerlink" title="常量指针"></a>常量指针</h4><p>特点：指针的指向可以修改，但是指针指向的值不可以改。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241220221523804.png" alt="image-20241220221523804"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*常量指针 </span></span><br><span class="line"><span class="comment">常量指针 首先是指针， 然后是const修饰的指针</span></span><br><span class="line"><span class="comment">const导致这个指针变成了一个常量*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">20</span>;</span><br><span class="line"><span class="comment">/*常量指针*/</span></span><br><span class="line"><span class="type">int</span> * p1 = &amp;a;</span><br><span class="line"><span class="comment">/*上面就是定义一个指针的正常语</span></span><br><span class="line"><span class="comment">然后如果要定义一个常量指针 首先他是一个指针</span></span><br><span class="line"><span class="comment">其次用常量修饰 所以应该用const修饰这个指针的定义*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* p2 = &amp;a;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p2 = &quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*指针的指向可以修改，</span></span><br><span class="line"><span class="comment">但是指针指向的值不可以改</span></span><br><span class="line"><span class="comment">首先如果我定义一个指针</span></span><br><span class="line"><span class="comment">比如在这里，我能*/</span></span><br><span class="line">p2 = &amp;b;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p2 = &quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*为什么这里用p1 = &amp;b;而不是*p1 = &amp;b;</span></span><br><span class="line"><span class="comment">因为p1 = &amp;b;的意思是把p1的指向从a改成b</span></span><br><span class="line"><span class="comment">而*p1 = &amp;b;的意思是把p1指向的内容 ，也就是a指向的内存所占的空间中的数据改成b</span></span><br><span class="line"><span class="comment">这肯定是不行的，因为a是一个int 所以只能存储数字，b在这里只是一个字母*/</span></span><br><span class="line"></span><br><span class="line">p2 = &amp;c;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p2 = &quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*从这里我们可以知道 首先这个所谓的常量指针</span></span><br><span class="line"><span class="comment">说白了就是不可以解引用然后修改内存地址中存储的数字，</span></span><br><span class="line"><span class="comment">但是实际上还是可以指向不同的数的 这里可以指向代表20的c</span></span><br><span class="line"><span class="comment">也可以指向代表10的b 说明就是缺少了解引用的功能</span></span><br><span class="line"><span class="comment">我的猜测是可能可以用来防止修改已有的变量吧*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="指针常量"><a href="#指针常量" class="headerlink" title="指针常量"></a>指针常量</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*指针常量*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*正常指针*/</span></span><br><span class="line"><span class="type">int</span>* p2 = &amp;a;</span><br><span class="line"><span class="comment">/*指针常量*/</span></span><br><span class="line"><span class="type">int</span>* <span class="type">const</span> p1 = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">*p1 = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p1 = &quot;</span> &lt;&lt; *p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*这里可以看到 p1的地址没有发生改变</span></span><br><span class="line"><span class="comment">也就是说p1一直是指向那一块内存空间的</span></span><br><span class="line"><span class="comment">但是p1的值*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>const既修饰指针，又修饰常量</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*const 既修饰指针 也修饰常量*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p1 = &amp;a;</span><br><span class="line"><span class="type">int</span> <span class="type">const</span> * <span class="type">const</span> p2 = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p2=&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p1=&quot;</span> &lt;&lt; *p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p2=&quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*指针的指向和指针的值都不可以修改*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>理解看法和总结</strong>：</p><p>说一下这一块我整体的看法和总结，首先先来看指针的定义<br>指针定义过程中的int <em> p = &xxx; 其中 </em>代表他是一个指针，然后p实际上就是一个数字，用来存储内存地址<br>常量指针，常量作为一个形容词修饰指针，所以const 肯定在 <em>的前面（无所谓在int前后）<br>所以他作为指针常量，只是指针的 </em> 部分被限制住了，<em>在解引用的时候要用到，所以就没办法用了<br>说人话就是没办法用 </em>p = 10;这种语句来修改内存地址中的数据了。这是常量指针 指针的部分被常量限制了。<br>然后是指针常量，指针常量在前面，首先是指针 然后才是常量 所以定义的方式是 int <em> const p = &a;这样，然后p的部分本来存储的就是内存地址，被const修饰之后 内存地址就没办法更改了，但是 </em>的部分功能还是正常的，也就是说我们可以解引用修改内存地址中的数据 但是没办法修改引用的内存地址了。 这 p永远都只能指向a<br>最后是第三种  const int * const p  = &amp;a 这种 情况下 既没办法修改地址 也没办法解引用修改值。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*const 既修饰指针 也修饰常量*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p1 = &amp;a;</span><br><span class="line"><span class="type">int</span> <span class="type">const</span> * <span class="type">const</span> p2 = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p2=&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p1=&quot;</span> &lt;&lt; *p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p2=&quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*指针的指向和指针的值都不可以修改*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*1\ const修饰指针*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* p3 = &amp;a;</span><br><span class="line">p3 = &amp;b;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p3:&quot;</span> &lt;&lt; p3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p3:&quot;</span> &lt;&lt; *p3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2\ const修饰常量*/</span></span><br><span class="line"><span class="type">int</span>* <span class="type">const</span> p4 = &amp;a;</span><br><span class="line">*p4 = <span class="number">30</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p4&quot;</span>&lt;&lt;p4&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p4&quot;</span> &lt;&lt; *p4&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*3 const修饰指针和常量*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p5 = &amp;a;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p5&quot;</span> &lt;&lt; p5 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p5&quot;</span> &lt;&lt; *p5 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="指针和数组"><a href="#指针和数组" class="headerlink" title="指针和数组"></a>指针和数组</h3><p><strong>作用</strong>：利用指针访问数组中元素</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*指针和数组</span></span><br><span class="line"><span class="comment">利用指针访问数组中的元素*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第一个元素&quot;</span> &lt;&lt; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*数组是整形的 所以我们创建指针的时候也要创建整形的指针*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* p = arr1;</span><br><span class="line"><span class="comment">/*arr就是数组首地址*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;利用指针访问第一个元素:&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">p++;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;P++元素:&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*p++之后访问的就是数组中的第二个元素了*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;利用指针遍历数组&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span>* p2 = arr1;</span><br><span class="line"><span class="type">int</span> length = <span class="built_in">sizeof</span>(arr1) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*不用指针*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;个数是&quot;</span> &lt;&lt; arr1[i] &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*用指针*/</span></span><br><span class="line">cout &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line">p2++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针和函数"><a href="#指针和函数" class="headerlink" title="指针和函数"></a>指针和函数</h3><p>作用：利用指针做函数参数，可以改变实际参数的值<br>（引用传递）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*写一个函数实现两个数字进行交换*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap01</span><span class="params">(<span class="type">int</span> n1, <span class="type">int</span> n2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;交换前&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n1:&quot;</span> &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> tempo = n1;</span><br><span class="line">n1 = n2;</span><br><span class="line">n2 = tempo;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;交换后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n1:&quot;</span> &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*值传递 要来力*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap02</span><span class="params">(<span class="type">int</span> *p1 , <span class="type">int</span> *p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = *p1;</span><br><span class="line">*p1 = *p2;</span><br><span class="line">*p2 = tempo;</span><br><span class="line"><span class="comment">/* *p是解引用的意思 这里是引用了a和b</span></span><br><span class="line"><span class="comment">然后传入了两个内存地址的解引用</span></span><br><span class="line"><span class="comment">然后用解引用重新赋值*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*指针和函数*/</span></span><br><span class="line"><span class="comment">/*值传递*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap01</span>(a, b);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中b:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*地址传递*/</span></span><br><span class="line"><span class="built_in">swap02</span>(&amp;a, &amp;b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;地址传递后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中b:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针、数组、函数"><a href="#指针、数组、函数" class="headerlink" title="指针、数组、函数"></a>指针、数组、函数</h3><p>封装一个函数，利用冒泡排序，实现对整整形数组的升序排序<br>举例 int arr1[10]= {4,3,6,9,5,8,2,1,7,5} ;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*参数1 数组的首地址 参数二 数组长度*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="type">int</span>* p, <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p[j]&gt;p[j<span class="number">+1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> tempo = p[j];</span><br><span class="line">p[j] = p[j + <span class="number">1</span>];</span><br><span class="line">p[j + <span class="number">1</span>] = tempo;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*问 为什么这里可以用p[j]访问数组元素*/</span></span><br><span class="line"><span class="comment">/*在 C++ 中，指针和数组是密切相关的。</span></span><br><span class="line"><span class="comment">实际上，数组名本质上是一个指针，指向数组的第一个元素。</span></span><br><span class="line"><span class="comment">arr[j] 实际上是对指针 arr 的解引用操作（即 *(arr + j)）。</span></span><br><span class="line"><span class="comment">它等价于指针的偏移。</span></span><br><span class="line"><span class="comment">你可以通过 arr + j 来访问数组的第 j 个元素，</span></span><br><span class="line"><span class="comment">因为 arr 是一个指向数组首元素的指针，arr + j 就是指向数组第 j 个元素的指针。*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*写一个 打印数组的函数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printArray</span><span class="params">(<span class="type">int</span>* p, <span class="type">int</span>  len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; p[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">10</span>] = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">5</span> &#125;;</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(arr1) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; len; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; arr1[i];</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printArray</span>(arr1,len);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; <span class="string">&quot;排序前如上&quot;</span> &lt;&lt;<span class="string">&quot;\n&quot;</span>&lt;&lt;<span class="string">&quot;排序后如下&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">bubbleSort</span>(arr1, len);</span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; len; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; arr1[i] ;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printArray</span>(arr1, len);</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><h3 id="结构体的基本概念"><a href="#结构体的基本概念" class="headerlink" title="结构体的基本概念"></a>结构体的基本概念</h3><p>结构体属于用户自定义的数据类型，允许用户存储不同的数据类型<br>我的感觉就是java中自定义的类，但是好像又不一样</p><h3 id="结构体定义和使用"><a href="#结构体定义和使用" class="headerlink" title="结构体定义和使用"></a>结构体定义和使用</h3><p>语法：struct 结构体名{结构体成员列表};<br>通过结构体创建变量的方式有三种：<br>struct 结构体名 变量名<br>struct 结构体名 变量名 = {成员值1,成员值2…}<br>定义结构体时顺便创造变量</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建学生数据类型</span></span><br><span class="line"><span class="comment">学生包括 姓名 年龄  分数*/</span></span><br><span class="line"><span class="comment">/*语法 struct 类型名称&#123;成员列表&#125;*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*成员列表*/</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">/*姓名 年龄  分数*/</span></span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;s3;</span><br><span class="line"><span class="comment">/*在这里可以顺便创建一个结构体变量</span></span><br><span class="line"><span class="comment">但是我感觉不会有人这么写*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*为了偷懒我这里写了一个函数打印学生信息*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student p1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p<span class="number">1.</span>name &lt;&lt; <span class="string">&quot;  age:&quot;</span> &lt;&lt; p<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过学生类创建具体学生*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*三种方法创建*/</span></span><br><span class="line"><span class="comment">//struct Student s1; struct 可以省略</span></span><br><span class="line">Student s1;</span><br><span class="line">s<span class="number">1.</span>age = <span class="number">18</span>;</span><br><span class="line">s<span class="number">1.</span>name = <span class="string">&quot;jack&quot;</span>;</span><br><span class="line">s<span class="number">1.</span>score = <span class="number">90</span>;</span><br><span class="line"><span class="built_in">printStudent</span>(s1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span> s2 = &#123; <span class="string">&quot;mike&quot;</span>,<span class="number">20</span>,<span class="number">90</span> &#125;;</span><br><span class="line"><span class="comment">/*这里和java又不一样 java是括号 这里是 花括号*/</span></span><br><span class="line"><span class="built_in">printStudent</span>(s2);</span><br><span class="line"></span><br><span class="line">s<span class="number">3.</span>age = <span class="number">20</span>;</span><br><span class="line">s<span class="number">3.</span>name = <span class="string">&quot;fiona&quot;</span>;</span><br><span class="line">s<span class="number">3.</span>score = <span class="number">95</span>;</span><br><span class="line"><span class="built_in">printStudent</span>(s3);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结<br>1、定义结构体的关键字是 struct 类似java中的class 不可省略<br>2、创建结构体变量的时候，关键字stcuct可以省略<br>3、结构体利用操作符”.”访问成员</p><h3 id="结构体数组"><a href="#结构体数组" class="headerlink" title="结构体数组"></a>结构体数组</h3><p><strong>作用</strong>：将自定义的结构体放入数组中方便维护<br>我认为可能跟用java做 管理系统需要把自定义的类放入到arraylist差不多<br>语法： struct 结构体名 数组名[元素个数 ] = { {}，{}…{} }</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student p1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p<span class="number">1.</span>name &lt;&lt; <span class="string">&quot;  age:&quot;</span> &lt;&lt; p<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*结构体数组*/</span></span><br><span class="line"><span class="comment">/*1 定义结构体</span></span><br><span class="line"><span class="comment">2 创建结构体数组</span></span><br><span class="line"><span class="comment">3 给结构体数组中的元素赋值*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span> stuArr[<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">&quot;mike&quot;</span>,<span class="number">17</span>,<span class="number">70</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;alice&quot;</span>,<span class="number">18</span>,<span class="number">80</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;john&quot;</span>,<span class="number">19</span>,<span class="number">90</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*如果要修改*/</span></span><br><span class="line">stuArr[<span class="number">2</span>].name = <span class="string">&quot;jack&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*尝试一下遍历输出*/</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(stuArr) / <span class="built_in">sizeof</span>(stuArr[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printStudent</span>(stuArr[i]);</span><br><span class="line">&#125;<span class="comment">/*成功*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h3><p>作用：通过指针访问结构体中的成员</p><p>利用操作符 - &gt;可以通过结构体指针访问 结构体属性</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student *p1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p1-&gt;name &lt;&lt; <span class="string">&quot;  age:&quot;</span> &lt;&lt; p1-&gt;age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p1-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建学生结构体 变量</span></span><br><span class="line"><span class="comment">通过指针指向结构体变量</span></span><br><span class="line"><span class="comment">通过指针访问结构体变量中的数据*/</span></span><br><span class="line"></span><br><span class="line">Student s1 = &#123; <span class="string">&quot;jack&quot;</span>,<span class="number">18</span>,<span class="number">90</span> &#125;;</span><br><span class="line">Student * p = &amp;s1;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent</span>(p);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体嵌套结构体"><a href="#结构体嵌套结构体" class="headerlink" title="结构体嵌套结构体"></a>结构体嵌套结构体</h3><p><strong>作用</strong>：结构体中的成员可以是另一个结构体<br><strong>例如</strong>：每个老师辅导一个学员，一个老师的结构体中，记录一个学生的结构体</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Teacher</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">Student stu;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printTeacherInfo</span><span class="params">(<span class="type">const</span> Teacher&amp; t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 输出教师信息</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Teacher ID: &quot;</span> &lt;&lt; t.id &lt;&lt; <span class="string">&quot;Teacher Name: &quot;</span> </span><br><span class="line">&lt;&lt; t.name&lt;&lt; <span class="string">&quot;Teacher Age: &quot;</span> &lt;&lt; t.age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出学生信息</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Student Name: &quot;</span> &lt;&lt; t.stu.name </span><br><span class="line">&lt;&lt; <span class="string">&quot;Student Age: &quot;</span> &lt;&lt; t.stu.age </span><br><span class="line">&lt;&lt; <span class="string">&quot;Student Score: &quot;</span> &lt;&lt; t.stu.score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Student s1 = &#123;<span class="string">&quot;jack&quot;</span>,<span class="number">18</span>,<span class="number">70</span>&#125;;</span><br><span class="line">Student s2 = &#123;<span class="string">&quot;mike&quot;</span>,<span class="number">19</span>,<span class="number">80</span>&#125;;</span><br><span class="line">Student s3 = &#123;<span class="string">&quot;lisa&quot;</span>,<span class="number">20</span>,<span class="number">90</span>&#125;;</span><br><span class="line"></span><br><span class="line">Teacher t1 = &#123;<span class="number">1</span>,<span class="string">&quot;white&quot;</span>,<span class="number">40</span>,s1&#125;;</span><br><span class="line">Teacher t2 = &#123;<span class="number">2</span>,<span class="string">&quot;greffin&quot;</span>,<span class="number">46</span>,s2&#125;;</span><br><span class="line">Teacher t3 = &#123;<span class="number">3</span>,<span class="string">&quot;park&quot;</span>,<span class="number">38</span>,s3&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printTeacherInfo</span>(t1);</span><br><span class="line"><span class="built_in">printTeacherInfo</span>(t2);</span><br><span class="line"><span class="built_in">printTeacherInfo</span>(t3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结构体做函数参数"><a href="#结构体做函数参数" class="headerlink" title="结构体做函数参数"></a>结构体做函数参数</h3><p><strong>作用</strong>：将结构体作为参数 向函数中传递<br>传递的方式有两种<br>值传递<br>地址传递</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*学生类*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印学生 信息的函数*/</span></span><br><span class="line"><span class="comment">/*值传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent01</span><span class="params">(Student s1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;值传递函数内&quot;</span> &lt;&lt; endl;</span><br><span class="line">s<span class="number">1.</span>age = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*地址传递 引用传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent02</span><span class="params">(Student *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;引用传递函数内&quot;</span> &lt;&lt; endl;</span><br><span class="line">p-&gt;age = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Student s1 = &#123; <span class="string">&quot;jack&quot;</span>,<span class="number">18</span>,<span class="number">70</span> &#125;;</span><br><span class="line">Student s2 = &#123; <span class="string">&quot;mike&quot;</span>,<span class="number">19</span>,<span class="number">80</span> &#125;;</span><br><span class="line">Student s3 = &#123; <span class="string">&quot;alice&quot;</span>,<span class="number">20</span>,<span class="number">90</span> &#125;;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line"><span class="built_in">printStudent01</span>(s1);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;值传递修改后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent02</span>(&amp;s1);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;地址传递修改后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结构体中const使用场景"><a href="#结构体中const使用场景" class="headerlink" title="结构体中const使用场景"></a>结构体中const使用场景</h3><p><strong>作用</strong>：用const防止误操作 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s.name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s.age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s.score &lt;&lt; endl;</span><br><span class="line">&#125;<span class="comment">/*这就是标准的值传递  值传递会拷贝出非常多的多余数据 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*尝试用引用 传递*/</span></span><br><span class="line"><span class="comment">/*为什么用指针 因为上面的代码相当会把Student中</span></span><br><span class="line"><span class="comment">所有的数据都复制出来一份，在实际情况中，student的人数会很多</span></span><br><span class="line"><span class="comment">student的信息也会很多 ，数据量就会按照指数级增长</span></span><br><span class="line"><span class="comment">所以用指针可以很好的解决这个问题，一个指针只占4个字节（64位系统是八个）*/</span></span><br><span class="line"><span class="comment">/*一句话概括 用指针 可以减少内存空间 同时不会复制新的副本*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent02</span><span class="params">(<span class="type">const</span> Student* s)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*这节课的重点 就是上面在函数定义的时候在形参前面加一个const 这样的话 就无法修改</span></span><br><span class="line"><span class="comment"> 引用的指针，就是所谓的 常量指针 可以修改引用不同的指针 传入不同的student类的数据</span></span><br><span class="line"><span class="comment"> 都可以读数据 但是都无法更改 student中的内容*/</span></span><br><span class="line"><span class="comment">//s-&gt;name = &quot;mike&quot; 加入const之后这里就会报错 不能进行修改 </span></span><br><span class="line"><span class="comment">/*这样就可以保证不修改原始数据了*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s-&gt;name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s-&gt;age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Student s1 = &#123; <span class="string">&quot;jack&quot;</span>,<span class="number">17</span>,<span class="number">70</span> &#125;;</span><br><span class="line"><span class="built_in">printStudent</span>(s1);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent02</span>(&amp;s1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体案例"><a href="#结构体案例" class="headerlink" title="结构体案例"></a>结构体案例</h3><p>案例1<br>案例描述：<br>学校正在做毕设项目，每名老师带领5个学生，总共有3名老师，<br>需求如下<br>设计学生和老师的结构体，其中在老师的结构体中，有老师姓名和一个存放5名学生的数组作为成员学生的成员有姓名、考试分数，创建数组存放3名老师，通过函数给每个老师及所带的学生赋值最终打印出老师数据以及老师所带的学生数据。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;由于我也是第一次学习C++，很多概念我自己也不清楚，所以此处基本上用来记录我学习过程中写的代码&lt;br&gt;各类概念和知识点理论，</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Java程序设计重新笔记及知识点梳理</title>
    <link href="http://example.com/posts/d7f2c68e.html"/>
    <id>http://example.com/posts/d7f2c68e.html</id>
    <published>2024-10-02T23:53:58.000Z</published>
    <updated>2024-12-07T11:26:39.592Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>java这门语言，我已经记不清开了多少课，敲了多少代码了。但是现在因为生活和学习上的需要，重新开课重新学习，颇有一种朝花夕拾的感觉。代码是以前敲过的代码，知识点是以前学过的知识点，现在只是重走西游路，在复习以前知识的同时找到自己。</p><h3 id="关于笔记记录过程"><a href="#关于笔记记录过程" class="headerlink" title="关于笔记记录过程"></a>关于笔记记录过程</h3><p>按照本人复习过程来，力求逻辑上的完整性，重点放在逻辑上的连贯性，所以不会把理论和实践完全拆分开，在理论和实践的过程中推进。但是本质上还是为了期末的考试，所以会在最后加上一个做题和解析的模块。记录题目的同时方便自己查漏补缺。<br>本套笔记按照优先建立知识体系学习法，知识点的细节在学习和实战中慢慢完善。</p><h2 id="JAVA的知识背景"><a href="#JAVA的知识背景" class="headerlink" title="JAVA的知识背景"></a>JAVA的知识背景</h2><h3 id="java的诞生"><a href="#java的诞生" class="headerlink" title="java的诞生"></a>java的诞生</h3><p>JAVA由美国的SUN公司发明，诞生于1991年。<br>设计初衷是给机顶盒这类电子产品，这类产品的特点就是不同厂家生产的型号<u>拥有不同的CPU不同的操作系统。</u>（为后续跨平台性埋下伏笔）<br><strong>因此要求JAVA产生的程序是中立的</strong>（既跨平台）<br>可是命运总是爱跟人开玩笑，java发明之后这类产品直接褒姒，所以java失去了用武之地。<br>直到90年代中期互联网爆发，各式各样不同的电脑都连接到了互联网上（不同u不同系统）<br>此时急需一个跨平台语言，所以java堂堂崛起！</p><h3 id="JAVA的主要应用范围"><a href="#JAVA的主要应用范围" class="headerlink" title="JAVA的主要应用范围"></a>JAVA的主要应用范围</h3><p>服务器端软件开发：各类网站系统和管理系统</p><p>移动端开发：安卓系统、鸿蒙</p><p>科学研究、云计算、大数据</p><h3 id="JAVA的版本选择"><a href="#JAVA的版本选择" class="headerlink" title="JAVA的版本选择"></a>JAVA的版本选择</h3><p>目前企业中应用最广的还是java8.0，占据了最大的份额。  </p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003082723831.png" alt="image-20241003082723831"></p><h3 id="JVM、JRE、JDK"><a href="#JVM、JRE、JDK" class="headerlink" title="JVM、JRE、JDK"></a>JVM、JRE、JDK</h3><p><strong><u>JVM：Java Virtual Machine虚拟计算机</u></strong>，主要负责Java程序的运行<br>JAVA程序是在JAVA虚拟机上直接运行，而不是运行在操作系统上（有别于C++）<br><strong>Java的跨平台就是基于不同版本的JVM实现。</strong><br>举例：我用mac系统写了一个JAVA程序，首先我MAC系统上需要有对应的MAC版JVM，所以程序在MAC上可以跑，然后我又把程序发给Linux系统，Linux系统上安装的Linux版JVM负责运行发送过去的程序</p><p>JRE ：Java Runtime Environment, java运行时环境。<br>一张图解释<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003083520608.png" alt="image-20241003083520608"></p><p>JRE包含了JVM，JRE是java运行环境，从字面上理解，java运行的时候JVM是必须的，因为Java的run就是run在JVM上。 加上核心的库类和文件，就组成了完整的运行环境。</p><p>JDK：Java Development kit ，Java 开发工具包。提供给java开发人员使用<br>再用一张图解释<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003084432765.png" alt="image-20241003084432765"></p><p>JRE构成了运行JAVA的所有条件，JDK在此基础上加入了开发工具。</p><h2 id="写出第一个JAVA程序。"><a href="#写出第一个JAVA程序。" class="headerlink" title="写出第一个JAVA程序。"></a>写出第一个JAVA程序。</h2><h3 id="JAVA的组织结构"><a href="#JAVA的组织结构" class="headerlink" title="JAVA的组织结构"></a>JAVA的组织结构</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003090408814.png" alt="image-20241003090408814"></p><p>关于java的组织结构和缩进<br>两个花括号一对，最外层下面的花括号对应上面的p，表示中间的部分是class类的类体<br>对于main方法来说，同理下面的花括号和上面的p对齐，两个花括号中间的部分是方法的方法体。</p><h3 id="实际上java开发的步骤"><a href="#实际上java开发的步骤" class="headerlink" title="实际上java开发的步骤"></a>实际上java开发的步骤</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003090554702.png" alt="image-20241003090554702"></p><p>从上图可以知道，虚拟机运行的程序都是.class文件，编写的程序是.java文件</p><h3 id="简单的程序bug调试以及发散出的思维"><a href="#简单的程序bug调试以及发散出的思维" class="headerlink" title="简单的程序bug调试以及发散出的思维"></a>简单的程序bug调试以及发散出的思维</h3><h4 id="关于bug："><a href="#关于bug：" class="headerlink" title="关于bug："></a>关于bug：</h4><p>1、bug说明程序有部分有错，也可以说明你离成功不远了，遇到bug是非常正常的事情<br>2、bug越多程序越复杂，程序越复杂bug越多<br>3、程序员的能力可以简单由调试bug的数量来判断，调试解决的bug越多，程序员的段位越高。<br>4、写不出bug的程序员是没有写代码的程序员，多写多错才会有所成长。</p><h4 id="由bug发散的思维："><a href="#由bug发散的思维：" class="headerlink" title="由bug发散的思维："></a>由bug发散的思维：</h4><p>以下是刚才这个简单的bug我认为新手可能出现的错误以及原因<br>1、类名写错了 public class 后面的类名一定要和建的.java文件前面的名字相同，并且区分大小写<br>2、System的S打成小写，<code>System.out.print</code> 中的 <code>System</code> 是指 Java 的 <code>java.lang.System</code> 类。这个类是 Java 自带的，不需要额外导入，因为 <code>java.lang</code> 包是自动导入的。其中System是一个类，out是一个静态字段，print是一个方法（包括println）</p><h2 id="标识符、关键字、变量本质、注释"><a href="#标识符、关键字、变量本质、注释" class="headerlink" title="标识符、关键字、变量本质、注释"></a>标识符、关键字、变量本质、注释</h2><h3 id="标识符命名规则及使用规范"><a href="#标识符命名规则及使用规范" class="headerlink" title="标识符命名规则及使用规范"></a>标识符命名规则及使用规范</h3><h4 id="标识符命名规则"><a href="#标识符命名规则" class="headerlink" title="标识符命名规则"></a>标识符命名规则</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003155147873.png" alt="image-20241003155147873"></p><p>注：图中一个没有说到的细节就是可以以人民币符号￥开头，在我上课的PPT里面确实显示是可以的<br>我已经测试过了，确实是可以的。但是原理和图中说的有些出入<br>所以用一句话概括</p><p><u><strong>开头字母钱标下划线，大小写敏感，区别关键字。</strong></u></p><h4 id="关于人民币符号￥"><a href="#关于人民币符号￥" class="headerlink" title="关于人民币符号￥"></a>关于人民币符号￥</h4><p>￥符号也是作为”字母“被识别的，和中文和字母一样，因为Java用的是unicode字符集，￥和中文都满足，所以都可以作为”字母“被识别。而不是这个符号本身被识别。</p><h4 id="标识符使用规范"><a href="#标识符使用规范" class="headerlink" title="标识符使用规范"></a>标识符使用规范</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003155953266.png" alt="image-20241003155953266"></p><p>主要是引入了驼峰原则，实际情况可能乱起名的人才是占了大多数</p><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test002</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">_age</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">$age</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span> ￥age = <span class="number">4</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">age123</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"><span class="comment">//      int 123age = 6; 数字在前无法作为标识符，直接报错</span></span><br><span class="line"><span class="comment">//      int age# = 7; 标识符只能是字母数字下划线$</span></span><br><span class="line">        <span class="type">int</span> 年龄 = <span class="number">8</span>; <span class="comment">//java使用的是unicode字符集，中文也被识别成字符集中的 ”字母“</span></span><br><span class="line"><span class="comment">//      int class = 9; class 是java中的关键字，同样无法作为标识符，所以错误</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">_class</span> <span class="operator">=</span> <span class="number">10</span>; <span class="comment">//用下划线等符号标识一下就不是关键字了。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><p>JAVA关键字是JAVA语言保留给内部使用的。所以关键字也叫保留字。<br>关键字都有特殊的含义，我们不能使用关键字作为标识符。<br>下面放一下java中的50个关键字，但是背是不可能背的，这辈子不可能背的。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003163132626.png" alt="image-20241003163132626"></p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h4 id="变量的本质"><a href="#变量的本质" class="headerlink" title="变量的本质"></a>变量的本质</h4><p><u><strong>可操作的存储空间</strong></u></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003163334181.png" alt="image-20241003163334181"></p><p>用商场停车位来举例<br>商场有停车位，每个停车位有独一无二的编号，这个编号就是变量名<br>假设停车位编号A1，你停车之前A1就是一个空值，但是还是存在A1停车位<br>去停车的时候，你把车”小黑“停到一个A1，A1就有了自己的”值“ 小黑<br>所以A1 = 小黑  ，实际上是把小黑赋值给了A1。</p><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">monthlySalary</span> <span class="operator">=</span> <span class="number">3000</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">annualSalary</span> <span class="operator">=</span> monthlySalary*<span class="number">12</span>;</span><br><span class="line">System.out.println(annualSalary);</span><br><span class="line"><span class="type">double</span> <span class="variable">bonus</span> <span class="operator">=</span> <span class="number">150.123</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> annualSalary+bonus;</span><br><span class="line">System.out.println(sum);</span><br></pre></td></tr></table></figure><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><h4 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h4><p>注释不会出现在字节码文件中（.class文件）。<br>java编译器编译的时候会跳过注释语句<br>同样的程序不管写多少注释写没写注释，编译之后的大小都是一样的。</p><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003164311620.png" alt="image-20241003164311620"></p><h2 id="变量-1"><a href="#变量-1" class="headerlink" title="变量"></a>变量</h2><h3 id="八种基本数据类型"><a href="#八种基本数据类型" class="headerlink" title="八种基本数据类型"></a>八种基本数据类型</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200200688.png" alt="image-20241003200200688"></p><p>继续用上文是商场停车位来解释<br>高速休息站里的车位有不同的类型，SUV和越野车的车位大，卡车和客车的车位更大，卡车和客车的停车位可以停下小轿车和越野车，但是卡车和客车没办法停在小轿车和越野车的停车位里。<br>由此可知 ：定义数据类型就是定义停车位的大小和类型<br>JAVA是一种 <strong>强类型语言</strong> ，<strong>每个变量都必须声明数据类型</strong></p><h4 id="整型数据类型"><a href="#整型数据类型" class="headerlink" title="整型数据类型"></a>整型数据类型</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200350108.png" alt="image-20241003200350108"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200414469.png" alt="image-20241003200414469"></p><p>派生知识点：</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200502344.png" alt="image-20241003200502344"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test003</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">18</span>; <span class="comment">//默认是int类型，转换成byte没有损失，所以正常转换了</span></span><br><span class="line">        <span class="type">short</span> <span class="variable">salary</span> <span class="operator">=</span> <span class="number">25000</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">salary2</span> <span class="operator">=</span> <span class="number">50000</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">pekingPopulation</span> <span class="operator">=</span> <span class="number">30000000</span>;</span><br><span class="line"><span class="comment">//      int globalPopulation = 700000000;  表示过大是数会报错</span></span><br><span class="line"><span class="comment">//以上就是整形常量 ，默认的类型是int ，改成long类型需要后面加L/l</span></span><br><span class="line"><span class="comment">//      int globalPopulation = 7000000000L;</span></span><br><span class="line"><span class="comment">//还是报错，因为是把70亿 赋值给int，int 最大只能接受21亿的数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//关于进制，可以定义不同的进制</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="number">65</span>; <span class="comment">//十进制</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="number">065</span>; <span class="comment">//八进制 0开头</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="number">0x65</span>; <span class="comment">//十六进制 0x开头</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t4</span> <span class="operator">=</span> <span class="number">0b01000001</span>; <span class="comment">//二进制 0b开头</span></span><br><span class="line">        System.out.println(t1+<span class="string">&quot;\n&quot;</span>+t2+<span class="string">&quot;\n&quot;</span>+t3+<span class="string">&quot;\n&quot;</span>+t4);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="浮点型数据类型"><a href="#浮点型数据类型" class="headerlink" title="浮点型数据类型"></a>浮点型数据类型</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241004083854873.png" alt="image-20241004083854873"></p><p>可以看到浮点数的表数范围非常大，这是因为<strong>浮点数是不精确</strong>的  </p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241004084218697.png" alt="image-20241004084218697"></p><p><strong>需要注意：</strong><br>    指定范围内的整数是有限的，比如0-10，但是0-10之间的小数是无限的。<br>因此，有限的空间存储无限的数据，必然存在误差，所以浮点数不能精确表示。<br>如果需要进行不产生舍入误差的精确计算，就需要引入BigDecimal类。后续再说。</p><p>实操代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        <span class="comment">//测试浮点数</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">3.14</span>;</span><br><span class="line"><span class="comment">/*        float f1 = 3.14;</span></span><br><span class="line"><span class="comment"> 报错java: incompatible types:</span></span><br><span class="line"><span class="comment">possible lossy conversion from double to float</span></span><br><span class="line"><span class="comment">说明浮点常量默认是double*/</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">f1</span> <span class="operator">=</span> <span class="number">3.14F</span>;<span class="comment">//后面加大写的F，通过编译</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="number">314E-2</span>;<span class="comment">//科学计数法 xEn= x * 10^n</span></span><br><span class="line">        System.out.println(d1+<span class="string">&quot;\n&quot;</span>+f1+<span class="string">&quot;\n&quot;</span>+d2);</span><br><span class="line">        <span class="comment">//浮点数是精确的，用于比较要小心。</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">f3</span> <span class="operator">=</span> <span class="number">0.1F</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">d3</span> <span class="operator">=</span> <span class="number">0.1</span>;</span><br><span class="line">        System.out.println(f3 == d3);</span><br><span class="line">        <span class="comment">//输出false 说明不相等</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Char字符集"><a href="#Char字符集" class="headerlink" title="Char字符集"></a>Char字符集</h4><p>说到char字符，首先要注意String类型<br><strong>String是字符串不是基本数据类型！</strong>是一个类！包含在Java.lang包里面，自动引入<br>本质上是一个字符的数组</p><h5 id="ASCII字符集"><a href="#ASCII字符集" class="headerlink" title="ASCII字符集"></a>ASCII字符集</h5><p>ASCII字符集由美国国家标准协会指定，由一个字节的后7位来表示一个字符。（所以一共有2^7 128字符）<br>剩下的最高位一般为0<br>例 字母A在计算机中就是01000001 也就是65<br>ASCII字符非常简单，就是一个简单的查表的过程（如下图）<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121503946.png" alt="image-20241005121503946"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121533973.png" alt="image-20241005121533973"></p><h5 id="字符集的发展过程"><a href="#字符集的发展过程" class="headerlink" title="字符集的发展过程"></a>字符集的发展过程</h5><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121604545.png" alt="image-20241005121604545"></p><p>ISO GB BIG5，都是不同地区自己制定的标准，由于不互通，经常造成乱码问题<br>所以有了Unicode字符集，每个字符都基于了全球独一无二的编码</p><h5 id="Unicode原理"><a href="#Unicode原理" class="headerlink" title="Unicode原理"></a>Unicode原理</h5><p>unicode采用了字符集和编码分开的策略。<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121931383.png" alt="image-20241005121931383"></p><p>unicode统一采用了两个字节表示一个字符，<strong>包括英文字母</strong><br>但是因为英文占据了互联网信息的绝大部分，所以在传输过程中会造成极大的浪费<br>所以现在主流的UTF-8</p><h5 id="UTF-8"><a href="#UTF-8" class="headerlink" title="UTF-8"></a>UTF-8</h5><p>用1-6个字节来编码表示Unicode字符，西欧字符仍然是一个字节，汉字是三个字节  </p><h4 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h4><p>对照表格<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005122714547.png" alt="image-20241005122714547"></p><h4 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h4><p>布尔类型由两个常量，一个true 一个false组成<br>在内存中占1或4个字节。<br><u>和C的区别</u>：不可以使用0或非0的整数来代替t或者f<br>常用来坐判断逻辑的条件。</p><p>练习代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//测试char</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="string">&#x27;薯&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        System.out.print(c1);</span><br><span class="line">        System.out.print(c2);</span><br><span class="line"></span><br><span class="line">        <span class="type">char</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">c4</span> <span class="operator">=</span> <span class="string">&#x27;片&#x27;</span>;</span><br><span class="line">        System.out.print(c2);</span><br><span class="line">        System.out.println(c3);</span><br><span class="line">        System.out.println(c4);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//字符串不是基本数据类型，是类！</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;\n薯片&quot;</span>;</span><br><span class="line">        <span class="comment">//字符串用双引号，本质上就是一个字符数组</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">&quot;\n\n\&quot;床前\&quot;\t明\&#x27;月光\&#x27;&quot;</span>;</span><br><span class="line">        System.out.println(str2);</span><br><span class="line">        <span class="comment">//布尔类型</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在写代码&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="基本运算符"><a href="#基本运算符" class="headerlink" title="基本运算符"></a>基本运算符</h2><h3 id="运算符分类"><a href="#运算符分类" class="headerlink" title="运算符分类"></a>运算符分类</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005130928325.png" alt="image-20241005130928325"></p><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005131146127.png" alt="image-20241005131146127"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========算术运算符=========&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> a + b * <span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">c1</span> <span class="operator">=</span> (a + b) * <span class="number">4</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;c=&quot;</span> + c);</span><br><span class="line">System.out.println(<span class="string">&quot;c1=&quot;</span>+ c1);</span><br><span class="line"><span class="type">int</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">15</span>/<span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="number">15</span>%<span class="number">4</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;d1=&quot;</span>+d1 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;d2=&quot;</span>+d2);</span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = a ++;  <span class="comment">//先赋值后自增，代码从左往右执行，先把a赋值给a然后a再打印</span></span><br><span class="line">System.out.println(<span class="string">&quot;b=&quot;</span>+b +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;a=&quot;</span>+a);</span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = ++a;  <span class="comment">//先自增后赋值,--和++同理</span></span><br><span class="line">System.out.println(<span class="string">&quot;b=&quot;</span>+b +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;a=&quot;</span>+a);</span><br></pre></td></tr></table></figure><h3 id="扩展运算符"><a href="#扩展运算符" class="headerlink" title="扩展运算符"></a>扩展运算符</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005132427532.png" alt="image-20241005132427532"></p><p>运算符和表达式完全等效 没有过多的说明，用的情况也少<br>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========拓展运算符=========&quot;</span>);</span><br><span class="line"></span><br><span class="line">a = <span class="number">20</span>;</span><br><span class="line">b = <span class="number">30</span>;</span><br><span class="line">a += b;</span><br><span class="line">System.out.println(<span class="string">&quot;a=&quot;</span>+a + <span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b=&quot;</span>+b);</span><br></pre></td></tr></table></figure><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153134726.png" alt="image-20241005153134726"></p><p>关系运算符的计算结果为布尔值<br>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========关系运算符=========&quot;</span>);</span><br><span class="line"> a = <span class="number">20</span>;</span><br><span class="line"> b = <span class="number">30</span>;</span><br><span class="line"> <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> a&lt;b;</span><br><span class="line"> System.out.println(result);</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>这一块基本上用图片来说明</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153620084.png" alt="image-20241005153620084"></p><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153743620.png" alt="image-20241005153743620"><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153828335.png" alt="image-20241005153828335"></p><p> 短路与、或可以节省计算量，提前返回ture或false<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153957310.png" alt="image-20241005153957310"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005154031303.png" alt="image-20241005154031303"></p><p><strong>关于异或</strong><br>个人理解就是简单的 “不同”<br>A和B不同 结果就是true<br>A和B相同 结果就是false 因为不是 “不同”<br>注意异或的符号是^,幂运算的符号，但是表示的不是幂运算<br>java中幂运算（科学计数法）要用E来表示 比如 xEy 就是x乘10的y次方<br>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========逻辑运算符=========&quot;</span>);</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="literal">true</span> &amp; <span class="literal">false</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="literal">true</span> | <span class="literal">false</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b3</span> <span class="operator">=</span> !b2;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b4</span> <span class="operator">=</span> <span class="literal">true</span>^<span class="literal">true</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;b1=&quot;</span>+ b1 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b2=&quot;</span>+ b2 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b3=&quot;</span>+ b3 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b4=&quot;</span>+ b4 );</span><br><span class="line"><span class="comment">//短路与、短路或</span></span><br><span class="line"><span class="type">int</span> <span class="variable">w</span> <span class="operator">=</span><span class="number">3</span>/<span class="number">0</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b5</span> <span class="operator">=</span> <span class="number">3</span>&lt;<span class="number">4</span> || (<span class="number">4</span>&lt;<span class="number">4</span>/<span class="number">0</span>); <span class="comment">//这里如果是普通的或的话就会报错，使用了短路就没问题</span></span><br><span class="line">System.out.println(b5);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005182815752.png" alt="image-20241005182815752"></p><p>例如“3”的二进制：00000000 00000000 00000000 00000011<br>取反就是： 11111111 11111111 11111111 11111100<br> <strong>示例代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">&quot;==========位运算符=========&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">7</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p1</span> <span class="operator">=</span> m&amp;n;</span><br><span class="line">        System.out.println(<span class="string">&quot;p1=&quot;</span>+p1);</span><br><span class="line"><span class="comment">/* 3 = 00000000 00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="comment">*  7 = 00000000 00000000 00000000 00000000 00000111</span></span><br><span class="line"><span class="comment">* 按为与 直观 的可以看到 上下的都是1的时候才是一所以答案为</span></span><br><span class="line"><span class="comment">* 00000000 00000000 00000000 00000011 = 3*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">p2</span> <span class="operator">=</span> m | n ;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p3</span> <span class="operator">=</span> m^n ;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p4</span> <span class="operator">=</span> ~m;</span><br><span class="line">        System.out.println(<span class="string">&quot;p2=&quot;</span>+p2);</span><br><span class="line">        System.out.println(<span class="string">&quot;p3=&quot;</span>+p3);</span><br><span class="line">        System.out.println(<span class="string">&quot;p4=&quot;</span>+p4);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">m2</span> <span class="operator">=</span> <span class="number">3</span>&lt;&lt;<span class="number">3</span>;<span class="comment">//左移3位 =3*2*2*2</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">m3</span> <span class="operator">=</span> <span class="number">12</span>&gt;&gt;<span class="number">2</span>;<span class="comment">//右移2位 =12/2/2</span></span><br><span class="line">        System.out.println(<span class="string">&quot;m2=&quot;</span>+m2);</span><br><span class="line">        System.out.println(<span class="string">&quot;m3=&quot;</span>+m3);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​     </p><h3 id="字符串连接符"><a href="#字符串连接符" class="headerlink" title="字符串连接符"></a>字符串连接符</h3><p>字符串连接符指的是+在连接字符时自动变为字符串连接符，会失去+原本的加的功能<br>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========字符串连接符=========&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">r1</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">r2</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">System.out.println(r1 + r2);<span class="comment">//正常显示</span></span><br><span class="line">System.out.println(<span class="string">&quot;result is&quot;</span>+r1+r2);<span class="comment">//这里+变成字符串连接符</span></span><br></pre></td></tr></table></figure><h3 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h3><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005185520236.png" alt="image-20241005185520236"><br>条件运算符可以很方便的替代if_else语句中的某些特殊情况</p><p><strong>示例代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(&quot;==========条件运算符=========&quot;);</span><br><span class="line">int y1 = 30;</span><br><span class="line">int y2 = 40;</span><br><span class="line">int minY = y1&lt;y2?y1:y2;//返回y1y2中比较小的值</span><br></pre></td></tr></table></figure><p>此致，java中所有的基本运算符都已经学完了</p><h2 id="数据类型自动和强制转换"><a href="#数据类型自动和强制转换" class="headerlink" title="数据类型自动和强制转换"></a>数据类型自动和强制转换</h2><h3 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008080327235.png" alt="image-20241008080327235"></p><p>自动类型转换指容量小的数据类型可以自动转换为容量大的数据类型</p><p><strong>注意</strong>：这里的容量大小，指的不是<u>字节数</u>，而是<u>表数范围</u><br>例如八个字节的long可以自动转换为四个字节的float<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008080511585.png" alt="image-20241008080511585"></p><p>图中的实线表示的是无数据丢失的自动类型转换，虚线表示的是可能会有数据丢失的自动类型转换。</p><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"><span class="comment">/*测试基本数据类型的转换（自动转换，强制转换）</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test006</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//自动类型转换：表数范围小的可以自动转换为表数范围大的</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="number">3456</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">a2</span> <span class="operator">=</span> a1;</span><br><span class="line">        System.out.println(<span class="string">&quot;a1=&quot;</span>+ a1 + <span class="string">&quot;\n&quot;</span> + <span class="string">&quot;a2=&quot;</span>+ a2);</span><br><span class="line">        <span class="comment">//整型常量自动赋值给byte/short/char等类型，只要不超表数范围，则可以自动转换</span></span><br><span class="line">        <span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">121</span>;<span class="comment">//legal</span></span><br><span class="line"><span class="comment">//        byte b2 = 200;//illegal 200超过了byte的表数范围，所以不合法</span></span><br><span class="line">        <span class="comment">//算术运算符，两个操作数都是整形的时候，有一个是long，则结果为long，否则结果为int（即使是byte，结果也是int）</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="number">1234</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="number">123</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">c3</span> <span class="operator">=</span> c1 + c2;<span class="comment">//c1是long，所以整个结果全部变成long</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//算术运算符有一个操作数是double，则结果是double</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">3.14</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">d3</span> <span class="operator">=</span> d1+d2;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//强制类型转换</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">m1</span> <span class="operator">=</span> <span class="number">3.98</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m2</span> <span class="operator">=</span> (<span class="type">int</span>)m1;</span><br><span class="line">        System.out.println(<span class="string">&quot;m2=&quot;</span> + m2 );</span><br><span class="line">        <span class="comment">//转型的时候直接把小数丢掉，不会做任何的四舍五入运算。</span></span><br><span class="line"></span><br><span class="line">        <span class="type">char</span> <span class="variable">m3</span> <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m4</span> <span class="operator">=</span> m3 + <span class="number">2</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">m5</span> <span class="operator">=</span> (<span class="type">char</span>)m4;</span><br><span class="line">        System.out.println(<span class="string">&quot;m5=&quot;</span>+ m5);</span><br><span class="line">        <span class="comment">//这里体现的基本上就是ASCII编码，C往后两位是E</span></span><br><span class="line">        <span class="comment">/*当将一种类型强制转换成另一种类型</span></span><br><span class="line"><span class="comment">        * 而又超出了目标类型的表数范围</span></span><br><span class="line"><span class="comment">        * 就会被截断成一个完全不同的值</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">n2</span> <span class="operator">=</span> (<span class="type">byte</span>)n1;</span><br><span class="line">        System.out.println(<span class="string">&quot;n2=&quot;</span>+n2);</span><br><span class="line">        <span class="comment">//不要去纠结这个值的意义，这个值没有任何的意义，就是随机截的</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//溢出错误，操作比较大的数，要留意是否溢出。</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">salary</span> <span class="operator">=</span> <span class="number">1000000000</span>;<span class="comment">//10e</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">years</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line"><span class="comment">//        int total1 = salary*years; 出来了负数，说明发生了溢出。</span></span><br><span class="line"><span class="comment">//特别需要注意 溢出不会报异常，还是会正常显示。</span></span><br><span class="line"><span class="comment">/*修改方法1，把salary和year改成int类型</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> <span class="comment">//修改方法2</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">total2</span> <span class="operator">=</span> <span class="number">1L</span>*salary*years;</span><br><span class="line">        System.out.println(total2);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="通过键盘输入"><a href="#通过键盘输入" class="headerlink" title="通过键盘输入"></a>通过键盘输入</h3><h2 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h2><p>流程控制语句有两种结构<br>1、选择结构<br>2、循环结构<br>学会了程序控制语句，我们的一只脚就迈进了程序员的大门。</p><h3 id="编程的本质"><a href="#编程的本质" class="headerlink" title="编程的本质"></a>编程的本质</h3><p>编程的本质就是用代码表达现实世界的逻辑。<br>而现实世界中的任何逻辑，最终都可以拆分成选择结构和循环结构。<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008211552442.png" alt="image-20241008211552442"></p><p>选择结构代表 如果…则…  这样的逻辑<br>例：如果看到红灯 则立即停车<br>循环结构就是选择结构的基础上加上重复执行。<br>任何的编程<br>本质上都是由“变量、选择语句、循环语句”组成</p><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009081542457.png" alt="image-20241009081542457"></p><p><strong>语法结构</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009081559194.png" alt="image-20241009081559194"></p><p><strong>流程图</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009081328179.png" alt="image-20241009081328179"></p><h4 id="if-else语句"><a href="#if-else语句" class="headerlink" title="if else语句"></a>if else语句</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083036459.png" alt="image-20241009083036459"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083036459.png" alt="image-20241009083036459">   </p><h4 id="多分支结构"><a href="#多分支结构" class="headerlink" title="多分支结构"></a>多分支结构</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083313068.png" alt="image-20241009083313068"></p><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083400325.png" alt="image-20241009083400325"> </p><h4 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"><span class="comment">/*流程控制语句</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test010</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(Math.random()<span class="comment">/*这个方法返回一个0-1之间的随机数【0，1）*/</span>);</span><br><span class="line">        <span class="comment">//所以如果要返回一个0-10之间的随机数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random() * <span class="number">10</span>);</span><br><span class="line">        System.out.println(r);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果r小于5，则打印&quot;数比较小&quot;</span></span><br><span class="line">        <span class="keyword">if</span>(r&lt;<span class="number">5</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;数比较小&quot;</span>);</span><br><span class="line">        &#125;<span class="comment">//这里如果不加这个花括号其实也有效，但是限制很大，重点是只对第一句有效。</span></span><br><span class="line">        <span class="comment">//所以为了更规范的写代码，最好还是加上。</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (r&lt;<span class="number">5</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;number is small&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;number is big&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//年龄筛选器</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">if</span> (age&lt;<span class="number">15</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;childhood&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">25</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;teenage&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">45</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;adult&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">65</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;old man&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">85</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;get rest&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span>  &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;die&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="特殊练习，数字和字母的转换"><a href="#特殊练习，数字和字母的转换" class="headerlink" title="特殊练习，数字和字母的转换"></a>特殊练习，数字和字母的转换</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test011</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*随机生成字母，aeiou输出元音，其他输出辅音*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">26</span>);</span><br><span class="line">        <span class="type">char</span> <span class="variable">alpha</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        alpha = (<span class="type">char</span>)(alpha + num);</span><br><span class="line">        <span class="keyword">if</span>(alpha == <span class="string">&#x27;a&#x27;</span>|| alpha == <span class="string">&#x27;e&#x27;</span>||alpha == <span class="string">&#x27;i&#x27;</span>||alpha == <span class="string">&#x27;o&#x27;</span>||alpha == <span class="string">&#x27;u&#x27;</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;元音&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;辅音&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Switch语句"><a href="#Switch语句" class="headerlink" title="Switch语句"></a>Switch语句</h3><p> switch语句特别适合做多值判断<br><strong>代码示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*以下是一个简单的判断语句</span></span><br><span class="line"><span class="comment">        * 随机生成了一个值 判断大学几年级*/</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">grade</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (grade == <span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 1&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade ==<span class="number">2</span> ) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 2&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade == <span class="number">3</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 3&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 4&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/* 以下是上面代码的switch语句版本*/</span></span><br><span class="line">        <span class="keyword">switch</span> (grade)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 1&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//必须要每个case后面跟一个break</span></span><br><span class="line">            <span class="comment">/*break是switch的跳出语句，没有break</span></span><br><span class="line"><span class="comment">            * switch就会一直执行*/</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 2&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 3&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 4&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">12</span>);</span><br><span class="line">        <span class="keyword">if</span> (month ==<span class="number">1</span> || month ==<span class="number">2</span> || month == <span class="number">3</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;spring&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (month ==<span class="number">4</span> || month ==<span class="number">5</span> || month == <span class="number">6</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;summer&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (month ==<span class="number">7</span> || month ==<span class="number">8</span> || month == <span class="number">9</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;autumn&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;winter&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (month)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;spring&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;summer&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;autumn&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//            case 10:</span></span><br><span class="line"><span class="comment">//            case 11:</span></span><br><span class="line"><span class="comment">//            case 12:</span></span><br><span class="line"><span class="comment">//                System.out.println(&quot;winter&quot;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;winter&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="switch的表达式"><a href="#switch的表达式" class="headerlink" title="switch的表达式"></a>switch的表达式</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009185237150.png" alt="image-20241009185237150"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009185312810.png" alt="image-20241009185312810"></p><p>switch语句练习</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test002</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//阿拉伯数字转化成英语。1--》one</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">10</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">Character</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;<span class="comment">//逻辑上来讲没有问题 但是从编译器的角度考虑最好先设置一个空值</span></span><br><span class="line">        <span class="keyword">switch</span> (num)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            Character = <span class="string">&quot;zero&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                Character = <span class="string">&quot;one&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                Character = <span class="string">&quot;two&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                Character = <span class="string">&quot;three&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                Character = <span class="string">&quot;four&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                Character = <span class="string">&quot;five&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                Character = <span class="string">&quot;six&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                Character = <span class="string">&quot;seven&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                Character = <span class="string">&quot;eight&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                Character = <span class="string">&quot;nine&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Character);</span><br><span class="line">        <span class="comment">/*超市推出积分活动，积分7000以上奖励苹果，5000以上奖励香蕉，3000以上奖励牛奶*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">10000</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;用户积分：&quot;</span>+ score);</span><br><span class="line">        <span class="comment">/*简单的做法， 用if判断 这里用switch练习*/</span></span><br><span class="line">        <span class="keyword">switch</span> (score/<span class="number">1000</span>)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;apple&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;banana&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;milk&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;none&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010075241955.png" alt="image-20241010075241955"></p><p> 一切的事物，核心都是循环，操作系统的核心是一个接一个的循环<br>屏幕显示是一个循环，键盘监听、鼠标监听，都是循环<br>大到宇宙的运行，也是循环；微观粒子运行，还是循环。<br>人生，也是循环。<br>循环结构分为两个</p><p>while循环和for循环<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010075523742.png" alt="image-20241010075523742"></p><h4 id="whlie的语法结构"><a href="#whlie的语法结构" class="headerlink" title="whlie的语法结构"></a>whlie的语法结构</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010075852717.png" alt="image-20241010075852717"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"><span class="comment">/*用于测试while循环*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test003</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*打印1-100*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">101</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i=&quot;</span>+i);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//计算1+2+...+100</span></span><br><span class="line"></span><br><span class="line">        i =<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">101</span>)&#123;</span><br><span class="line">            <span class="comment">//sum = sum + i;</span></span><br><span class="line">            sum += i ;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;和：&quot;</span>+sum);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010082020653.png" alt="image-20241010082020653"></p><p>只不过for循环的语法做了一些调整<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010082722211.png" alt="image-20241010082722211"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        <span class="comment">//for循环</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">0</span> ;i1&lt;<span class="number">10</span>;i1++)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i1=&quot;</span>+i1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum02</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">8</span>;m&lt;<span class="number">10</span>;m++)&#123;</span><br><span class="line">            sum02 += m;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;sum02=&quot;</span>+ sum02);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="嵌套循环"><a href="#嵌套循环" class="headerlink" title="嵌套循环"></a>嵌套循环</h3><p> 嵌套循环就是大循环里面套着小循环<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010174619193.png" alt="image-20241010174619193"></p><p>这样可以解决更加复杂的问题</p><p>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"><span class="comment">/*测试嵌套循环*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*打印输出十行，每行输出0-9*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>; l &lt;= <span class="number">10</span>; l++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> <span class="number">0</span>; h &lt; <span class="number">10</span>; h++) &#123;</span><br><span class="line">                System.out.print(h + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*for循环内部初始化的变量只再for循环内部使用</span></span><br><span class="line"><span class="comment">         * 除了for循环就没有了*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;奇\t&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;偶\t&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*输出一个矩形*/</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>; m&lt;<span class="number">6</span> ; m++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span><span class="number">0</span>; n&lt;<span class="number">6</span>;n++)&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*输出一个直角三角形*/</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>; m&lt;<span class="number">6</span> ; m++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span><span class="number">0</span>; n&lt;m;n++)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;========&quot;</span>);</span><br><span class="line">        <span class="comment">//输出一个倒直角三角形</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;m&lt;<span class="number">6</span>;m++)&#123;  <span class="comment">//  12345</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> n=<span class="number">5</span>;n&gt;<span class="number">5</span>-m;n--)&#123;<span class="comment">//54321</span></span><br><span class="line">                System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;========&quot;</span>);</span><br><span class="line">        <span class="comment">//输出一个倒直角三角形</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;m&lt;<span class="number">6</span>;m++)&#123;  <span class="comment">//  12345</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> n=<span class="number">0</span>;n&lt;<span class="number">5</span>-m;n++)&#123;<span class="comment">//54321</span></span><br><span class="line">                System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*输出一个等腰的三角形*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (j&gt;=num-i &amp;&amp; j&lt;=num+i)&#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="break和continue语句"><a href="#break和continue语句" class="headerlink" title="break和continue语句"></a>break和continue语句</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010194440523.png" alt="image-20241010194440523"></p><p>这段多说无益，直接上代码，通过代码来了解</p><p>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"><span class="comment">/*break和continue*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test005</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//产生100以内的随机数，知道随机数为88时终止循环</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">100</span>);</span><br><span class="line">            count +=<span class="number">1</span>;</span><br><span class="line">            System.out.println(m);</span><br><span class="line">            <span class="keyword">if</span> (m == <span class="number">88</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;count:&quot;</span>+count);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*测试continue*/</span></span><br><span class="line">        <span class="comment">/*把100-150之间补不能被3整除的数输出，并且每行输出5个*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">100</span>;i&lt;<span class="number">151</span>;i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i % <span class="number">3</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(i+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                    a++;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">if</span> (a % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/*        int a = 0;</span></span><br><span class="line"><span class="comment">        for (int i = 100;i&lt;151;i++) &#123;</span></span><br><span class="line"><span class="comment">            if (i % 3 == 0) &#123;</span></span><br><span class="line"><span class="comment">                continue;</span></span><br><span class="line"><span class="comment">            &#125; else if (a %5 ==0) &#123;</span></span><br><span class="line"><span class="comment">                System.out.println();</span></span><br><span class="line"><span class="comment">            &#125; else &#123;</span></span><br><span class="line"><span class="comment">                System.out.print(i);</span></span><br><span class="line"><span class="comment">                a++;</span></span><br><span class="line"><span class="comment">            &#125; 逻辑问题 */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test006</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 抓动物小游戏</span></span><br><span class="line"><span class="comment">        * 随机出现一个动物</span></span><br><span class="line"><span class="comment">        * 如果出现老虎，则游戏结束，如果出现老鹰，就躲起来等待下一个动物出现</span></span><br><span class="line"><span class="comment">        * 如果出现小猫小狗小鸟小乌龟就可以抓住。记数抓住多少个动物</span></span><br><span class="line"><span class="comment">        * 0老鼠1老鹰2小猫3小狗4小鸟*/</span></span><br><span class="line">        <span class="comment">//while(true)</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//抓住动物的数量</span></span><br><span class="line">        <span class="keyword">for</span>(;;)&#123;<span class="comment">//和while(true)等价</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">5</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">animal</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">switch</span> (num)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    animal = <span class="string">&quot;tiger&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    animal = <span class="string">&quot;eagel&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    animal = <span class="string">&quot;pussy&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    animal = <span class="string">&quot;doggy&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                    animal = <span class="string">&quot;bird&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    animal=<span class="string">&quot;unknow animal&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (animal ==<span class="string">&quot;tiger&quot;</span>)&#123;</span><br><span class="line">                System.out.println(animal);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (animal == <span class="string">&quot;eagel&quot;</span>) &#123;</span><br><span class="line">        System.out.println(animal);</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        count++;</span><br><span class="line">        System.out.println(animal);</span><br><span class="line">        System.out.println(count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="控制语句综合练习"><a href="#控制语句综合练习" class="headerlink" title="控制语句综合练习"></a>控制语句综合练习</h3><p>练习代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test007</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*使用for循环打印a-z的26个字母*/</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">character</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line">            System.out.println(character);</span><br><span class="line">            character++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*打印九九乘法表*/</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> m=<span class="number">1</span>; m&lt;<span class="number">10</span>;m++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span><span class="number">1</span>;n&lt;=m;n++)&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> m*n;</span><br><span class="line">                System.out.print(m+<span class="string">&quot;*&quot;</span>+n+<span class="string">&quot;=&quot;</span>+k+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/*个人理解 这一类问题的关键</span></span><br><span class="line"><span class="comment">* 其实是找到m和n的关系 也就是行和列之间的关系</span></span><br><span class="line"><span class="comment">* 找到了之后就好说*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*薪水计算器</span></span><br><span class="line"><span class="comment">        * 通过键盘输入月薪，每年是几个月的薪水</span></span><br><span class="line"><span class="comment">        * 输出年薪</span></span><br><span class="line"><span class="comment">        * 输出一行字“”如果每年粘性超过十万，恭喜你超过90%的国人</span></span><br><span class="line"><span class="comment">        * 如果年薪超过20万，恭喜你超越98%的国人</span></span><br><span class="line"><span class="comment">        * 知道键盘输入数字88，则退出程序 使用break退出循环</span></span><br><span class="line"><span class="comment">        * 输入中途 键盘输入数字66，则这个用户退出计算不显示 恭喜</span></span><br><span class="line"><span class="comment">        * 直接显示 重新开始计算，然后算下一个用户的年薪*/</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">/*这是面向对象里面的内容，总之通过这个方式可以获得键盘的输入*/</span></span><br><span class="line">        System.out.println(<span class="string">&quot;annual salary calculator&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;enter your salary:&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">monthSalary</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">            System.out.println(<span class="string">&quot;Enter the number of times you are paid in a year:&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">months</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">yearSalary</span> <span class="operator">=</span> monthSalary * months;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;your annual salary:&quot;</span>+ yearSalary );</span><br><span class="line">            <span class="keyword">if</span> (yearSalary&gt;=<span class="number">200000</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;king!&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (yearSalary&gt;=<span class="number">100000</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;victory&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;enter [88] to exit,enter [66] to continue&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">commandNum</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">88</span>==commandNum)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;exit&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">66</span> == commandNum)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;please reenter&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法的定义-内存结构"><a href="#方法的定义-内存结构" class="headerlink" title="方法的定义_内存结构"></a>方法的定义_内存结构</h2><h3 id="JAVA中的方法与函数的关系"><a href="#JAVA中的方法与函数的关系" class="headerlink" title="JAVA中的方法与函数的关系"></a>JAVA中的方法与函数的关系</h3><p>在 Java 中只使用“方法”（method）这个术语，而没有“函数”（function）的概念。Java 的方法（method）与其他编程语言中的函数（function）非常相似，它们都执行特定的任务并可以返回一个值。但是由于 Java 是面向对象的语言，所有方法必须属于一个类，因此使用“方法”这个词来强调它们是类的成员。</p><h3 id="方法的定义和调用"><a href="#方法的定义和调用" class="headerlink" title="方法的定义和调用"></a>方法的定义和调用</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008085025541.png" alt="image-20241008085025541"></p><h3 id="方法的声明格式"><a href="#方法的声明格式" class="headerlink" title="方法的声明格式"></a>方法的声明格式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*多个修饰符  返回值类型 方法名（形势参数列表）&#123;</span><br><span class="line">多个java语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里修饰符就是public static,对于现在来说不是很重要，只要记住就行<br>具体的情况之后再解释</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008085259515.png" alt="image-20241008085259515"></p><p> 示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"><span class="comment">/*测试方法的定义和调用</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test007</span> &#123;</span><br><span class="line">    <span class="comment">//main方法，程序的入口</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a1</span> <span class="operator">=</span> add(<span class="number">100</span>,<span class="number">200</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a2</span> <span class="operator">=</span> add(<span class="number">200</span>,<span class="number">300</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a3</span> <span class="operator">=</span> add(<span class="number">300</span>,<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> add(num1,num2);<span class="comment">//调用时实际传递的参数，实参</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;两个数的和&quot;</span>+ sum);</span><br><span class="line"></span><br><span class="line">        printInfo();</span><br><span class="line">        printInfo();</span><br><span class="line">        printInfo();<span class="comment">//可以多次调用</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//两个数求和</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1,<span class="type">int</span> n2<span class="comment">/*形参*/</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//定义新的变量 计算</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> n1 + n2;</span><br><span class="line">        <span class="keyword">return</span> sum;<span class="comment">//返回sum</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印公司信息</span></span><br><span class="line">    <span class="comment">//这类情况比较特殊，没有形参，也没有返回值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;玲珑山车神&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="方法的修饰符"><a href="#方法的修饰符" class="headerlink" title="方法的修饰符"></a>方法的修饰符</h3><p><strong>可见性修饰符：</strong></p><p><code>public</code>—在所有类中可见，在其他包中可以用import导入。<br><code>缺省</code>—就是没有修饰符，在同一个包中的类中可见，在其他包中不能用import导入。</p><p><strong>修饰符：</strong></p><p><code>final</code>—终态类，表示该类不能被继承<br><code>abstract</code>—抽象类，不能新建对象</p><h3 id="方法调用过程"><a href="#方法调用过程" class="headerlink" title="方法调用过程"></a>方法调用过程</h3><p>首先我们有一个叫栈的空间</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008091615217.png" alt="image-20241008091615217"></p><p>最初始的情况他是空的<br>然后看上面的示例代码，当我们执行到main方法（main方法是程序的入口）的时候<br>栈空间内部出现一个关于main方法的栈帧。（stack frame）</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008091705727.png" alt="image-20241008091705727"></p><p>每一个栈帧里面都包含main方法相关的信息<br>生成一个局部变量表，把上文main方法中的局部变量都放到表内</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008092330712.png" alt="image-20241008092330712"></p><p>当程序执行到int sum的时候，这里就需要调用一个新的add方法<br>开辟一个新的栈帧</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008092431525.png" alt="image-20241008092431525"></p><p>然后生成新的局部变量表<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008092505469.png" alt="image-20241008092505469"></p><p>调用函数的时候，把需要的局部变量的值传递进来。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241011093324455.png" alt="image-20241011093324455"></p><p>当调用printInfo()的时候，也同样会生成printInfo()的栈帧。 <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241011093820561.png" alt="image-20241011093820561"></p><p>打印完了之后直接车从栈里面出去 出栈<br>同时main方法执行完毕，main方法也出栈<br>然后栈就空了，然后整个程序结束执行。</p><h2 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h2><h3 id="overload"><a href="#overload" class="headerlink" title="overload"></a>overload</h3><p>方法的重载，指的是一个类中可以定义多个方法名相同，但参数不同的方法。调用时会根据不同的参数自动匹配对应的方法。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241012075559653.png" alt="image-20241012075559653"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241012075633825.png" alt="image-20241012075633825"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D11;</span><br><span class="line"><span class="comment">/*测试方法的重载*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(add(<span class="number">100.25</span>,<span class="number">100</span>));</span><br><span class="line">        System.out.println(add(<span class="number">100</span>,<span class="number">100</span>));</span><br><span class="line">        System.out.println(add(<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>));</span><br><span class="line">        System.out.println(add(<span class="number">100</span>,<span class="number">100.25</span>));</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1 , <span class="type">int</span> n2)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> n1 + n2;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法名相同，参数类型不同，构成重载。</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">add</span><span class="params">(<span class="type">double</span> n1,<span class="type">int</span> n2)</span>&#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> n1+n2;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1 , <span class="type">int</span> n2, <span class="type">int</span> n3)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> n1 + n2 + n3;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法名相同，参数顺序不同，构成重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1 , <span class="type">double</span> n2)</span>&#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> n1+n2;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*只有返回值不同不构成重载，会报编译错误*/</span></span><br><span class="line"><span class="comment">//    public static void add(int n1 , double n2)&#123;</span></span><br><span class="line"><span class="comment">//        double sum = n1+n2;</span></span><br><span class="line"><span class="comment">//        return sum;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">/*只有形参名字不一样，同样不构成重载，因为不知道调用的是哪一个*/</span></span><br><span class="line"><span class="comment">//    public static double add(int m1 , double m2)&#123;</span></span><br><span class="line"><span class="comment">//        double sum = m1+m2;</span></span><br><span class="line"><span class="comment">//        return sum;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><h3 id="类的基本元素"><a href="#类的基本元素" class="headerlink" title="类的基本元素"></a>类的基本元素</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013202627105.png" alt="image-20241013202627105"></p><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013203352570.png" alt="image-20241013203352570"></p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>初始化就是赋一个默认值给这个成员变量，详见下面的成员变量的默认值</p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D13;</span><br><span class="line"><span class="comment">/*建立一个学生类用来表示学生的信息*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">        <span class="comment">/*静态特征（数据），作为学生需要拥有的一些元素*/</span></span><br><span class="line">        <span class="type">int</span> id;</span><br><span class="line">        String name;</span><br><span class="line">        <span class="type">int</span> score;</span><br><span class="line">        <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*方法（动态行为）（对数据的操作）*/</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123;</span><br><span class="line">            System.out.println(name + <span class="string">&quot;is Studying&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*面向对象编程的好处就是把相关的数据和对他的操作全部都放在一起</span></span><br><span class="line"><span class="comment">        * 这样去调用和定义的时候会非常方便*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="成员变量的默认值"><a href="#成员变量的默认值" class="headerlink" title="成员变量的默认值"></a>成员变量的默认值</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013203930595.png" alt="image-20241013203930595"></p><p>规则：对于数字 可以是0的都赋值为0，对于字符 赋值\u0000 本质也是0<br>对于布尔默认是 false 占一个字节 实际上也是0<br>引用类型： 从现在面向对象开始讲解的新的类型 自定义的类型 都是引用类型。<br>比如上文定义的student 就是一个引用类型</p><h3 id="类和对象的关系"><a href="#类和对象的关系" class="headerlink" title="类和对象的关系"></a>类和对象的关系</h3><p>什么是对象？万物皆对象，在JAVA中，对象就是一类数据的实例化，他们有着一种或几种的相同特征。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013204949141.png" alt="image-20241013204949141"></p><p><strong>个人理解</strong>：用之前使用的过的写过的代码举例就是，比如说定义了 一个int类型的数据a1<br>那么就是存在一个a1，这个a1就是对象，属于的类是int类<br>比如说上文建立了一个student 的类之后，我再输入下面的语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">/*在main方里面去使用上面的内容*/</span></span><br><span class="line">    <span class="type">Student</span> <span class="variable">stu1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是创建了一个新的对象 这个对象的名字叫stu1 属于student的类<br>同时他也是所谓的引用类型变量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D13;</span><br><span class="line"><span class="comment">/**/</span></span><br><span class="line"><span class="comment">public class BaizhanStudent &#123;</span></span><br><span class="line"><span class="comment">    /*定义一个练习用的student类*/</span></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String sname;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="comment">/*假设每个学生都需要一台电脑，</span></span><br><span class="line"><span class="comment">    所以这里给每个学生加了一个电脑属性*/</span></span><br><span class="line">    Computer computer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123;<span class="comment">/*这里定义方法没有写修饰符，默认是公共抽象的，具体后面展开*/</span></span><br><span class="line">        System.out.println(<span class="string">&quot;我正在使用：&quot;</span>+ computer.brand+<span class="string">&quot;学习&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*关于修饰符*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Computer</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Computer</span>();<span class="comment">//这些new的本质是构造方法，这个后期再讲。</span></span><br><span class="line">        c1.brand = <span class="string">&quot;lenovo&quot;</span>;</span><br><span class="line">        c1.price = <span class="number">6000</span>;</span><br><span class="line">        <span class="type">Computer</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Computer</span>();</span><br><span class="line">        c2.brand = <span class="string">&quot;Republic of Gamers&quot;</span>;</span><br><span class="line">        c2.price = <span class="number">9000</span>;</span><br><span class="line">        <span class="type">Computer</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Computer</span>();</span><br><span class="line">        c3.brand = <span class="string">&quot;alienware&quot;</span>;</span><br><span class="line">        c3.price = <span class="number">10000</span>;</span><br><span class="line">        <span class="comment">/*定义computer*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*定义baizhanstudent*/</span></span><br><span class="line">        <span class="type">BaizhanStudent</span> <span class="variable">stu01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BaizhanStudent</span>();</span><br><span class="line">        stu01.id = <span class="number">1001</span>;</span><br><span class="line">        stu01.sname = <span class="string">&quot;疯狂小扬哥&quot;</span>;</span><br><span class="line">        stu01.age = <span class="number">18</span>;</span><br><span class="line">        stu01.computer = c1;</span><br><span class="line"></span><br><span class="line">        stu01.study();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> Y24M10D13;</span><br><span class="line"><span class="comment">/*这是对于computer整个类的定义*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Computer</span> &#123;</span><br><span class="line">    <span class="comment">/*定义电脑类的两个属性，品牌和价格*/</span></span><br><span class="line">    String brand;</span><br><span class="line">    <span class="type">int</span> price;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上是这段的示例代码，以下来讲述底层内存中的变化<br>首先内存中有栈和堆<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072610824.png" alt="image-20241014072610824"></p><p>当我们启动哦那这个类进行运算的时候。 内存中首先会做类的加载动作。<br>双引号中的内容，会被优先做处理，在堆中生成。<br> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072706630.png" alt="image-20241014072706630"></p><p>然后开始执行main方法，生成栈帧和局部变量表，其中c1 c2 stu1这些都是引用类型（四字节）<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072844614.png" alt="image-20241014072844614"><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072954550.png" alt="image-20241014072954550"></p><p>  然后创建一个computer对象，并给他的两个属性赋默认值。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014073750285.png" alt="image-20241014073750285"></p><p>然后这个对象会有一个<u><strong>地址</strong></u> 例0x11（0x代表16进制）这个数我随便写的，无特殊含义<br>也可以用十进制写个2345 反正就是一个标记，告诉我们这个对象的地址是多少。<br>然后这里对象就建立完成了，建立完成了之后会把这个值个给c1，也就是那个0x11<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014074129456.png" alt="image-20241014074129456"></p><p>同时这也就意味着，c1这个变量指向了这个对象。<br>这个时候就可以通过c1找到这个对象。<br>这时候就可以通过C1找到这个对象。<br>因为他引用了这个对象的地址。<br>然后再看下一步c1.brand = 联想<br>假设这里给联想一个虚拟的值0x88<br>然后堆中相当于c1.brand = 0x88<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014074730375.png" alt="image-20241014074730375"></p><p>也就是c1.brand引用了0x88，然后c1.price 重新赋值=6000<br>因为c1.price是基本数据类型，基本数据类型是直接赋值给他，引用数据类型才是给地址。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014074826036.png" alt="image-20241014074826036"></p><p>c2h和stu1的定义过程也是同理，这里就不赘述了，直接上结果</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014075459180.png" alt="image-20241014075459180"></p><p>注意 堆内存中的数据不会清除。因为不确定之后是否还会要被调用</p><h3 id="构造方法constructor"><a href="#构造方法constructor" class="headerlink" title="构造方法constructor"></a>构造方法constructor</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241015084635560.png" alt="image-20241015084635560"></p><p><strong>构造器的定义</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241015085112631.png" alt="image-20241015085112631"></p><p><strong>构造器 的四个要点</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017193612797.png" alt="image-20241017193612797"></p><p><strong>示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D17;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 描述二维空间中的一个点</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Point</span> &#123;</span><br><span class="line">    <span class="type">double</span> x;</span><br><span class="line">    <span class="type">double</span> y;</span><br><span class="line"><span class="comment">//构造器一定返回point对象所以没必要再声明返回值类型</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Point</span><span class="params">(<span class="type">double</span> _x,<span class="type">double</span> _y)</span>&#123;<span class="comment">//这个就是构造器</span></span><br><span class="line">        x = _x;</span><br><span class="line">        y = _y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Point</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Point</span>(<span class="number">3.0</span>,<span class="number">4</span>);<span class="comment">/*这个后面的括号没东西因为是无参的构造器</span></span><br><span class="line"><span class="comment">        当构造器里面加入了参数之后，就变成了有参的构造器，这里就会报错*/</span></span><br><span class="line">        <span class="comment">/*在之前还没有学习构造器的时候，baizhanstudent的时候</span></span><br><span class="line"><span class="comment">        * 也可以自动newStudent类，是因为java的编译器</span></span><br><span class="line"><span class="comment">        * 自动帮助我们添加了 无参构造器。*/</span></span><br><span class="line">        System.out.println(p1.x);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*构造方法的核心作用：初始化对象*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>创建对象的步骤</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017212316194.png" alt="image-20241017212316194"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D17;</span><br><span class="line"><span class="comment">/*模拟网站的账户（用于测试构造方法发的重载*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String uname;</span><br><span class="line">    String pwd;</span><br><span class="line">    <span class="comment">/*以上是用户名和密码*/</span></span><br><span class="line">    User()&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span>  <span class="title function_">User</span><span class="params">(<span class="type">int</span> _id)</span>&#123;<span class="comment">//这里定义了一个构造器 _id是里面的形参</span></span><br><span class="line">        id = _id;<span class="comment">//这里给id赋值_id</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*同名的构造器方法，但是参数不一样*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> _id,String _uname, String _pwd)</span>&#123;</span><br><span class="line">        id = _id;</span><br><span class="line">        uname = _uname;</span><br><span class="line">        pwd = _pwd;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">u1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        <span class="type">User</span> <span class="variable">u2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1001</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">u3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1001</span>,<span class="string">&quot;13&quot;</span>，<span class="number">123456</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>构造方法的重载</strong></p><p><strong><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017212921519.png" alt="image-20241017212316194"></strong></p><h3 id="内存-栈-和-堆"><a href="#内存-栈-和-堆" class="headerlink" title="内存 栈 和 堆"></a>内存 栈 和 堆</h3><p><strong>java虚拟机完整的内存模型</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017214816354.png" alt="image-20241017214816354"></p><p><strong>简化模型</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017214937026.png" alt="image-20241017214937026"></p><p><strong>栈的特点</strong></p><p>1、栈描述的是方法执行的内部模型。每个方法被调用都会船舰一个栈帧（存储局部变量、操作数、方法出口等）<br>2、栈的存储特性是“线进后出，后进先出”<br>3、栈是由系统自动分配，速度快！栈是一个联系的内存空间！<br>其他特性：<br>4、JVM为每个线程出啊昂建一个栈，用于存放改线程执行方法的信息（实际参数、局部变量等）<br>5、栈属于线程私有，不能实现线程之间的共享</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018195717248.png" alt="image-20241018195717248"></p><p>如同上面的方法，假设main方法中调用了另一个A方法，那么在mian方法上面加入那个调用的A方法的栈帧A<br>然后假设A方法又调用了一个B方法，那么在A方法的上面再加入一个B方法的栈帧B<br>然后最后加入的栈帧B方法执行完了之后最先离开栈帧，然后A方法执行完了之后再离开栈帧，最后是main方法<br>也就是说越早调用的越晚离开。</p><p><strong>堆的特点</strong></p><p>1、堆用于存储创建好的对象和数组（数组也是对象）<br>2、堆是一个不连续的内存空间，分配灵活，速度慢！<br>3、JVM只有一个堆，被所有线程共享。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018200537074.png" alt="image-20241018200537074"></p><p><strong>方法区</strong></p><p>1、方法区是JAVA虚拟机规范，可以有不同的实现。（比如JDK8是“元数据空间”和堆结合起来<br>2、方法区实际上也是堆，只是用于存储类、常量相关的信息！<br>3、用来存放程序中永远是不变或者唯一的内容。（类信息【class对象，放射机制中会重点讲授】、静态变量、字符串常量等）<br>4、JVM只有一个方法区，被所有线程共享！</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017221125546.png" alt="image-20241017221125546"></p><p><strong>示例代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D17;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="comment">//这是定义类里面的元素</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;姓名：&quot;</span>+ name + <span class="string">&quot;\t年龄：&quot;</span>+age);</span><br><span class="line">    &#125;</span><br><span class="line">    Person(String _name,<span class="type">int</span> _age)&#123;</span><br><span class="line">        name = _name;</span><br><span class="line">        age = _age;</span><br><span class="line">    &#125;</span><br><span class="line">    Person()&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        p1.age = <span class="number">24</span>;</span><br><span class="line">        p1.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">        p1.show();</span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;李四&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        p2.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当执行这段代码的时候<br>首先 在堆内存中的方法区生成这个person 类<br>然后固定的字符串也一起存储在方法区</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018204603943.png" alt="image-20241018204603943"></p><p>然后在栈中生成main方法的栈帧<br>然后执行person p1的时候，现在栈帧中生成p1，但是此时p1的值为null，<br>然后执行后半句的时候</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018204918572.png" alt="image-20241018204918572"></p><p>执行后半句的时候，调用构造器，在堆中创建person的对象，然后把地址返回给p1（假设地址为0x23)</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018205832177.png" alt="image-20241018205832177"></p><p>此时栈帧中储存的p1 也就有了值（地址）<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018205953095.png" alt="image-20241018205953095"></p><p>然后执行接下来的语句，把堆内存中的p1对象（0x23对象）中的age赋值24，在吧name的值改为张三的地址</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018210111493.png" alt="image-20241018210111493"></p><p>然后再往下调用show方法打印<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018210440169.png" alt="image-20241018210440169"></p><p>执行完了show方法之后直接出栈<br>P2的过程也是同理</p><h3 id="this-的本质"><a href="#this-的本质" class="headerlink" title="this 的本质"></a>this 的本质</h3><p>this的本质就是”当前对象的地址！”<br>普通方法中，this总是指向调用该方法的对象<br>构造方法中，this总是只想正要初始化的对象</p><h3 id="static的本质"><a href="#static的本质" class="headerlink" title="static的本质"></a>static的本质</h3><p>static关键字核心用法：<br>用static声明的变量为静态成员变量，也成为类变量<br>1、重属于类，只有一份，在类被载入时被显式初始化。<br>2、一般用“类名.属性/方法”来调用<br>3、在static方法中不可直接访问非static的成员</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D19;</span><br><span class="line"><span class="comment">/*this 关键字的本质</span></span><br><span class="line"><span class="comment">* this的用法测试*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String name;</span><br><span class="line">    String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> id,String name)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;正在要初始化的对象：&quot;</span>+ <span class="built_in">this</span>);<span class="comment">//这里实际输出的就是地址</span></span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="comment">// 将形参 id 的值赋给实例变量 id</span></span><br><span class="line">        <span class="comment">/*所以这个代码里面this的意思就是形参的值</span></span><br><span class="line"><span class="comment">        * 具体意思就是形参的值=什么*/</span></span><br><span class="line">        <span class="built_in">this</span>.name =name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> id,String name,String pwd)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>(id, name);<span class="comment">//调用重载的构造器，这种调用必须位于构造方法的第一行</span></span><br><span class="line">        <span class="built_in">this</span>.pwd = pwd;</span><br><span class="line">        System.out.println(<span class="string">&quot;正在要初始化的对象：&quot;</span>+ <span class="built_in">this</span>);<span class="comment">//这里实际输出的就是地址</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;要登陆：&quot;</span>+<span class="built_in">this</span>.name+<span class="string">&quot;，密码：&quot;</span>+<span class="built_in">this</span>.pwd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">u1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">101</span>,<span class="string">&quot;薯片&quot;</span>);</span><br><span class="line">        u1.login();</span><br><span class="line">        <span class="type">User</span> <span class="variable">u2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">102</span>,<span class="string">&quot;薯条&quot;</span>,<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        u2.login();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数组和算法"><a href="#数组和算法" class="headerlink" title="数组和算法"></a>数组和算法</h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017181748938.png" alt="image-20241017181748938"></p><p><strong>代码示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p><strong>代码示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D19;</span><br><span class="line"><span class="comment">/*测试static的用法*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestStatic</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">String</span> <span class="variable">company</span> <span class="operator">=</span> <span class="string">&quot;薯片责任有限公司&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">companyId</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;类被初始化的调用&quot;</span>);</span><br><span class="line">        companyId = <span class="number">111222</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*类型: 这不是方法，也不是构造器，而是 静态初始化块（Static Initialization Block）。</span></span><br><span class="line"><span class="comment">作用: 在类被加载到 JVM 时执行。它可以用于初始化静态变量或执行一些一次性的操作。在这个例子中，它打印一条消息并将 companyId 设置为 111222。</span></span><br><span class="line"><span class="comment">特点:</span></span><br><span class="line"><span class="comment">只会在类加载时执行一次，适合进行静态变量的初始化。</span></span><br><span class="line"><span class="comment">可以包含多个静态初始化块，它们的执行顺序是从上到下的。*/</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printCompany</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公司信息&quot;</span>+company);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*在static里面不能使用非static的成员*/</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;登录&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        TestStatic.printCompany();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">TestStatic</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestStatic</span>();</span><br><span class="line">        t1.login();</span><br><span class="line">        <span class="type">TestStatic</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestStatic</span>();</span><br><span class="line">        t2.login();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="package和import"><a href="#package和import" class="headerlink" title="package和import"></a>package和import</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241020225023951.png" alt="image-20241020225023951"></p><h3 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h3><p><strong>冒泡排序</strong></p><p>不断做两两比较，可以从前往后，也可以从后往前，如果从前往后，那就是不断两两比较，如果大的就放到后面，第一轮结束之后可以找出最大的。<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018085343879.png" alt="image-20241018085343879"></p><p>第一轮开始之前是这样</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018085353904.png" alt="image-20241018085353904"></p><p>第一轮结束之后就是这样</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018085432409.png" alt="image-20241018085432409"></p><p>最后的结果</p><p><strong>代码示例</strong></p><p>​        </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JSP学习笔记</title>
    <link href="http://example.com/posts/5f366732.html"/>
    <id>http://example.com/posts/5f366732.html</id>
    <published>2024-10-01T11:23:00.000Z</published>
    <updated>2024-12-07T11:31:45.552Z</updated>
    
    <content type="html"><![CDATA[<h1 id="速成"><a href="#速成" class="headerlink" title="速成"></a>速成</h1><h2 id="导论"><a href="#导论" class="headerlink" title="导论"></a>导论</h2><h3 id="什么是JSP？"><a href="#什么是JSP？" class="headerlink" title="什么是JSP？"></a>什么是JSP？</h3><p>用处：创建Web应用程序。<br>对比Servlet：功能更多，如表达式语言、JSTL<br>组成：一个JSP页面由HTML和JSP标签组成。JSP页面比Servlet更容易维护，原因是设计与开发分离。<br>额外的功能：表达式语言、自定义标签。</p><h3 id="JSP相对于Servlet的优势"><a href="#JSP相对于Servlet的优势" class="headerlink" title="JSP相对于Servlet的优势"></a>JSP相对于Servlet的优势</h3><h4 id="对Servlet的扩展"><a href="#对Servlet的扩展" class="headerlink" title="对Servlet的扩展"></a>对Servlet的扩展</h4><p>JSP技术是对Servlet的扩展，在JSP中可以用Servlet的所有功能。<br>此外，JSP中还可以使用隐含对象、预定义标签、表达式语言和自定义标签等，使JSP开发更加简单</p><h4 id="易于维护"><a href="#易于维护" class="headerlink" title="易于维护"></a>易于维护</h4><p>JSP业务逻辑和表现逻辑分开，在Servlet技术中，我们将业务逻辑与表现逻辑混合在一起。</p><h4 id="快速开发，不需要重新编译和部署"><a href="#快速开发，不需要重新编译和部署" class="headerlink" title="快速开发，不需要重新编译和部署"></a>快速开发，不需要重新编译和部署</h4><p>JSP页面修改之后，不需要重新编译和部署。</p><h4 id="更少的代码"><a href="#更少的代码" class="headerlink" title="更少的代码"></a>更少的代码</h4><p>JSP中的各类标签可以减少代码</p><h3 id="JSP的目录结构"><a href="#JSP的目录结构" class="headerlink" title="JSP的目录结构"></a>JSP的目录结构</h3><p>JSP页面部署要点：把JSP页面放在<strong>WEB-INF文件夹之外</strong>的目录</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009113256330.png" alt="image-20241009113256330"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009113317360.png" alt="image-20241009113317360"></p><h3 id="JSP-API"><a href="#JSP-API" class="headerlink" title="JSP API"></a>JSP API</h3><p>JSP API由两个包组成<br>javax.servlet.jsp<br>javax.servlet.jsp.tagext<br>javax.servlet.jsp包有两个接口和类<br>接口如下<br>JspPage<br>HttpJspPage<br>类如下：<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009113650700.png" alt="image-20241009113650700"></p><h2 id="JSP脚本元素"><a href="#JSP脚本元素" class="headerlink" title="JSP脚本元素"></a>JSP脚本元素</h2><p>JSP中，可以使用脚本元素在jsp页面编写代码。<br>脚本元素提供了在jsp中插入java代码的能力。<br>一共有三种类型的脚本元素</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">脚本标签  &lt;% java source code %&gt;</span><br><span class="line">表达式标签&lt;%= statement%&gt;</span><br><span class="line">声明标签&lt;%! field or method declaration %&gt;</span><br></pre></td></tr></table></figure><h1 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h1><h2 id="JSP和JSTL"><a href="#JSP和JSTL" class="headerlink" title="JSP和JSTL"></a>JSP和JSTL</h2><h3 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241015213018750.png" alt="image-20241015213018750"></p><h2 id="JSP基础语法"><a href="#JSP基础语法" class="headerlink" title="JSP基础语法"></a>JSP基础语法</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>JSP：javaServer Page  SUN公司提供的动态网页编程技术，是java web 服务器端的动态资源<br>和html相比：html只能提供静态数据，而jsp技术允许在页面中嵌套java代码，为用户提供动态数据<br>相比servlet而言，更容易排版<br>    不管是JSP还是servlet都可以用于开发动态web资源，但是由于这两门技术各自的特点，在长期的软件实践中，人们逐渐把servlet作为web应用中的控制器组件来使用，而把JSP技术作为数据显示模板来使用<br>    其实JSP就是一个Servlet，当我们第一次访问jsp的时候，jsp引擎都会将这个jsp翻译成一个servlet，这个问价存在tomcat（源码目录）中的work目录中</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>在JSP中支持两种注释的语法操作<br>    一种是显示注释，这种注释是允许客户端看见的；另一种是隐式注释，此种注释是客户端无法看见的<br>1、显示注释语法：从HTML风格继承而来<br>2、隐藏注释语法：从JAVA风格继承；JSP自己的注释</p><p>JSP的三种注释方式</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、<span class="comment">//注释，单行注释/*多行注释*/</span></span><br><span class="line"><span class="number">2</span> &lt;!-- HTML风格的注释--&gt;</span><br><span class="line"><span class="number">3</span>、&lt;%-- JSP注释 --%&gt;</span><br></pre></td></tr></table></figure><h3 id="Scriptlet"><a href="#Scriptlet" class="headerlink" title="Scriptlet"></a>Scriptlet</h3><p>在JSP中最重要的部分就是Scriptlet（脚本小程序），所有嵌入HTML代码中的java程序。<br>在jap中一共有三种Scriptlet代码：都必须使用Scriptlet标记出来</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一种&lt;%  %&gt;: java脚本段，可以定义局部变量、编写语句</span><br><span class="line">第二种&lt;%! %&gt;:声明，可以定义全局（成员）变量、方法、类</span><br><span class="line">第三种&lt;%= %&gt;表达式，数据的一个变量或者具体内容</span><br></pre></td></tr></table></figure><p>但是现在不建议这样写（脚本和html写一起），因为这样写会导致页面耦合度非常高。</p><p>通过观察解析为java文件的代码jsp代码理解三种小脚本</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: 薯片菌</span><br><span class="line">  Date: <span class="number">16</span>/<span class="number">10</span>/<span class="number">2024</span></span><br><span class="line">  Time: 上午 <span class="number">7</span>:<span class="number">34</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;scriptlet脚本小程序&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%--</span><br><span class="line">scriptlet 脚本小程序</span><br><span class="line">jsp一共有三种scriptlet脚本小程序：</span><br><span class="line">第一种：java脚本段，可以写java代码定义局部变量编写语句</span><br><span class="line">&lt;%</span><br><span class="line"><span class="comment">//可以写java代码</span></span><br><span class="line">%&gt;</span><br><span class="line">生成的代码在servlet中的service方法体中</span><br><span class="line">第二种：声明，声明全局变量、方法、类等</span><br><span class="line">&lt;%!</span><br><span class="line"><span class="comment">//声明全局变量</span></span><br><span class="line">%&gt;</span><br><span class="line">生成的代码在servlet的类体中</span><br><span class="line">第三种：输出表达式。</span><br><span class="line">&lt;%=  数值  %&gt;</span><br><span class="line">生成的代码在servlet中的service方法体中</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%--第一种--%&gt;</span><br><span class="line">&lt;%</span><br><span class="line"><span class="comment">//定义局部变量</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;Hello  Jsp&quot;</span>;</span><br><span class="line">    <span class="comment">//输出内容到控制台</span></span><br><span class="line">    System.out.println(str);</span><br><span class="line">    <span class="comment">//输出到浏览器</span></span><br><span class="line">    out.print(str);</span><br><span class="line">    out.write(<span class="string">&quot;-----&quot;</span>);</span><br><span class="line">    <span class="comment">//输出全局变量</span></span><br><span class="line">    out.write(<span class="string">&quot;全局变量:&quot;</span>+num);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line"><span class="comment">//声明全局变量</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%--第三种--%&gt;</span><br><span class="line">&lt;%= str%&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="JSP的指令标签"><a href="#JSP的指令标签" class="headerlink" title="JSP的指令标签"></a>JSP的指令标签</h2><h3 id="include静态包含"><a href="#include静态包含" class="headerlink" title="include静态包含"></a>include静态包含</h3><p>使用包含操作，可以将一些重复的代码包含进来继续使用，从正常的页面组成来看，有时可能分为几个区域，而其中的一些区域可能是一直不需要改变的，改变的就其中的一个具体内容区域，现在又两种方法可以实现上述功能。</p><p>​    方法一：再每个JSP页面（HTML）都包含工具栏、头部信息、尾部信息、具体内容<br>​    方法二：将工具栏、头部信息、尾部信息都分成各个独立的文件，使用的时候直接导入<br>​    很明显，第二种方法比第一种更好，第一种会存在很多重复的代码，并且修改很不方便，再JSP中如果想要实现包含操作，有两种做法：静态包含、动态包含，静态包含使用include指令即可，动态包含则需要使用include动作标签。<br>示例代码</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: 薯片菌</span><br><span class="line">  Date: <span class="number">16</span>/<span class="number">10</span>/<span class="number">2024</span></span><br><span class="line">  Time: 上午 <span class="number">8</span>:<span class="number">37</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;底部内容&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;Test005-header.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;h2&gt;主体&lt;/h2&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;Test005-footer.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>静态包含就是将内容进行了直接的替换，就好比程序中定义的变量一样 是在servlet引擎转译的时，就把此文件内容包含了进去（两个文件的源代码整合到一起，全部放到_jspService方法中），所以只生成了一个servlet,所以两个页面不能有同名的变量。运行效率高一点点。耦合性较高，不够灵活。</p><h3 id="include动态包含"><a href="#include动态包含" class="headerlink" title="include动态包含"></a>include动态包含</h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ <span class="type">include</span> <span class="variable">file</span> <span class="operator">=</span> <span class="string">&quot;要包含的文件路径&quot;</span> %&gt; &lt;/jsp:include&gt;</span><br></pre></td></tr></table></figure><p>动态包含在代码的编译阶段，包含和被包含部分是两个独立的部分，只有当运行时，才会动态包含进来，</p><p><strong>注意</strong>：动态包含，中间不要加任何内容，包括空格，除非确认要使用参数，否则报错！</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: 薯片菌</span><br><span class="line">  Date: <span class="number">16</span>/<span class="number">10</span>/<span class="number">2024</span></span><br><span class="line">  Time: 上午 <span class="number">11</span>:08</span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;include动态包含&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%--include 动态包含</span><br><span class="line">格式：</span><br><span class="line">   &lt;%@ <span class="type">include</span> <span class="variable">file</span> <span class="operator">=</span> <span class="string">&quot;要包含的文件路径&quot;</span> %&gt; &lt;/jsp:include&gt;</span><br><span class="line">   特点</span><br><span class="line">   <span class="number">1</span>、动态包含相当于方法的调用</span><br><span class="line">   <span class="number">2</span>、动态包含会生成多个源码文件</span><br><span class="line">   <span class="number">3</span>、可以定义同名变量</span><br><span class="line">   <span class="number">4</span>、效率高，耦合度低</span><br><span class="line">   注：</span><br><span class="line">   当动态包含不需要传递参数时，include双标签之间不要有任何内容，包括换行和空格</span><br><span class="line"></span><br><span class="line">   使用动态包含传递参数</span><br><span class="line">   &lt;jsp:include page=<span class="string">&quot;要包含的页面的路径&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;参数名&quot;</span> value=<span class="string">&quot;参数值&quot;</span>/&gt;</span><br><span class="line">   &lt;/jsp:include&gt;</span><br><span class="line">   注：name属性不支持表达式，value属性支持表达式</span><br><span class="line">   获取参数：</span><br><span class="line">   request.getParameter(name);通过特定参数名获取参数值</span><br><span class="line">   --%&gt;</span><br><span class="line"></span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;Test005-header.jsp&quot;</span>&gt;&lt;/jsp:include&gt;</span><br><span class="line">&lt;h2&gt;主体内容&lt;/h2&gt;</span><br><span class="line">&lt;%</span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;Test005-footer.jsp&quot;</span>&gt;&lt;/jsp:include&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--动态包含传递参数--%&gt;</span><br><span class="line">&lt;%  <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;%&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;Test005-footer.jsp&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;uname&quot;</span> value=<span class="string">&quot;admin&quot;</span>/&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;msg&quot;</span> value=<span class="string">&quot;&lt;%=str%&gt;&quot;</span>/&gt;</span><br><span class="line">&lt;/jsp:include&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="JSP四大域对象"><a href="#JSP四大域对象" class="headerlink" title="JSP四大域对象"></a>JSP四大域对象</h2><h3 id="四种属性的范围"><a href="#四种属性的范围" class="headerlink" title="四种属性的范围"></a>四种属性的范围</h3><p>在JSP中提供了四种属性的保存范围，所谓的属性保存范围，指的就是一个设置的对象，可以在多少个页面中保存并可以继续使用<br>就是说属性什么时候失效</p><p>1、page范围<br>        pageCountext：只在一个页面中保存属性，跳转之后无效<br>2、request范围<br>        request：只在一次请求中保存，服务器跳转后依然有效<br>3、session范围<br>        session：在一次会话范围中，无论何种跳转都可以使用<br>4、appliction范围</p><p>​        application: 在整个服务器上保存</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241022103827184.png" alt="image-20241022103827184"></p><h3 id="验证属性范围的特点"><a href="#验证属性范围的特点" class="headerlink" title="验证属性范围的特点"></a>验证属性范围的特点</h3><p>1、page<br>本页面取得，服务器端跳转（ &lt;  jsp:forward  &gt; ）后无效<br>2、request<br>服务器跳转有效，客户端跳转无效<br>如果是客户端跳转，则想打能与发出了两次请求，那么第一次的请求将不存在了；如果希望不管是客户端还是服务器跳转，都能保存的话，就需要继续扩大范围。</p><p>在自己设计的代码中，尽可能多的使用request比较合理</p><p>3、session<br>无论客户端还是服务器端都可以取得，但是现在重新开启一个新的浏览器，则无法取得之前设置的session了，因为每一个seesion只保存在当前的浏览器中，并在相关的页面取得。<br>对于服务器而言，每一个连接到它的客户端都是一个session<br>如果想要让属性设置一次之后，不管是否是新的浏览器打开都能取得则可以使用application<br>4、application<br>所有application属性直接保存在服务器上，所有的用户（每一个session）都可以直接访问取得<br>只要通过application设置的属性，则所有的session都可以取得，表示公共的内容，但是如果此时服务器重启了，则无法取得了，因为关闭服务器后，所有属性都消失了，所以需要重新设置。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;速成&quot;&gt;&lt;a href=&quot;#速成&quot; class=&quot;headerlink&quot; title=&quot;速成&quot;&gt;&lt;/a&gt;速成&lt;/h1&gt;&lt;h2 id=&quot;导论&quot;&gt;&lt;a href=&quot;#导论&quot; class=&quot;headerlink&quot; title=&quot;导论&quot;&gt;&lt;/a&gt;导论&lt;/h2&gt;&lt;h3 id</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据库学习笔记</title>
    <link href="http://example.com/posts/769d2f87.html"/>
    <id>http://example.com/posts/769d2f87.html</id>
    <published>2023-10-03T23:53:58.000Z</published>
    <updated>2024-12-07T11:38:28.477Z</updated>
    
    <content type="html"><![CDATA[<h1 id="代码速成"><a href="#代码速成" class="headerlink" title="代码速成"></a>代码速成</h1><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><h3 id="检查数据库名是否存在"><a href="#检查数据库名是否存在" class="headerlink" title="检查数据库名是否存在"></a>检查数据库名是否存在</h3><p>如果需要创建数据库，可能会出现数据库名字重名的现象，我们可以使用如下带啊吗查询数据库名是否存在，存在则删除此数据库。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if exist(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sys.databases <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;DBTEST&#x27;</span>)</span><br><span class="line"><span class="comment">--判断是否存在</span></span><br><span class="line"><span class="keyword">drop</span> database DBTEST</span><br></pre></td></tr></table></figure><p>此代码检查数据库中是否存在“DBTEST”数据库，如果存在则删除此数据库，此处理方式最好只在学习阶段使用，在正式生产环境中慎用，操作不当可能会删除重要数据。</p><h3 id="创建数据库-1"><a href="#创建数据库-1" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建数据库</span></span><br><span class="line"><span class="keyword">create</span> database DBTEST</span><br><span class="line"><span class="keyword">on</span>   <span class="comment">--on代表数据文件</span></span><br><span class="line">(<span class="comment">--on下面是一对英文的括号</span></span><br><span class="line"><span class="comment">--下面是创建数据库时需要设置的数据</span></span><br><span class="line">name <span class="operator">=</span> <span class="string">&#x27;DBTEST&#x27;</span>, <span class="comment">--数据库中需要注意的一点就是字符串不是用双引号而是用单引号。 </span></span><br><span class="line"><span class="comment">/*name代表数据文件的逻辑名称</span></span><br><span class="line"><span class="comment">习惯上这个名称一般和库名保持一致</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">filename <span class="operator">=</span> <span class="string">&#x27;D:\SQL2019\Directory\DBTEST.mdf &#x27;</span>,<span class="comment">--物理路径和名称 </span></span><br><span class="line">size <span class="operator">=</span> <span class="number">5</span>mb,<span class="comment">--文件的初始大小</span></span><br><span class="line">filegrowth <span class="operator">=</span> <span class="number">2</span>MB<span class="comment">--文件增长方式可以写大小，也可以写百分比10%</span></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">log <span class="keyword">on</span> <span class="comment">--log on 代表日志 文件</span></span><br><span class="line">(</span><br><span class="line">name <span class="operator">=</span> <span class="string">&#x27;DBTEST_log&#x27;</span>,<span class="comment">--日志文件的习惯就是在数据文件的基础上加上一个log</span></span><br><span class="line">filename <span class="operator">=</span> <span class="string">&#x27;D:\SQL2019\Directory\DBTEST_log.ldf &#x27;</span>,<span class="comment">--物理路径和名称 </span></span><br><span class="line">size <span class="operator">=</span> <span class="number">5</span>mb,<span class="comment">--文件的初始大小</span></span><br><span class="line">filegrowth <span class="operator">=</span> <span class="number">2</span>MB<span class="comment">--文件增长方式可以写大小，也可以写百分比10%</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>以上代码创建“DBTEST”数据库，并且风别使用on喝log on规定了数据文件喝日志文件的信息。</p><p>创建数据库也可以按照如下简单语法来创建：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建数据库简写 </span></span><br><span class="line"><span class="keyword">create</span> database DBTEST1</span><br></pre></td></tr></table></figure><p>如果按照上述方式创建数据库，数据库的数据文件喝日志文件的相关信息，全部采用默认值。</p><h3 id="建表"><a href="#建表" class="headerlink" title="建表"></a>建表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"> use DBTEST <span class="comment">--切换数据库</span></span><br><span class="line"> <span class="comment">--创建表的基本语法</span></span><br><span class="line"> <span class="comment">/*create table 表名</span></span><br><span class="line"><span class="comment"> （</span></span><br><span class="line"><span class="comment"> 字段名1 数据类型，</span></span><br><span class="line"><span class="comment"> 字段名2 数据类型</span></span><br><span class="line"><span class="comment"> ）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*判断表是否存在和冲突*/</span></span><br><span class="line"> if <span class="keyword">exists</span> (<span class="keyword">select</span><span class="operator">*</span><span class="keyword">from</span> sys.objects <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;Department&#x27;</span> <span class="keyword">and</span> type <span class="operator">=</span> <span class="string">&#x27;U&#x27;</span>)</span><br><span class="line"> <span class="keyword">drop</span> <span class="keyword">table</span> Department</span><br><span class="line"> <span class="comment">--这个操作同样很危险，因为可能会删了表内重要的数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--建表（部门，职级，员工）</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Department</span><br><span class="line">(</span><br><span class="line"><span class="comment">--部门编号 primary key:主键 唯一标识的一行 无法重复</span></span><br><span class="line"><span class="comment">--identity（1，1） 自动增长，初始值1。增长步长1。</span></span><br><span class="line">DepartmentId <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line"><span class="comment">--部门名称 不能为空值</span></span><br><span class="line">DepartmentName nvarchar(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">--部门描述</span></span><br><span class="line">DepartmentRemark text</span><br><span class="line">)</span><br><span class="line"><span class="comment">/*字符串</span></span><br><span class="line"><span class="comment">char:定长类型的字符串，char（10），无论存储的数据是否到10字节</span></span><br><span class="line"><span class="comment">都占用10字节的内存</span></span><br><span class="line"><span class="comment">char(10)存储&#x27;ab&#x27;,仍然占用10个字节</span></span><br><span class="line"><span class="comment">varchar：变长，varchar(10),最多占用10个字节</span></span><br><span class="line"><span class="comment">varchar(10)存储&#x27;ab&#x27;,占用2个字节</span></span><br><span class="line"><span class="comment">text:长文本 执行效率低</span></span><br><span class="line"><span class="comment">char varchar text 前面加n：加n是存储一个中文字符（2个中文字符），不加的是一个英文字符*/</span></span><br><span class="line"><span class="comment">--建表 职级</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> [Rank]<span class="comment">--rank是sql里面的关键字，所以要用[]括起来</span></span><br><span class="line">(</span><br><span class="line"><span class="comment">--职级编号</span></span><br><span class="line">RankId <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line"><span class="comment">--职级名称 不能为空值</span></span><br><span class="line">RankName nvarchar(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">--职级描述</span></span><br><span class="line">RankRemark text</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--建员工表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> People</span><br><span class="line">(</span><br><span class="line">PeopleId <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>), <span class="comment">--员工编号</span></span><br><span class="line">PeopleName nvarchar(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">/*下面的性别需要添加一个约束，check就是约束的意思</span></span><br><span class="line"><span class="comment">通过约束限制输入的内容只能是男和女其中的一个</span></span><br><span class="line"><span class="comment">然后再注意一下default的格式，通过dafault自动填写*/</span></span><br><span class="line">PeopleSex nvarchar(<span class="number">1</span>) <span class="keyword">default</span>(<span class="string">&#x27;男&#x27;</span>) <span class="keyword">check</span> (PeopleSex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span><span class="keyword">or</span> PeopleSex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">--上面的性别就算不加not null也会自动把性别写入</span></span><br><span class="line">PeopleBirth datetime <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">/*存储时间分为date 和date time比较常用</span></span><br><span class="line"><span class="comment">其中date只能存储年月日 date time还可以存储时分秒</span></span><br><span class="line"><span class="comment">注意在低版本的sqls里面没有date，所以如果用datetime</span></span><br><span class="line"><span class="comment">则在任何版本的sqls里面都可以正常使用</span></span><br><span class="line"><span class="comment">还有一个small datetime 只能表示最近一段时间*/</span></span><br><span class="line">PeoPleSalary <span class="type">decimal</span>(<span class="number">12</span>,<span class="number">2</span>) <span class="keyword">check</span>(PeoPleSalary <span class="operator">&gt;=</span> <span class="number">1000</span> <span class="keyword">and</span> PeoPleSalary <span class="operator">&lt;=</span> <span class="number">1000000</span>)<span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">/*同样加了一个约束</span></span><br><span class="line"><span class="comment">其中decimal是精确计算的小数，工资这类要精确计算的不使用decimal</span></span><br><span class="line"><span class="comment">decimal后面的数字的意思是计算到12位有效数字和2位小数*/</span></span><br><span class="line">PeoplePhone <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">unique</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">/*unique关键字表示唯一，在这里的意思就是两个手机号不能相同。*/</span></span><br><span class="line">PeopleAddress <span class="type">varchar</span>(<span class="number">300</span>),</span><br><span class="line">PeopleAddTime smalldatetime <span class="keyword">default</span>(getdate()),</span><br><span class="line"><span class="comment">/*入职时间，这里调用了getdate函数可以直接获取当前的时间*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--添加外键,引用外键：将其他表的主键作为自己的字段</span></span><br><span class="line"><span class="comment">--外键的作用 确保添加的每个值得都能在外面的表中找到，如果找不到就无法添加</span></span><br><span class="line">DepartmentId <span class="type">int</span> <span class="keyword">references</span> Department(DepartmentId)<span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">/*这里的语法</span></span><br><span class="line"><span class="comment">先设置DepartmentId int 和其他表的一样</span></span><br><span class="line"><span class="comment">然后通过reference 关键字连接到其他表</span></span><br><span class="line"><span class="comment">语法 reference 表名 （属性名）*/</span></span><br><span class="line">RankId <span class="type">int</span> <span class="keyword">references</span> [Rank](RankId)<span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="修改表的结构"><a href="#修改表的结构" class="headerlink" title="修改表的结构"></a>修改表的结构</h3><h2 id="关系模型"><a href="#关系模型" class="headerlink" title="关系模型"></a>关系模型</h2><h2 id="关系数据库规范化理论"><a href="#关系数据库规范化理论" class="headerlink" title="关系数据库规范化理论"></a><strong>关系数据库规范化理论</strong></h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><h3 id="主键"><a href="#主键" class="headerlink" title="主键"></a>主键</h3><p>就是表格中可以唯一标示一行的那个数据对应的那一列，每个表只能有一个个主键</p><p>假设有一个学生信息表：</p><div class="table-container"><table><thead><tr><th>学号 (StudentID)</th><th>姓名 (Name)</th></tr></thead><tbody><tr><td>1001</td><td>张三</td></tr><tr><td>1002</td><td>李四</td></tr></tbody></table></div><p>在这个表中，<strong>学号 (StudentID)</strong> 可以作为主键，因为它唯一标识每个学生，并且每个学号都是非空的。</p><h3 id="候选键"><a href="#候选键" class="headerlink" title="候选键"></a>候选键</h3><p>首先候选键有两个非常重要的属性，唯一性和最小性<br><strong>唯一性</strong><br>就是这个值可以标示出整一行的数据<br>就是说在那个函数关系中，知道候选键之后可以算出所有的属性<br><strong>最小性</strong><br>就是说候选键不可以是多个属性的组合，只能是最小不可分割的。<br>一个表可以有多个候选键还是以学生表为例：</p><div class="table-container"><table><thead><tr><th>学号 (StudentID)</th><th>姓名 (Name)</th><th>身份证号 (IDNumber)</th></tr></thead><tbody><tr><td>1001</td><td>张三</td><td>123456789012345</td></tr><tr><td>1002</td><td>李四</td><td>234567890123456</td></tr></tbody></table></div><ul><li><strong>学号 (StudentID)</strong> 和 <strong>身份证号 (IDNumber)</strong> 都是候选键，因为它们都能唯一标识每个学生，并且它们的值是最小的。<br><strong>姓名 (Name)</strong> 不是候选键，因为两个学生可能有相同的姓名。不满足唯一性。</li></ul><h3 id="函数依赖"><a href="#函数依赖" class="headerlink" title="函数依赖"></a>函数依赖</h3><h4 id="平凡函数依赖"><a href="#平凡函数依赖" class="headerlink" title="平凡函数依赖"></a>平凡函数依赖</h4><p>平凡函数依赖是指，对于一个关系 R<em>R</em> 和属性集 X<em>X</em> 和 Y<em>Y</em>，如果 Y<em>Y</em> 是 X<em>X</em> 的子集（即 Y⊆X<em>Y</em>⊆<em>X</em>），那么 X→Y<em>X</em>→<em>Y</em> 就是一个平凡函数依赖。<br><strong>说人话</strong></p><p>假设我们有一个表：</p><div class="table-container"><table><thead><tr><th>学号 (StudentID)</th><th>姓名 (Name)</th><th>年龄 (Age)</th></tr></thead><tbody><tr><td>1001</td><td>张三</td><td>20</td></tr><tr><td>1002</td><td>李四</td><td>21</td></tr></tbody></table></div><p>对于这个表，我们可以有如下平凡函数依赖：</p><ol><li><code>StudentID → StudentID</code>：显然，<code>StudentID</code> 总是能唯一确定它自己，这是平凡函数依赖。</li><li><code>Name → Name</code>：<code>Name</code> 总是能唯一确定它自己，这也是平凡函数依赖。</li></ol><p><strong>一句话解释</strong><br>自己推自己</p><h4 id="完全函数依赖（Full-Functional-Dependency）"><a href="#完全函数依赖（Full-Functional-Dependency）" class="headerlink" title="完全函数依赖（Full Functional Dependency）"></a><strong>完全函数依赖（Full Functional Dependency）</strong></h4><ul><li><p><strong>定义</strong>：如果属性集 X<em>X</em> 唯一确定了属性集 Y<em>Y</em>，并且没有任何多余的属性可以去掉仍然保持这种确定性，那么就称 Y<em>Y</em> 对 X<em>X</em> 是 <strong>全函数依赖</strong>。</p></li><li><p><strong>特性</strong>：</p><ul><li>在多属性键的情况下，<strong>全函数依赖</strong>表示所有依赖的属性都必须出现在决定属性的属性集 X<em>X</em> 中，否则不算全函数依赖。</li></ul></li><li><p><strong>举例</strong>： 假设有一个学生选课表：</p><p>| 学号 (StudentID) | 课程ID (CourseID) | 成绩 (Grade) |<br>| ———————— | ————————- | —————— |<br>| 1001             | 101               | A            |<br>| 1002             | 102               | B            |</p><p>假设 <code>&#123;StudentID, CourseID&#125;</code> 是这个表的主键，且 <code>Grade</code> 由 <code>StudentID</code> 和 <code>CourseID</code> 唯一确定。这种情况下，<code>Grade</code> 对 <code>&#123;StudentID, CourseID&#125;</code> 是全函数依赖，因为我们需要同时知道 <code>StudentID</code> 和 <code>CourseID</code> 才能确定 <code>Grade</code>。</p></li></ul><p><strong>说人话+一句话解释</strong></p><p>对于每一个Y有唯一的X确定Y，去掉任何一个X，Y的值就会缺失，有Y无法被推导出，这样的关系就是完全函数依赖</p><h4 id="部分函数依赖（Partial-Functional-Dependency）"><a href="#部分函数依赖（Partial-Functional-Dependency）" class="headerlink" title="部分函数依赖（Partial Functional Dependency）"></a><strong>部分函数依赖（Partial Functional Dependency）</strong></h4><ul><li><p><strong>定义</strong>：如果属性集 X 唯一确定了属性集 Y，但是 Y也可以通过 X 的某个 <strong>真子集</strong> 来唯一确定，那么 Y 对 X<em> 就是 <em>*部分函数依赖</em></em>。</p></li><li><p><strong>特性</strong>：</p><ul><li>在候选键（尤其是复合键）的情况下，如果某个属性仅依赖于复合键中的一部分属性而不是全部属性，则称为部分依赖。</li><li>部分依赖通常会导致数据冗余，通常在规范化过程中需要消除。</li></ul></li><li><p><strong>举例</strong>： 假设有一个表：</p><p>| 学号 (StudentID) | 课程ID (CourseID) | 教师 (Teacher) |<br>| ———————— | ————————- | ——————— |<br>| 1001             | 101               | 张老师         |<br>| 1002             | 102               | 李老师         |</p><p>这里，<code>&#123;StudentID, CourseID&#125;</code> 是主键，<code>Teacher</code> 只依赖于 <code>CourseID</code>（即教师与课程ID相关），而与 <code>StudentID</code> 无关。这表示 <code>Teacher</code> 对 <code>&#123;StudentID, CourseID&#125;</code> 存在部分函数依赖。</p></li></ul><p><strong>说人话</strong><br>抛物线，多个X对应同一Y 实际上只需要一半抛物线就可以确定整个Y的集合。</p><h4 id="传递函数依赖（Transitive-Functional-Dependency）"><a href="#传递函数依赖（Transitive-Functional-Dependency）" class="headerlink" title="传递函数依赖（Transitive Functional Dependency）"></a><strong>传递函数依赖（Transitive Functional Dependency）</strong></h4><ul><li><p><strong>定义</strong>：如果 A 唯一确定了B，且 <em>B</em> 唯一确定了 C<em>，那么就说 C</em> 对 <em>A</em> 存在 <strong>传递函数依赖</strong>，<br>即<em>A</em>→<em>C</em> 是传递的。</p></li><li><p><strong>特性</strong>：</p><ul><li>传递依赖不直接存在于数据表中的主键或候选键上，而是通过中介属性进行间接的确定。</li><li>传递依赖是数据库设计中需要避免的依赖之一，因为它可能导致冗余数据和更新异常。</li></ul></li><li><p><strong>举例</strong>： 假设有一个表：</p><p>| 学号 (StudentID) | 学院 (Department) | 学院电话 (DeptPhone) |<br>| ———————— | ————————- | —————————— |<br>| 1001             | 计算机学院        | 1234567890           |<br>| 1002             | 数学学院          | 0987654321           |</p><p>在这个例子中，假设 <code>StudentID</code> 唯一确定 <code>Department</code>（学生属于某个学院），<code>Department</code> 又唯一确定 <code>DeptPhone</code>（学院的电话）。因此，<code>DeptPhone</code> 对 <code>StudentID</code> 存在传递函数依赖，即 <code>StudentID → Department → DeptPhone</code>。</p></li></ul><p><strong>说人话</strong><br>A确定B，B确定C A对于C的关系就是传递函数依赖</p><h4 id="自反函数依赖（Trivial-Functional-Dependency）"><a href="#自反函数依赖（Trivial-Functional-Dependency）" class="headerlink" title="自反函数依赖（Trivial Functional Dependency）"></a><strong>自反函数依赖（Trivial Functional Dependency）</strong></h4><ul><li><p><strong>定义</strong>：如果一个属性集 X<em>X</em> 包含了属性集 Y<em>Y</em>（即 Y⊆X<em>Y</em>⊆<em>X</em>），那么 Y<em>Y</em> 对 X<em>X</em> 就是 <strong>自反函数依赖</strong>，这种依赖是显而易见的。</p></li><li><p><strong>特性</strong>：</p><ul><li>这是最简单的函数依赖类型，表示任何属性集都可以唯一确定它自己的子集。</li><li>自反依赖通常对规范化没有实质意义，因为它是显然成立的。</li></ul></li><li><p><strong>举例</strong>： 假设有一个表：</p><p>| 学号 (StudentID) | 姓名 (Name) |<br>| ———————— | —————- |<br>| 1001             | 张三        |<br>| 1002             | 李四        |</p><p>在这个例子中，<code>StudentID → StudentID</code> 是自反函数依赖，因为任何属性集都可以确定它自己。</p></li></ul><p><strong>说人话</strong></p><p>自己肯定可以确定自己 通过X的值确定X的值</p><h3 id="Armstrong-公理"><a href="#Armstrong-公理" class="headerlink" title="Armstrong**公理**"></a><strong>Armstrong**</strong>公理**</h3><p>A-&gt;BC,则A-&gt;B且 A-&gt;C<br>A-&gt;B且 A-&gt;C,则A-&gt;BC<br>A-&gt;B且 C-&gt;D成立,则AC-&gt;BD</p><h3 id="闭包（Closure）简介"><a href="#闭包（Closure）简介" class="headerlink" title="闭包（Closure）简介"></a>闭包（Closure）简介</h3><p>在函数依赖理论中，<strong>闭包</strong>是指给定一个属性集 X<em>X</em>，通过应用函数依赖集 F<em>F</em> 的所有规则，能够推导出的所有属性的集合。我们用 X+<em>X</em>+ 来表示属性集 X<em>X</em> 的闭包。换句话说，闭包是从 X<em>X</em> 开始，通过应用函数依赖集 F<em>F</em> 逐步推导出所有能够由 X<em>X</em> 确定的属性。<br>设有关系模式R(A,B,C,D,E)， F = {A→C,BC →E,D →C, E →A} 其中 ABCD这些是R的属性 F中欧的东西称为规则或者函数依赖。</p><h4 id="候选键-1"><a href="#候选键-1" class="headerlink" title="候选键"></a>候选键</h4><p>对于给定的关系模式<em>R</em>(<em>A</em>1…，<em>An</em>)和函数依赖集<em>F</em>，可将其属性分为以下四类：<br>L、R、LR、N</p><p>求候选键<br>1、L类属性<br>2、N类属性</p><ul><li><strong>主属性</strong>：关系模式中的主属性是属于候选键的属性，也就是说，它是参与候选键的属性。</li><li><strong>1NF (第一范式)</strong>：关系中的每个属性值都是原子值，没有重复组。题目中没有提到关于非原子值的内容，因此可以假设关系模式已经满足 1NF。</li><li><strong>2NF (第二范式)</strong>：如果一个关系模式满足 1NF，并且每个非主属性完全依赖于每一个候选键，那么它满足 2NF。由于题目中提到的是“属性全是主属性”，即不存在非主属性，因此自动满足 2NF。</li><li><strong>3NF (第三范式)</strong>：如果一个关系模式满足 2NF，并且每个非主属性不传递依赖于候选键，那么它满足 3NF。同样，由于没有非主属性，关系模式自动满足 3NF。</li><li><strong>BCNF (博茨-科得范式)</strong>：如果一个关系模式满足 3NF，并且每个决定因素（即对其他属性有决定作用的属性）都是候选键，那么它满足 BCNF。在题目中，如果所有属性都是主属性，则所有决定因素都是候选键，因此也满足 BCNF。</li></ul><p>组成候选码的属性称为主属性，不参加任何候选码的属性成为非主属性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">-- 检索所有书的书的编号、书名、类型、价格</span><br><span class="line">SELECT title_id, title, type, price FROM titles;</span><br><span class="line"></span><br><span class="line">-- 在titles表中检索所有书的编号、单价、打7折后的价格</span><br><span class="line">SELECT title_id, price, price * 0.7 AS discounted_price FROM titles;</span><br><span class="line"></span><br><span class="line">-- 在authors表中检索所有作者的编号、作者的姓名（firstname与lastname的组合）</span><br><span class="line">SELECT au_id, CONCAT(au_fname, &#x27; &#x27;, au_lname) AS full_name FROM authors;</span><br><span class="line"></span><br><span class="line">-- 查询作者来自哪些州</span><br><span class="line">SELECT DISTINCT state FROM authors;</span><br><span class="line"></span><br><span class="line">-- 查询作者来自哪些州、哪些城市</span><br><span class="line">SELECT DISTINCT state, city FROM authors;</span><br><span class="line"></span><br><span class="line">-- 查询前面6本书的所有信息</span><br><span class="line">SELECT * FROM titles LIMIT 6;</span><br><span class="line"></span><br><span class="line">-- 查询前10%的书的所有信息</span><br><span class="line">WITH TotalCount AS (</span><br><span class="line">    SELECT COUNT(*) AS Total FROM titles</span><br><span class="line">)</span><br><span class="line">SELECT TOP (SELECT Total * 0.1 FROM TotalCount) * </span><br><span class="line">FROM titles</span><br><span class="line">ORDER BY title_id;</span><br><span class="line">-- 查询前面10本书的编号和单价</span><br><span class="line">SELECT TOP 10 title_id, price FROM titles;</span><br><span class="line"></span><br><span class="line">-- 查询书的全部信息，按书的类型和价格升序排列</span><br><span class="line">SELECT * FROM titles ORDER BY type ASC, price ASC;</span><br><span class="line"></span><br><span class="line">-- 查询书的全部信息，按书的类型和价格降序排列</span><br><span class="line">SELECT * FROM titles ORDER BY type DESC, price DESC;</span><br><span class="line"></span><br><span class="line">-- 查询单价最高的10本书的信息</span><br><span class="line">SELECT * FROM titles ORDER BY price DESC LIMIT 10;</span><br><span class="line"></span><br><span class="line">-- 查询单价最高的5本书的信息（显示并列项）</span><br><span class="line">SELECT * FROM titles </span><br><span class="line">WHERE price = (SELECT DISTINCT price FROM titles ORDER BY price DESC LIMIT 5 OFFSET 4);</span><br><span class="line"></span><br><span class="line">-- 检索编号为’F-C16315M’的员工的编号、姓、名、雇佣日期</span><br><span class="line">SELECT emp_id, last_name, first_name, hire_date FROM employees WHERE emp_id = &#x27;F-C16315M&#x27;;</span><br><span class="line"></span><br><span class="line">-- 查询authors表中所有居住在UT州的作者姓名和电话。</span><br><span class="line">SELECT CONCAT(au_fname, &#x27; &#x27;, au_lname) AS full_name, phone </span><br><span class="line">FROM authors WHERE state = &#x27;UT&#x27;;</span><br><span class="line"></span><br><span class="line">-- 查询单价小于10的书的所有信息</span><br><span class="line">SELECT * FROM titles WHERE price &lt; 10;</span><br><span class="line"></span><br><span class="line">-- 查询类型为’business’的书的书名和单价</span><br><span class="line">SELECT title, price FROM titles WHERE type = &#x27;business&#x27;;</span><br><span class="line"></span><br><span class="line">-- 从表 titles 中，查找书名中包含字符串“computer”的书名。</span><br><span class="line">SELECT title FROM titles WHERE title LIKE &#x27;%computer%&#x27;;</span><br><span class="line"></span><br><span class="line">-- 从表 authors 中，查找au_fname以字符“D”打头的作者的姓、名。</span><br><span class="line">SELECT au_lname, au_fname FROM authors WHERE au_fname LIKE &#x27;D%&#x27;;</span><br><span class="line"></span><br><span class="line">-- 从表 authors 中，查找au_id类似于”72?-?”格式的作者的编号、姓、名、电话。</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone FROM authors WHERE au_id LIKE &#x27;72_-_&#x27;;</span><br><span class="line"></span><br><span class="line">-- 从表 authors 中，查找au_id的第2个数字是7的作者的编号、姓、名、电话。</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone FROM authors WHERE au_id LIKE &#x27;_7%&#x27;;</span><br><span class="line"></span><br><span class="line">-- 从表 authors 中，查找au_id只能是”723-?”、 ”724-?”、 ”725-?”格式 的作者的编号、姓、名、电话。</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone FROM authors WHERE au_id REGEXP &#x27;72[3-5]-..&#x27;;</span><br><span class="line"></span><br><span class="line">-- 从表 authors 中，查找au_id的第1个数字是5-9中的一个，第2个数字是1-4中的一个的作者的编号、姓、名、电话。</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone FROM authors WHERE au_id REGEXP &#x27;^[5-9][1-4].*&#x27;;</span><br><span class="line"></span><br><span class="line">-- 从表 authors 中，查找au_id的第1个数字不是5-9中的一个，第2个数字不是1-4中的一个的作者的编号、姓、名、电话。</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone FROM authors WHERE au_id NOT REGEXP &#x27;^[5-9][1-4].*&#x27;;</span><br><span class="line"></span><br><span class="line">-- 查找书名中含有“computer”，或书的编号以“B”打头的书，且价格低于15的书的信息。</span><br><span class="line">SELECT * FROM titles WHERE (title LIKE &#x27;%computer%&#x27; OR title_id LIKE &#x27;B%&#x27;) AND price &lt; 15;</span><br><span class="line"></span><br><span class="line">-- 从titles表中查询单价在15美元到20美元之间的书名和单价</span><br><span class="line">SELECT title, price FROM titles WHERE price BETWEEN 15 AND 20;</span><br><span class="line"></span><br><span class="line">-- 从表 authors 中搜索state位于‘CA’,‘KS’,‘MI’,‘IN’的作者姓名和所在州。</span><br><span class="line">SELECT CONCAT(au_fname, &#x27; &#x27;, au_lname) AS full_name, state </span><br><span class="line">FROM authors WHERE state IN (&#x27;CA&#x27;, &#x27;KS&#x27;, &#x27;MI&#x27;, &#x27;IN&#x27;);</span><br><span class="line"></span><br><span class="line">-- 查询表 titles 中还没有定价格的书名和价格。</span><br><span class="line">SELECT title, price FROM titles WHERE price IS NULL;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">检索编号为&#x27;F-C16315M&#x27;的员工的编号、姓、名、雇佣日期</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT emp_id, last_name, first_name, hire_date </span><br><span class="line">FROM employees </span><br><span class="line">WHERE emp_id = &#x27;F-C16315M&#x27;;</span><br><span class="line">查询authors表中所有居住在UT州的作者姓名和电话。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT CONCAT(au_fname, &#x27; &#x27;, au_lname) AS full_name, phone </span><br><span class="line">FROM authors </span><br><span class="line">WHERE state = &#x27;UT&#x27;;</span><br><span class="line">查询单价小于10的书的所有信息</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT * </span><br><span class="line">FROM titles </span><br><span class="line">WHERE price &lt; 10;</span><br><span class="line">查询类型为&#x27;business&#x27;的书的书名和单价</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT title, price </span><br><span class="line">FROM titles </span><br><span class="line">WHERE type = &#x27;business&#x27;;</span><br><span class="line">从表 titles 中，查找书名中包含字符串“computer”的书名。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT title </span><br><span class="line">FROM titles </span><br><span class="line">WHERE title LIKE &#x27;%computer%&#x27;;</span><br><span class="line">从表 authors 中，查找au_fname以字符“D”打头的作者的姓、名。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT au_lname, au_fname </span><br><span class="line">FROM authors </span><br><span class="line">WHERE au_fname LIKE &#x27;D%&#x27;;</span><br><span class="line">从表 authors 中，查找au_id类似于”72?-?”格式的作者的编号、姓、名、电话。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone </span><br><span class="line">FROM authors </span><br><span class="line">WHERE au_id LIKE &#x27;72__%&#x27;;</span><br><span class="line">从表 authors 中，查找au_id的第2个数字是7的作者的编号、姓、名、电话。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone </span><br><span class="line">FROM authors </span><br><span class="line">WHERE au_id LIKE &#x27;_7%&#x27;;</span><br><span class="line">从表 authors 中，查找au_id只能是”723-?”、 ”724-?”、 ”725-?”格式 的作者的编号、姓、名、电话。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone </span><br><span class="line">FROM authors </span><br><span class="line">WHERE au_id LIKE &#x27;723-%&#x27; OR au_id LIKE &#x27;724-%&#x27; OR au_id LIKE &#x27;725-%&#x27;;</span><br><span class="line">从表 authors 中，查找au_id的第1个数字是5-9中的一个，第2个数字是1-4中的一个的作者的编号、姓、名、电话。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone </span><br><span class="line">FROM authors </span><br><span class="line">WHERE au_id LIKE &#x27;[5-9][1-4]%&#x27;;</span><br><span class="line">从表 authors 中，查找au_id的第1个数字不是5-9中的一个，第2个数字不是1-4中的一个的作者的编号、姓、名、电话。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone </span><br><span class="line">FROM authors </span><br><span class="line">WHERE au_id NOT LIKE &#x27;[5-9][1-4]%&#x27;;</span><br><span class="line">查找书名中含有“computer”，或书的编号以“B”打头的书，且价格低于15的书的信息。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT * </span><br><span class="line">FROM titles </span><br><span class="line">WHERE (title LIKE &#x27;%computer%&#x27; OR title_id LIKE &#x27;B%&#x27;) </span><br><span class="line">  AND price &lt; 15;</span><br><span class="line">从titles表中查询单价在15美元到20美元之间的书名和单价</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT title, price </span><br><span class="line">FROM titles </span><br><span class="line">WHERE price BETWEEN 15 AND 20;</span><br><span class="line">从表 authors 中搜索state位于‘CA’,‘KS’,‘MI’,‘IN’的作者姓名和所在州。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT CONCAT(au_fname, &#x27; &#x27;, au_lname) AS full_name, state </span><br><span class="line">FROM authors </span><br><span class="line">WHERE state IN (&#x27;CA&#x27;, &#x27;KS&#x27;, &#x27;MI&#x27;, &#x27;IN&#x27;);</span><br><span class="line">查询表 titles 中还没有定价格的书名和价格。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT title, price </span><br><span class="line">FROM titles </span><br><span class="line">WHERE price IS NULL;</span><br><span class="line">自我练习部分（GradeManager数据库）</span><br><span class="line">查询班级表（Class）的全部内容</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT * </span><br><span class="line">FROM Class;</span><br><span class="line">在学生表Student中查询学生姓名、所在班级。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT student_name, class_id </span><br><span class="line">FROM Student;</span><br><span class="line">找出01311班女学生的个人信息</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT * </span><br><span class="line">FROM Student </span><br><span class="line">WHERE class_id = &#x27;01311&#x27; AND gender = &#x27;F&#x27;;</span><br><span class="line">找出所有被学生选修了的课程号</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT DISTINCT course_id </span><br><span class="line">FROM Enrollment;</span><br><span class="line">找出01311班和01312班的学生姓名、性别、出生年份</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT student_name, gender, birth_year </span><br><span class="line">FROM Student </span><br><span class="line">WHERE class_id IN (&#x27;01311&#x27;, &#x27;01312&#x27;);</span><br><span class="line">找出所有姓李的学生的个人信息。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT * </span><br><span class="line">FROM Student </span><br><span class="line">WHERE student_name LIKE &#x27;李%&#x27;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;代码速成&quot;&gt;&lt;a href=&quot;#代码速成&quot; class=&quot;headerlink&quot; title=&quot;代码速成&quot;&gt;&lt;/a&gt;代码速成&lt;/h1&gt;&lt;h2 id=&quot;创建数据库&quot;&gt;&lt;a href=&quot;#创建数据库&quot; class=&quot;headerlink&quot; title=&quot;创建数据库&quot;&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/posts/4a17b156.html"/>
    <id>http://example.com/posts/4a17b156.html</id>
    <published>2023-10-02T23:53:58.000Z</published>
    <updated>2024-12-07T10:52:39.217Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://site.shupianjun.fun/">薯片の前端小窝</a></p><p>上面的蓝字是一个神奇的传送门，你可以试试看点击一下</p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://site.shupianjun.fun/&quot;&gt;薯片の前端小窝&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上面的蓝字是一个神奇的传送门，你可以试试看点击一下&lt;/p&gt;
&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>吉他自学成长记录</title>
    <link href="http://example.com/posts/1564132a.html"/>
    <id>http://example.com/posts/1564132a.html</id>
    <published>2022-10-03T23:53:58.000Z</published>
    <updated>2024-12-07T11:35:27.569Z</updated>
    
    <content type="html"><![CDATA[<h2 id="这里记录吉他自学生涯，按照时间线发布"><a href="#这里记录吉他自学生涯，按照时间线发布" class="headerlink" title="这里记录吉他自学生涯，按照时间线发布"></a>这里记录吉他自学生涯，按照时间线发布</h2><h2 id="《I-Really-want-to-stay-at-your-house》"><a href="#《I-Really-want-to-stay-at-your-house》" class="headerlink" title="《I Really want to stay at  your house》"></a>《I Really want to stay at  your house》</h2><p>又名寡妇歌</p><p>2023-02-10，看完边缘行者之后，辗转反侧，起身拿起吉他，在屋外录下了这一段</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1FG4y1M743/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《龙卷风》"><a href="#《龙卷风》" class="headerlink" title="《龙卷风》"></a>《龙卷风》</h2><p>原告：周杰伦<br>买早饭的时候看到了不错的风景，有感而发回去录的。<br>有一说一水杉路的锅贴真是一绝。</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1d94y1Y7Bz/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《一路向北-》"><a href="#《一路向北-》" class="headerlink" title="《一路向北 》"></a>《一路向北 》</h2><p>原告:周杰伦<br>不要问为什么不唱，我学吉他第一节课第一次弹唱第一次张嘴之后，老师就告诉我我生来就是干指弹的，干不了弹唱。</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1C94y1x7AT/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《Flower-Dance》"><a href="#《Flower-Dance》" class="headerlink" title="《Flower Dance》"></a>《Flower Dance》</h2><p>薯片吉他生涯前半生的集大成之作<br>第一段可能还只是感情的沉淀<br>第二段开始的变调直接变成了纯粹的秀技</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1tT4y1h7w4/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《sprial》"><a href="#《sprial》" class="headerlink" title="《sprial》"></a>《sprial》</h2><p>第一次尝试vlog形式，明白了vlog是整不好剪</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1yzqVY5EcP/?vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《花の塔》"><a href="#《花の塔》" class="headerlink" title="《花の塔》"></a>《花の塔》</h2><p>永远怀念穿蓝色雨衣的少女</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV18kD6YPE26/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;这里记录吉他自学生涯，按照时间线发布&quot;&gt;&lt;a href=&quot;#这里记录吉他自学生涯，按照时间线发布&quot; class=&quot;headerlink&quot; title=&quot;这里记录吉他自学生涯，按照时间线发布&quot;&gt;&lt;/a&gt;这里记录吉他自学生涯，按照时间线发布&lt;/h2&gt;&lt;h2 id=&quot;《</summary>
      
    
    
    
    
  </entry>
  
</feed>

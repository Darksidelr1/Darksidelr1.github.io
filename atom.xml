<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>薯片菌のBlog</title>
  
  <subtitle>人生当苦 良人当归</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-01-03T11:01:48.467Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>薯片菌</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++学习笔记</title>
    <link href="http://example.com/posts/ad4f1e09.html"/>
    <id>http://example.com/posts/ad4f1e09.html</id>
    <published>2024-10-05T11:23:00.000Z</published>
    <updated>2025-01-03T11:01:48.467Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>由于我也是第一次学习C++，很多概念我自己也不清楚，所以此处基本上用来记录我学习过程中写的代码<br>各类概念和知识点理论，则是想到多少学到多少记多少。</p><h1 id="C-基础部分"><a href="#C-基础部分" class="headerlink" title="C++基础部分"></a>C++基础部分</h1><h2 id="输出helloworld代码"><a href="#输出helloworld代码" class="headerlink" title="输出helloworld代码"></a>输出helloworld代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第六行cout语句实现了输出的功能，除去第六行的语句，整体就是C++代码的基本框架<br>类似java中的类体+方法体</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>C++的注释有以下几种</p><h3 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h3><p>//</p><h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h3><p>/**/<br>同样的，编译器编译代码的时候，会忽略注释的内容。</p><h2 id="C-基本-语法"><a href="#C-基本-语法" class="headerlink" title="C++基本 语法"></a>C++基本 语法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">///*这个include相当于import的意思</span></span><br><span class="line"><span class="comment">//相当于是导入了iostream这个包</span></span><br><span class="line"><span class="comment">//然后这个iostream是c++中进行输入输出操作的标准库</span></span><br><span class="line"><span class="comment">//*/</span></span><br><span class="line"><span class="comment">//using namespace std;</span></span><br><span class="line"><span class="comment">///*这条指令是告诉编译器 程序要使用std中的所有内容</span></span><br><span class="line"><span class="comment">//* 相当于是java lang类 如果不导入</span></span><br><span class="line"><span class="comment">//* 每次输入输出都要加上std 代码会变得很冗长</span></span><br><span class="line"><span class="comment">//* 所以这里导入std</span></span><br><span class="line"><span class="comment">//*/</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//int main() &#123;</span></span><br><span class="line"><span class="comment">///*这里就是普通的定义了一个main方法</span></span><br><span class="line"><span class="comment">//和Java类似 但是没有public static那一套</span></span><br><span class="line"><span class="comment">//然后这里下面的return 0 表示了程序正常结束</span></span><br><span class="line"><span class="comment">//在C++中程序正常结束就是返回0*/</span></span><br><span class="line"><span class="comment">//    cout &lt;&lt; &quot;爷回来辣&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    system(&quot;pause&quot;);</span></span><br><span class="line"><span class="comment">//    /*system() 是 C 标准库中的一个函数</span></span><br><span class="line"><span class="comment">//    它的参数是一个字符串，表示要执行的命令。</span></span><br><span class="line"><span class="comment">//    用来暂停程序的执行并显示提示信息</span></span><br><span class="line"><span class="comment">//    这个命令的作用是让用户有时间查看程序输出的内容</span></span><br><span class="line"><span class="comment">//    而不会让控制台窗口在程序结束后立刻关闭*/</span></span><br><span class="line"><span class="comment">//    return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="变量和常量"><a href="#变量和常量" class="headerlink" title="变量和常量"></a>变量和常量</h2><h3 id="变量基本介绍"><a href="#变量基本介绍" class="headerlink" title="变量基本介绍"></a>变量基本介绍</h3><p>变量存在的意义： 管理内存空间<br>变量创建语法：数据类型 变量名 =  变量初始值；</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">10</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*cout的意思就是把对象输出到控制台</span></span><br><span class="line"><span class="comment">&lt;&lt;就是把右侧的内容插入到左边*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"> <span class="comment">//这里system(&quot;pause&quot;)的作用是运行完了之后暂停窗口</span></span><br><span class="line"> <span class="comment">//方便你查看 结果 就不会直接结束程序</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>c++中和java中不一样 还存在常量，常量就是定义之后不可以发生改变的数据<br>可以看成java中用final修饰的变量<br>定义的两种方法<br>1、用#define定义在文件的上方 作为宏常量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define 常量名 常量值</span><br></pre></td></tr></table></figure><p>2、用const修饰一个变量<br>const 数据类型 数据名 = 数据值<br>两种方法定义的常量都不可以发生改变 如果尝试在代码中改变就会报错</p><p>关于const：我认为的const本质：限定修改</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//#define day 7;</span></span><br><span class="line"><span class="comment">/*上方代码报错</span></span><br><span class="line"><span class="comment">为什么 因为用#defin 定义常量 不需要使用分号结尾 </span></span><br><span class="line"><span class="comment">按下面的方式定义就正确了*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> day 7</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//day = 14;</span></span><br><span class="line"><span class="comment">/*上面的代码会报错 因为常量不能被改变*/</span></span><br><span class="line"><span class="comment">/*const 修饰的变量*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> month = <span class="number">12</span>;</span><br><span class="line"><span class="comment">//month = 24;</span></span><br><span class="line"><span class="comment">/*同样报错 用const修饰的变量也会变成常量*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a year have &quot;</span> &lt;&lt; month &lt;&lt; <span class="string">&quot; months&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a week have &quot;</span> &lt;&lt; day &lt;&lt; <span class="string">&quot; days&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="comment">/*可以理解为导入string 的包</span></span><br><span class="line"><span class="comment">* 再用C++风格的字符串的时候 要包含这个头文件</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*C++的数据类型*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 整型</span></span><br><span class="line"><span class="comment">C++的整型分成 </span></span><br><span class="line"><span class="comment">短整型 short 最小的表述范围都特别大 +-3w多</span></span><br><span class="line"><span class="comment">整型 int </span></span><br><span class="line"><span class="comment">长整型 long </span></span><br><span class="line"><span class="comment">长长整型 longlong*/</span></span><br><span class="line"><span class="type">short</span> num1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> num2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> num3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> num4 = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num3 = &quot;</span> &lt;&lt; num3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num4 = &quot;</span> &lt;&lt; num4 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*size of 关键字</span></span><br><span class="line"><span class="comment">通过这个关键字可以求出数据类型的所占的内存大小*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num4 的大小: &quot;</span> &lt;&lt;<span class="built_in">sizeof</span>(num4) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;short 的大小: &quot;</span> &lt;&lt;<span class="built_in">sizeof</span>(<span class="type">short</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*实型（浮点型</span></span><br><span class="line"><span class="comment">作用：表示小数</span></span><br><span class="line"><span class="comment">C++中有两种浮点型</span></span><br><span class="line"><span class="comment">单精度 float</span></span><br><span class="line"><span class="comment">双进度 double</span></span><br><span class="line"><span class="comment">双精度的有效范围更大*/</span></span><br><span class="line"><span class="comment">/*float的定义*/</span></span><br><span class="line"><span class="type">float</span> f1 = <span class="number">3.14f</span>;</span><br><span class="line"><span class="comment">/*为什么这里用3.14f而不用3.14</span></span><br><span class="line"><span class="comment">因为程序运行的逻辑是先创建了3.14 再通过指针</span></span><br><span class="line"><span class="comment">把f1指向这个3.14的位置 然后在程序创建3.14的时候会默认创建为一个double</span></span><br><span class="line"><span class="comment">的数据 所以要在后面先加上f 让他在创建的时候就创建为float的</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">上面的理解是全部错误的</span></span><br><span class="line"><span class="comment">cpp中将没有后缀的浮点数全部默认解释为double 因为double有更高的精度和更大的表数范围*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f1 = &quot;</span> &lt;&lt; f1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f1 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f1) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;d1 = &quot;</span> &lt;&lt; f1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;d1 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(d1) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*科学计数法*/</span></span><br><span class="line"><span class="type">float</span> f2 = <span class="number">3e2</span>;</span><br><span class="line"><span class="comment">/*3*10^2  </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f2 = &quot;</span> &lt;&lt; f2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f2 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f2) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f3 = <span class="number">3e-2</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f3 = &quot;</span> &lt;&lt; f3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f3 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f3) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*字符型*/</span></span><br><span class="line"><span class="comment">/*字符型就是表示单个字符的数据类型</span></span><br><span class="line"><span class="comment">下面依次 写  </span></span><br><span class="line"><span class="comment">字符型变量的创建方式</span></span><br><span class="line"><span class="comment">所占的内存大小</span></span><br><span class="line"><span class="comment">常见错误</span></span><br><span class="line"><span class="comment">对应的ASCII编码</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">char</span> ch1 = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ch1 = &quot;</span> &lt;&lt; ch1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ch1 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(ch1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ch1 &quot;</span> &lt;&lt; ch1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*加入字符的时候用单引号应用</span></span><br><span class="line"><span class="comment">这点在java里面其实也是 一样 的 </span></span><br><span class="line"><span class="comment">java中的双引号是用来引入字符串string的 </span></span><br><span class="line"><span class="comment">string和char有本质的区别 所以确实不同</span></span><br><span class="line"><span class="comment">字符型只占用一个字节</span></span><br><span class="line"><span class="comment">字符型变量并不是把字符本身放到内存 中存储</span></span><br><span class="line"><span class="comment">而是讲ASCII编码放到存储单元中 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*转义字符 </span></span><br><span class="line"><span class="comment">作用 用于表示一些不能显示出来的ASCII字符</span></span><br><span class="line"><span class="comment">现阶段我们常用的转义字符 有 \n \\ \t</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;转义字符\\ n &quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;hello\n world  &quot;</span>  &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;转义字符\\ t &quot;</span> &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;转义字符\\ \ &quot;</span> &lt;&lt; <span class="string">&quot;\\&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*在c中没有endl  结束语句也是通过\n*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;hello world \n&quot;</span>;</span><br><span class="line"><span class="comment">/*上面的代码可以执行*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*水平制表符\t</span></span><br><span class="line"><span class="comment">水平制表符具体输出 几个空格并不确定</span></span><br><span class="line"><span class="comment">取决于一种叫制表位的概念</span></span><br><span class="line"><span class="comment">一般来说是八个字符占一个制表位置 </span></span><br><span class="line"><span class="comment">所以输出 的时候 就是输出到最开始的八个字符 之后</span></span><br><span class="line"><span class="comment">如果已经输出了 3个字符 那么他就会输出到五个字符 的后面*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaaaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*字符串类型</span></span><br><span class="line"><span class="comment">字符串类型分为两种 C类型和C++类型</span></span><br><span class="line"><span class="comment">C类型的本质我认为就是一个字符的数组</span></span><br><span class="line"><span class="comment">C风格 char 变量名[] = &quot;字符串值&quot;</span></span><br><span class="line"><span class="comment">C++ 风格字符串 string 变量名 = &quot;字符串值&quot;*/</span></span><br><span class="line"><span class="type">char</span> str1[] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;str1:&quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*注意事项1、一定要加[]表示数组</span></span><br><span class="line"><span class="comment">2、一定要用 双引号 因为是多个字符 */</span></span><br><span class="line"></span><br><span class="line">string str2 = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;str2:&quot;</span> &lt;&lt; str2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*注意事项1、 C++中的string 是小写S开头</span></span><br><span class="line"><span class="comment">java中是大写s开头</span></span><br><span class="line"><span class="comment">2、一定要导入include string*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*布尔数据类型</span></span><br><span class="line"><span class="comment">只有真假 true false</span></span><br><span class="line"><span class="comment">本质就是0 和1  所以只占1字节 </span></span><br><span class="line"><span class="comment">创建布尔类型数据</span></span><br><span class="line"><span class="comment">查看所占用的空间</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> bl1 = <span class="literal">true</span>;;</span><br><span class="line"><span class="type">bool</span> bl2 = <span class="literal">false</span>;;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;bl1 = &quot;</span> &lt;&lt; bl1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;所占字节： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(bl1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;bl1 = &quot;</span> &lt;&lt; bl2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;所占字节 &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(bl1) &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*本质上1代表真 0带代表假*/</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*关于c++的命名规则</span></span><br><span class="line"><span class="comment">1、不能是关键字</span></span><br><span class="line"><span class="comment">2、字母、数字、下划线组成</span></span><br><span class="line"><span class="comment">3、第一个字符不能是数字</span></span><br><span class="line"><span class="comment">4、区分大小写</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">和java的主要区别</span></span><br><span class="line"><span class="comment">1、java中可以使用美元符号，且可以用$作为开头*/</span></span><br></pre></td></tr></table></figure><h3 id="数据的输入"><a href="#数据的输入" class="headerlink" title="数据的输入"></a>数据的输入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*数据的输入</span></span><br><span class="line"><span class="comment">使用关键字 cin</span></span><br><span class="line"><span class="comment">使用语法 cin &gt;&gt; 变量;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*依次输入整型浮点型字符型字符串布尔型等*/</span></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给整型变量a1赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a的值：&quot;</span> &lt;&lt; a1&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> a2 = <span class="number">0.0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给浮点型a2赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a2的值：&quot;</span> &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> a3 = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给字符型a3赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a3的值：&quot;</span> &lt;&lt; a3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">string a4 = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给字符串型a4赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a4;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a4的值：&quot;</span> &lt;&lt; a4 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> a5 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给布尔型a5赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a5;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a5的值：&quot;</span> &lt;&lt; a5 &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="comment">/*布尔类型的值赋值 只要是非0的值 都代表真*/</span></span><br><span class="line"></span><br><span class="line">+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基本运算符"><a href="#基本运算符" class="headerlink" title="基本运算符"></a>基本运算符</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*基本运算符</span></span><br><span class="line"><span class="comment">+- * /%</span></span><br><span class="line"><span class="comment">++ --  */</span></span><br><span class="line"><span class="type">int</span> n1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> n2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;给 整型数据 n1赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; n1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;给 整型数据 n2赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; n2;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n3 = n1;</span><br><span class="line"><span class="type">int</span> n4 = n2;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;加:&quot;</span> &lt;&lt; n1 + n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;减:&quot;</span> &lt;&lt; n1 - n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;乘:&quot;</span> &lt;&lt; n1 * n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;除:&quot;</span> &lt;&lt; n1 / n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;取余:&quot;</span> &lt;&lt; n1 % n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">n1 = ++n2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = ++n2 &quot;</span> &lt;&lt;<span class="string">&quot;n1:&quot;</span>&lt;&lt;n1&lt;&lt;<span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*等号右边的代码从左往右运行 首先先自增++ n2 = n2+1</span></span><br><span class="line"><span class="comment">n2本来是15 现在是16 然后赋值给n1 所以n1 = n2  = 16*/</span></span><br><span class="line"></span><br><span class="line">n1 = n3;</span><br><span class="line">n2 = n4;</span><br><span class="line">n1 = n2++;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 =n2++ &quot;</span> &lt;&lt; <span class="string">&quot;n1:&quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*这里就是先赋值再加减 先是n1 = n2 = 15 然后n2 + 1 = 16</span></span><br><span class="line"><span class="comment">下面的减法代码也是同理*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n1 = n3;</span><br><span class="line">n2 = n4;</span><br><span class="line">n1 = --n2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = --n2 &quot;</span> &lt;&lt; <span class="string">&quot;n1:&quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">n1 = n3;</span><br><span class="line">n2 = n4;</span><br><span class="line">n1 = n2--;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = n2-- &quot;</span> &lt;&lt; <span class="string">&quot;n1:&quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">float</span> m2 = <span class="number">3.14</span>;</span><br><span class="line"><span class="type">float</span> m3 = <span class="number">3.1415926535f</span>;</span><br><span class="line"><span class="type">double</span> m4 = <span class="number">3.1415926535</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; m1 / m2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; m3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; m4 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*关于除法</span></span><br><span class="line"><span class="comment">1、除数不能为0</span></span><br><span class="line"><span class="comment">2、不能对0取余*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*赋值运算符*/</span></span><br><span class="line"><span class="type">int</span> z1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> z2 = z1 += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;z1+=1:&quot;</span> &lt;&lt; z2 &lt;&lt; endl;</span><br><span class="line">z2 = z1 -= <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;z1-=1:&quot;</span> &lt;&lt; z2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*这里把加号换成- * / % 都是同理</span></span><br><span class="line"><span class="comment">所以就不逐个演示了</span></span><br><span class="line"><span class="comment">下面讲一讲与或非</span></span><br><span class="line"><span class="comment">符号分别是！非</span></span><br><span class="line"><span class="comment">&amp;&amp;  与</span></span><br><span class="line"><span class="comment">||  或 */</span></span><br><span class="line"></span><br><span class="line">n1 = <span class="number">0</span>;</span><br><span class="line">n2 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = &quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;/n&quot;</span> &lt;&lt; <span class="string">&quot;n2 = &quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> z3 = (n1 &amp;&amp; n2);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 &amp;&amp; n2:&quot;</span> &lt;&lt; z3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">z3 = (n1 || n2);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 || n2:&quot;</span> &lt;&lt; z3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环结构和分支结构"><a href="#循环结构和分支结构" class="headerlink" title="循环结构和分支结构"></a>循环结构和分支结构</h2><h3 id="if分支"><a href="#if分支" class="headerlink" title="if分支"></a>if分支</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*程序执行的三种结构</span></span><br><span class="line"><span class="comment">顺序结构 就是直接按照顺序执行代码</span></span><br><span class="line"><span class="comment">选择结构 就是执行满足条件 的代码</span></span><br><span class="line"><span class="comment">循环结构 满足条件时重复执行代码 直到不满足条件为止*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*if 语句 </span></span><br><span class="line"><span class="comment">输入分数  大于100 则打印考上了*/</span></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*在Cpp中变量不会默认初始化，所以你定义完了一个数字之后必须要赋值一个值</span></span><br><span class="line"><span class="comment">这点和java不同*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;please enter a score&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you score is:&quot;</span> &lt;&lt;score&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">100</span>)</span><br><span class="line">&#123; </span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you can go to the college!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">60</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Maybe next time&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;stupid&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="if循环练习"><a href="#if循环练习" class="headerlink" title="if循环练习"></a>if循环练习</h3><p>三只小猪称体重，找出最大的那一只</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*一个小程序 三只小猪比体重*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> p1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> p2 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> p3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第一只小猪的体重 \n &quot;</span>;</span><br><span class="line">cin &gt;&gt; p1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第一只小猪的体重是：&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第二只小猪的体重 \n &quot;</span>;</span><br><span class="line">cin &gt;&gt; p2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第二只小猪的体重是：&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第三只小猪的体重 \n &quot;</span>;</span><br><span class="line">cin &gt;&gt; p3;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第三 只小猪的体重是：&quot;</span> &lt;&lt; p3&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (p1 &gt; p2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p1 &gt; p3) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第一只小猪,重量为：&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第三只小猪,重量为：&quot;</span> &lt;&lt; p3 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p2 &gt; p3)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第二只小猪,重量为：&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第三只小猪,重量为：&quot;</span> &lt;&lt; p3 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*三目运算符</span></span><br><span class="line"><span class="comment">表达式一 ？ 表达式二 ： 表达式3</span></span><br><span class="line"><span class="comment">对表达式1判断 真执行2假执行3*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*三目运算符</span></span><br><span class="line"><span class="comment">创建abc变量</span></span><br><span class="line"><span class="comment">ab比较 大的赋值c*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">c= (a &gt; b ? a : b);</span><br><span class="line">cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*在cpp中 三目运算符返回的是变量，可以继续赋值*/</span></span><br><span class="line">(a &gt; b ? a : b) = <span class="number">100</span>;</span><br><span class="line"><span class="comment">/*返回 的值是b </span></span><br><span class="line"><span class="comment">这里是把返回的b重新赋值了*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt;<span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;b:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="switch和do-while基本语法"><a href="#switch和do-while基本语法" class="headerlink" title="switch和do while基本语法"></a>switch和do while基本语法</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="comment">/*time系统时间头文件包含*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*switch 语句</span></span><br><span class="line"><span class="comment">switch基本语法</span></span><br><span class="line"><span class="comment">switch（ 表达式）&#123;</span></span><br><span class="line"><span class="comment">case 结果1： 执行语句 ；break；</span></span><br><span class="line"><span class="comment">default：执行语句；break；</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">根据表达式产生的结果不同</span></span><br><span class="line"><span class="comment">执行 不同 的 语句，</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*给电影进行打分</span></span><br><span class="line"><span class="comment">10-9 经典</span></span><br><span class="line"><span class="comment">8-7 非常好</span></span><br><span class="line"><span class="comment">6-5 一般</span></span><br><span class="line"><span class="comment">5以下 烂片*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">short</span> <span class="type">int</span> a1 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;please enter  your score:&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//cin &gt;&gt; a1;</span></span><br><span class="line">a1 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//switch (a1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//case 10:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;经典&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 9 :</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;经典&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 8:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;非常好&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 7:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;非常好&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 6:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;一般&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 5:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;一般&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//default:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;不行&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (a1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;经典&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;非常好&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一般&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;不行&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*循环 结构</span></span><br><span class="line"><span class="comment">while循环</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (n1 &lt; <span class="number">10</span>) &#123;</span><br><span class="line">cout &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">n1++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line"><span class="comment">/*猜数字游戏*/</span></span><br><span class="line"><span class="type">int</span> a2 = (<span class="built_in">rand</span>() % <span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> b1 = (<span class="built_in">rand</span>() % <span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; b1 &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> b2 = (<span class="built_in">rand</span>() % <span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; b2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*这个函数可以随机生成 一个不小于后面数字的 数</span></span><br><span class="line"><span class="comment">这里 就是随机生成了一个 0-99之间 的 数*/</span></span><br><span class="line"><span class="comment">/*然后发现这个随机数不是真的随机数 每次生成的都是一样 </span></span><br><span class="line"><span class="comment">重复生成的数字也是固定的</span></span><br><span class="line"><span class="comment">然后看到网上说要添加随机数的种子，才能防止每次生成的都一样</span></span><br><span class="line"><span class="comment">可以根据系统时间生成随机数*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;enter  your guess:&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line"><span class="type">int</span> a4 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (a3 &gt; a2)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2 is smaller&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line">a4++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a3 &lt; a2) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2 is bigger&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line">a4++;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you god damn right&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you guess &quot;</span> &lt;&lt; a4 &lt;&lt; <span class="string">&quot; times&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*do while 循环语句</span></span><br><span class="line"><span class="comment">dowhile先 执行一次 循环语句</span></span><br><span class="line"><span class="comment">再判断 循环条件</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> n2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">cout &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line">n2++;</span><br><span class="line">&#125; <span class="keyword">while</span> (n2 &lt; <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="水仙花数练习"><a href="#水仙花数练习" class="headerlink" title="水仙花数练习"></a>水仙花数练习</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*水仙花数练习</span></span><br><span class="line"><span class="comment">解题思路 </span></span><br><span class="line"><span class="comment">1、输出所有三位数 （100-999）</span></span><br><span class="line"><span class="comment">2、找到水仙花数字</span></span><br><span class="line"><span class="comment">3、取模取各个位 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">判断 个位^3+十位^3+百位^3 = 本身</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印三位数*/</span></span><br><span class="line"><span class="type">int</span> num = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="comment">/*添加判断条件 如果是水仙花数才打印*/</span></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> a3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">a1 = num % <span class="number">10</span>;</span><br><span class="line">a2 = (num/<span class="number">10</span>)%<span class="number">10</span>;</span><br><span class="line">a3 = num/<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> b1 = a1 * a1 * a1;</span><br><span class="line"><span class="type">int</span> b2 = a2 * a2 * a2;</span><br><span class="line"><span class="type">int</span> b3 = a3 * a3 * a3;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> c1 = b1 + b2 + b3;</span><br><span class="line"><span class="keyword">if</span> ( c1 == num )</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (num &lt; <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*for 循环</span></span><br><span class="line"><span class="comment">满足循环条件时</span></span><br><span class="line"><span class="comment">执行循环语句</span></span><br><span class="line"><span class="comment">语法</span></span><br><span class="line"><span class="comment">for(起始表达式;条件表达式；末尾循环体)&#123;</span></span><br><span class="line"><span class="comment">循环语句 &#125;</span></span><br><span class="line"><span class="comment">起始表达式不参与循环，</span></span><br><span class="line"><span class="comment">条件表达式就是循环执行的条件</span></span><br><span class="line"><span class="comment">末尾循环体在循环每次结束之后运行</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*用for循环从数字0打印到9*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;<span class="comment">/*需要声明变量的类型</span></span><br><span class="line"><span class="comment"> java和c++中都需要声明*/</span></span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; a &lt; <span class="number">10</span>; a++)</span><br><span class="line">&#123;<span class="comment">/*声明也可以写外面</span></span><br><span class="line"><span class="comment"> 但是声明如果写在外面，不管写不写起始表达式都要加一个分号*/</span></span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for循环练习案例"><a href="#for循环练习案例" class="headerlink" title="for循环练习案例"></a>for循环练习案例</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*练习案例 敲桌子 </span></span><br><span class="line"><span class="comment">从数字1数到100 如果数字个位</span></span><br><span class="line"><span class="comment">十位 含有7或者是7的倍数 我们打印敲桌子</span></span><br><span class="line"><span class="comment">其他数字直接打印*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line"><span class="type">int</span> a = (i % <span class="number">10</span>);</span><br><span class="line"><span class="type">int</span> b = i / <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">7</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;flap desk&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(b == <span class="number">7</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;flap desk&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i % <span class="number">7</span> ==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;flap desk&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="嵌套循环练习"><a href="#嵌套循环练习" class="headerlink" title="嵌套循环练习"></a>嵌套循环练习</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*嵌套循环*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*练习1 打印10x10图*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j&lt;<span class="number">11</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *&quot;</span> ;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>打印乘法口诀表</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印乘法口诀表*/</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; <span class="string">&quot;x&quot;</span> &lt;&lt; j &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; i * j &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="跳转语句"><a href="#跳转语句" class="headerlink" title="跳转语句"></a>跳转语句</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*跳转语句</span></span><br><span class="line"><span class="comment">1、出现在switch语句中 跳出循环</span></span><br><span class="line"><span class="comment">2、出现在循环中，作用是跳出当前的循环</span></span><br><span class="line"><span class="comment">3、出现在嵌套循环中，跳出内层的循环*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;please choice level&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1、easy&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2、normal&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;3、difficult&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (select)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you choice easy mode&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you choice normal mode&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you choice difficult mode&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*出现在for循环中*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*嵌套循环*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">11</span>;j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (j==<span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><p>一维数组定义的三种方法</p><p>数据类型 数据名 [数组长度];<br>数据类型 数据名 [数组长度] = {值1，值2};<br>数据类型 数据名 [] = {值1，值2};</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*数组</span></span><br><span class="line"><span class="comment">数组就是一个集合 里面装了相同类型的数据元素</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">特点1 数组中的每个数据元素都是相同的数据类型</span></span><br><span class="line"><span class="comment">特点2 数组是由连续的内存位置组成的*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*一维数组的三种定义方式</span></span><br><span class="line"><span class="comment">2、数据类型 数据名 [数组长度];</span></span><br><span class="line"><span class="comment">首先根据特点1 数组里面所有元素都需要是相同的数据类型</span></span><br><span class="line"><span class="comment">所以声明数据类型特别重要 </span></span><br><span class="line"><span class="comment">数据名就是数组的总体名称</span></span><br><span class="line"><span class="comment">最后因为数组是一个定长 同时内存位置连续</span></span><br><span class="line"><span class="comment">所以需要声明数组长度 提前规划数组内存位置</span></span><br><span class="line"><span class="comment">2、数据类型 数据名 [数组长度] = &#123;值1，值2&#125;;</span></span><br><span class="line"><span class="comment">3、数据类型 数据名 [] = &#123;值1，值2&#125;;</span></span><br><span class="line"><span class="comment">第三种方法是你直接 把值写入进去 然后不人为定义的数组长度</span></span><br><span class="line"><span class="comment">那么他会根据你写入的值默认定义数组的长度</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">数组自动生成下标 我们可以通过下标来访问数组中的元素</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*第一种方法 */</span></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">5</span>];</span><br><span class="line"><span class="comment">/*给数组中的元素进行赋值</span></span><br><span class="line"><span class="comment">数组下标从0开始*/</span></span><br><span class="line">arr1[<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line">arr1[<span class="number">1</span>] = <span class="number">20</span>;</span><br><span class="line">arr1[<span class="number">2</span>] = <span class="number">30</span>;</span><br><span class="line">arr1[<span class="number">3</span>] = <span class="number">40</span>;</span><br><span class="line">arr1[<span class="number">4</span>] = <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*访问数据元素*/</span></span><br><span class="line">cout &lt;&lt; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*第二种*/</span></span><br><span class="line"><span class="type">int</span> arr2[<span class="number">5</span>] = &#123; <span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span> &#125;;</span><br><span class="line"><span class="comment">//cout &lt;&lt; arr2[0] &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用循环的方式输出*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr2[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr3[<span class="number">5</span>] = &#123; <span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>&#125;;</span><br><span class="line">cout &lt;&lt; arr3[<span class="number">4</span>] &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*如果在初始化的时候没有填写完全部的数据</span></span><br><span class="line"><span class="comment">，剩下的数据会用0来填补*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义数组的时候必须有数组初始长度*/</span></span><br><span class="line"><span class="type">int</span> arr4[] = &#123; <span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr4[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一维数名的用途"><a href="#一维数名的用途" class="headerlink" title="一维数名的用途"></a>一维数名的用途</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*一维数组数组名的用途</span></span><br><span class="line"><span class="comment">1、统计整个数组在内存中的长途*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">5</span>] = &#123; <span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span> &#125;;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(arr1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(arr1)/ <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*输出数组名称查看首地址*/</span></span><br><span class="line">cout &lt;&lt; arr1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; &amp;arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>)arr1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>) &amp; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>) &amp; arr1[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">arr1[<span class="number">0</span>] = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一维数组练习"><a href="#一维数组练习" class="headerlink" title="一维数组练习"></a>一维数组练习</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*五只小猪称重</span></span><br><span class="line"><span class="comment">一个数组中记录了五只小猪的体重</span></span><br><span class="line"><span class="comment">从中选出最重的*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> pig[<span class="number">5</span>] = &#123; <span class="number">100</span>,<span class="number">300</span>,<span class="number">500</span>,<span class="number">200</span>,<span class="number">400</span> &#125;;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (pig[i] &gt; j)</span><br><span class="line">&#123;</span><br><span class="line">j = pig[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; j &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*冒泡排序*/</span></span><br><span class="line"><span class="comment">/*最常用的排序算法</span></span><br><span class="line"><span class="comment">对数组内的元素进行排序</span></span><br><span class="line"><span class="comment">比较相邻的元素，如果第一个比第二个大，就交换</span></span><br><span class="line"><span class="comment">对比每一对相邻元素做同样的工作，执行完毕后，找到第一个最大值</span></span><br><span class="line"><span class="comment">重复以上的步骤，每次比较次数-1直到不需要比较</span></span><br><span class="line"><span class="comment">总的比较次数 = 数组长度 - 1</span></span><br><span class="line"><span class="comment">数组长度 用size of可以计算</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//void swapValues(int&amp; a, int&amp; b) &#123;</span></span><br><span class="line"><span class="comment">//int temp = a;  // 使用临时变量来交换</span></span><br><span class="line"><span class="comment">//a = b;</span></span><br><span class="line"><span class="comment">//b = temp;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[] = &#123; <span class="number">4</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*计算数组长度*/</span></span><br><span class="line"><span class="type">int</span> length = <span class="built_in">sizeof</span>(arr1) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组长度&quot;</span> &lt;&lt; length &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> times = length - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tempo = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*排序总轮数 = 元素个数 -1</span></span><br><span class="line"><span class="comment">每轮对比的次数 = 元素个数 - 排序轮数*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//总排序轮数 times</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; times; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; times  - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arr1[j] &gt; arr1[j<span class="number">+1</span>])</span><br><span class="line">&#123;</span><br><span class="line">tempo = arr1[j];</span><br><span class="line">arr1[j] = arr1[j + <span class="number">1</span>];</span><br><span class="line">arr1[j + <span class="number">1</span>] = tempo;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;冒泡排序 排序后&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr1[i];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*调用函数实现*/</span></span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; times; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//for (int j = 0; j &lt; times - i; j++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (arr5[j]&gt;arr5[j+1])</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//swapValues(arr5[j], arr5[j+1]);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><p>二维数组的四种定义方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据类型 数据名[行数][列数];</span><br><span class="line">数据类型 数据名[行数][列数]=&#123;&#123;数据1,数据2&#125;,&#123;数据3,数据4&#125;&#125;;</span><br><span class="line">数据类型 数据名[行数][列数]=&#123;数据1，数据2，数据3，数据4&#125;;</span><br><span class="line">数据类型 数据名[][列数]=&#123;数据1,数据2,数据3,数据4&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*二维数组</span></span><br><span class="line"><span class="comment">二维数组就是在一维数组基础上个多加了一个维度</span></span><br><span class="line"><span class="comment">二维数组定义有四种方式</span></span><br><span class="line"><span class="comment">数据类型 数据名[行数][列数];</span></span><br><span class="line"><span class="comment">数据类型 数据名[行数][列数]=&#123;&#123;数据1,数据2&#125;,&#123;数据3,数据4&#125;&#125;;</span></span><br><span class="line"><span class="comment">数据类型 数据名[行数][列数]=&#123;数据1，数据2，数据3，数据4&#125;;</span></span><br><span class="line"><span class="comment">数据类型 数据名[][列数]=&#123;数据1,数据2,数据3,数据4&#125;*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*第一种二维数组的定义方式*/</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">4</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">5</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr2[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr2[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr3[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr3[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;<span class="comment">/*默认情况下他先按照行输入，满了之后换下一行*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr4[][<span class="number">3</span>] =</span><br><span class="line">&#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr3[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二维数组名的用途"><a href="#二维数组名的用途" class="headerlink" title="二维数组名的用途"></a>二维数组名的用途</h3><p>查看二维数组所占内存空间<br>获取二维数组首地址</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组所占内存空间：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一行所占内存 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一个元素所占内存 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组有多少行 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1)/ <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组有多少列 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*可以查看二维数组首地址*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组的首地址&quot;</span> &lt;&lt; (<span class="type">int</span>)arr1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一行的首地址&quot;</span> &lt;&lt; (<span class="type">int</span>)arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第二行的首地址&quot;</span> &lt;&lt; (<span class="type">int</span>)arr1[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二维数组应用案例"><a href="#二维数组应用案例" class="headerlink" title="二维数组应用案例"></a>二维数组应用案例</h3><p>在一次考试中成绩分别如下表，请分别输出三名同学的总成绩</p><div class="table-container"><table><thead><tr><th></th><th>语文</th><th>数学</th><th>英语</th></tr></thead><tbody><tr><td>张三</td><td>100</td><td>100</td><td>100</td></tr><tr><td>李四</td><td>90</td><td>50</td><td>100</td></tr><tr><td>王五</td><td>60</td><td>70</td><td>80</td></tr></tbody></table></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*二维数组应用案例</span></span><br><span class="line"><span class="comment">案例描述：有三名同学（张三李四王五）</span></span><br><span class="line"><span class="comment">在一次考试中成绩分别如下表，请分别输出三名同学的总成绩</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*自己写的*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;========自己写的==========&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score[<span class="number">3</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">90</span>,<span class="number">50</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">string name = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">sum += score[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> (i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">name = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">name = <span class="string">&quot;王五&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; name &lt;&lt; <span class="string">&quot;的总成绩：&quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;========视频写的==========&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> score2[<span class="number">3</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">90</span>,<span class="number">50</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line">string name1[<span class="number">3</span>] = &#123; <span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span> &#125;; </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;<span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sum2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">sum2 += score2[i][j];</span><br><span class="line">cout &lt;&lt; score[i][j]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cout &lt;&lt;&quot;\n&quot; &lt;&lt; &quot;第&quot; &lt;&lt; i + 1 &lt;&lt; &quot;个人的总分为:&quot; &lt;&lt; sum2 &lt;&lt; endl;</span></span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\n&quot;</span> &lt;&lt; name1[i] &lt;&lt; <span class="string">&quot;的总分为:&quot;</span> &lt;&lt; sum2 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>作用：将一段经常使用的代码封装起来，减少重复代码<br>一个较大的程序，一半分为若干个程序块，每个模块时下按特定的功能</p><h3 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h3><p>函数的定义一般主要有五个步骤<br>1、返回值类型<br>2、函数名<br>3、参数列表<br>4、函数体语句<br>5、return表达式<br><strong>语法</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">返回值类型 函数名 （参数列表）</span><br><span class="line">&#123;</span><br><span class="line">函数体</span><br><span class="line">return语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义一个加法函数，传入两个参数，相加</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*1、返回值类型</span></span><br><span class="line"><span class="comment">2、函数名</span></span><br><span class="line"><span class="comment">3、参数列表</span></span><br><span class="line"><span class="comment">4、函数体语句</span></span><br><span class="line"><span class="comment">5、return表达式*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*实现一个加法函数，功能是，传入两个整型数据</span></span><br><span class="line"><span class="comment">计算数据相加的结果，并且返回*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">( <span class="type">int</span> num1,<span class="type">int</span> num2 )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a3 = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> a4 = <span class="built_in">add</span>(a2, a3);</span><br><span class="line"><span class="type">int</span> a5 = <span class="built_in">add</span>(a1, a2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">2</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1:&quot;</span>&lt;&lt;a1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a4:&quot;</span>&lt;&lt;a4 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a5:&quot;</span>&lt;&lt;a5 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数调用，形参和实参"><a href="#函数调用，形参和实参" class="headerlink" title="函数调用，形参和实参"></a>函数调用，形参和实参</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数调用*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*函数调用语法: 函数名(参数)*/</span></span><br><span class="line"><span class="comment">/*a和b称为 实际参数 实际上是有值的 </span></span><br><span class="line"><span class="comment">实参 传入的参数</span></span><br><span class="line"><span class="comment">再看函数在定义的时候 num1 和 num2</span></span><br><span class="line"><span class="comment">并没有实际的值 所以是形式参数 也就是形参*/</span></span><br><span class="line"><span class="type">int</span> c = <span class="built_in">add</span>(a, b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h3><p>所谓值传递，就是函数调用时实参将数值传入给形参<br>值传递时，如果<strong>形参发生改变，并不会影响实参</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义函数 实现两个数字进行交换*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> n1, <span class="type">int</span> n2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;before&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1=&quot;</span>&lt;&lt; n1&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n2=&quot;</span>&lt;&lt; n2&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n3 = n1;</span><br><span class="line">n1 = n2;</span><br><span class="line">n2 = n3;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;after&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1=&quot;</span> &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n2=&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//return; 返回值不需要的时候 可以不写return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap</span>(a1, a2);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1=&quot;</span> &lt;&lt; a1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2=&quot;</span> &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*输出了之后发现a1 a2的值没变</span></span><br><span class="line"><span class="comment">说明交换只在函数内有效*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*用专业的语句来说 就是我们做值传递的时候</span></span><br><span class="line"><span class="comment">函数的形参发生改变，并不会影响实参数</span></span><br><span class="line"><span class="comment">现在根据我的理解，值传递就是赋值</span></span><br><span class="line"><span class="comment">就是调用函数的时候把实际的两个变量 传递进函数的两个变量</span></span><br><span class="line"><span class="comment">也就是传递进函数的两个实参的值，传递给函数内的形参</span></span><br><span class="line"><span class="comment">到上面为止的所有方法都是值传递</span></span><br><span class="line"><span class="comment">值传递的时候形参发生的任何改变都不会影响实参*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>( <span class="string">&quot;pause&quot;</span> );</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：值传递时，形参改变（修饰）不了实参</p><h3 id="函数的常见样式"><a href="#函数的常见样式" class="headerlink" title="函数的常见样式"></a>函数的常见样式</h3><p>常见的函数样式有四种<br>1、无参无返<br>2、有参无返<br>3、无参有返<br>4、有参有返</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*四种常见的函数*/</span></span><br><span class="line"><span class="comment">/*无参无返*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test01&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*有参无返*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;int a is :&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*无参有返*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test03&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test04</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test04&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*无参无返的函数调用*/</span></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="comment">/*有参无返的函数调用*/</span></span><br><span class="line"><span class="built_in">test02</span>(<span class="number">2</span>);</span><br><span class="line"><span class="comment">/*无参有返的函数调用*/</span></span><br><span class="line"><span class="type">int</span> a1 = <span class="built_in">test03</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1=&quot;</span> &lt;&lt; a1 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*有参有返的函数调用*/</span></span><br><span class="line"><span class="type">int</span> a2 = <span class="built_in">test04</span>(<span class="number">10000</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2=&quot;</span> &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数的声明"><a href="#函数的声明" class="headerlink" title="函数的声明"></a>函数的声明</h3><p><strong>作用</strong>：告诉编译器函数名称一集如何调用函数。函数的实际主体可以单独定义。<br>函数的什么可以多次，但是函数的定义只能有一次</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数的声明*/</span></span><br><span class="line"><span class="comment">/*比较函数，实现两个整形的数字进行比较</span></span><br><span class="line"><span class="comment">返回较大的值*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*提前告诉编译器函数存在 可以利用函数的声明*/</span></span><br><span class="line"><span class="comment">/*函数的声明*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="comment">/*声明可以写多次，但是定义只能有一次*/</span></span><br><span class="line"><span class="comment">/*个人看法 就是把函数体中的部分去掉*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">max</span>(a1, a2) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义函数*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数的分文件编写"><a href="#函数的分文件编写" class="headerlink" title="函数的分文件编写"></a>函数的分文件编写</h3><p><strong>作用</strong>：让代码结构更加清晰<br>函数分文件编写一般有4个步骤<br>1、创建后缀名为.h的头文件<br>2、创建后缀名为.cpp的源文件<br>3、再头文件中写函数的声明<br>4、在源文件中写函数的定义</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">swap.h</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数的声明*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line">swap.cpp</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = a;</span><br><span class="line">a = b;</span><br><span class="line">b = tempo;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">test<span class="number">035.</span>cpp</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*函数的分文件编写*/</span></span><br><span class="line"><span class="comment">/*实现两个数字*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap</span>(a1, a2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><h3 id="指针的基本概念"><a href="#指针的基本概念" class="headerlink" title="指针的基本概念"></a>指针的基本概念</h3><p>作用：通过指针间接访问内存</p><p>内存编号是从0开始记录的，一般用十六进制表示<br>可以利用指针变量保存地址</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241220203516452.png" alt="image-20241220203516452"></p><h3 id="指针变量的定义和使用"><a href="#指针变量的定义和使用" class="headerlink" title="指针变量的定义和使用"></a>指针变量的定义和使用</h3><p>指针变量定义语法：数据类型 *变量名;</p><p>为什么要写数据类型：定义指针时需要指定数据类型，是为了保证指针的正确行为，包括内存访问、数据解释以及指针算术操作。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*定义指针*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*指针定义的语法： 数据类型 * 指针变量名;*/</span></span><br><span class="line"><span class="type">int</span> * p;</span><br><span class="line"><span class="comment">/*p代表point point 代表的就是指针的意思</span></span><br><span class="line"><span class="comment">指向性 指针</span></span><br><span class="line"><span class="comment">不同的数据类型在内存中占用不同大小</span></span><br><span class="line"><span class="comment">不同指针*/</span></span><br><span class="line"><span class="comment">/*&amp;a 获得a的地址</span></span><br><span class="line"><span class="comment">后面引用传递的时候也会记载*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*让指针记录变量a的地址*/</span></span><br><span class="line">p = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a的地址&quot;</span> &lt;&lt; &amp;a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;指针p为&quot;</span> &lt;&lt; p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用指针*/</span></span><br><span class="line"><span class="comment">/*可以通过解引用的方式来找到指针指向的内存*/</span></span><br><span class="line"><span class="comment">/*指针前加一个*就是解引用，找到指针指向的内存中的数据*/</span></span><br><span class="line">*p = <span class="number">1000</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a的现在为&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p现在为&quot;</span> &lt;&lt; p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p现在为&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*个人理解：首先我们定义了一个int变量a 他的地址可能是0x00</span></span><br><span class="line"><span class="comment">* 然后内存中 0x00 的位置的变量就是a 假设为0</span></span><br><span class="line"><span class="comment">* 然后我们定义了一个 int 指针 p</span></span><br><span class="line"><span class="comment">* 然后让这个指针指向 a 就是说 p = 0x00</span></span><br><span class="line"><span class="comment">* 然后解引用就是找到这个地址中的数据 比如说找到0x00</span></span><br><span class="line"><span class="comment">* 然后看一下这个位置4个字节长度的数据是0000 那就是0 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解引用<br>*p 表示 解引用操作，也就是通过指针 p 获取它所指向的地址，并操作该地址中的数据。<br>然后指针的定义中 </p><ul><li><strong>功能上</strong>，<code>int *p;</code>、<code>int * p;</code> 和 <code>int* p;</code> 是等价的，指向 <code>int</code> 类型的指针。</li><li><strong>空格的使用</strong> 完全是风格问题，取决于个人或团队的编码习惯。</li></ul><h3 id="指针所占内存空间"><a href="#指针所占内存空间" class="headerlink" title="指针所占内存空间"></a>指针所占内存空间</h3><p>指针也是种数据类型，那么这种数据类型占用多少内存空间？</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*指针所占内存空间*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//int* p;</span></span><br><span class="line"><span class="comment">//p = &amp;a;</span></span><br><span class="line"><span class="comment">/*更加简洁的写法*/</span></span><br><span class="line"><span class="type">int</span> * p = &amp;a;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of (int *)&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">int</span> * ) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of (double *)&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">double</span> * ) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of (p)&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(p) &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*在32位操作系统下 所有指针都占4个字节</span></span><br><span class="line"><span class="comment">在64位操作系统下，所有指针都占8个字节</span></span><br><span class="line"><span class="comment">我是64位系统，所以这里都是显示占8字节*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="空指针和野指针"><a href="#空指针和野指针" class="headerlink" title="空指针和野指针"></a>空指针和野指针</h3><p><strong>空指针</strong>：指针变量指向内存中编号为0的空间<br><strong>用途</strong>：初始化指针变量<br><strong>注意</strong>：空指针指向的内存是不可以访问的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span>  <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*空指针*/</span></span><br><span class="line"><span class="comment">/*空指针用于初始化*/</span></span><br><span class="line"><span class="type">int</span> *p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*空指针是不可以访问 的</span></span><br><span class="line"><span class="comment">下面 尝试解引用，然后 就失败了*/</span></span><br><span class="line"><span class="comment">//*p = 100;</span></span><br><span class="line"><span class="comment">//0-255之间的内存编号是系统占用的，因此不可以访问</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>野指针</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*野指针*/</span></span><br><span class="line"><span class="comment">/*在程序中尽量避免出现野指针</span></span><br><span class="line"><span class="comment">野指针就是直接赋值了一块地址</span></span><br><span class="line"><span class="comment">但是这块地址实际上是没有权限去操作的</span></span><br><span class="line"><span class="comment">因为正常可以操作的地址是通过正常定义申请得来的*/</span></span><br><span class="line"><span class="type">int</span>* p = (<span class="type">int</span>*)<span class="number">0x1100</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><u>空指针和野指针都不是我们申请的空间，因此不要访问。</u></p><h3 id="const修饰指针"><a href="#const修饰指针" class="headerlink" title="const修饰指针"></a>const修饰指针</h3><p>const 修饰指针有三种情况<br>const修饰指针 常量指针<br>const修饰常量 指针常量<br>const既修饰指针 又修饰常量</p><h4 id="常量指针"><a href="#常量指针" class="headerlink" title="常量指针"></a>常量指针</h4><p>特点：指针的指向可以修改，但是指针指向的值不可以改。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241220221523804.png" alt="image-20241220221523804"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*常量指针 </span></span><br><span class="line"><span class="comment">常量指针 首先是指针， 然后是const修饰的指针</span></span><br><span class="line"><span class="comment">const导致这个指针变成了一个常量*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">20</span>;</span><br><span class="line"><span class="comment">/*常量指针*/</span></span><br><span class="line"><span class="type">int</span> * p1 = &amp;a;</span><br><span class="line"><span class="comment">/*上面就是定义一个指针的正常语</span></span><br><span class="line"><span class="comment">然后如果要定义一个常量指针 首先他是一个指针</span></span><br><span class="line"><span class="comment">其次用常量修饰 所以应该用const修饰这个指针的定义*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* p2 = &amp;a;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p2 = &quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*指针的指向可以修改，</span></span><br><span class="line"><span class="comment">但是指针指向的值不可以改</span></span><br><span class="line"><span class="comment">首先如果我定义一个指针</span></span><br><span class="line"><span class="comment">比如在这里，我能*/</span></span><br><span class="line">p2 = &amp;b;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p2 = &quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*为什么这里用p1 = &amp;b;而不是*p1 = &amp;b;</span></span><br><span class="line"><span class="comment">因为p1 = &amp;b;的意思是把p1的指向从a改成b</span></span><br><span class="line"><span class="comment">而*p1 = &amp;b;的意思是把p1指向的内容 ，也就是a指向的内存所占的空间中的数据改成b</span></span><br><span class="line"><span class="comment">这肯定是不行的，因为a是一个int 所以只能存储数字，b在这里只是一个字母*/</span></span><br><span class="line"></span><br><span class="line">p2 = &amp;c;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p2 = &quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*从这里我们可以知道 首先这个所谓的常量指针</span></span><br><span class="line"><span class="comment">说白了就是不可以解引用然后修改内存地址中存储的数字，</span></span><br><span class="line"><span class="comment">但是实际上还是可以指向不同的数的 这里可以指向代表20的c</span></span><br><span class="line"><span class="comment">也可以指向代表10的b 说明就是缺少了解引用的功能</span></span><br><span class="line"><span class="comment">我的猜测是可能可以用来防止修改已有的变量吧*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="指针常量"><a href="#指针常量" class="headerlink" title="指针常量"></a>指针常量</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*指针常量*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*正常指针*/</span></span><br><span class="line"><span class="type">int</span>* p2 = &amp;a;</span><br><span class="line"><span class="comment">/*指针常量*/</span></span><br><span class="line"><span class="type">int</span>* <span class="type">const</span> p1 = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">*p1 = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p1 = &quot;</span> &lt;&lt; *p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*这里可以看到 p1的地址没有发生改变</span></span><br><span class="line"><span class="comment">也就是说p1一直是指向那一块内存空间的</span></span><br><span class="line"><span class="comment">但是p1的值*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>const既修饰指针，又修饰常量</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*const 既修饰指针 也修饰常量*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p1 = &amp;a;</span><br><span class="line"><span class="type">int</span> <span class="type">const</span> * <span class="type">const</span> p2 = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p2=&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p1=&quot;</span> &lt;&lt; *p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p2=&quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*指针的指向和指针的值都不可以修改*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>理解看法和总结</strong>：</p><p>说一下这一块我整体的看法和总结，首先先来看指针的定义<br>指针定义过程中的int <em> p = &xxx; 其中 </em>代表他是一个指针，然后p实际上就是一个数字，用来存储内存地址<br>常量指针，常量作为一个形容词修饰指针，所以const 肯定在 <em>的前面（无所谓在int前后）<br>所以他作为指针常量，只是指针的 </em> 部分被限制住了，<em>在解引用的时候要用到，所以就没办法用了<br>说人话就是没办法用 </em>p = 10;这种语句来修改内存地址中的数据了。这是常量指针 指针的部分被常量限制了。<br>然后是指针常量，指针常量在前面，首先是指针 然后才是常量 所以定义的方式是 int <em> const p = &a;这样，然后p的部分本来存储的就是内存地址，被const修饰之后 内存地址就没办法更改了，但是 </em>的部分功能还是正常的，也就是说我们可以解引用修改内存地址中的数据 但是没办法修改引用的内存地址了。 这 p永远都只能指向a<br>最后是第三种  const int * const p  = &amp;a 这种 情况下 既没办法修改地址 也没办法解引用修改值。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*const 既修饰指针 也修饰常量*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p1 = &amp;a;</span><br><span class="line"><span class="type">int</span> <span class="type">const</span> * <span class="type">const</span> p2 = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p2=&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p1=&quot;</span> &lt;&lt; *p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p2=&quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*指针的指向和指针的值都不可以修改*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*1\ const修饰指针*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* p3 = &amp;a;</span><br><span class="line">p3 = &amp;b;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p3:&quot;</span> &lt;&lt; p3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p3:&quot;</span> &lt;&lt; *p3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2\ const修饰常量*/</span></span><br><span class="line"><span class="type">int</span>* <span class="type">const</span> p4 = &amp;a;</span><br><span class="line">*p4 = <span class="number">30</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p4&quot;</span>&lt;&lt;p4&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p4&quot;</span> &lt;&lt; *p4&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*3 const修饰指针和常量*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p5 = &amp;a;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p5&quot;</span> &lt;&lt; p5 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p5&quot;</span> &lt;&lt; *p5 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="指针和数组"><a href="#指针和数组" class="headerlink" title="指针和数组"></a>指针和数组</h3><p><strong>作用</strong>：利用指针访问数组中元素</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*指针和数组</span></span><br><span class="line"><span class="comment">利用指针访问数组中的元素*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第一个元素&quot;</span> &lt;&lt; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*数组是整形的 所以我们创建指针的时候也要创建整形的指针*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* p = arr1;</span><br><span class="line"><span class="comment">/*arr就是数组首地址*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;利用指针访问第一个元素:&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">p++;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;P++元素:&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*p++之后访问的就是数组中的第二个元素了*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;利用指针遍历数组&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span>* p2 = arr1;</span><br><span class="line"><span class="type">int</span> length = <span class="built_in">sizeof</span>(arr1) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*不用指针*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;个数是&quot;</span> &lt;&lt; arr1[i] &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*用指针*/</span></span><br><span class="line">cout &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line">p2++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针和函数"><a href="#指针和函数" class="headerlink" title="指针和函数"></a>指针和函数</h3><p>作用：利用指针做函数参数，可以改变实际参数的值<br>（引用传递）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*写一个函数实现两个数字进行交换*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap01</span><span class="params">(<span class="type">int</span> n1, <span class="type">int</span> n2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;交换前&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n1:&quot;</span> &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> tempo = n1;</span><br><span class="line">n1 = n2;</span><br><span class="line">n2 = tempo;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;交换后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n1:&quot;</span> &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*值传递 要来力*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap02</span><span class="params">(<span class="type">int</span> *p1 , <span class="type">int</span> *p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = *p1;</span><br><span class="line">*p1 = *p2;</span><br><span class="line">*p2 = tempo;</span><br><span class="line"><span class="comment">/* *p是解引用的意思 这里是引用了a和b</span></span><br><span class="line"><span class="comment">然后传入了两个内存地址的解引用</span></span><br><span class="line"><span class="comment">然后用解引用重新赋值*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*指针和函数*/</span></span><br><span class="line"><span class="comment">/*值传递*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap01</span>(a, b);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中b:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*地址传递*/</span></span><br><span class="line"><span class="built_in">swap02</span>(&amp;a, &amp;b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;地址传递后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中b:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针、数组、函数"><a href="#指针、数组、函数" class="headerlink" title="指针、数组、函数"></a>指针、数组、函数</h3><p>封装一个函数，利用冒泡排序，实现对整整形数组的升序排序<br>举例 int arr1[10]= {4,3,6,9,5,8,2,1,7,5} ;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*参数1 数组的首地址 参数二 数组长度*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="type">int</span>* p, <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p[j]&gt;p[j<span class="number">+1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> tempo = p[j];</span><br><span class="line">p[j] = p[j + <span class="number">1</span>];</span><br><span class="line">p[j + <span class="number">1</span>] = tempo;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*问 为什么这里可以用p[j]访问数组元素*/</span></span><br><span class="line"><span class="comment">/*在 C++ 中，指针和数组是密切相关的。</span></span><br><span class="line"><span class="comment">实际上，数组名本质上是一个指针，指向数组的第一个元素。</span></span><br><span class="line"><span class="comment">arr[j] 实际上是对指针 arr 的解引用操作（即 *(arr + j)）。</span></span><br><span class="line"><span class="comment">它等价于指针的偏移。</span></span><br><span class="line"><span class="comment">你可以通过 arr + j 来访问数组的第 j 个元素，</span></span><br><span class="line"><span class="comment">因为 arr 是一个指向数组首元素的指针，arr + j 就是指向数组第 j 个元素的指针。*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*写一个 打印数组的函数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printArray</span><span class="params">(<span class="type">int</span>* p, <span class="type">int</span>  len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; p[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">10</span>] = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">5</span> &#125;;</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(arr1) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; len; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; arr1[i];</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printArray</span>(arr1,len);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; <span class="string">&quot;排序前如上&quot;</span> &lt;&lt;<span class="string">&quot;\n&quot;</span>&lt;&lt;<span class="string">&quot;排序后如下&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">bubbleSort</span>(arr1, len);</span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; len; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; arr1[i] ;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printArray</span>(arr1, len);</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结构体（）"><a href="#结构体（）" class="headerlink" title="结构体（）"></a>结构体（）</h2><h3 id="结构体的基本概念"><a href="#结构体的基本概念" class="headerlink" title="结构体的基本概念"></a>结构体的基本概念</h3><p>结构体属于用户自定义的数据类型，允许用户存储不同的数据类型<br>我的感觉就是java中自定义的类，但是好像又不一样</p><h3 id="结构体定义和使用"><a href="#结构体定义和使用" class="headerlink" title="结构体定义和使用"></a>结构体定义和使用</h3><p>语法：struct 结构体名{结构体成员列表};<br>通过结构体创建变量的方式有三种：<br>struct 结构体名 变量名<br>struct 结构体名 变量名 = {成员值1,成员值2…}<br>定义结构体时顺便创造变量</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建学生数据类型</span></span><br><span class="line"><span class="comment">学生包括 姓名 年龄  分数*/</span></span><br><span class="line"><span class="comment">/*语法 struct 类型名称&#123;成员列表&#125;*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*成员列表*/</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">/*姓名 年龄  分数*/</span></span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;s3;</span><br><span class="line"><span class="comment">/*在这里可以顺便创建一个结构体变量</span></span><br><span class="line"><span class="comment">但是我感觉不会有人这么写*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*为了偷懒我这里写了一个函数打印学生信息*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student p1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p<span class="number">1.</span>name &lt;&lt; <span class="string">&quot;  age:&quot;</span> &lt;&lt; p<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过学生类创建具体学生*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*三种方法创建*/</span></span><br><span class="line"><span class="comment">//struct Student s1; struct 可以省略</span></span><br><span class="line">Student s1;</span><br><span class="line">s<span class="number">1.</span>age = <span class="number">18</span>;</span><br><span class="line">s<span class="number">1.</span>name = <span class="string">&quot;jack&quot;</span>;</span><br><span class="line">s<span class="number">1.</span>score = <span class="number">90</span>;</span><br><span class="line"><span class="built_in">printStudent</span>(s1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span> s2 = &#123; <span class="string">&quot;mike&quot;</span>,<span class="number">20</span>,<span class="number">90</span> &#125;;</span><br><span class="line"><span class="comment">/*这里和java又不一样 java是括号 这里是 花括号*/</span></span><br><span class="line"><span class="built_in">printStudent</span>(s2);</span><br><span class="line"></span><br><span class="line">s<span class="number">3.</span>age = <span class="number">20</span>;</span><br><span class="line">s<span class="number">3.</span>name = <span class="string">&quot;fiona&quot;</span>;</span><br><span class="line">s<span class="number">3.</span>score = <span class="number">95</span>;</span><br><span class="line"><span class="built_in">printStudent</span>(s3);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结<br>1、定义结构体的关键字是 struct 类似java中的class 不可省略<br>2、创建结构体变量的时候，关键字stcuct可以省略<br>3、结构体利用操作符”.”访问成员</p><h3 id="结构体数组"><a href="#结构体数组" class="headerlink" title="结构体数组"></a>结构体数组</h3><p><strong>作用</strong>：将自定义的结构体放入数组中方便维护<br>我认为可能跟用java做 管理系统需要把自定义的类放入到arraylist差不多<br>语法： struct 结构体名 数组名[元素个数 ] = { {}，{}…{} }</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student p1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p<span class="number">1.</span>name &lt;&lt; <span class="string">&quot;  age:&quot;</span> &lt;&lt; p<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*结构体数组*/</span></span><br><span class="line"><span class="comment">/*1 定义结构体</span></span><br><span class="line"><span class="comment">2 创建结构体数组</span></span><br><span class="line"><span class="comment">3 给结构体数组中的元素赋值*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span> stuArr[<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">&quot;mike&quot;</span>,<span class="number">17</span>,<span class="number">70</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;alice&quot;</span>,<span class="number">18</span>,<span class="number">80</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;john&quot;</span>,<span class="number">19</span>,<span class="number">90</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*如果要修改*/</span></span><br><span class="line">stuArr[<span class="number">2</span>].name = <span class="string">&quot;jack&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*尝试一下遍历输出*/</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(stuArr) / <span class="built_in">sizeof</span>(stuArr[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printStudent</span>(stuArr[i]);</span><br><span class="line">&#125;<span class="comment">/*成功*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h3><p>作用：通过指针访问结构体中的成员</p><p>利用操作符 - &gt;可以通过结构体指针访问 结构体属性</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student *p1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p1-&gt;name &lt;&lt; <span class="string">&quot;  age:&quot;</span> &lt;&lt; p1-&gt;age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p1-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建学生结构体 变量</span></span><br><span class="line"><span class="comment">通过指针指向结构体变量</span></span><br><span class="line"><span class="comment">通过指针访问结构体变量中的数据*/</span></span><br><span class="line"></span><br><span class="line">Student s1 = &#123; <span class="string">&quot;jack&quot;</span>,<span class="number">18</span>,<span class="number">90</span> &#125;;</span><br><span class="line">Student * p = &amp;s1;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent</span>(p);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体嵌套结构体"><a href="#结构体嵌套结构体" class="headerlink" title="结构体嵌套结构体"></a>结构体嵌套结构体</h3><p><strong>作用</strong>：结构体中的成员可以是另一个结构体<br><strong>例如</strong>：每个老师辅导一个学员，一个老师的结构体中，记录一个学生的结构体</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Teacher</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">Student stu;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printTeacherInfo</span><span class="params">(<span class="type">const</span> Teacher&amp; t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 输出教师信息</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Teacher ID: &quot;</span> &lt;&lt; t.id &lt;&lt; <span class="string">&quot;Teacher Name: &quot;</span> </span><br><span class="line">&lt;&lt; t.name&lt;&lt; <span class="string">&quot;Teacher Age: &quot;</span> &lt;&lt; t.age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出学生信息</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Student Name: &quot;</span> &lt;&lt; t.stu.name </span><br><span class="line">&lt;&lt; <span class="string">&quot;Student Age: &quot;</span> &lt;&lt; t.stu.age </span><br><span class="line">&lt;&lt; <span class="string">&quot;Student Score: &quot;</span> &lt;&lt; t.stu.score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Student s1 = &#123;<span class="string">&quot;jack&quot;</span>,<span class="number">18</span>,<span class="number">70</span>&#125;;</span><br><span class="line">Student s2 = &#123;<span class="string">&quot;mike&quot;</span>,<span class="number">19</span>,<span class="number">80</span>&#125;;</span><br><span class="line">Student s3 = &#123;<span class="string">&quot;lisa&quot;</span>,<span class="number">20</span>,<span class="number">90</span>&#125;;</span><br><span class="line"></span><br><span class="line">Teacher t1 = &#123;<span class="number">1</span>,<span class="string">&quot;white&quot;</span>,<span class="number">40</span>,s1&#125;;</span><br><span class="line">Teacher t2 = &#123;<span class="number">2</span>,<span class="string">&quot;greffin&quot;</span>,<span class="number">46</span>,s2&#125;;</span><br><span class="line">Teacher t3 = &#123;<span class="number">3</span>,<span class="string">&quot;park&quot;</span>,<span class="number">38</span>,s3&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printTeacherInfo</span>(t1);</span><br><span class="line"><span class="built_in">printTeacherInfo</span>(t2);</span><br><span class="line"><span class="built_in">printTeacherInfo</span>(t3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结构体做函数参数"><a href="#结构体做函数参数" class="headerlink" title="结构体做函数参数"></a>结构体做函数参数</h3><p><strong>作用</strong>：将结构体作为参数 向函数中传递<br>传递的方式有两种<br>值传递<br>地址传递</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*学生类*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印学生 信息的函数*/</span></span><br><span class="line"><span class="comment">/*值传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent01</span><span class="params">(Student s1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;值传递函数内&quot;</span> &lt;&lt; endl;</span><br><span class="line">s<span class="number">1.</span>age = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*地址传递 引用传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent02</span><span class="params">(Student *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;引用传递函数内&quot;</span> &lt;&lt; endl;</span><br><span class="line">p-&gt;age = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Student s1 = &#123; <span class="string">&quot;jack&quot;</span>,<span class="number">18</span>,<span class="number">70</span> &#125;;</span><br><span class="line">Student s2 = &#123; <span class="string">&quot;mike&quot;</span>,<span class="number">19</span>,<span class="number">80</span> &#125;;</span><br><span class="line">Student s3 = &#123; <span class="string">&quot;alice&quot;</span>,<span class="number">20</span>,<span class="number">90</span> &#125;;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line"><span class="built_in">printStudent01</span>(s1);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;值传递修改后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent02</span>(&amp;s1);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;地址传递修改后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结构体中const使用场景"><a href="#结构体中const使用场景" class="headerlink" title="结构体中const使用场景"></a>结构体中const使用场景</h3><p><strong>作用</strong>：用const防止误操作 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s.name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s.age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s.score &lt;&lt; endl;</span><br><span class="line">&#125;<span class="comment">/*这就是标准的值传递  值传递会拷贝出非常多的多余数据 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*尝试用引用 传递*/</span></span><br><span class="line"><span class="comment">/*为什么用指针 因为上面的代码相当会把Student中</span></span><br><span class="line"><span class="comment">所有的数据都复制出来一份，在实际情况中，student的人数会很多</span></span><br><span class="line"><span class="comment">student的信息也会很多 ，数据量就会按照指数级增长</span></span><br><span class="line"><span class="comment">所以用指针可以很好的解决这个问题，一个指针只占4个字节（64位系统是八个）*/</span></span><br><span class="line"><span class="comment">/*一句话概括 用指针 可以减少内存空间 同时不会复制新的副本*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent02</span><span class="params">(<span class="type">const</span> Student* s)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*这节课的重点 就是上面在函数定义的时候在形参前面加一个const 这样的话 就无法修改</span></span><br><span class="line"><span class="comment"> 引用的指针，就是所谓的 常量指针 可以修改引用不同的指针 传入不同的student类的数据</span></span><br><span class="line"><span class="comment"> 都可以读数据 但是都无法更改 student中的内容*/</span></span><br><span class="line"><span class="comment">//s-&gt;name = &quot;mike&quot; 加入const之后这里就会报错 不能进行修改 </span></span><br><span class="line"><span class="comment">/*这样就可以保证不修改原始数据了*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s-&gt;name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s-&gt;age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Student s1 = &#123; <span class="string">&quot;jack&quot;</span>,<span class="number">17</span>,<span class="number">70</span> &#125;;</span><br><span class="line"><span class="built_in">printStudent</span>(s1);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent02</span>(&amp;s1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体案例"><a href="#结构体案例" class="headerlink" title="结构体案例"></a>结构体案例</h3><h4 id="案例1"><a href="#案例1" class="headerlink" title="案例1"></a>案例1</h4><p>案例描述：<br>学校正在做毕设项目，每名老师带领5个学生，总共有3名老师，<br>需求如下<br>设计学生和老师的结构体，其中在老师的结构体中，有老师姓名和一个存放5名学生的数组作为成员学生的成员有姓名、考试分数，创建数组存放3名老师，通过函数给每个老师及所带的学生赋值最终打印出老师数据以及老师所带的学生数据。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string sname;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Teacher</span></span><br><span class="line">&#123;</span><br><span class="line">string tname;</span><br><span class="line">Student stuArr[<span class="number">5</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*给老师和学生赋值的函数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">allocatSpace</span><span class="params">(Teacher tArr[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string nameSeed = <span class="string">&quot;ABCDE&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*给老师的姓名赋值*/</span></span><br><span class="line">tArr[i].tname = <span class="string">&quot;Teacher_&quot;</span>;</span><br><span class="line">tArr[i].tname += nameSeed[i];</span><br><span class="line"><span class="comment">/*给老师的学生赋值 通过循环*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">tArr[i].stuArr[j].sname = <span class="string">&quot;student_&quot;</span>;</span><br><span class="line">tArr[i].stuArr[j].sname += nameSeed[j];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*给成绩赋值*/</span></span><br><span class="line"><span class="type">int</span> random = <span class="built_in">rand</span>() % <span class="number">61</span> + <span class="number">40</span>;</span><br><span class="line">tArr[i].stuArr[j].score = random;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printInfo</span><span class="params">(Teacher tArr[],<span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;teacher name:&quot;</span> &lt;&lt; tArr[i].tname &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;<span class="comment">/* 打印学生姓名和成绩*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t student name:&quot;</span> &lt;&lt; tArr[i].stuArr[j].sname</span><br><span class="line">&lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; tArr[i].stuArr[j].score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*随机数种子*/</span></span><br><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line"><span class="comment">/*创建三名老师的数组*/</span></span><br><span class="line">Teacher tArr[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过函数赋值*/</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(tArr) / <span class="built_in">sizeof</span>(tArr[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">allocatSpace</span>(tArr, len);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印信息*/</span></span><br><span class="line"><span class="built_in">printInfo</span>(tArr, len);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="案例2"><a href="#案例2" class="headerlink" title="案例2"></a>案例2</h4><p>设计一个英雄的结构体，包括成员姓名，年龄，性别;创建结构体数组，数组中存放5名英雄。<br>通过冒泡排序的算法，将数组中的英雄按照年龄进行升序排序，最终打印排序后的结果。</p><p>五名英雄信息如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*英雄结构体*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">hero</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">string gender;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*排序算法*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubler</span><span class="params">(hero *p,<span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len <span class="number">-1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p[j].age &gt; p[j + <span class="number">1</span>].age)</span><br><span class="line">&#123;</span><br><span class="line">hero tempo = p[j];</span><br><span class="line">p[j] = p[j + <span class="number">1</span>];</span><br><span class="line">p[j + <span class="number">1</span>] = tempo;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">(hero* p, <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p[i].name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; p[i].age &lt;&lt; <span class="string">&quot; gender:&quot;</span> &lt;&lt; p[i].gender &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">hero HeroList[<span class="number">5</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(HeroList) / <span class="built_in">sizeof</span>(HeroList[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">bubler</span>(HeroList, len);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*输出*/</span></span><br><span class="line"><span class="built_in">show</span>(HeroList, len);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第一大项目"><a href="#第一大项目" class="headerlink" title="第一大项目"></a>第一大项目</h2><h3 id="尝试做通讯录管理系统"><a href="#尝试做通讯录管理系统" class="headerlink" title="尝试做通讯录管理系统"></a>尝试做通讯录管理系统</h3><h3 id="系统需求"><a href="#系统需求" class="headerlink" title="系统需求"></a>系统需求</h3><p>通讯录是一个可以记录亲人、好友信息的工具。<br>本教程主要利用C++来实现一个通讯录管理系统系统中需要实现的功能如下:<br>添加联系人:向通讯录中添加新人，信息包括(姓名、性别、年龄、联系电话、家庭住址)最多记录1000人<br>显示联系人:显示通讯录中所有联系人信息<br>删除联系人:按照姓名进行删除指定联系人<br>查找联系人:按照姓名查看指定联系人信息<br>修改联系人:按照姓名重新修改指定联系人<br>清空联系人:清空通讯录中所有信息<br>退出通讯录:退出当前使用的通讯录</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max 1000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*封装函数显示该界面 如void showMenu()</span></span><br><span class="line"><span class="comment">在main 函数中调用封装好的函数 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*联系人结构体*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line">string m_name;</span><br><span class="line"><span class="type">int</span> m_sex;</span><br><span class="line"><span class="type">int</span> m_age;</span><br><span class="line">string m_phone;</span><br><span class="line">string m_addr;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">AddressBooks</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Person</span> PersonArray[max];</span><br><span class="line"><span class="type">int</span> m_size;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*菜单界面*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showMenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 1. 添加联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 2. 显示联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 3. 删除联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 4. 查找联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 5. 修改联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 6. 清空联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 0. 退出通讯录 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">addPerson</span><span class="params">(AddressBooks * abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*判断通讯录是否已满，如果满了就不再添加*/</span></span><br><span class="line"><span class="keyword">if</span> (abs-&gt;m_size ==max)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通讯录已满，无法继续添加！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="comment">/*添加具体联系人*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入姓名&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">abs-&gt;PersonArray[abs-&gt;m_size].m_name = name;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> gender = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入性别&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1--男，2--女&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;<span class="comment">/*如果输入的是一或者2 可以退出循环</span></span><br><span class="line"><span class="comment"> 因为输入的是正确值 如果输入有误，重新输入*/</span></span><br><span class="line">cin &gt;&gt; gender;</span><br><span class="line"><span class="keyword">if</span> (gender == <span class="number">1</span> || gender == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">abs-&gt;PersonArray[abs-&gt;m_size].m_sex = gender;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*年龄*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入年龄：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> age = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; age;</span><br><span class="line">abs-&gt;PersonArray[abs-&gt;m_size].m_age = age;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入联系电话：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string phone = <span class="string">&quot;&quot;</span>;</span><br><span class="line">cin &gt;&gt; phone;</span><br><span class="line">abs-&gt;PersonArray[abs-&gt;m_size].m_phone = phone;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入住址：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string address = <span class="string">&quot;&quot;</span>;</span><br><span class="line">cin &gt;&gt; address;</span><br><span class="line">abs-&gt;PersonArray[abs-&gt;m_size].m_addr = address;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*更新通讯录人数*/</span></span><br><span class="line">abs-&gt;m_size++;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;添加成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*显示联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showPerson</span><span class="params">(AddressBooks* abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*判断通讯录中的人数*/</span></span><br><span class="line"><span class="comment">/*如果不为0 显示记录的联系人的信息*/</span></span><br><span class="line"><span class="keyword">if</span> (abs-&gt;m_size == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;当前记录为空&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; abs-&gt;m_size; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名:&quot;</span> &lt;&lt; abs-&gt;PersonArray[i].m_name &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;性别:&quot;</span> &lt;&lt; (abs-&gt;PersonArray[i].m_sex==<span class="number">1</span>?<span class="string">&quot;男&quot;</span>:<span class="string">&quot;女&quot;</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;年龄:&quot;</span> &lt;&lt; abs-&gt;PersonArray[i].m_age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;电话:&quot;</span> &lt;&lt; abs-&gt;PersonArray[i].m_phone &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;住址:&quot;</span> &lt;&lt; abs-&gt;PersonArray[i].m_addr &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除功能 */</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">isExist</span><span class="params">(AddressBooks* abs, string name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; abs-&gt;m_size; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (abs-&gt;PersonArray[i].m_name == name)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*找到用户*/</span></span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除指定的联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deletePerson</span><span class="params">(AddressBooks *abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入你要删除的联系人&quot;</span> &lt;&lt; endl;</span><br><span class="line">string name;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*查找到这个人 删除</span></span><br><span class="line"><span class="comment">要删除 一个数据 将后面的数据向前移动</span></span><br><span class="line"><span class="comment">并且让通讯录中记录的人员数量做-1的操作即可*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = ret; i &lt; abs-&gt;m_size; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*数据前移*/</span></span><br><span class="line">abs-&gt;PersonArray[i] = abs-&gt;PersonArray[i + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">abs-&gt;m_size--;<span class="comment">/*更新一下通讯录中的人员数*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;delete complete!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;404 not found&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查找联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">findPerson</span><span class="params">(AddressBooks * abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您要查找的联系人&quot;</span> &lt;&lt; endl;</span><br><span class="line">string name;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*判断指定的姓名是否存在 */</span></span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名:&quot;</span> &lt;&lt; abs-&gt;PersonArray[ret].m_name &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;性别:&quot;</span> &lt;&lt; (abs-&gt;PersonArray[ret].m_sex == <span class="number">1</span> ? <span class="string">&quot;男&quot;</span> : <span class="string">&quot;女&quot;</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;年龄:&quot;</span> &lt;&lt; abs-&gt;PersonArray[ret].m_age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;电话:&quot;</span> &lt;&lt; abs-&gt;PersonArray[ret].m_phone &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;住址:&quot;</span> &lt;&lt; abs-&gt;PersonArray[ret].m_addr &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查无此人&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*修改联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modifyPerson</span><span class="params">(AddressBooks *abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您要修改的联系人&quot;</span> &lt;&lt; endl;</span><br><span class="line">string name;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"><span class="comment">/*判断指定的姓名是否存在 */</span></span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="comment">/*添加具体联系人*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入姓名&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">abs-&gt;PersonArray[ret].m_name = name;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> gender = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入性别&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1--男，2--女&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;<span class="comment">/*如果输入的是一或者2 可以退出循环</span></span><br><span class="line"><span class="comment"> 因为输入的是正确值 如果输入有误，重新输入*/</span></span><br><span class="line">cin &gt;&gt; gender;</span><br><span class="line"><span class="keyword">if</span> (gender == <span class="number">1</span> || gender == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">abs-&gt;PersonArray[ret].m_sex = gender;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*年龄*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入年龄：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> age = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; age;</span><br><span class="line">abs-&gt;PersonArray[ret].m_age = age;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入联系电话：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string phone = <span class="string">&quot;&quot;</span>;</span><br><span class="line">cin &gt;&gt; phone;</span><br><span class="line">abs-&gt;PersonArray[ret].m_phone = phone;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入住址：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string address = <span class="string">&quot;&quot;</span>;</span><br><span class="line">cin &gt;&gt; address;</span><br><span class="line">abs-&gt;PersonArray[ret].m_addr = address;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;修改成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查无此人&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*清空联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span>  <span class="title">claenPerson</span><span class="params">(AddressBooks* abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">abs-&gt;m_size = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;已清空&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*创建通讯录结构体变量*/</span></span><br><span class="line">AddressBooks abs;</span><br><span class="line"><span class="comment">/*初始化通讯录中当前人员个数*/</span></span><br><span class="line">abs.m_size = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123; </span><br><span class="line"><span class="built_in">showMenu</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建用户选择输入的变量*/</span></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (select)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="comment">/*添加联系人*/</span></span><br><span class="line"><span class="built_in">addPerson</span>(&amp;abs);</span><br><span class="line"><span class="comment">/*利用地址传递可以修饰实参*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="comment">/*显示联系人*/</span></span><br><span class="line"><span class="built_in">showPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="comment">//&#123;/*删除联系人*/</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;请输入删除联系人的姓名&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//string name = &quot;&quot;;</span></span><br><span class="line"><span class="comment">//cin &gt;&gt; name;</span></span><br><span class="line"><span class="comment">//if (isExist(&amp;abs, name) == -1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;404 not found&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;got you&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="built_in">deletePerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="comment">/*查找联系人*/</span></span><br><span class="line"><span class="built_in">findPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="comment">/*修改联系人*/</span></span><br><span class="line"><span class="built_in">modifyPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="comment">/*清空联系人*/</span></span><br><span class="line"><span class="built_in">claenPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="comment">/*退出通讯录*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;byebye~&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>中途还是有很多问题 但是至此 通讯录管理系统完成</p><h1 id="▲C-核心编程"><a href="#▲C-核心编程" class="headerlink" title="▲C++核心编程"></a>▲C++核心编程</h1><p>主要是面向对象 技术的详解</p><h2 id="内存的分区模型"><a href="#内存的分区模型" class="headerlink" title="内存的分区模型"></a>内存的分区模型</h2><p>C++程序在执行时，将内存大方向划分为四个区域<br>代码区：存放函数体的二进制代码，由操作系统进行管理（cout ，字符）<br>全局区：存放全局变量和静态变量以及常量<br>栈区：由编译器自动分配释放，存放函数的参数值，局部变量等<br>堆区：由程序员分配和释放，若程序员不释放，程序结束时由操作系统回收</p><p>内存四区的意义：不同区域存放 的数据，赋予不同的生命周期，给我们更大的灵活编程。</p><h3 id="程序运行前"><a href="#程序运行前" class="headerlink" title="程序运行前"></a>程序运行前</h3><p>在程序编译后，生成了exe可执行程序，未执行该程序前分为两个区域<br><strong>代码区</strong>：<br>    存放cpu执行的机器指令<br>    代码区是共享的，共享的目的是对于频繁被执行的程序，只需要在 内存中有一份 代码即可<br>    代码区是只读的，使其只读的原因是防止程序意外地修改了它的指令<br><strong>全局区</strong>：<br>    全局变量和静态变量存放于此<br>    全局区还包含了常量区，字符串常量和其他常量也存放在此<br>    该区域的数据在程序结束后由操作系统释放。</p><h3 id="程序运行后"><a href="#程序运行后" class="headerlink" title="程序运行后"></a>程序运行后</h3><p><strong>栈区</strong>：<br>    由编译器自动分配释放，存放函数的参数值，局部变量等<br>    注意事项：不要反悔局部变量的地址，栈区开辟的数据由于编译器自动释放<br><strong>堆区</strong>：<br>    由于程序员分配释放，若程序员不释放，程序结束时由操作系统回收<br>    在C++中主要利用new在堆区开辟内存</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*全局变量*/</span></span><br><span class="line"><span class="type">int</span> g_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> g_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*const修饰的全局变量*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> cga = <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> cgb = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> * <span class="title">func</span><span class="params">(<span class="type">int</span> b)</span><span class="comment">/*返回一个int类型的指针*/</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*形参数据也会放在栈区*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;<span class="comment">/*存放在栈区 栈区的数据在函数执行完之后自动释放*/</span></span><br><span class="line"><span class="keyword">return</span> &amp;a;</span><br><span class="line"><span class="comment">/*这里就是在返回局部变量的地址*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> * <span class="title">func1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*利用new关键字 可以将数据开辟 到 堆区*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*指针本质上给是一个局部变量 也是放在栈上</span></span><br><span class="line"><span class="comment">指针保存的数据 放在堆区*/</span></span><br><span class="line"><span class="type">int</span> * p = <span class="keyword">new</span> <span class="built_in">int</span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*全局区*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*全局变量 静态变量 常量*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建一个普通的局部变量*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*只要写在函数体内的变量</span></span><br><span class="line"><span class="comment">都叫 局部变量*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部变量a的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部变量b的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局变量g_a的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;g_a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局变量g_b的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;g_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*静态变量*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> s_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> s_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;静态变量s_a的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;s_a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;静态变量s_b的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;s_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*常量 字符串常量和const 修饰的变量*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;字符串常量的地址&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;<span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*const 修饰的全局变量和局部变量*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局常量cga的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;cga &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局常量cgb的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;cgb &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> cla = <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> clb = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部常量cla的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;cla &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部常量clb的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;clb &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*局部在代码区域 全局在全局区*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*栈区数据的注意事项</span></span><br><span class="line"><span class="comment">不要返回局部变量的地址</span></span><br><span class="line"><span class="comment">栈区的数据由编译器管理开辟和释放*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//int* p1 = func();</span></span><br><span class="line"><span class="comment">///*接受func函数的返回值*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; *p1 &lt;&lt; endl;/*第一次可以 打印正确的数字是因为编译器做了保留*/</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; *p1 &lt;&lt; endl;/*这里理论上应该输出乱码*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*在堆区开辟数据*/</span></span><br><span class="line"><span class="type">int</span>* p = <span class="built_in">func1</span>();</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="new操作符（重点）"><a href="#new操作符（重点）" class="headerlink" title="new操作符（重点）"></a>new操作符（重点）</h3><p>C++中利用new操作符在堆区开辟数据<br>堆区开辟的数据，由程序员手动开辟，手动释放 ，释放利用操作符delete<br>语法：new 数据类型<br>利用new创建的数据，会返回该数据对应的类型的指针</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*new基本语法*/</span></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*在堆区创建整形数据*/</span></span><br><span class="line"><span class="comment">/*new返回的是一个该数据类型的指针*/</span></span><br><span class="line"><span class="type">int</span> * p  =<span class="keyword">new</span> <span class="built_in">int</span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span>* p = <span class="built_in">func</span>();</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*堆区的数据有程序员管理</span></span><br><span class="line"><span class="comment">如果想释放 用delete*/</span></span><br><span class="line"><span class="keyword">delete</span> p;</span><br><span class="line"><span class="comment">//cout &lt;&lt; *p &lt;&lt; endl;报错</span></span><br><span class="line"><span class="comment">/*内存已经被释放 再次访问就是非法操作*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*创建10整形数据的数组，在堆区*/</span></span><br><span class="line"><span class="type">int</span> * arr = <span class="keyword">new</span> <span class="type">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="comment">/*10代表数组元素个数*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">arr[i] = i + <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><h3 id="引用的基本使用"><a href="#引用的基本使用" class="headerlink" title="引用的基本使用"></a>引用的基本使用</h3><p><strong>作用</strong>：给变量起别名<br><strong>语法</strong>: 数据类型 &amp; 别名 = 原名 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*引用基本语法*/</span></span><br><span class="line"><span class="comment">/*数据类型 &amp;别名 = 原名*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span>&amp; b = a;</span><br><span class="line"><span class="comment">/*这样这块地址又叫a 又叫b*/</span></span><br><span class="line">b = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*a 也变成了20*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="引用的注意事项"><a href="#引用的注意事项" class="headerlink" title="引用的注意事项"></a>引用的注意事项</h3><p>引用必须初始化<br>引用初始化之后就不可以改变</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">20</span>;</span><br><span class="line"><span class="comment">//int&amp; b;报错</span></span><br><span class="line"><span class="type">int</span>&amp; b = a;</span><br><span class="line"><span class="comment">/*初始化之后不可以赋值*/</span></span><br><span class="line">b = c; </span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt;endl;</span><br><span class="line"><span class="comment">/*这里a原本是数据丢失*/</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="引用作函数参数"><a href="#引用作函数参数" class="headerlink" title="引用作函数参数"></a>引用作函数参数</h3><p><strong>作用</strong>：函数传参时，可以利用引用的技术让形参修饰实参<br><strong>优点</strong>:可以简化指针修改实参</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*交换函数</span></span><br><span class="line"><span class="comment">值传递 地址传递 引用传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myswap01</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = a;</span><br><span class="line">a = b;</span><br><span class="line">b = tempo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*地址传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myswap02</span><span class="params">(<span class="type">int</span> * a,<span class="type">int</span> * b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = *a;</span><br><span class="line">*a = *b;</span><br><span class="line">*b = tempo;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*引用传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mySwap03</span><span class="params">(<span class="type">int</span>&amp; a, <span class="type">int</span>&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = a;</span><br><span class="line">a = b;</span><br><span class="line">b = tempo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">myswap01</span>(a, b);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a after myswap01:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b after myswap01:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">myswap02</span>(&amp;a, &amp;b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a after myswap02:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b after myswap02:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>; b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">mySwap03</span>(a, b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a after myswap03:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b after myswap03:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>总结：通过引用参数产生的效果和地址传递是一样的。引用的语法更加简单清楚</p><h3 id="▲引用做函数返回值"><a href="#▲引用做函数返回值" class="headerlink" title="▲引用做函数返回值"></a>▲引用做函数返回值</h3><p>作用：引用是可以作为函数返回值存在的<br>注意：不要返回局部变量引用<br>用法：函数调用作为左值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*引用作函数的返回值</span></span><br><span class="line"><span class="comment">不要返回局部变量的引用 */</span></span><br><span class="line"><span class="function"><span class="type">int</span> &amp; <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*局部变量存放在内存四区中的栈区</span></span><br><span class="line"><span class="comment">调用函数结束之后就释放内存了*/</span></span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数的调用可以作为左值存在*/</span></span><br><span class="line"><span class="function"><span class="type">int</span>&amp; <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*静态变量 存放在全局区*/</span></span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> &amp; ref = <span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref =&quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line"><span class="comment">/* 变成了空的内存地址*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>&amp; ref2 = <span class="built_in">test02</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref2 =&quot;</span> &lt;&lt; ref2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*正常输出*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test02</span>() = <span class="number">1000</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref2 =&quot;</span> &lt;&lt; ref2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="▲引用的本质"><a href="#▲引用的本质" class="headerlink" title="▲引用的本质"></a>▲引用的本质</h3><p><strong>本质：引用的本质在C++内部实现是一个指针常量</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*发现是引用  转换未int * const ref = &amp;a */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span>&amp; ref)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ref = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*自动转换int * const ref  = &amp;a ;</span></span><br><span class="line"><span class="comment">本质上是一个个指针常量，也说明了为什么引用不可更改 */</span></span><br><span class="line"><span class="type">int</span>&amp; ref = a;</span><br><span class="line">ref = <span class="number">20</span>;</span><br><span class="line"><span class="comment">/*颞部发现ref是引用 会自动帮我们转换成*ref = 20</span></span><br><span class="line"><span class="comment">* 说人话就是会自动解引用</span></span><br><span class="line"><span class="comment">所有为什么说引用简单 因为涉及到了大量的自动转换</span></span><br><span class="line"><span class="comment">在前面自己写代码的过程中我就 隐隐约约感觉到了</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref:&quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">func</span>(a);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结论：c++推荐用引用技术，因为语法方便，引用本质是指针常量，但是所有的指针操作编译器都帮我们做了<br>后记：妈的，那老子学那么久的指针是为了什么，牛魔酬宾，把我的时间还给我！</p><h3 id="常量引用"><a href="#常量引用" class="headerlink" title="常量引用"></a>常量引用</h3><p><strong>作用</strong>：常量引用主要用来修饰形参，防止误操作<br>在函数形象 列表中,可以加const修饰形参,防止形参改变实参</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showValue</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;val)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*用const修饰之后变成只读 下面就不能再修改*/</span></span><br><span class="line"><span class="comment">//val = 1000;</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;val=&quot;</span> &lt;&lt; val &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*常量引用*/</span></span><br><span class="line"><span class="comment">/*使用场景，用来修饰形式参 防止误操作*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span>&amp; ref = a;</span><br><span class="line"><span class="comment">//int&amp; ref1 = 10;</span></span><br><span class="line"><span class="comment">/*必须引用合法内存空间</span></span><br><span class="line"><span class="comment">10不具有合法内存空间*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>&amp; ref1 = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*这样就正确了</span></span><br><span class="line"><span class="comment">加上const之后 编译器将代码修改</span></span><br><span class="line"><span class="comment">int temp = 10;</span></span><br><span class="line"><span class="comment">const int &amp; ref = temp</span></span><br><span class="line"><span class="comment">相当于把代码改成这样的形式了*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">showValue</span>(a1);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1=&quot;</span> &lt;&lt; a1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数提高（重要）"><a href="#函数提高（重要）" class="headerlink" title="函数提高（重要）"></a>函数提高（重要）</h2><h3 id="函数默认参数（重要）"><a href="#函数默认参数（重要）" class="headerlink" title="函数默认参数（重要）"></a>函数默认参数（重要）</h3><p>在C++中，函数的形参列表中的形参是可以有默认值的<br>语法：返回值类型 函数名 （参数 = 默认值）{}</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数默认参数*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b = <span class="number">20</span>, <span class="type">int</span> c=<span class="number">30</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*如果自己传入的数据 就优先用传入的</span></span><br><span class="line"><span class="comment">默认数据在没有传入数据的时候才会不得已被调用*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*下面这个是重要考点*/</span></span><br><span class="line"><span class="comment">/*1、如果某个位置已经有了默认参数，</span></span><br><span class="line"><span class="comment">那么这个位置往后，从左往右都必须有默认值 */</span></span><br><span class="line"><span class="comment">//int func2(int a,int b = 10,int c,int d )</span></span><br><span class="line"><span class="comment">//&#123;/*如果这里b有参数 那么后面的c  d 都必须有参数</span></span><br><span class="line"><span class="comment">// 不然就报错*/</span></span><br><span class="line"><span class="comment">//return a + b + c;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*2、如果函数声明有默认参数，函数实现就不能有默认参数</span></span><br><span class="line"><span class="comment">声明和定义只能有一个有默认参数*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func3</span><span class="params">(<span class="type">int</span> a = <span class="number">11</span>, <span class="type">int</span> b =<span class="number">10</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func3</span><span class="params">(<span class="type">int</span> a =<span class="number">10</span>, <span class="type">int</span> b = <span class="number">20</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*这里有可能出现如上的情况 不知道</span></span><br><span class="line"><span class="comment"> 两边的默认函数不同 不知道按哪一边的默认参数来</span></span><br><span class="line"><span class="comment"> 所以只能有一边有默认参数</span></span><br><span class="line"><span class="comment"> 只要删除一个地方都能正常运行*/</span></span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*报错 重定义默认参数 */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="built_in">func</span>(<span class="number">10</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">func</span>(<span class="number">10</span>, <span class="number">30</span>, <span class="number">30</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*cout &lt;&lt; func3(10) &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">调用时报错*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数占位参数"><a href="#函数占位参数" class="headerlink" title="函数占位参数"></a>函数占位参数</h3><p>C++中的函数形参列表里可以有占位参数，用来做占位，调用函数时必须填补该位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">语法： 返回值类型 函数名 （数据类型）&#123;&#125;</span><br></pre></td></tr></table></figure><p>现阶段函数的占位参数意义不大，但是据说后面会用到。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="comment">/*函数 占位参数*/</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*目前阶段占位参数 还用不到 后面课程可能会用到*/</span></span><br><span class="line"><span class="comment">/*占位参数还可以有默认参数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span>=<span class="number">10</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is func&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">func</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数重载（重要）"><a href="#函数重载（重要）" class="headerlink" title="函数重载（重要）"></a>函数重载（重要）</h3><h4 id="函数重载-概述"><a href="#函数重载-概述" class="headerlink" title="函数重载 概述"></a>函数重载 概述</h4><p><strong>作用</strong>：函数名可以相同，提高服用性<br><strong>函数重载满足条件</strong>：<br>同一个作用域下<br>函数名称相同<br>函数的参数 类型不同或个数不同或顺序不同</p><p><strong>注意</strong>：<strong><u>函数的返回值不可以作为函数重载的条件</u></strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="comment">/*函数重载*/</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数 重载 的满足条件</span></span><br><span class="line"><span class="comment">1、同一个作用域下</span></span><br><span class="line"><span class="comment">2、函数名称相同</span></span><br><span class="line"><span class="comment">3、函数的参数类型个数或者顺序不同*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">int</span> a )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(int a )的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">double</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(double a )的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">int</span> a,<span class="type">double</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(int,double)的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">double</span> b, <span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(double,int)的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*注意事项</span></span><br><span class="line"><span class="comment">函数的返回值不可以作为重载的条件*/</span></span><br><span class="line"><span class="comment">//int func01()</span></span><br><span class="line"><span class="comment">//&#123; 这种情况就是错误的</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;func的调用&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">func01</span>();</span><br><span class="line"><span class="built_in">func01</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">func01</span>(<span class="number">1.0</span>);</span><br><span class="line"><span class="built_in">func01</span>(<span class="number">1</span>,<span class="number">1.0</span>);</span><br><span class="line"><span class="built_in">func01</span>(<span class="number">1.0</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数重载注意事项"><a href="#函数重载注意事项" class="headerlink" title="函数重载注意事项"></a>函数重载注意事项</h3><p>引用作为重载条件<br>函数重载碰到函数默认参数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*函数重载的注意事项*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*引用作为重载的条件*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func01(int a ,int b)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">/*int &amp; a = 10 不合法的*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func01(int &amp;a)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*const int &amp;a = 10*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func01(const int a)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数重载碰到默认参数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func2（int a）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func2（int a,int b）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//void func2(int a=10)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;func2（int a=10）&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">func01</span>(a);<span class="comment">//调用的是int &amp;a</span></span><br><span class="line"><span class="built_in">func01</span>(<span class="number">10</span>);</span><br><span class="line"><span class="comment">/*上面调用的是int &amp;a </span></span><br><span class="line"><span class="comment">下面调用的是const*/</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* a默认情况下是一个变量，</span></span><br><span class="line"><span class="comment">所以我用func01(a);的时候默认的情况下他选择了 </span></span><br><span class="line"><span class="comment">可读可写的int &amp;a版本</span></span><br><span class="line"><span class="comment">而10本身就作为一个常量 是不可以被更改的 </span></span><br><span class="line"><span class="comment">所以默认他就选择了void func01(const int &amp;a)*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">func2</span>(a);</span><br><span class="line"><span class="comment">//func2();</span></span><br><span class="line"><span class="comment">/*当函数重载遇到默认参数 会出现二义性</span></span><br><span class="line"><span class="comment">尽量避免这种情况</span></span><br><span class="line"><span class="comment">如果要重载就不要写默认参数*/</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><p>C++面向对象的三大特性为：封装、继承、多态<br>C++认为完事<strong>万物皆对象</strong>，对下昂 上有其属性和行为</p><p>例如：<br>        人可以作为对象，属性有姓名、年龄、身高、体重…行为有走、跑、跳、吃饭、唱歌<br>        车也可以作为对象，属性有轮胎、方向盘、车灯.,行为有载人、放音乐、放空调…<br>        具有相同性质的对象，我们可以抽象称为类，人属于人类，车属于车类，都可以作为地球上的东西一类</p><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><h4 id="封装的意义（重点）"><a href="#封装的意义（重点）" class="headerlink" title="封装的意义（重点）"></a>封装的意义（重点）</h4><p>封装是C++面向对象三大特性之一<br>封装的意义：<br>        将属性和行为作为一个个整体，表现生活中的事物<br>        讲过属性和行为加以权限控制</p><h5 id="封装的意义一："><a href="#封装的意义一：" class="headerlink" title="封装的意义一："></a><strong>封装的意义一</strong>：</h5><p>​        在设计类的时候，属性和行为写在一起，表现事物<br><strong>语法</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class 类名 &#123;访问权限：属性/行为&#125;；</span><br></pre></td></tr></table></figure><p>示例1：设计一个圆类，球圆的周长</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">double</span> pi = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*设计一个圆类 求圆周长</span></span><br><span class="line"><span class="comment">袁求周长的公式 2*PI * 半径*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:<span class="comment">/*公共权限*/</span></span><br><span class="line"><span class="comment">/*属性 半径*/</span></span><br><span class="line"><span class="type">int</span> r;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*行为 获取圆的周长*/</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">length</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span> * pi * r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*r是类的成员变量</span></span><br><span class="line"><span class="comment">对于每一个circle 都有一个r</span></span><br><span class="line"><span class="comment">length（）是成员函数</span></span><br><span class="line"><span class="comment">因为 r 是类的 成员，</span></span><br><span class="line"><span class="comment">对于类的每个实例（对象）来说，</span></span><br><span class="line"><span class="comment">r 是属于该实例的</span></span><br><span class="line"><span class="comment">在成员函数中，你可以直接访问类的 成员变量，不需要额外传参。</span></span><br><span class="line"><span class="comment">所以这里不需要传参就可以直接访问*/</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过圆类床关键具体的圆*/</span></span><br><span class="line">Circle c1;</span><br><span class="line"><span class="comment">/*给圆对象的属性进行赋值*/</span></span><br><span class="line">c<span class="number">1.</span>r = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;圆的周长为：&quot;</span> &lt;&lt; c<span class="number">1.l</span>ength() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 示例2：设计一个学生类，属性有姓名和学号，可以给姓名和学号赋值，可以显示学生的姓名和学号</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*学生类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:<span class="comment">/*控制权限写在类里面*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*类中的属性和行为，我们统一称为成员</span></span><br><span class="line"><span class="comment">属性 成员属性 成员变量</span></span><br><span class="line"><span class="comment">行为 成员函数 成员方法*/</span></span><br><span class="line"></span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot; id:&quot;</span> &lt;&lt; id &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setName</span><span class="params">(string sname)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">name = sname;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setId</span><span class="params">(<span class="type">int</span> nid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">id = nid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;<span class="comment">/*class 后面要加分号*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Student s1;</span><br><span class="line">s<span class="number">1.</span>name = <span class="string">&quot;jack&quot;</span>;</span><br><span class="line">s<span class="number">1.</span>id = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">Student s2;</span><br><span class="line">s<span class="number">2.</span>name = <span class="string">&quot;fiona&quot;</span>;</span><br><span class="line">s<span class="number">2.</span>id = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">s<span class="number">1.</span><span class="built_in">show</span>();</span><br><span class="line">s<span class="number">2.</span><span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line">s<span class="number">1.</span><span class="built_in">setName</span>(<span class="string">&quot;mike&quot;</span>);</span><br><span class="line">s<span class="number">1.</span><span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line">s<span class="number">2.</span><span class="built_in">setId</span>(<span class="number">3</span>);</span><br><span class="line">s<span class="number">2.</span><span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="封装的意义二（重点）："><a href="#封装的意义二（重点）：" class="headerlink" title="封装的意义二（重点）："></a><strong>封装的意义二</strong>（重点）：</h5><p>类在设计时，可以把属性和行为放在不同的权限下，加以控制</p><p>访问权限有三种：<br>1、public 公共权限<br>2、protected 保护权限<br>3、private 私有权限</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*访问权限</span></span><br><span class="line"><span class="comment">三种</span></span><br><span class="line"><span class="comment">公共权限 public 成员类内外都可以访问</span></span><br><span class="line"><span class="comment">保护权限 protected 类内可以访问 子类可以访问</span></span><br><span class="line"><span class="comment">私有权限 private  类内可以访问 子类不能访问</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">保护和私有的关系主要在继承</span></span><br><span class="line"><span class="comment">父类的保护权限子类可以访问</span></span><br><span class="line"><span class="comment">私有权限就不可以*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string pname;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">string pcar;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string password;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setFunc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">pname = <span class="string">&quot;jack&quot;</span>;</span><br><span class="line">pcar = <span class="string">&quot;BMW&quot;</span>;</span><br><span class="line">password = <span class="string">&quot;123321&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*这里在类内访问都是正常的，没有问题</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*实例化一个具体的对象进行操作*/</span></span><br><span class="line">Person p1;</span><br><span class="line"></span><br><span class="line">p<span class="number">1.</span>pname = <span class="string">&quot;mike&quot;</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">p1.pcar = &quot;benz&quot;;</span></span><br><span class="line"><span class="comment">p1.password = &quot;123123&quot;;</span></span><br><span class="line"><span class="comment">报错 说明类外不可以访问</span></span><br><span class="line"><span class="comment">protected和private权限</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="struct和class区别"><a href="#struct和class区别" class="headerlink" title="struct和class区别"></a>struct和class区别</h3><p>在c++中 struct和class <strong>唯一的区别</strong>就是<strong><u>默认的访问权限不同</u></strong></p><p><strong>区别</strong>：<br>struct默认权限为公共<br>class 默认权限为私有</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a1;</span><br><span class="line"><span class="comment">/*默认权限是私有*/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">C2</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a2;</span><br><span class="line"><span class="comment">/*默认是公共权限*/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*struct和class 区别</span></span><br><span class="line"><span class="comment">struct 默认权限是公共</span></span><br><span class="line"><span class="comment">class 默认权限是私有*/</span></span><br><span class="line">C1 obj1;</span><br><span class="line">C2 obj2;</span><br><span class="line"></span><br><span class="line">obj<span class="number">1.</span>a1 = <span class="number">1</span>;</span><br><span class="line"><span class="comment">/*这里不可以访问</span></span><br><span class="line"><span class="comment">因为对于class来说</span></span><br><span class="line"><span class="comment">a1默认是私有的*/</span></span><br><span class="line">obj<span class="number">2.</span>a2 = <span class="number">2</span>;</span><br><span class="line"><span class="comment">/*这里可以访问</span></span><br><span class="line"><span class="comment">因为对于struct来说</span></span><br><span class="line"><span class="comment">a2默认是公共的*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="成员属性设置为私有"><a href="#成员属性设置为私有" class="headerlink" title="成员属性设置为私有"></a>成员属性设置为私有</h3><p><strong>优点</strong>1：将所有成员属性设置为私有，可以自己控制读写权限<br><strong>优点</strong>2：对于写权限，我们可以检测数据的有效性</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*成员属性设置私有</span></span><br><span class="line"><span class="comment">可以自己控制读写权限</span></span><br><span class="line"><span class="comment">对于写权限可以检测数据有效性</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string pname;<span class="comment">//姓名 可读写</span></span><br><span class="line"><span class="type">int</span> page = <span class="number">18</span>;<span class="comment">//年龄 只读</span></span><br><span class="line">string idol;<span class="comment">//偶像 只写</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//设置姓名</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setName</span><span class="params">(string name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">pname = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取姓名</span></span><br><span class="line"><span class="function">string <span class="title">getName</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> pname;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*获取年龄*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getAge</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> page;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*设置偶像*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setIdol</span><span class="params">(string name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">idol = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加设置年龄的公共函数</span></span><br><span class="line"><span class="comment">然后添加一个验证</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setAge</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a&lt;<span class="number">0</span> || a&gt;<span class="number">150</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;不合法字符&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">page = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Person p1;</span><br><span class="line"><span class="comment">/*设置姓名*/</span></span><br><span class="line"><span class="comment">//p.pname = &quot;jack&quot;;</span></span><br><span class="line"><span class="comment">//访问不到 报错</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;name:&quot; &lt;&lt; p1.pname &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//上面的语句同样报错</span></span><br><span class="line">p<span class="number">1.</span><span class="built_in">setName</span>(<span class="string">&quot;john&quot;</span>);</span><br><span class="line">cout &lt;&lt; p<span class="number">1.</span><span class="built_in">getName</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*对于年龄</span></span><br><span class="line"><span class="comment">我们只写了获取的方法</span></span><br><span class="line"><span class="comment">所有理论上没有任何办法可以修改年龄</span></span><br><span class="line"><span class="comment">p1.setAge(20);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">p<span class="number">1.</span><span class="built_in">getAge</span>();</span><br><span class="line">cout &lt;&lt; p<span class="number">1.</span><span class="built_in">getAge</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">p<span class="number">1.</span><span class="built_in">setIdol</span>(<span class="string">&quot;jackson&quot;</span>);</span><br><span class="line"><span class="comment">/*用get会报错 这里就不演示了*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*一句话形容</span></span><br><span class="line"><span class="comment">就是通过公共的set方法来写</span></span><br><span class="line"><span class="comment">通过get方法来读</span></span><br><span class="line"><span class="comment">通过公共的 set和get方法 我们自己就能控制读和写*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加验证 可以写 但是年龄必须在0-150之间*/</span></span><br><span class="line">p<span class="number">1.</span><span class="built_in">setAge</span>(<span class="number">160</span>);</span><br><span class="line">cout &lt;&lt; p<span class="number">1.</span><span class="built_in">getAge</span>() &lt;&lt; endl;</span><br><span class="line">p<span class="number">1.</span><span class="built_in">setAge</span>(<span class="number">70</span>);</span><br><span class="line">cout &lt;&lt; p<span class="number">1.</span><span class="built_in">getAge</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="练习案例："><a href="#练习案例：" class="headerlink" title="练习案例："></a>练习案例：</h3><h4 id="设计立方体类"><a href="#设计立方体类" class="headerlink" title="设计立方体类"></a>设计立方体类</h4><p>设计立方体类（Cube）<br>求出立方体的面积和体积<br>分别用全局函数和成员函数判断两个立方体是否相等</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*立方体类设计</span></span><br><span class="line"><span class="comment">1、创建立方体类</span></span><br><span class="line"><span class="comment">2、设计属性和行为</span></span><br><span class="line"><span class="comment">3、获取立方体的面积和体积</span></span><br><span class="line"><span class="comment">4、分别利用全局函数和成员函数</span></span><br><span class="line"><span class="comment">判断两个立方体是否相等*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cube</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">/*定义私有属性长宽高*/</span></span><br><span class="line"><span class="type">int</span> length;</span><br><span class="line"><span class="type">int</span> wideth;</span><br><span class="line"><span class="type">int</span> height;</span><br><span class="line"><span class="comment">/*行为*/</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*这里放getset*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getLen</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setLen</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">length = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getwide</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> wideth;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setwide</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">wideth = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getHeig</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> height;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setHeig</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">height = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*计算面积*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">SurF</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> surface = (length * height + length * wideth + height * wideth) * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> surface;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*计算体积*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">volume</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> volume = length * height *wideth;</span><br><span class="line"><span class="keyword">return</span> volume;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用成员函数判断两个立方体是否相等*/</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">JudgeInClass</span><span class="params">(Cube&amp; a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (height == a.<span class="built_in">getHeig</span>() &amp;&amp; wideth == a.<span class="built_in">getwide</span>() &amp;&amp; length == a.<span class="built_in">getLen</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用全局函数判断两个立方体是否相等*/</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Judge</span><span class="params">(Cube&amp; c1, Cube&amp; c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (c<span class="number">1.</span><span class="built_in">getHeig</span>() == c<span class="number">2.</span><span class="built_in">getHeig</span>() &amp;&amp; c<span class="number">1.</span><span class="built_in">getwide</span>() == c<span class="number">2.</span><span class="built_in">getwide</span>() &amp;&amp; c<span class="number">1.</span><span class="built_in">getLen</span>() == c<span class="number">2.</span><span class="built_in">getLen</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Cube c1;</span><br><span class="line">c<span class="number">1.</span><span class="built_in">setLen</span>(<span class="number">7</span>);</span><br><span class="line">c<span class="number">1.</span><span class="built_in">setwide</span>(<span class="number">8</span>);</span><br><span class="line">c<span class="number">1.</span><span class="built_in">setHeig</span>(<span class="number">9</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 s surface is: &quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">SurF</span>() &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 s volume is: &quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">volume</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">Cube c2;</span><br><span class="line">c<span class="number">2.</span><span class="built_in">setLen</span>(<span class="number">7</span>);</span><br><span class="line">c<span class="number">2.</span><span class="built_in">setwide</span>(<span class="number">8</span>);</span><br><span class="line">c<span class="number">2.</span><span class="built_in">setHeig</span>(<span class="number">9</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c2 s surface is: &quot;</span> &lt;&lt; c<span class="number">2.</span><span class="built_in">SurF</span>() &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c2 s volume is: &quot;</span> &lt;&lt; c<span class="number">2.</span><span class="built_in">volume</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用全局函数判断*/</span></span><br><span class="line"><span class="type">bool</span> ret = <span class="built_in">Judge</span>(c1, c2);</span><br><span class="line"><span class="keyword">if</span> (ret)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 and c2 is same&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 and c2 is not same&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*利用成员函数判断*/</span></span><br><span class="line"><span class="type">bool</span> ret1 = c<span class="number">1.</span><span class="built_in">JudgeInClass</span>(c2);</span><br><span class="line"><span class="keyword">if</span> (ret1)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 and c2 is same&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 and c2 is not same&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="点和圆的关系"><a href="#点和圆的关系" class="headerlink" title="点和圆的关系"></a>点和圆的关系</h4><p>设计一个圆形类（Circle)和一个点类（Point)计算点和圆的关系</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/*点和圆的关系案例</span></span><br><span class="line"><span class="comment"> * 点*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> p_x;</span><br><span class="line"><span class="type">int</span> p_y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*xy坐标的get and set*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setX</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p_x = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setY</span><span class="params">(<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p_y = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getX</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> p_x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getY</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> p_y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/*圆类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> c_r;</span><br><span class="line">Point c_Center;</span><br><span class="line"><span class="comment">/*在类中可以让给另一个类作为本类的成员*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*设置和获取半径*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setR</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">c_r = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getR</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> c_r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*设置和获取圆心*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setCenter</span><span class="params">(Point center)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">c_Center = center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Point <span class="title">getCenter</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> c_Center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">isInCircle</span><span class="params">(Circle&amp; c, Point&amp; p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*计算两点之间距离的平方*/</span></span><br><span class="line"><span class="type">int</span> distance =</span><br><span class="line">(c.<span class="built_in">getCenter</span>().<span class="built_in">getX</span>() - p.<span class="built_in">getX</span>()) * (c.<span class="built_in">getCenter</span>().<span class="built_in">getX</span>() - p.<span class="built_in">getX</span>()) +</span><br><span class="line">(c.<span class="built_in">getCenter</span>().<span class="built_in">getY</span>() - p.<span class="built_in">getY</span>()) * (c.<span class="built_in">getCenter</span>().<span class="built_in">getY</span>() - p.<span class="built_in">getY</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">/*计算半径的平方*/</span></span><br><span class="line"><span class="type">int</span> rad2 = c.<span class="built_in">getR</span>()* c.<span class="built_in">getR</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*判断*/</span></span><br><span class="line"><span class="keyword">if</span> (distance &gt; rad2)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;point is out of circle&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (distance == rad2)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;point is on the circle&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;point is in the circle&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建圆*/</span></span><br><span class="line">Circle c1;</span><br><span class="line">c<span class="number">1.</span><span class="built_in">setR</span>(<span class="number">10</span>);</span><br><span class="line">Point center;</span><br><span class="line">center.<span class="built_in">setX</span>(<span class="number">10</span>);</span><br><span class="line">center.<span class="built_in">setY</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">c<span class="number">1.</span><span class="built_in">setCenter</span>(center);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建点*/</span></span><br><span class="line">Point p1;</span><br><span class="line">p<span class="number">1.</span><span class="built_in">setX</span>(<span class="number">10</span>);</span><br><span class="line">p<span class="number">1.</span><span class="built_in">setY</span>(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*判断  */</span></span><br><span class="line"><span class="built_in">isInCircle</span>(c1, p1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="对象的初始化和清理-重点"><a href="#对象的初始化和清理-重点" class="headerlink" title="对象的初始化和清理(重点)"></a>对象的初始化和清理(重点)</h3><p>生活中我们卖的电子产品都有出厂设置，在某一天我们不用之后也会删除一些自己的信息数据来保护隐私<br>C++中的面向对象来源于生活，每个对象也会有初始设置以及对象销毁前的清理数据的设置</p><h4 id="构造函数和析构函数-重点"><a href="#构造函数和析构函数-重点" class="headerlink" title="构造函数和析构函数(重点)"></a>构造函数和析构函数(重点)</h4><p>对象的初始化和清理也是两个非常重要的安全问题<br>    一个对象或者变量没有初始状态，对其使用后果是未知的<br>    通过杨使用完一个对象或者变量，没有及时清理，也会造成一些安全问题</p><p>C+++利用了<strong>构造函数和析构函数</strong>解决上述问题，这两个函数将会被自动编译器自动调用，完成对象初始化和清理工作。<br>对象的初始化和清理工作是编译器强制要我们做的事情，<br><strong>因此如果我们不提供构造和析构，编译器会提供的构造和析构函数是空实现</strong><br>(就是说一行代码都没有 里面是空的)</p><p>构造函数 ：主要作用在于创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无需手动调用。<br>析构函数：主要作用在于对象销毁前系统自动调用，执行一些清理工作。</p><p> 构造函数语法啊:类名(){}<br>1.构造函数没有返回值也不写void<br>2.函数名称与类名相同<br>3.构造函数可以有参数,因此可以发生重载<br>4.程序在调用对香港时候会自动调用构造,无须手动调用,而且只会调用一次</p><p>析构函数语法: ~类名(){}<br>1.析构函数,没有返回值也不写void<br>2..函数名称与类名相同,在名称前加上符号~<br>3.析构哈桉树不可以有参数因此不可以发生重载<br>4.程序在对象销毁前会自动调用析构,无需手动调用,而且只会调用一次</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*对象的初始化和清理*/</span></span><br><span class="line"><span class="comment">/*构造函数进行初始化的操作*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*构造函数*/</span></span><br><span class="line"><span class="comment">/*没有返回值 不用void</span></span><br><span class="line"><span class="comment">函数名 = 类名 可以有参数可以重载</span></span><br><span class="line"><span class="comment">创建对象的时候自动调用*/</span></span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;构造函数的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*不写的话编译器就自动生成一个无内容的*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*析构函数进行清理的操作</span></span><br><span class="line"><span class="comment">没有返回值不写void</span></span><br><span class="line"><span class="comment">函数名和类名相同 前面加~</span></span><br><span class="line"><span class="comment">析构函数不可以有参数 无法重载</span></span><br><span class="line"><span class="comment">对象销毁前自动调用析构函数 只会调用一次*/</span></span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person 的析构 函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span>  <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在进入了test01&quot;</span> &lt;&lt; endl;</span><br><span class="line">Person p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*为什么这里要通过test01执行</span></span><br><span class="line"><span class="comment">因为test01作为栈上的函数 执行完之后内部的东西全部会销毁</span></span><br><span class="line"><span class="comment">这样的话内部创建的person也会被销毁</span></span><br><span class="line"><span class="comment">所以就会调用析构函数 如果只是在main里面创建person</span></span><br><span class="line"><span class="comment">就没办法展示析构函数调用的部分*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Person p1;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="构造函数的分类以及调用（重点）"><a href="#构造函数的分类以及调用（重点）" class="headerlink" title="构造函数的分类以及调用（重点）"></a>构造函数的分类以及调用（重点）</h4><p>两种分类方式：<br>    按参数分：有参构造和无参构造<br>    按类型分：普通构造和拷贝构造</p><p>三种调用方式：<br>    括号法<br>    显示法<br>    隐式转换法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*构造函数的分类以调用</span></span><br><span class="line"><span class="comment">分类</span></span><br><span class="line"><span class="comment">按照参数分类</span></span><br><span class="line"><span class="comment">可以分为有参构造函数和无参构造函数（默认构造函数）</span></span><br><span class="line"><span class="comment">按照 类型来分 普通构造和拷贝构造*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a)</span><br><span class="line">&#123;</span><br><span class="line">age = a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person有参构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*拷贝构造函数*/</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person &amp;p)</span><br><span class="line">&#123;<span class="comment">/*传入了一个person类的数据</span></span><br><span class="line"><span class="comment"> 把传入的person类上的所有属性拷贝到这个构造的person类中</span></span><br><span class="line"><span class="comment"> 这里加上const 保证不会修改原始的要被拷贝的数据 然后通过引用的方式传入*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*将传入的人身上的所有属性拷贝到我身上*/</span></span><br><span class="line">age = p.age;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person拷贝构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person 析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*调用*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*括号法*/</span></span><br><span class="line">Person p;</span><br><span class="line"><span class="comment">/*默认构造函数调用*/</span></span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="comment">/*调用有参构造函数*/</span></span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(p2)</span></span>;</span><br><span class="line"><span class="comment">/*调用拷贝构造函数*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*注意事项</span></span><br><span class="line"><span class="comment">调用默认构造函数的时候不要加（）*/</span></span><br><span class="line"><span class="comment">//person p4();</span></span><br><span class="line"><span class="comment">/*如果写成这样 没有发生任何事</span></span><br><span class="line"><span class="comment">因为上面的代码 编译器会认为是一个函数的声明</span></span><br><span class="line"><span class="comment">所以不会认为在创建对象*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;age of p2: &quot;</span> &lt;&lt; p<span class="number">2.</span>age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;age of p3: &quot;</span> &lt;&lt; p<span class="number">3.</span>age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*显示法*/</span></span><br><span class="line">Person p5;</span><br><span class="line">Person p6 = <span class="built_in">Person</span>(<span class="number">10</span>);</span><br><span class="line">Person p7 = <span class="built_in">Person</span>(p6);</span><br><span class="line"><span class="comment">/*分别用显示法调用三种构造*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>(<span class="number">10</span>);<span class="comment">/*匿名对象</span></span><br><span class="line"><span class="comment">特点：当前行结束后，系统会立刻回收掉匿名对象*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;匿名对象的下一行&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*不要利用拷贝构造函数初始化匿名对象*/</span></span><br><span class="line"><span class="comment">/*Person(p3); 编译器会认为person（p3） === person p3;</span></span><br><span class="line"><span class="comment">* 编译器认为这是一个对象的声明</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*隐式转换法*/</span></span><br><span class="line">Person p8 = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*相当于 写了 Person p4 = Person(10);*/</span></span><br><span class="line">Person p9 = p8; <span class="comment">/*隐式的拷贝构造*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="拷贝构造函数调用时机"><a href="#拷贝构造函数调用时机" class="headerlink" title="拷贝构造函数调用时机"></a>拷贝构造函数调用时机</h4><p>C++中拷贝构造函数调用实际通常有三种情况<br>使用一个一集创建完毕的对象来初始化一个新对象<br>值传递的方式给函数参数传值<br>以值方式返回局部对象</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*拷贝构造函数调用时机*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person默认构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> tage)</span><br><span class="line">&#123;</span><br><span class="line">age = tage;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person有参构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person &amp;p)</span><br><span class="line">&#123;</span><br><span class="line">age = p.age;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person拷贝构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person 析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//1\使用一个一集创建完毕的对象来初始化一个新对象</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(p1)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2 age:&quot;</span> &lt;&lt; p<span class="number">2.</span>age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//值传递的方式给函数参数传值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">doWord</span><span class="params">(Person p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*其实这里就是在调用拷贝函数创建一个新的p*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p3;</span><br><span class="line"><span class="built_in">doWord</span>(p3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//以值方式返回局部对象</span></span><br><span class="line"><span class="function">Person <span class="title">doWork2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p1;</span><br><span class="line"><span class="comment">/*这里的p1式一个局部变量</span></span><br><span class="line"><span class="comment">生命周期只在函数 内部 没办法超过这个函数</span></span><br><span class="line"><span class="comment">所以下面return的时候 其实是调用拷贝函数拷贝出了一个新的对象*/</span></span><br><span class="line"><span class="keyword">return</span> p1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p = <span class="built_in">doWork2</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"><span class="built_in">test03</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="构造函数调用规则（重要）"><a href="#构造函数调用规则（重要）" class="headerlink" title="构造函数调用规则（重要）"></a>构造函数调用规则（重要）</h4><p>默认情况想爱爱，c++的编译器至少给一个类添加三个函数<br>1、默认构造函数 无参 函数体为空<br>2、默认析构函数 无参 函数体为空<br>3、默认拷贝构造函数 对属性值进行拷贝</p><p>构造函数调用规则如下：<br>如果用户定义有参构造函数，c++不在提供默认无参构造，但是会提供默认拷贝构造<br>如果用户定义拷贝构造函数，c++不会再提供其他构造函数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数的调用规则</span></span><br><span class="line"><span class="comment">/*创建一个类 cpp会给每个类都添加至少三个函数*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认构造 空实现</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//拷贝构造</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Page;</span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person 的默认函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*如果把这个无参构造函数注释掉之后再调用函数test02就会报错</span></span><br><span class="line"><span class="comment">因为生成了有参构造函数之后编译器就不会再生成有参构造函数</span></span><br><span class="line"><span class="comment">但是依然会提供拷贝构造函数</span></span><br><span class="line"><span class="comment">如果单独写了 拷贝构造函数 那么编译器就不再提供任何其他构造函数*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> age)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person的有参构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">Page = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//拷贝函数</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person&amp; p)</span><br><span class="line">&#123;</span><br><span class="line">Page = p.Page;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的拷贝构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*写不写拷贝构造函数 下面的Person p2(p)都可以实现</span></span><br><span class="line"><span class="comment">因为如果你不写 他会生成一个默认的 功能也是把一个改类对象的值赋给另一个对象*/</span></span><br><span class="line"></span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person 的析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">p.Page = <span class="number">18</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(p)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2的年龄为&quot;</span> &lt;&lt; p<span class="number">2.</span>Page &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*写了有参构造函数之后编译器就不会再自动提供默认构造函数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结</strong>：定义了拷贝构造函数之后编译器不会自动生成任何其他函数。<br>定义了有参构造函数之后编译器不会自动生成无参构造函数，但是仍会生成拷贝构造函数</p><h4 id="深浅拷贝"><a href="#深浅拷贝" class="headerlink" title="深浅拷贝"></a>深浅拷贝</h4><p>浅拷贝：简单的赋值拷贝操作(带来的问题 堆区重复释放 这个问题要用深拷贝解决)<br>深拷贝：在堆区重新申请空间，进行拷贝操作</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*深拷贝和浅拷贝*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span>* pheight;<span class="comment">//身高</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;调用无参构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;调用有参构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a,<span class="type">int</span> h)</span><br><span class="line">&#123;</span><br><span class="line">age = a;</span><br><span class="line">pheight = <span class="keyword">new</span> <span class="built_in">int</span>(h);</span><br><span class="line"><span class="comment">/*把数据开辟到堆区*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;调用有参构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自己实现拷贝构造函数 解决潜拷贝带来的问题</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person&amp; p)</span><br><span class="line">&#123;</span><br><span class="line">age = p.age;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;调用拷贝构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//pheight = p.pheight;</span></span><br><span class="line"><span class="comment">//编译器默认实现的就是上面这行代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//深拷贝操作</span></span><br><span class="line">pheight = <span class="keyword">new</span> <span class="built_in">int</span>(*p.pheight);</span><br><span class="line"><span class="comment">/*这行代码确保了每个拷贝出来的person 的height</span></span><br><span class="line"><span class="comment">都可以指向一块属于自己的height的内存 而不是全部指向同一块*/</span></span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*通过析构函数释放内存*/</span></span><br><span class="line"><span class="keyword">if</span> (pheight != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> pheight;</span><br><span class="line">pheight = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">/*先把内存释放干净</span></span><br><span class="line"><span class="comment">再防止野指针出现 确保指针指向空*/</span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;调用析构函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//Person p1(18);</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;age of p1&quot; &lt;&lt; p1.age &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//Person p2(p1);</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;age of p2&quot; &lt;&lt; p2.age &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">///*如果把手动定义的拷贝构造函数删除，</span></span><br><span class="line"><span class="comment">//然后执行上面的代码，他就会默认执行一个</span></span><br><span class="line"><span class="comment">//浅拷贝的操作*/</span></span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>, <span class="number">160</span>)</span></span>;</span><br><span class="line"> cout &lt;&lt; <span class="string">&quot;age of p1&quot;</span> &lt;&lt; p<span class="number">1.</span>age &lt;&lt; <span class="string">&quot;height of p1:&quot;</span>&lt;&lt; *p<span class="number">1.</span>pheight &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"> <span class="function">Person <span class="title">p2</span><span class="params">(p1)</span></span>;</span><br><span class="line"> cout &lt;&lt; <span class="string">&quot;age of p2&quot;</span> &lt;&lt; p<span class="number">2.</span>age &lt;&lt; <span class="string">&quot;height of p2:&quot;</span> &lt;&lt; *p<span class="number">2.</span>pheight &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：如果属性有再堆区开辟，那么一定要自己提供拷贝构造函数，防止浅的拷贝带来的问题</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241224093024989.png" alt="image-20241224093024989"></p><h4 id="初始化列表"><a href="#初始化列表" class="headerlink" title="初始化列表"></a>初始化列表</h4><p><strong>作用</strong>：<br>C++提供了初始化列表语法，用来初始化属性<br><strong>语法</strong>：构造函数（）属性1{值1},属性2{值2}</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化列表</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*无参构造*/</span></span><br><span class="line"><span class="comment">//Person()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//传统初始化操作</span></span><br><span class="line"><span class="comment">/*通过构造函数赋初始值*/</span></span><br><span class="line"><span class="comment">//Person(int a1, int b1, int c1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//a = a1;</span></span><br><span class="line"><span class="comment">//b = b1;</span></span><br><span class="line"><span class="comment">//c = c1;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*初始化列表初始化属性*/</span></span><br><span class="line"><span class="built_in">Person</span>():<span class="built_in">a</span>(<span class="number">10</span>),<span class="built_in">b</span>(<span class="number">20</span>),<span class="built_in">c</span>(<span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*上面的办法可行 但是问题是只能赋10 20 30</span></span><br><span class="line"><span class="comment">写成下面的写法可以*/</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a1,<span class="type">int</span> b1,<span class="type">int</span> c1) :<span class="built_in">a</span>(a1), <span class="built_in">b</span>(b1), <span class="built_in">c</span>(c1)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*注意记住初始化列表的语法*/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//Person p(10, 20, 30);</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;a: &quot; &lt;&lt; p.a &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;b: &quot; &lt;&lt; p.b &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;c: &quot; &lt;&lt; p.c &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">/*通过传统方法赋值并输出*/</span></span><br><span class="line"></span><br><span class="line">Person p1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1 a: &quot;</span> &lt;&lt; p<span class="number">1.</span>a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1 b: &quot;</span> &lt;&lt; p<span class="number">1.</span>b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1 c: &quot;</span> &lt;&lt; p<span class="number">1.</span>c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">30</span>, <span class="number">20</span>, <span class="number">10</span>)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2 a: &quot;</span> &lt;&lt; p<span class="number">2.</span>a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2 b: &quot;</span> &lt;&lt; p<span class="number">2.</span>b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2 c: &quot;</span> &lt;&lt; p<span class="number">2.</span>c &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="类对象作为类的成员"><a href="#类对象作为类的成员" class="headerlink" title="类对象作为类的成员"></a>类对象作为类的成员</h4><p>C++类中的成员可以是另一个类的对象</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span></span><br><span class="line">&#123;A a1;&#125;</span><br></pre></td></tr></table></figure><p>B类中有对象A作为成员，A为对象成员<br>那么当创建B对象时，A与B的构造和析构的顺序是谁先谁后</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*类对象作为类成员*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Phone</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string brand;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Phone</span>(string name)</span><br><span class="line">&#123;</span><br><span class="line">brand = name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;phone的构造函数的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Phone</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;phone的析构函数的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*姓名 手机*/</span></span><br><span class="line">string Pname;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*隐式转换法</span></span><br><span class="line"><span class="comment">* 使用下面的初始化列表的时候</span></span><br><span class="line"><span class="comment">* 编译器自动转换成下面的代码</span></span><br><span class="line"><span class="comment">* 所以可以直接把字符串类型赋值给下面的phone对象</span></span><br><span class="line"><span class="comment">Phone m_Phone = pName*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用初始化列表调用*/</span></span><br><span class="line">Phone Pphone;</span><br><span class="line"><span class="built_in">Person</span>(string name, string phone):<span class="built_in">Pname</span>(name),<span class="built_in">Pphone</span>(phone)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person构造函数的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person 析构函数的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p</span><span class="params">(<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;苹果&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; p.Pname &lt;&lt; <span class="string">&quot;拿着:&quot;</span> &lt;&lt; p.Pphone.brand &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="静态成员（非常重要）"><a href="#静态成员（非常重要）" class="headerlink" title="静态成员（非常重要）"></a>静态成员（非常重要）</h4><p>静态成员就是在成员变量和成员函数前加上关键字static 称为静态成员<br>静态成员分为：</p><p>静态成员变量<br>1 所有对象共享同一份数据<br>2 在编译阶段分配内存<br>3 <strong>类内声明，类外初始化</strong><br>静态成员函数<br>1 所有对象共享同一个函数<br>2 <strong>静态成员函数只能访问静态成员</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*静态成员变量*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> P_A;</span><br><span class="line"><span class="comment">/*加上static之后就变成静态成员了</span></span><br><span class="line"><span class="comment">对于静态成员</span></span><br><span class="line"><span class="comment">1、所有对象都共享同一份数据</span></span><br><span class="line"><span class="comment">2、编译阶段就分配了内存</span></span><br><span class="line"><span class="comment">3、在类内声明 在类外进行 初始化操作*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*静态成员变量也是有访问权限的*/</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> P_B;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Person::P_A = <span class="number">100</span>;</span><br><span class="line"><span class="comment">/*通过这种格式写</span></span><br><span class="line"><span class="comment">类名::静态变量 </span></span><br><span class="line"><span class="comment">这样就相当于在类内做了声明 在类外做了初始化</span></span><br><span class="line"><span class="comment">Person::的意思 作用域 作用域的范围是Person类内部*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Person::P_B = <span class="number">300</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">cout &lt;&lt; p.P_A &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*一开始报错 没有初始化*/</span></span><br><span class="line"></span><br><span class="line">Person p2;</span><br><span class="line">p<span class="number">2.</span>P_A = <span class="number">200</span>;</span><br><span class="line">cout &lt;&lt; p.P_A &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*这里修改的是p2 的值</span></span><br><span class="line"><span class="comment">然后访问的是原来的p 发现p的值也改变了</span></span><br><span class="line"><span class="comment">说明两个实例的P_A其实是同一个东西 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*静态成员变量  不属于某个对象上</span></span><br><span class="line"><span class="comment">所有对象都共享同一份数据</span></span><br><span class="line"><span class="comment">因此静态成员变量有两种访问方式*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;test02&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*通过对象进行访问*/</span></span><br><span class="line">Person p3;</span><br><span class="line">cout &lt;&lt; p<span class="number">3.</span>P_A &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过类名进行访问*/</span></span><br><span class="line">cout &lt;&lt; Person::P_A &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*通过类名访问的时候要用作用域的符号 而不是.*/</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; Person::P_B &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">/*无法访问 因为是private*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>静态成员函数</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*静态成员函数*/</span></span><br><span class="line"><span class="comment">/*所有对象共享同一个函数</span></span><br><span class="line"><span class="comment">静态成员函数只能访问静态成员变量 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> pa;</span><br><span class="line"><span class="type">int</span> pb;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;func 中 修改前&quot;</span> &lt;&lt; pa &lt;&lt; endl;</span><br><span class="line">pa = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func 中 修改后&quot;</span> &lt;&lt; pa &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;static void func调用&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//pb = 10;</span></span><br><span class="line"><span class="comment">/*上述代码报错</span></span><br><span class="line"><span class="comment">因为pb是非静态成员变量</span></span><br><span class="line"><span class="comment"> 这个func是一个静态成员函数</span></span><br><span class="line"><span class="comment"> 只能访问静态成员变量</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> 原理 无法区分到底是哪个对象的pb</span></span><br><span class="line"><span class="comment"> 对于pa 因为是共享的 所有对象共用 所以可以区分*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*静态成员函数也是有访问权限的*/</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;调用func2&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">func2</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Person::pa = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*有两种访问方式*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*通过对象进行访问*/</span></span><br><span class="line">Person p;</span><br><span class="line">p.<span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过类名进行访问*/</span></span><br><span class="line">Person::<span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line">p.<span class="built_in">func3</span>();</span><br><span class="line"><span class="comment">/*通过这种方式可以调用func2*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-对象模型和this指针"><a href="#C-对象模型和this指针" class="headerlink" title="C++对象模型和this指针"></a>C++对象模型和this指针</h3><h4 id="成员变量和成员函数分开存储"><a href="#成员变量和成员函数分开存储" class="headerlink" title="成员变量和成员函数分开存储"></a>成员变量和成员函数分开存储</h4><p>在c++中，类内的成员变量和成员函数分开存储<br><strong>只有静态成员变量才属于类的对象上</strong><br>空对象的大小是1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*成员变量和成员函数是分开存储的*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> pa;</span><br><span class="line"><span class="type">int</span> pc;</span><br><span class="line"><span class="comment">/*非静态成员变量 属于类的对象上*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> pb;</span><br><span class="line"><span class="comment">/*静态成员变量 不属于类的对象上*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*非静态成员函数 内存还是不属于类的对象上*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*静态成员函数 内存还是不属于类的对象上*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*只有非静态成员变量属于类的对象上*/</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> Person::pb = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line"><span class="comment">/*空对象占用内存空间为*/</span></span><br><span class="line"><span class="comment">/*cpp编译器会给每个空对象也分配一个字节空间</span></span><br><span class="line"><span class="comment">是为了区分空对象占内存的位置*/</span></span><br><span class="line"><span class="comment">/*每个空对象也应该有一个独一无二的内存地址*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of p &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(p) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of p &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(p) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//test01();</span></span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="this指针概念"><a href="#this指针概念" class="headerlink" title="this指针概念"></a>this指针概念</h4><p>通过3.2.1我们知道在C++中成员变量和成员函数是分开存储的<br>每一个非静态成员函数只会诞生一份函数实例，就是说多个同类型的对象会共用一块代码<br>那么问题是:这一块代码是如何区分哪个对象调用自己的呢？</p><p>C++通过提供特殊的对象指针,this指针，解决上述问题。<strong><u>this指针指向被调用的成员函数所属的对象。</u></strong></p><p>this指针式隐含每一个非静态成员函数内的一种指针<br>this指针不需要定义，直接使用即可</p><p>this指针的用途：<br>当形参和成员变量同名的时候，可用this指针来区分<br>在类型非静态成员你函数中返回对象本身，可使用return *this</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*this 指针*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;age = age;</span><br><span class="line"><span class="comment">/*原本这里会有名称冲突*/</span></span><br><span class="line"><span class="comment">/*this 指针指向的是被调用的成员函数所属的对象*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Person&amp; <span class="title">PersonAddAge</span><span class="params">(Person &amp;p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;age += p.age;</span><br><span class="line"><span class="comment">/*this-&gt;age++;*/</span></span><br><span class="line"><span class="comment">/*this 指向p2指针 而*this 指向p2这个实例*/</span></span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PersonAddAge1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;age += <span class="number">1</span>;</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*解决名称冲突*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1的年龄为&quot;</span> &lt;&lt; p<span class="number">1.</span>age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*返回对象本身用*this*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">p<span class="number">2.</span><span class="built_in">PersonAddAge1</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;age of p2:&quot;</span> &lt;&lt; p<span class="number">2.</span>age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">p<span class="number">2.</span><span class="built_in">PersonAddAge</span>(p3);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;age of p2:&quot;</span> &lt;&lt; p<span class="number">2.</span>age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*链式编程思想*/</span></span><br><span class="line">p<span class="number">2.</span><span class="built_in">PersonAddAge</span>(p3).<span class="built_in">PersonAddAge</span>(p3);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;age of p2:&quot;</span> &lt;&lt; p<span class="number">2.</span>age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*test01();*/</span></span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="空指针访问成员函数"><a href="#空指针访问成员函数" class="headerlink" title="空指针访问成员函数"></a>空指针访问成员函数</h4><p>C++中空指针也是可以调用成员函数的，但是也要注意有没有用到this指针</p><p>如果用到this指针，需要加以判断保证代码的健壮性</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*空指针调用*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showClassName</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is Person class&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showPersonAge</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span> == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;<span class="comment">/*提高代码健壮性</span></span><br><span class="line"><span class="comment"> 如果为空就直接返回掉</span></span><br><span class="line"><span class="comment"> 如果不为空再输出*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;age = &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;age &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*此处调用p指针时 this指针是一个空指针</span></span><br><span class="line"><span class="comment">所以无法访问里面的属性*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person* p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">p-&gt;<span class="built_in">showClassName</span>();</span><br><span class="line">p-&gt;<span class="built_in">showPersonAge</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="const-修饰成员函数"><a href="#const-修饰成员函数" class="headerlink" title="const 修饰成员函数"></a>const 修饰成员函数</h4><p><strong>常函数</strong>：<br>成员函数后加const后我们称为这个函数为<strong>常函数</strong><br>常函数内不可以修改成员变量<br>成员属性声明时加关键字mutable后，再常函数中依然可以修改</p><p><strong>常对象</strong>：<br>声明对象前加const称该对象为常对象<br>常对象只能调用常函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*常函数*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showPerson</span><span class="params">()</span> <span class="type">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*this指针的本质是一个指针常量 </span></span><br><span class="line"><span class="comment">指针的指向是不可以修改的</span></span><br><span class="line"><span class="comment">Person * const this</span></span><br><span class="line"><span class="comment">如果函数加上const </span></span><br><span class="line"><span class="comment">整个指针就不能动了</span></span><br><span class="line"><span class="comment">在成员函数后面加const 修饰的是this指向</span></span><br><span class="line"><span class="comment">让指针指向的值也不可以修改*/</span></span><br><span class="line"><span class="comment">//this-&gt;a = 100;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>-&gt;b = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="keyword">mutable</span> <span class="type">int</span> b;<span class="comment">/*特殊变量 即使在常函数中也可以修改这个值*/</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">p.<span class="built_in">showPerson</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">const</span> Person p1;</span><br><span class="line"><span class="comment">//p1.a = 10;</span></span><br><span class="line"><span class="comment">/*无法跟跟更改*/</span></span><br><span class="line">p<span class="number">1.</span>b = <span class="number">20</span>;</span><br><span class="line"><span class="comment">/*mutable 修饰的成员变量是一个特殊值</span></span><br><span class="line"><span class="comment">即使在常对象下也可以修改*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*常对象只能调用常函数*/</span></span><br><span class="line">p<span class="number">1.</span><span class="built_in">showPerson</span>();</span><br><span class="line"><span class="comment">//p1.func(); 无法调用</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="友元（重要"><a href="#友元（重要" class="headerlink" title="友元（重要)"></a>友元（重要)</h3><p>生活中你的家有客厅（public），有你的卧室（private）<br>客厅所有来的客人都可以进去，但是你的卧室是私有的，也就是说只有你能进去<br>但是呢，你也可以允许你的朋友进去</p><p>在程序里，有些私有属性，也想让类外特殊的一些函数或者类访问，就需要用到友元的技术</p><p>友元的木盾就是让一个函数或者类访问另一个类中私有成员</p><p>友元的关键字为friend</p><p>友元友三种实现<br>全局做友元<br>类做友元<br>成员函数做友元</p><p>友元单向不被继承</p><h4 id="全局函数做友元"><a href="#全局函数做友元" class="headerlink" title="全局函数做友元"></a>全局函数做友元</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*全局函数做友元*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">GoodBoy</span><span class="params">(Building&amp; building)</span></span>;</span><br><span class="line"><span class="comment">/*这里就是在添加一个友元函数的声明</span></span><br><span class="line"><span class="comment">这里的意思就是Building认为 goodboy是他的好朋友</span></span><br><span class="line"><span class="comment">所以让goodboy访问builiding 的私有成员</span></span><br><span class="line"><span class="comment">注意这个声明是包含参数列表的</span></span><br><span class="line"><span class="comment">我认为是添加参数列表的目的可能是用来区分重载函数吧*/</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string LivingRoom;<span class="comment">/*客厅*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string bedroom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Building</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;LivingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;bedroom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GoodBoy</span><span class="params">(Building &amp; building)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友的全局函数 正在访问&quot;</span> &lt;&lt; building.LivingRoom &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*上面是公共的变量 都可以访问，下面是私有的变量</span></span><br><span class="line"><span class="comment">原本无法访问 然后添加一个友元函数的声明在类内*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友的全局函数 正在访问&quot;</span> &lt;&lt; building.bedroom &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*在类的开头加上friend语句只有就可以访问了*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Building b1;</span><br><span class="line"><span class="built_in">GoodBoy</span>(b1);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="类做友元"><a href="#类做友元" class="headerlink" title="类做友元"></a>类做友元</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*类做友元*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">class</span> <span class="title class_">GoodGay</span>;</span><br><span class="line"><span class="comment">/*goodgay类是本类的好朋友，可以访问本类中私有的成员*/</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string LivingRoom;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string BedRoom;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Building</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*类的声明*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GoodGay</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Building * building;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">visit</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">/*参观函数访问buidling类中的属性*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">GoodGay</span>();</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">GoodGay::<span class="built_in">GoodGay</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*创建一个建筑物对象*/</span></span><br><span class="line">building = <span class="keyword">new</span> Building;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友类正在访问&quot;</span> &lt;&lt; building-&gt;LivingRoom &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友类正在访问&quot;</span> &lt;&lt; building-&gt;BedRoom &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*类外写成员函数*/</span></span><br><span class="line">Building::<span class="built_in">Building</span>()</span><br><span class="line">&#123;</span><br><span class="line">LivingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">GoodGay g1;</span><br><span class="line">g<span class="number">1.</span><span class="built_in">visit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="成员函数做友元"><a href="#成员函数做友元" class="headerlink" title="成员函数做友元"></a>成员函数做友元</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义 GoodGay 类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GoodGay</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 声明 GoodGay::visit 为友元函数</span></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    string LivingRoom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    string BedRoom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Building</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;LivingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">        <span class="keyword">this</span>-&gt;BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义 GoodGay 类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GoodGay</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">GoodGay</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        building = <span class="keyword">new</span> Building;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Building* building;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">visit</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 访问 Building 类的私有成员 BedRoom，因为 GoodGay::visit 是友元函数</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;visit函数正在访问： &quot;</span> &lt;&lt; building-&gt;LivingRoom &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;visit函数正在访问： &quot;</span> &lt;&lt; building-&gt;BedRoom &lt;&lt; endl;  <span class="comment">// 这里可以访问 BedRoom</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">visit2</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 只能访问公共成员 LivingRoom，不能访问 private 的 BedRoom</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;visit2函数正在访问： &quot;</span> &lt;&lt; building-&gt;LivingRoom &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    GoodGay g1;</span><br><span class="line">    g<span class="number">1.</span><span class="built_in">visit</span>();  <span class="comment">// 访问 LivingRoom 和 BedRoom</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>理论上可以访问 实际上代码出错 问题暂时还没有解决 下次可以问问老师</p><p>友元定义的三种方式</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*类做友元*/</span></span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">class</span> <span class="title class_">GoodGay</span>;</span><br><span class="line"><span class="comment">/*全局函数做友元*/</span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">GoodBoy</span><span class="params">(Building&amp; building)</span></span>;</span><br><span class="line"><span class="comment">/*成员函数做友元*/</span></span><br><span class="line"> <span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h2 id="运算符重载"><a href="#运算符重载" class="headerlink" title="运算符重载"></a>运算符重载</h2><p>运算符重载概念：对已有的运算符重新定义，赋予其另一种功能，来适应不同的数据类型</p><h4 id="加号运算符重载"><a href="#加号运算符重载" class="headerlink" title="加号运算符重载"></a>加号运算符重载</h4><p>作用：实现了两个自定义数据类型相加的运算</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241225174450781.png" alt="image-20241225174450781"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*加号运算符重载*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*成员函数重载*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="comment">/*成员函数重载*/</span></span><br><span class="line"><span class="comment">//Person operator+(Person&amp; p)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//Person temp;</span></span><br><span class="line"><span class="comment">//temp.a = this-&gt;a + p.a;</span></span><br><span class="line"><span class="comment">//temp.b = this-&gt;b + p.b;</span></span><br><span class="line"><span class="comment">//return temp;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*全集函数重载</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Person <span class="keyword">operator</span>+(Person&amp; p1, Person&amp; p2)</span><br><span class="line">&#123;</span><br><span class="line">Person temp;</span><br><span class="line">temp.a = p<span class="number">1.</span>a + p<span class="number">2.</span>a;</span><br><span class="line">temp.b = p<span class="number">1.</span>b + p<span class="number">2.</span>b;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*写一个重载的版本*/</span></span><br><span class="line">Person <span class="keyword">operator</span>+(Person&amp; p1, <span class="type">int</span> num)</span><br><span class="line">&#123;</span><br><span class="line">Person temp;</span><br><span class="line">temp.a = p<span class="number">1.</span>a + num;</span><br><span class="line">temp.b = p<span class="number">1.</span>b + num;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p1;</span><br><span class="line">p<span class="number">1.</span>a = <span class="number">10</span>;</span><br><span class="line">p<span class="number">1.</span>b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">Person p2;</span><br><span class="line">p<span class="number">2.</span>a = <span class="number">10</span>;</span><br><span class="line">p<span class="number">2.</span>b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数方便调用*/</span></span><br><span class="line">Person p3 = p1 + p2;</span><br><span class="line"><span class="comment">/*成员函数本质调用*/</span></span><br><span class="line"><span class="comment">//Person p3 = p1.operator+(p2);</span></span><br><span class="line"><span class="comment">//Person p3 = operator+(p1, p2);</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a of p3 = &quot;</span> &lt;&lt; p<span class="number">3.</span>a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b of p3 = &quot;</span> &lt;&lt; p<span class="number">3.</span>b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">p3 = p3 + <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a of p3 = &quot;</span> &lt;&lt; p<span class="number">3.</span>a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b of p3 = &quot;</span> &lt;&lt; p<span class="number">3.</span>b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="其他运算符的重载"><a href="#其他运算符的重载" class="headerlink" title="其他运算符的重载"></a>其他运算符的重载</h4><p>这里就不展开多说了，基本上都是一样的<br>可以重载的运算符包括</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">左移运算符&lt;&lt;(左移运算符只能利用全局函数重载)</span><br><span class="line">递增运算 ++</span><br><span class="line">赋值运算符 = </span><br><span class="line">关系运算符 &gt;&lt;=!=</span><br><span class="line">函数调用运算符 ()</span><br></pre></td></tr></table></figure><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>继承是面向对象三大特性之一<br>有些类和类之间存在特殊关系，例如下图中:<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241225203438189.png" alt="image-20241225203438189"></p><p>我们发现，定义这些类时，下级的成员除了拥有上一级的共性，还有自己的特性。<br>这个时候我们就可以考虑利用继承的技术，减少重复代码</p><h4 id="继承的基本语法"><a href="#继承的基本语法" class="headerlink" title="继承的基本语法"></a>继承的基本语法</h4><p>例如我们看到很多网站中 ，都有公共的头部，公共的底部，甚至公共的左侧列表，只有中心内容不同，系欸下啊来我们分别利用普通写法和继承写法来实现页面中的内容，看一下继承存在的意义以及好处。</p><p>语法： class 子类名 ：继承方式  父类名<br>子类也叫派生类<br>父类也叫基类</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*普通实现页面*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///*java页面*/</span></span><br><span class="line"><span class="comment">//class Java</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//public:</span></span><br><span class="line"><span class="comment">//void header()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;首页、公开课、登陆（公共头部）&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//void footer()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;底部内容&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//void left()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;java python c++等连接(公共分类列表)&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//void content()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;java学科视频&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">///*python页面*/</span></span><br><span class="line"><span class="comment">//class Python</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//public:</span></span><br><span class="line"><span class="comment">//void header()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;首页、公开课、登陆（公共头部）&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//void footer()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;底部内容&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//void left()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;java python c++等连接(公共分类列表)&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//void content()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;python学科视频&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//void test01()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;java下载视频的页面如下&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//Java j1;</span></span><br><span class="line"><span class="comment">//j1.header();</span></span><br><span class="line"><span class="comment">//j1.content();</span></span><br><span class="line"><span class="comment">//j1.left();</span></span><br><span class="line"><span class="comment">//j1.footer();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;=======分割==========&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//Python p1;</span></span><br><span class="line"><span class="comment">//p1.header();</span></span><br><span class="line"><span class="comment">//p1.content();</span></span><br><span class="line"><span class="comment">//p1.left();</span></span><br><span class="line"><span class="comment">//p1.footer();</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*继承实现页面*/</span></span><br><span class="line"><span class="comment">/*先写一个公共的页面*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BasePage</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">header</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;首页、公开课、登陆（公共头部）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">footer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;底部内容&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;java python c++等连接(公共分类列表)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*java python页面 */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Java</span> : <span class="keyword">public</span> BasePage</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;java学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Python</span> : <span class="keyword">public</span> BasePage</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;python学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;java下载视频的页面如下&quot;</span> &lt;&lt; endl;</span><br><span class="line">Java j1;</span><br><span class="line">j<span class="number">1.</span><span class="built_in">header</span>();</span><br><span class="line">j<span class="number">1.</span><span class="built_in">content</span>();</span><br><span class="line">j<span class="number">1.l</span>eft();</span><br><span class="line">j<span class="number">1.f</span>ooter();</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;=======分割==========&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">Python p1;</span><br><span class="line">p<span class="number">1.</span><span class="built_in">header</span>();</span><br><span class="line">p<span class="number">1.</span><span class="built_in">content</span>();</span><br><span class="line">p<span class="number">1.l</span>eft();</span><br><span class="line">p<span class="number">1.f</span>ooter();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*继承的好处</span></span><br><span class="line"><span class="comment">减少重复的代码</span></span><br><span class="line"><span class="comment">语法 */</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结</strong>：</p><p>继承的好处：<strong><u>可以减少重复 的代码</u></strong><br>class A ： public B;<br>A类称为子类或者派生类<br>B类称为父类或者基类</p><p>派生类中的成员，包含两大部分：</p><p>一类是从基类继承过来的，一类是自己增加的成员。<br>从基类继承过来的表现 出共性 自己新增的表现出个性</p><h4 id="继承方式"><a href="#继承方式" class="headerlink" title="继承方式"></a>继承方式</h4><p>继承的语法：class 子类 ：继承方式 父类</p><p><strong>继承方式一共有三种</strong><br>公共继承<br>保护继承<br>私有继承</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241225211053012.png" alt="image-20241225211053012"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241230174832884.png" alt="image-20241230174832884"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*继承方式*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*公共继承*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son1</span> :<span class="keyword">public</span> Base1</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*父类中的公共权限成员到子类中依然是公共权限*/</span></span><br><span class="line">b = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*父类中的保护权限成员 到子类中依然是保护权限*/</span></span><br><span class="line"><span class="comment">//c = 10;</span></span><br><span class="line"><span class="comment">/*父类中 的私有权限成员 子类中访问不到*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son1 s1;</span><br><span class="line">s<span class="number">1.</span>a = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//s1.b = 100;</span></span><br><span class="line"><span class="comment">/*b是保护权限 类外不可以访问*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*保护继承*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base2</span> :<span class="keyword">public</span> Base1</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span>  <span class="title class_">Son2</span> :<span class="keyword">protected</span> Base2</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a = <span class="number">100</span>;</span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line"><span class="comment">/*父类中的公共成员和保护成员</span></span><br><span class="line"><span class="comment">到子类中都变成保护权限*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//c = 100;</span></span><br><span class="line"><span class="comment">/*私有成员访问不到*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son2 s2;</span><br><span class="line"><span class="comment">//s2.a = 1000;</span></span><br><span class="line"><span class="comment">/*报错 在son2中 a变成了保护权限</span></span><br><span class="line"><span class="comment">所以类外访问不到*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*私有继承*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base3</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son3</span> :<span class="keyword">private</span> Base3</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a = <span class="number">100</span>;<span class="comment">/*父类中的公共成员 到子类中变成私有</span></span><br><span class="line"><span class="comment">父类中保护成员 子类中变为私有成员*/</span></span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line">c = <span class="number">100</span>;</span><br><span class="line"><span class="comment">/*父类中的私有成员 子类中访问不到*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son3 s3;</span><br><span class="line"><span class="comment">//s3.a = 1000;</span></span><br><span class="line"><span class="comment">//s3.b = 1000;</span></span><br><span class="line"><span class="comment">/*到了son3中变成了私有的成员 类外访问不到*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GrandSon3</span> :<span class="keyword">public</span> Son3</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//a = 1000;</span></span><br><span class="line"><span class="comment">/*还是私有 访问不到*/</span></span><br><span class="line"><span class="comment">/*son3中变为私有 即使是son3的子类也访问不到*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="继承中的对象模型"><a href="#继承中的对象模型" class="headerlink" title="继承中的对象模型"></a>继承中的对象模型</h4><p><strong>问题</strong>：从父亲继承过来的成员，那些属于子类对象中？</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*继承中的对象模型*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> :<span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> d;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son s1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of s1: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(s1) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*父类中所有的非静态成员属性都会被子类继承下去</span></span><br><span class="line"><span class="comment">父类中私有的成员访问不到 但是确实被继承了*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="继承中构造和析构函顺序"><a href="#继承中构造和析构函顺序" class="headerlink" title="继承中构造和析构函顺序"></a>继承中构造和析构函顺序</h4><p>子类继承父类后，当创建子类对象，也会调用父类的构造函数</p><p>问题：父类和子类的构造和析构顺序是谁先谁后？</p><p>继承中的构造和析构顺序如下：<br>先构造父类，再构造子类，析构的顺序与构造的顺序相反<br>先进后出</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*继承中的构造和析构顺序*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Base</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;父类中的构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Base</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;父类中的析构函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> : <span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Son</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子类中的构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Son</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子类中的析构函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son s1;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="继承同名成员处理方式"><a href="#继承同名成员处理方式" class="headerlink" title="继承同名成员处理方式"></a>继承同名成员处理方式</h4><p>问题：当子类与父类出现同名的成员，如何通过子类对象，访问到子类或者父类中同名的数据？</p><p>访问子类同名成员 直接访问即可<br>访问父类同名成员 需要加作用域</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*继承同名成员处理方式*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">Base</span>()</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;base下func&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> :<span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">Son</span>()</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="number">200</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;son下func&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;son下func&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*同名成员对象处理方式*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son s;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;son 下的a= &quot;</span> &lt;&lt; s.a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;base 下的a= &quot;</span> &lt;&lt; s.Base::a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">s.<span class="built_in">func</span>();</span><br><span class="line">s.Base::<span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s.Base::<span class="built_in">func</span>(<span class="number">1</span>);</span><br><span class="line"><span class="comment">/*如果子类中出现了和父类中的同名函数</span></span><br><span class="line"><span class="comment">那么子类中会隐藏掉父类中所有的同名成员函数</span></span><br><span class="line"><span class="comment">如果想要访问都要加作用域*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*同名成员函数处理方式*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>总结：<br>子类对象可以直接访问到子类中的同名成员<br>子类对象加作用域可以访问到父类同名成员<br>当子类和父类拥有同名成员函数，子类会隐藏掉父类中同名成员函数，加作用域可以访问到父类中同名函数</p><h4 id="继承同名静态成员能处理方式"><a href="#继承同名静态成员能处理方式" class="headerlink" title="继承同名静态成员能处理方式"></a>继承同名静态成员能处理方式</h4><p>问题：继承中同名的静态成员再子类对象上如何进行访问？</p><p>静态成员和非静态成员出现同名，处理方式一致</p><p>访问子类同名成员，直接访问即可<br>访问父类同名成员 需加作用域</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*继承 */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> a;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;父类的静态函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> Base::a = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">son</span> :<span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> a;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子类的静态函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*通过对象访问*/</span></span><br><span class="line">son s1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;son 的 a&quot;</span> &lt;&lt; s<span class="number">1.</span>a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;base 的 a&quot;</span> &lt;&lt; s<span class="number">1.</span>Base::a &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*通过类名访问*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;son 的 a&quot;</span> &lt;&lt; son::a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;base 的 a&quot;</span> &lt;&lt; son::Base::a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;base 的 a&quot;</span> &lt;&lt; Base::a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过对象访问*/</span></span><br><span class="line">s<span class="number">1.f</span>unc();</span><br><span class="line">s<span class="number">1.</span>Base::<span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过类名访问*/</span></span><br><span class="line">son::<span class="built_in">func</span>();</span><br><span class="line">son::Base::<span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> son::a = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="多继承语法"><a href="#多继承语法" class="headerlink" title="多继承语法"></a>多继承语法</h4><p>c++允许一个类继承多个类</p><p>语法：class 子类 ：继承方式 父类1，继承方式 父类2</p><p>多继承可能会引发父类中同名成员出现，需要加作用域区分</p><p>c++实际开发中不建议用多继承</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*多继承语法*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">Base1</span>()</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base2</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">Base2</span>()</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="number">200</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*语法 class 子类 ：继承方式1 父类1 继承方式2 父类2*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> :<span class="keyword">public</span> Base1, <span class="keyword">public</span> Base2</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line"><span class="type">int</span> d;</span><br><span class="line"><span class="built_in">Son</span>()</span><br><span class="line">&#123;</span><br><span class="line">c = <span class="number">300</span>;</span><br><span class="line">d = <span class="number">400</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son s;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子类所占的空间&quot;</span> &lt;&lt;<span class="built_in">sizeof</span>(s)&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*当父类中出现了同名的成员，需要加作用域区分*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;base1的a&quot;</span> &lt;&lt; s.Base1::a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;base2的a&quot;</span> &lt;&lt; s.Base2::a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结</strong>：多继承中如果父类出现了同名的情况，子类使用的时候需要加作用域</p><h4 id="菱形继承-虚基类-虚继承-重要重要"><a href="#菱形继承-虚基类-虚继承-重要重要" class="headerlink" title="菱形继承 虚基类 虚继承(重要重要)"></a>菱形继承 虚基类 虚继承(重要重要)</h4><p><strong>菱形继承概念</strong>：<br>    两个派生类继承同一个基类<br>    又有某个类同时继承两个派生类<br>    这种继承被称为菱形继承，或者钻石继承</p><p><strong>经典菱形继承案例</strong>：</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241225225406058.png" alt="image-20241225225406058"></p><p><strong>菱形继承问题</strong>：</p><p>羊继承了 动物的数据，鸵同样继承了动物的数据，当羊驼使用数据时，就会产生二义性<br>羊驼继承自动物的数据继承了两份，其实我们应该清楚，这份数据我们只需要一份</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*动物类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用虚继承可以解决菱形继承的问题*/</span></span><br><span class="line"><span class="comment">/*继承之前加上关键字virtual变为虚继承*/</span></span><br><span class="line"><span class="comment">/*animal类称为虚基类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Sheep</span> :<span class="keyword">virtual</span> <span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Camel</span>:<span class="keyword">virtual</span> <span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Alpaca</span> :<span class="keyword">public</span> Camel, <span class="keyword">public</span> Sheep</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Alpaca a1;</span><br><span class="line">a<span class="number">1.</span>Sheep::age = <span class="number">18</span>;</span><br><span class="line">a<span class="number">1.</span>Camel::age = <span class="number">28</span>;</span><br><span class="line"><span class="comment">/*虚继承之后共享数据 把两个数据改为一个*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*当菱形继承的时候有两个父类具有相同的数据</span></span><br><span class="line"><span class="comment">需要加以区分*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1.Sheep::age &quot;</span> &lt;&lt; a<span class="number">1.</span>Sheep::age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1.Camel::age &quot;</span> &lt;&lt; a<span class="number">1.</span>Camel::age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1.age &quot;</span> &lt;&lt; a<span class="number">1.</span>age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*这份数据我们知道只要有一份就行菱形继承导致数据有两份</span></span><br><span class="line"><span class="comment">资源浪费*/</span></span><br><span class="line"><span class="comment">/*虚继承继承下来的是一个指针 指向虚基类*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结</strong>：<br>菱形继承带来的主要问题是子类继承两份相同的数据，导致资源浪费以及毫无意义<br>利用虚继承可以解决菱形继承问题</p><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><h3 id="多态的基本概念"><a href="#多态的基本概念" class="headerlink" title="多态的基本概念"></a>多态的基本概念</h3><p>多态是C++面向对象三大特性之一<br>多态分为两类<br>静态多态：函数重载和运算符重载属于静态多态，复用函数名<br>动态多态：派生类和虚函数实现运行时多态<br>静态多态和动态多态区别：<br>静态多态的函数地址早绑定 - 编译阶段确定函数地址<br>动态多态的函数地址晚绑定  - 运行阶段确认函数地址</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*多态*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*动物类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*虚函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;动物在说话&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> :<span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;小猫在说话&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> :<span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;狗叫&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*执行说话的函数*/</span></span><br><span class="line"><span class="comment">/*地址早绑定 在编译阶段就能确定函数地址*/</span></span><br><span class="line"><span class="comment">/*如果想要猫说话 那么这个地址就不能提前绑定 需要在运行的时候绑定</span></span><br><span class="line"><span class="comment">也就是地址晚绑定*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">doSpeak</span><span class="params">(Animal &amp;animal)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*c++中允许父类子类直接类型转换*/</span></span><br><span class="line">animal.<span class="built_in">speak</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Cat c1;</span><br><span class="line"><span class="built_in">doSpeak</span>(c1);</span><br><span class="line"></span><br><span class="line">Dog d1;</span><br><span class="line"><span class="built_in">doSpeak</span>(d1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*动态多态满足条件</span></span><br><span class="line"><span class="comment">1、有继承关系</span></span><br><span class="line"><span class="comment">2、子类重写父类的虚函数</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">动态多态的使用</span></span><br><span class="line"><span class="comment">父类的指针或者引用 指向子类的对象</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>重点</strong>：动态多态满足条件<br>1、有继承关系<br>2、子类重写父类的虚函数</p><p>使用条件：父类的指针或者引用指向子类的对象</p><p> 原理：</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241226002720479.png" alt="image-20241226002720479"></p><h4 id="多态案例一-计算器类"><a href="#多态案例一-计算器类" class="headerlink" title="多态案例一 计算器类"></a>多态案例一 计算器类</h4><p>案例描述 ：</p><p>分别利用普通写法和多态技术，设计实现两个操作数进行运算的计算器类</p><p>多态的优点：<br>代码组织结构清晰<br>可读性强<br>利于前期和后期的扩展以及维护</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*分别利用普通写法和多态技术实现计算器*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*普通写法*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Calculator</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> n1;</span><br><span class="line"><span class="type">int</span> n2;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getResutl</span><span class="params">(string oper)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (oper == <span class="string">&quot;+&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> n1 + n2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (oper == <span class="string">&quot;-&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> n1 - n2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (oper == <span class="string">&quot;*&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> n1 * n2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*如果想要扩展新的功能 需要修改源码*/</span></span><br><span class="line"><span class="comment">/*在真的开发中 提倡开闭原则</span></span><br><span class="line"><span class="comment">对扩展进行开放 对修改进行关闭*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用多态实现计算器*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*多态好处</span></span><br><span class="line"><span class="comment">1、组织结构清晰</span></span><br><span class="line"><span class="comment">2、可读性强</span></span><br><span class="line"><span class="comment">3、前后期扩展可维护性高*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*实现计算器的抽象类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AbstractCalc</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> n1;</span><br><span class="line"><span class="type">int</span> n2;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*加法计算器类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AddCalc</span> :<span class="keyword">public</span> AbstractCalc</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> n1 + n2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*减法计算器*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SubCalc</span> :<span class="keyword">public</span> AbstractCalc</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> n1 - n2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*乘法计算器*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MulCalc</span> :<span class="keyword">public</span> AbstractCalc</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> n1 * n2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*创建计算器对象*/</span></span><br><span class="line">Calculator c1;</span><br><span class="line">c<span class="number">1.</span>n1 = <span class="number">10</span>;</span><br><span class="line">c<span class="number">1.</span>n2 = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;+&quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">getResutl</span>(<span class="string">&quot;+&quot;</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-&quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">getResutl</span>(<span class="string">&quot;-&quot;</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">getResutl</span>(<span class="string">&quot;*&quot;</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*加法*/</span></span><br><span class="line">AbstractCalc* abc = <span class="keyword">new</span> AddCalc;</span><br><span class="line">abc-&gt;n1 = <span class="number">10</span>;</span><br><span class="line">abc-&gt;n2 = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;+ &quot;</span> &lt;&lt; abc-&gt;<span class="built_in">getResult</span>() &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*用完后记得销毁*/</span></span><br><span class="line"><span class="keyword">delete</span> abc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="纯虚函数和抽象类（非常重要）"><a href="#纯虚函数和抽象类（非常重要）" class="headerlink" title="纯虚函数和抽象类（非常重要）"></a>纯虚函数和抽象类（非常重要）</h4><p>在多态中，通常父类中虚函数的实现是毫无意义的，主要调用子类重写的内容</p><p>因此可以将虚函数改为<strong>纯虚函数</strong></p><p><strong><u>纯虚函数语法：virtual 返回值类型 函数名 (参数列表) = 0;</u></strong></p><p><strong><u>当类中有了纯虚函数，这个类也称为抽象类</u></strong></p><p>抽象类特点：</p><p>无法实例化对象<br>子类必须重写抽象类中的纯虚函数，否则也属于抽象类</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*纯虚函数和抽象类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*纯虚函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*只要有一个纯虚函数，这个类称为抽象类</span></span><br><span class="line"><span class="comment">抽象类特点：无法实例化对象*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*抽象类的子类必须要重写父类中的纯虚函数 不然也属于抽象类*/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son1</span> :<span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son2</span> :<span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//Base b;</span></span><br><span class="line"><span class="comment">/*报错 不允许使用抽象类创建对象*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Son1 s1;</span></span><br><span class="line"><span class="comment">/*同样报错 因为继承了纯虚函数 所以也是抽象类*/</span></span><br><span class="line"></span><br><span class="line">Son2 s1;</span><br><span class="line"><span class="comment">/*不报错 重写之后就正常了*/</span></span><br><span class="line"></span><br><span class="line">Base* base = <span class="keyword">new</span> Son2;</span><br><span class="line">base-&gt;<span class="built_in">func</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="多态案例2-制作饮品"><a href="#多态案例2-制作饮品" class="headerlink" title="多态案例2 制作饮品"></a>多态案例2 制作饮品</h4><p>案例描述：<br>制作音频的大致流程为：煮水 - 冲泡 - 倒入杯中 - 加入辅料</p><p>利用多态技术实现本案例，提供抽象制作饮品基类，提供子类制作咖啡和茶叶</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*多态案例2 制作饮品*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AbsDrink</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*煮水冲泡倒入*/</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">boil</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">brew</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Pour</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PutSth</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*制作饮品*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">makeDrink</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">boil</span>();</span><br><span class="line"><span class="built_in">brew</span>();</span><br><span class="line"><span class="built_in">Pour</span>();</span><br><span class="line"><span class="built_in">PutSth</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*制作咖啡*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Coffee</span> :<span class="keyword">public</span> AbsDrink</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">boil</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;煮农夫三拳&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">brew</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;冲咖啡&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Pour</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;倒入&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PutSth</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;加糖&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*制作茶叶*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tea</span> :<span class="keyword">public</span> AbsDrink</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">boil</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;煮矿泉水&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">brew</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;冲茶叶&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Pour</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;倒入&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PutSth</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;加枸杞&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*制作饮品的函数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">doWork</span><span class="params">(AbsDrink &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a.<span class="built_in">makeDrink</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">doWork</span><span class="params">(AbsDrink *a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a-&gt;<span class="built_in">makeDrink</span>();</span><br><span class="line"><span class="keyword">delete</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*制作咖啡*/</span></span><br><span class="line">Coffee c1;</span><br><span class="line"><span class="built_in">doWork</span>(c1);</span><br><span class="line"></span><br><span class="line"><span class="built_in">doWork</span>(<span class="keyword">new</span> Tea);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="虚析构和纯虚析构"><a href="#虚析构和纯虚析构" class="headerlink" title="虚析构和纯虚析构"></a>虚析构和纯虚析构</h4><p>多态使用时，如果 子类中有属性开辟到堆区，那么父类指针在释放时无法调用到子类的析构代码</p><p>解决方式：将父类中的析构函数改为虚析构和纯虚析构</p><p>虚析构和纯虚析构的共性：<br>可以解决父类指针释放子类对象<br>都需要具体的函数实现</p><p>虚析构和纯虚析构的区别：<br>如果是虚析构，该类属于抽象类，无法实例化对象</p><p>虚析构语法：<br>virtual ~类名（）{};<br>纯虚析构语法：<br>virtual ~类名() = 0;<br>类名：：类名（）{}</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*虚析构和纯虚析构*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">speak</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Animal</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Animal构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//virtual ~Animal()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;Animal析构函数调用&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">/*利用虚析构可以结局 父类指针释放子类对象时不干净的问题*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*纯虚析构*/</span></span><br><span class="line"><span class="keyword">virtual</span> ~<span class="built_in">Animal</span>() = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Animal::~<span class="built_in">Animal</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Animal纯虚析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*析构函数都需要可以实现，不然没有办法清楚该类的数据</span></span><br><span class="line"><span class="comment">万一该类有数据就无法清除 所以必须要有具体实现</span></span><br><span class="line"><span class="comment">有了纯虚析构之后这个类也属于抽象 类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> :<span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">string *cname;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; *cname&lt;&lt;<span class="string">&quot;喵&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Cat</span>(string name)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;cat struct func &quot;</span> &lt;&lt; endl;</span><br><span class="line">cname = <span class="keyword">new</span> <span class="built_in">string</span>(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~<span class="built_in">Cat</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (cname != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;~CAT running&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">delete</span> cname;</span><br><span class="line">cname = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Animal* a1 = <span class="keyword">new</span> <span class="built_in">Cat</span>(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">a1-&gt;<span class="built_in">speak</span>();</span><br><span class="line"><span class="keyword">delete</span> a1;</span><br><span class="line"><span class="comment">/*父类指针析构的时候不会调用子类中的析构函数导致子类如果有堆区属性</span></span><br><span class="line"><span class="comment">会出现内存泄露的情况*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结</strong>：<br>虚析构和纯虚析构就是用来解决通过父类指针释放子类对象<br>如果子类中没有堆区数据，可以不写为虚构或者纯虚析构<br>拥有纯虚析构的类也属于抽象类</p><h4 id="多态案例3-电脑组装"><a href="#多态案例3-电脑组装" class="headerlink" title="多态案例3 电脑组装"></a>多态案例3 电脑组装</h4><p>案例描述：</p><p>电脑主要组成部件为CPU 显卡 内存条<br>将每个零件疯转给出抽象基类 并且提供不同的厂商生产不同的零件<br>创建电脑类提供让电脑工作的函数，并且调用每个零件工作的接口<br>测试时组装三台不同的电脑进行工作</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*电脑组装*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*抽象不同零件类*/</span></span><br><span class="line"><span class="comment">/*抽象cpu类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CPU</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*抽象的计算函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">calculate</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*抽象GPU类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GPU</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*抽象的显示函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">display</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*抽象内存类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Memory</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*抽象的计算函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">srorage</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*电脑类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Computer</span>(CPU* c, GPU* g, Memory* m)</span><br><span class="line">&#123;</span><br><span class="line">c1 = c;</span><br><span class="line">g1 = g;</span><br><span class="line">m1 = m;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">/*提供工作的函数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">work</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*调用接口 */</span></span><br><span class="line">c1-&gt;<span class="built_in">calculate</span>();</span><br><span class="line">g1-&gt;<span class="built_in">display</span>();</span><br><span class="line">m1-&gt;<span class="built_in">srorage</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*提供析构函数释放三个电脑零件*/</span></span><br><span class="line">~<span class="built_in">Computer</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*释放*/</span></span><br><span class="line"><span class="keyword">if</span> (c1 != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> c1;</span><br><span class="line">c1 = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">if</span> (g1 != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> g1;</span><br><span class="line">g1 = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (m1 != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m1;</span><br><span class="line">m1 = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">/*三个零件 的指针*/</span></span><br><span class="line">CPU* c1;</span><br><span class="line">GPU* g1;</span><br><span class="line">Memory* m1;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*具体厂商*/</span></span><br><span class="line"><span class="comment">/*Intel*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IntelCPU</span> :<span class="keyword">public</span> CPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">calculate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;英特尔的cpu开始计算了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IntelGPU</span> :<span class="keyword">public</span> GPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;英特尔的显卡开始超频了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IntelMemo</span> :<span class="keyword">public</span> Memory</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">srorage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;英特尔的内存开始RGB了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*ASUS*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ASUSCPU</span> :<span class="keyword">public</span> CPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">calculate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ROG的cpu开始计算了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ASUSGPU</span> :<span class="keyword">public</span> GPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ROG的显卡开始超频了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ASUSMemo</span> :<span class="keyword">public</span> Memory</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">srorage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ROG的内存开始RGB了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*lenovo*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">lenovoCPU</span> :<span class="keyword">public</span> CPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">calculate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;lenovo的cpu开始计算了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">lenovoGPU</span> :<span class="keyword">public</span> GPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;lenovo的显卡开始超频了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">lenovoMemo</span> :<span class="keyword">public</span> Memory</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">srorage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;lenovo的内存开始RGB了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*第一台电脑*/</span></span><br><span class="line">CPU* intelCpu = <span class="keyword">new</span> IntelCPU;</span><br><span class="line">GPU* intelGpu = <span class="keyword">new</span> IntelGPU;</span><br><span class="line">Memory* intelMemo = <span class="keyword">new</span> IntelMemo;</span><br><span class="line"></span><br><span class="line">Computer* c1 = <span class="keyword">new</span> <span class="built_in">Computer</span>(intelCpu, intelGpu, intelMemo);</span><br><span class="line">c1-&gt;<span class="built_in">work</span>();</span><br><span class="line"><span class="keyword">delete</span> c1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*第二台电脑*/</span></span><br><span class="line">CPU* cp2 = <span class="keyword">new</span> ASUSCPU;</span><br><span class="line">GPU* g2 = <span class="keyword">new</span> ASUSGPU;</span><br><span class="line">Memory* m2 = <span class="keyword">new</span> ASUSMemo;</span><br><span class="line"></span><br><span class="line">Computer* c2 = <span class="keyword">new</span> <span class="built_in">Computer</span>(cp2, g2, m2);</span><br><span class="line">c2-&gt;<span class="built_in">work</span>();</span><br><span class="line"><span class="keyword">delete</span> c2;</span><br><span class="line"><span class="comment">/*第三台电脑*/</span></span><br><span class="line">CPU* cp3 = <span class="keyword">new</span> lenovoCPU;</span><br><span class="line">GPU* g3 = <span class="keyword">new</span> lenovoGPU;</span><br><span class="line">Memory* m3 = <span class="keyword">new</span> lenovoMemo;</span><br><span class="line"></span><br><span class="line">Computer* c3 = <span class="keyword">new</span> <span class="built_in">Computer</span>(cp3, g3, m3);</span><br><span class="line">c3-&gt;<span class="built_in">work</span>();</span><br><span class="line"><span class="keyword">delete</span> c3;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="课程考试部分"><a href="#课程考试部分" class="headerlink" title="课程考试部分"></a>课程考试部分</h1><h2 id="特殊及零散知识点"><a href="#特殊及零散知识点" class="headerlink" title="特殊及零散知识点"></a>特殊及零散知识点</h2><h2 id="课后练习"><a href="#课后练习" class="headerlink" title="课后练习"></a>课后练习</h2><p>1、有如下程序</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> x)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x, s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (x = <span class="number">0</span>; x &lt;= n; x++)</span><br><span class="line">        s += <span class="built_in">f</span>(x);</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x * x + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Enter an integer number: &quot;</span>;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    b = <span class="built_in">sum</span>(a);</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> <strong>如果输入数字3，其输出结果是：</strong><br>A、 3,12<br>B、 3,16<br>C、 3,18<br>D、 4,20</p><p> 2有以下程序：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>, x;</span><br><span class="line">    x = <span class="built_in">f</span>(i, i + <span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> c;</span><br><span class="line">    c = a;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b)</span><br><span class="line">        c = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        c = <span class="number">-2</span>;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>**运行后的输出结果是：<br>A、 1<br>B、 0<br>C、 -1<br>D、 -2 </p><p>3、若有以下函数调用语句,在此函数调用语句中实参的个数是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fun(a+b,(y=10,y),fun(n,k,d));</span><br></pre></td></tr></table></figure><p>A、 3<br>B、 4<br>C、 5<br>D、 6 </p><p>4、以下函数调用语句中，含有的实参个数是()<br>func(rec1,rec2 +1,(rec3,rec4));</p><p>A、 3<br>B、 4<br>C、 5<br>D、 有语法错误</p><p>以下程序的输出结果是</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">fun</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123; a=<span class="number">456</span>;b=<span class="number">567</span>;c=<span class="number">678</span>;&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="type">int</span> x=<span class="number">10</span>,y=<span class="number">20</span>,z=<span class="number">30</span>;</span><br><span class="line"><span class="built_in">fun</span>(x,y,z);</span><br><span class="line">cout&lt;&lt;z&lt;&lt;”,”&lt;&lt;y&lt;&lt;”,”&lt;&lt;x&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>A、 30,20,10<br>B、 10,20,30<br>C、 456,567,678<br>D、 678,567,456</p><p>C++语言中,形参与实参之间的数据传递方式是<br>A、 只能按值传递<br>B、 只能按引用传递 </p><p>C、 既可以按值传递也可以按引用传递 </p><p>D、 以上说法都不对 </p><h2 id="编程题练习"><a href="#编程题练习" class="headerlink" title="编程题练习"></a>编程题练习</h2><h3 id="编程题：学生信息管理"><a href="#编程题：学生信息管理" class="headerlink" title="编程题：学生信息管理"></a>编程题：学生信息管理</h3><p><strong>题目描述：</strong></p><p>设计一个类 <code>Student</code>，实现学生信息的管理功能。</p><p><strong>数据成员：</strong></p><ul><li><code>name</code>：学生的姓名（字符串类型）。</li><li><code>age</code>：学生的年龄（整数类型）。</li><li><code>score</code>：学生的成绩（浮点型）。</li></ul><p><strong>静态数据成员：</strong></p><ul><li><code>total_students</code>：记录学生对象的总数量。</li></ul><p><strong>成员函数：</strong></p><ul><li>构造函数：初始化学生姓名、年龄和成绩，并更新 <code>total_students</code>。</li><li>析构函数：销毁对象时，减少 <code>total_students</code> 的数量。</li><li><code>print_info()</code>：打印学生的基本信息（姓名、年龄、成绩）。</li></ul><p><strong>静态成员函数：</strong></p><ul><li><code>get_total_students()</code>：返回当前已创建的学生对象总数量。</li></ul><p><strong>主函数要求：</strong></p><p>在主函数中：</p><ol><li>创建若干个 <code>Student</code> 对象。</li><li>调用每个学生对象的 <code>print_info()</code> 函数输出学生信息。</li><li>输出当前学生对象的总数。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">double</span> score;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> total_students;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Student</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Student</span>(string m_name, <span class="type">int</span> m_age, <span class="type">double</span> m_score)</span><br><span class="line">&#123;</span><br><span class="line">name = m_name;</span><br><span class="line">age = m_age;</span><br><span class="line">score = m_score;</span><br><span class="line"></span><br><span class="line">total_students++;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;正在调用学生类的构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Student</span>()</span><br><span class="line">&#123;</span><br><span class="line">total_students--;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;正在调用学生类的析构函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">get_total_students</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> total_students;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print_info</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;学生信息&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name: &quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot;age: &quot;</span> &lt;&lt; age &lt;&lt; <span class="string">&quot;score: &quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Student::total_students = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;初始学生数量: &quot; &lt;&lt; Student::get_total_students() &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//Student s1 = &#123; &quot;jack&quot;,18,90 &#125;;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;现在学生数量:&quot; &lt;&lt; s1.get_total_students() &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//s1.print_info();</span></span><br><span class="line"><span class="comment">//Student s2 = &#123; &quot;mike&quot;,17,80 &#125;;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;现在学生数量:&quot; &lt;&lt; s2.get_total_students() &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//s2.print_info();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*改成由用户输入信息*/</span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入要定义的学生数量&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*检查输入是否有效*/</span></span><br><span class="line"><span class="keyword">if</span> (n &lt; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;非法字符&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (n &gt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数量过多&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Student s1[n]; n不是常量 不能定义数组 要用动态数组</span></span><br><span class="line">Student* s1 = <span class="keyword">new</span> Student[n];</span><br><span class="line"><span class="comment">/*这就是定义一个动态数组*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">double</span> score;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第&quot;</span> &lt;&lt; i<span class="number">+1</span> &lt;&lt; <span class="string">&quot;个学生的信息&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;年龄&quot;</span>;</span><br><span class="line">cin &gt;&gt; age;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;得分&quot;</span>;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">s1[i] = &#123; name,age,score &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n所有学生信息如下&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">s1[i].<span class="built_in">print_info</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ppt编程题例题1"><a href="#ppt编程题例题1" class="headerlink" title="ppt编程题例题1"></a>ppt编程题例题1</h4><p>定义一个复数类 Complex，重载运算符“+”，使之能用于复数的加法运算。参加运算的两个 运算量可以都是类对象，也可以其中有一个是整数，顺序任意。例如：c1+c2、i+c1 均合法。 （其中 i 是整数，c1、c2 是复数），编程实现求 2 个复数之和、整数与复数之和。 • 主函数如下： int main(){ int r1, i1, r2, i2 ; int i; cin &gt;&gt; r1 &gt;&gt; i1 &gt;&gt; r2 &gt;&gt; i2 &gt;&gt; i; Complex c1(r1, i1), c2(r2, i2), c3; c3 = c1 + c2; c3.display(); c3 = i + c1; c3.display(); return 0; }</p><h4 id="ppt编程题例题2"><a href="#ppt编程题例题2" class="headerlink" title="ppt编程题例题2"></a>ppt编程题例题2</h4><p>声明一个Shape抽象类，由其派生出Point类，再由Point类派生出Circle类， 三个类均有area( ) 和shapeName()成员。 主函数如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line"> <span class="function">Point <span class="title">point</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line"> <span class="function">Circle <span class="title">circle</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,<span class="number">5.6</span>)</span></span>; </span><br><span class="line">Shape *pt; </span><br><span class="line">pt=&amp;point; </span><br><span class="line">pt-&gt;<span class="built_in">shapeName</span>( );                               </span><br><span class="line">cout&lt;&lt; ”x=” &lt;&lt;point.<span class="built_in">getX</span>( )&lt;&lt;” , y=” &lt;&lt; point.<span class="built_in">getY</span>( ) &lt;&lt; ” , </span><br><span class="line">pointarea=”&lt;&lt;pt-&gt;<span class="built_in">area</span>( )&lt;&lt;endl;</span><br><span class="line"> pt=&amp;circle; </span><br><span class="line">pt-&gt;<span class="built_in">shapeName</span>( );                                </span><br><span class="line">cout&lt;&lt;”x=”&lt;&lt;circle.<span class="built_in">getX</span>( )&lt;&lt;” , y=”&lt;&lt;circle.<span class="built_in">getY</span>( )&lt;&lt;”, circlearea=”&lt;&lt;pt</span><br><span class="line">&gt;<span class="built_in">area</span>( ) &lt;&lt;endl;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">程序运行输出如下：</span><br><span class="line">Point:x=1,y=1, pointarea=0    </span><br><span class="line">Circle:x=1,y=1, circlearea= 98.4</span><br></pre></td></tr></table></figure><h2 id="编程题例题4-Building类（非常重要）"><a href="#编程题例题4-Building类（非常重要）" class="headerlink" title="编程题例题4-Building类（非常重要）"></a>编程题例题4-Building类（非常重要）</h2><p> • 实现一个Building建筑类， • 数据成员包括：编号id、名字name、建筑类型• 静态数据成员包括：总楼数total、下一个楼的编号next • 成员函数包括：构造函数、析构函数、打印信息函数print_info • 静态成员函数：getTotal() • 主函数、样例输入输出见下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">主函数</span><br><span class="line">int main() &#123;</span><br><span class="line">    string name, type;</span><br><span class="line">    Building* buildings[3];</span><br><span class="line">    for (int i = 0; i &lt; 3; i++) &#123;</span><br><span class="line">        cin &gt;&gt; name &gt;&gt; type;</span><br><span class="line">        buildings[i] = new Building(name, type);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; &quot;Building counts: &quot; &lt;&lt; Building::getTotal() &lt;&lt; endl;</span><br><span class="line">    for (int i = 0; i &lt; 3; i++) &#123;</span><br><span class="line">        buildings[i]-&gt;printInfo();</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> • 样例输入</span><br><span class="line">A_building teach</span><br><span class="line"> B_building live</span><br><span class="line"> C_building teach</span><br><span class="line"> • 样例输出</span><br><span class="line">Building counts: 3</span><br><span class="line"> id: 0 A_building, teach</span><br><span class="line"> id: 1 B_building, live</span><br><span class="line"> id: 2 C_building, teach</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">string name;</span><br><span class="line">string type;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> total;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> next;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Building</span>() &#123;</span><br><span class="line">total++;</span><br><span class="line">next++;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">Building</span>(string b,string c)</span><br><span class="line">&#123;</span><br><span class="line">id = next;</span><br><span class="line">name = b;</span><br><span class="line">type = c;</span><br><span class="line">total++;</span><br><span class="line">next++;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Building</span>()</span><br><span class="line">&#123;</span><br><span class="line">total--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;id:&quot;</span> &lt;&lt; id &lt;&lt; <span class="string">&quot; , &quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; type &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">getTotal</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> Building::total = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> Building::next = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string name, type;</span><br><span class="line">Building* buildings[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">cin &gt;&gt; name &gt;&gt; type;</span><br><span class="line">buildings[i] = <span class="keyword">new</span> <span class="built_in">Building</span>(name, type);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Building counts: &quot;</span> &lt;&lt; Building::<span class="built_in">getTotal</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">buildings[i]-&gt;<span class="built_in">PrintInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 爷的代码，跑起来辣</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241227082008997.png" alt="image-20241227082008997"></p><h2 id="编程题例题5-Animal（非常重要）"><a href="#编程题例题5-Animal（非常重要）" class="headerlink" title="编程题例题5 Animal（非常重要）"></a>编程题例题5 Animal（非常重要）</h2><p>请实现以下三个类：</p><p>一个动物Animal类，包含构造函数、数据成员年龄（age），成员函数getage()、纯虚函数speak()。</p><p>再由Animal类派生出两个类：猫Cat类、鸟Bird类。其中Cat类含有数据成员姓名（name）；Bird类含有数据成员种类（kind），两个派生类都有speak()函数。</p><p>主函数参照以下程序执行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">int main()&#123;</span><br><span class="line"> Animal *pa;</span><br><span class="line"> Cat ct(&quot;Garfield&quot;,2);</span><br><span class="line"> Bird bd(&quot;sparrow&quot;,1);</span><br><span class="line">string x;</span><br><span class="line">while(cin&gt;&gt;x)&#123;  </span><br><span class="line">if(x==&quot;cat&quot;)</span><br><span class="line">pa=&amp;ct;</span><br><span class="line">else if(x==&quot;bird&quot;)</span><br><span class="line">pa=&amp;bd;</span><br><span class="line">pa-&gt;speak();   </span><br><span class="line"> &#125;</span><br><span class="line"> return 0;</span><br><span class="line">&#125;</span><br><span class="line">样例输入：</span><br><span class="line">bird</span><br><span class="line">cat</span><br><span class="line">样例输出：</span><br><span class="line">zizi~I&#x27;m a sparrow ,1-year-old.</span><br><span class="line">Meow~I&#x27;m Garfield , 2-year-old.</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="built_in">Animal</span>()</span><br><span class="line">&#123;&#125;</span><br><span class="line">~<span class="built_in">Animal</span>()</span><br><span class="line">&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">speak</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> :<span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string name;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;喵&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Cat</span>(string a, <span class="type">int</span> b)</span><br><span class="line">&#123;</span><br><span class="line">name = a;</span><br><span class="line">age = b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Bird</span> :<span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string kind;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;鸣&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Bird</span>(string a, <span class="type">int</span> b)</span><br><span class="line">&#123;</span><br><span class="line">kind = a;</span><br><span class="line">age = b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Animal* pa = <span class="literal">nullptr</span>;</span><br><span class="line"><span class="function">Cat <span class="title">ct</span><span class="params">(<span class="string">&quot;Garfield&quot;</span>, <span class="number">2</span>)</span></span>;</span><br><span class="line"><span class="function">Bird <span class="title">bd</span><span class="params">(<span class="string">&quot;sparrow&quot;</span>, <span class="number">1</span>)</span></span>;</span><br><span class="line">string x;</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; x) &#123;</span><br><span class="line"><span class="keyword">if</span> (x == <span class="string">&quot;cat&quot;</span>) &#123;</span><br><span class="line">pa = &amp;ct;</span><br><span class="line">pa-&gt;<span class="built_in">speak</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="string">&quot;bird&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">pa = &amp;bd;</span><br><span class="line">pa-&gt;<span class="built_in">speak</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241227083958055.png" alt="image-20241227083958055"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h2&gt;&lt;p&gt;由于我也是第一次学习C++，很多概念我自己也不清楚，所以此处基本上用来记录我学习过程中写的代码&lt;br&gt;各类概念和知识点理论，</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Java程序设计重新笔记及知识点梳理</title>
    <link href="http://example.com/posts/d7f2c68e.html"/>
    <id>http://example.com/posts/d7f2c68e.html</id>
    <published>2024-10-02T23:53:58.000Z</published>
    <updated>2024-12-31T15:52:52.745Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>java这门语言，我已经记不清开了多少课，敲了多少代码了。但是现在因为生活和学习上的需要，重新开课重新学习，颇有一种朝花夕拾的感觉。代码是以前敲过的代码，知识点是以前学过的知识点，现在只是重走西游路，在复习以前知识的同时找到自己。</p><h3 id="关于笔记记录过程"><a href="#关于笔记记录过程" class="headerlink" title="关于笔记记录过程"></a>关于笔记记录过程</h3><p>按照本人复习过程来，力求逻辑上的完整性，重点放在逻辑上的连贯性，所以不会把理论和实践完全拆分开，在理论和实践的过程中推进。但是本质上还是为了期末的考试，所以会在最后加上一个做题和解析的模块。记录题目的同时方便自己查漏补缺。<br>本套笔记按照优先建立知识体系学习法，知识点的细节在学习和实战中慢慢完善。</p><h2 id="JAVA的知识背景"><a href="#JAVA的知识背景" class="headerlink" title="JAVA的知识背景"></a>JAVA的知识背景</h2><h3 id="java的诞生"><a href="#java的诞生" class="headerlink" title="java的诞生"></a>java的诞生</h3><p>JAVA由美国的SUN公司发明，诞生于1991年。<br>设计初衷是给机顶盒这类电子产品，这类产品的特点就是不同厂家生产的型号<u>拥有不同的CPU不同的操作系统。</u>（为后续跨平台性埋下伏笔）<br><strong>因此要求JAVA产生的程序是中立的</strong>（既跨平台）<br>可是命运总是爱跟人开玩笑，java发明之后这类产品直接褒姒，所以java失去了用武之地。<br>直到90年代中期互联网爆发，各式各样不同的电脑都连接到了互联网上（不同u不同系统）<br>此时急需一个跨平台语言，所以java堂堂崛起！</p><h3 id="JAVA的主要应用范围"><a href="#JAVA的主要应用范围" class="headerlink" title="JAVA的主要应用范围"></a>JAVA的主要应用范围</h3><p>服务器端软件开发：各类网站系统和管理系统</p><p>移动端开发：安卓系统、鸿蒙</p><p>科学研究、云计算、大数据</p><h3 id="JAVA的版本选择"><a href="#JAVA的版本选择" class="headerlink" title="JAVA的版本选择"></a>JAVA的版本选择</h3><p>目前企业中应用最广的还是java8.0，占据了最大的份额。  </p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003082723831.png" alt="image-20241003082723831"></p><h3 id="JVM、JRE、JDK"><a href="#JVM、JRE、JDK" class="headerlink" title="JVM、JRE、JDK"></a>JVM、JRE、JDK</h3><p><strong><u>JVM：Java Virtual Machine虚拟计算机</u></strong>，主要负责Java程序的运行<br>JAVA程序是在JAVA虚拟机上直接运行，而不是运行在操作系统上（有别于C++）<br><strong>Java的跨平台就是基于不同版本的JVM实现。</strong><br>举例：我用mac系统写了一个JAVA程序，首先我MAC系统上需要有对应的MAC版JVM，所以程序在MAC上可以跑，然后我又把程序发给Linux系统，Linux系统上安装的Linux版JVM负责运行发送过去的程序</p><p>JRE ：Java Runtime Environment, java运行时环境。<br>一张图解释<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003083520608.png" alt="image-20241003083520608"></p><p>JRE包含了JVM，JRE是java运行环境，从字面上理解，java运行的时候JVM是必须的，因为Java的run就是run在JVM上。 加上核心的库类和文件，就组成了完整的运行环境。</p><p>JDK：Java Development kit ，Java 开发工具包。提供给java开发人员使用<br>再用一张图解释<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003084432765.png" alt="image-20241003084432765"></p><p>JRE构成了运行JAVA的所有条件，JDK在此基础上加入了开发工具。</p><h2 id="写出第一个JAVA程序。"><a href="#写出第一个JAVA程序。" class="headerlink" title="写出第一个JAVA程序。"></a>写出第一个JAVA程序。</h2><h3 id="JAVA的组织结构"><a href="#JAVA的组织结构" class="headerlink" title="JAVA的组织结构"></a>JAVA的组织结构</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003090408814.png" alt="image-20241003090408814"></p><p>关于java的组织结构和缩进<br>两个花括号一对，最外层下面的花括号对应上面的p，表示中间的部分是class类的类体<br>对于main方法来说，同理下面的花括号和上面的p对齐，两个花括号中间的部分是方法的方法体。</p><h3 id="实际上java开发的步骤"><a href="#实际上java开发的步骤" class="headerlink" title="实际上java开发的步骤"></a>实际上java开发的步骤</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003090554702.png" alt="image-20241003090554702"></p><p>从上图可以知道，虚拟机运行的程序都是.class文件，编写的程序是.java文件</p><h3 id="简单的程序bug调试以及发散出的思维"><a href="#简单的程序bug调试以及发散出的思维" class="headerlink" title="简单的程序bug调试以及发散出的思维"></a>简单的程序bug调试以及发散出的思维</h3><h4 id="关于bug："><a href="#关于bug：" class="headerlink" title="关于bug："></a>关于bug：</h4><p>1、bug说明程序有部分有错，也可以说明你离成功不远了，遇到bug是非常正常的事情<br>2、bug越多程序越复杂，程序越复杂bug越多<br>3、程序员的能力可以简单由调试bug的数量来判断，调试解决的bug越多，程序员的段位越高。<br>4、写不出bug的程序员是没有写代码的程序员，多写多错才会有所成长。</p><h4 id="由bug发散的思维："><a href="#由bug发散的思维：" class="headerlink" title="由bug发散的思维："></a>由bug发散的思维：</h4><p>以下是刚才这个简单的bug我认为新手可能出现的错误以及原因<br>1、类名写错了 public class 后面的类名一定要和建的.java文件前面的名字相同，并且区分大小写<br>2、System的S打成小写，<code>System.out.print</code> 中的 <code>System</code> 是指 Java 的 <code>java.lang.System</code> 类。这个类是 Java 自带的，不需要额外导入，因为 <code>java.lang</code> 包是自动导入的。其中System是一个类，out是一个静态字段，print是一个方法（包括println）</p><h2 id="标识符、关键字、变量本质、注释"><a href="#标识符、关键字、变量本质、注释" class="headerlink" title="标识符、关键字、变量本质、注释"></a>标识符、关键字、变量本质、注释</h2><h3 id="标识符命名规则及使用规范"><a href="#标识符命名规则及使用规范" class="headerlink" title="标识符命名规则及使用规范"></a>标识符命名规则及使用规范</h3><h4 id="标识符命名规则"><a href="#标识符命名规则" class="headerlink" title="标识符命名规则"></a>标识符命名规则</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003155147873.png" alt="image-20241003155147873"></p><p>注：图中一个没有说到的细节就是可以以人民币符号￥开头，在我上课的PPT里面确实显示是可以的<br>我已经测试过了，确实是可以的。但是原理和图中说的有些出入<br>所以用一句话概括</p><p><u><strong>开头字母钱标下划线，大小写敏感，区别关键字。</strong></u></p><h4 id="关于人民币符号￥"><a href="#关于人民币符号￥" class="headerlink" title="关于人民币符号￥"></a>关于人民币符号￥</h4><p>￥符号也是作为”字母“被识别的，和中文和字母一样，因为Java用的是unicode字符集，￥和中文都满足，所以都可以作为”字母“被识别。而不是这个符号本身被识别。</p><h4 id="标识符使用规范"><a href="#标识符使用规范" class="headerlink" title="标识符使用规范"></a>标识符使用规范</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003155953266.png" alt="image-20241003155953266"></p><p>主要是引入了驼峰原则，实际情况可能乱起名的人才是占了大多数</p><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test002</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">_age</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">$age</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span> ￥age = <span class="number">4</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">age123</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"><span class="comment">//      int 123age = 6; 数字在前无法作为标识符，直接报错</span></span><br><span class="line"><span class="comment">//      int age# = 7; 标识符只能是字母数字下划线$</span></span><br><span class="line">        <span class="type">int</span> 年龄 = <span class="number">8</span>; <span class="comment">//java使用的是unicode字符集，中文也被识别成字符集中的 ”字母“</span></span><br><span class="line"><span class="comment">//      int class = 9; class 是java中的关键字，同样无法作为标识符，所以错误</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">_class</span> <span class="operator">=</span> <span class="number">10</span>; <span class="comment">//用下划线等符号标识一下就不是关键字了。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><p>JAVA关键字是JAVA语言保留给内部使用的。所以关键字也叫保留字。<br>关键字都有特殊的含义，我们不能使用关键字作为标识符。<br>下面放一下java中的50个关键字，但是背是不可能背的，这辈子不可能背的。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003163132626.png" alt="image-20241003163132626"></p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h4 id="变量的本质"><a href="#变量的本质" class="headerlink" title="变量的本质"></a>变量的本质</h4><p><u><strong>可操作的存储空间</strong></u></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003163334181.png" alt="image-20241003163334181"></p><p>用商场停车位来举例<br>商场有停车位，每个停车位有独一无二的编号，这个编号就是变量名<br>假设停车位编号A1，你停车之前A1就是一个空值，但是还是存在A1停车位<br>去停车的时候，你把车”小黑“停到一个A1，A1就有了自己的”值“ 小黑<br>所以A1 = 小黑  ，实际上是把小黑赋值给了A1。</p><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">monthlySalary</span> <span class="operator">=</span> <span class="number">3000</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">annualSalary</span> <span class="operator">=</span> monthlySalary*<span class="number">12</span>;</span><br><span class="line">System.out.println(annualSalary);</span><br><span class="line"><span class="type">double</span> <span class="variable">bonus</span> <span class="operator">=</span> <span class="number">150.123</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> annualSalary+bonus;</span><br><span class="line">System.out.println(sum);</span><br></pre></td></tr></table></figure><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><h4 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h4><p>注释不会出现在字节码文件中（.class文件）。<br>java编译器编译的时候会跳过注释语句<br>同样的程序不管写多少注释写没写注释，编译之后的大小都是一样的。</p><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003164311620.png" alt="image-20241003164311620"></p><h2 id="变量-1"><a href="#变量-1" class="headerlink" title="变量"></a>变量</h2><h3 id="八种基本数据类型"><a href="#八种基本数据类型" class="headerlink" title="八种基本数据类型"></a>八种基本数据类型</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200200688.png" alt="image-20241003200200688"></p><p>继续用上文是商场停车位来解释<br>高速休息站里的车位有不同的类型，SUV和越野车的车位大，卡车和客车的车位更大，卡车和客车的停车位可以停下小轿车和越野车，但是卡车和客车没办法停在小轿车和越野车的停车位里。<br>由此可知 ：定义数据类型就是定义停车位的大小和类型<br>JAVA是一种 <strong>强类型语言</strong> ，<strong>每个变量都必须声明数据类型</strong></p><h4 id="整型数据类型"><a href="#整型数据类型" class="headerlink" title="整型数据类型"></a>整型数据类型</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200350108.png" alt="image-20241003200350108"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200414469.png" alt="image-20241003200414469"></p><p>派生知识点：</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200502344.png" alt="image-20241003200502344"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test003</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">18</span>; <span class="comment">//默认是int类型，转换成byte没有损失，所以正常转换了</span></span><br><span class="line">        <span class="type">short</span> <span class="variable">salary</span> <span class="operator">=</span> <span class="number">25000</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">salary2</span> <span class="operator">=</span> <span class="number">50000</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">pekingPopulation</span> <span class="operator">=</span> <span class="number">30000000</span>;</span><br><span class="line"><span class="comment">//      int globalPopulation = 700000000;  表示过大是数会报错</span></span><br><span class="line"><span class="comment">//以上就是整形常量 ，默认的类型是int ，改成long类型需要后面加L/l</span></span><br><span class="line"><span class="comment">//      int globalPopulation = 7000000000L;</span></span><br><span class="line"><span class="comment">//还是报错，因为是把70亿 赋值给int，int 最大只能接受21亿的数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//关于进制，可以定义不同的进制</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="number">65</span>; <span class="comment">//十进制</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="number">065</span>; <span class="comment">//八进制 0开头</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="number">0x65</span>; <span class="comment">//十六进制 0x开头</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t4</span> <span class="operator">=</span> <span class="number">0b01000001</span>; <span class="comment">//二进制 0b开头</span></span><br><span class="line">        System.out.println(t1+<span class="string">&quot;\n&quot;</span>+t2+<span class="string">&quot;\n&quot;</span>+t3+<span class="string">&quot;\n&quot;</span>+t4);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="浮点型数据类型"><a href="#浮点型数据类型" class="headerlink" title="浮点型数据类型"></a>浮点型数据类型</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241004083854873.png" alt="image-20241004083854873"></p><p>可以看到浮点数的表数范围非常大，这是因为<strong>浮点数是不精确</strong>的  </p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241004084218697.png" alt="image-20241004084218697"></p><p><strong>需要注意：</strong><br>    指定范围内的整数是有限的，比如0-10，但是0-10之间的小数是无限的。<br>因此，有限的空间存储无限的数据，必然存在误差，所以浮点数不能精确表示。<br>如果需要进行不产生舍入误差的精确计算，就需要引入BigDecimal类。后续再说。</p><p>实操代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        <span class="comment">//测试浮点数</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">3.14</span>;</span><br><span class="line"><span class="comment">/*        float f1 = 3.14;</span></span><br><span class="line"><span class="comment"> 报错java: incompatible types:</span></span><br><span class="line"><span class="comment">possible lossy conversion from double to float</span></span><br><span class="line"><span class="comment">说明浮点常量默认是double*/</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">f1</span> <span class="operator">=</span> <span class="number">3.14F</span>;<span class="comment">//后面加大写的F，通过编译</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="number">314E-2</span>;<span class="comment">//科学计数法 xEn= x * 10^n</span></span><br><span class="line">        System.out.println(d1+<span class="string">&quot;\n&quot;</span>+f1+<span class="string">&quot;\n&quot;</span>+d2);</span><br><span class="line">        <span class="comment">//浮点数是精确的，用于比较要小心。</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">f3</span> <span class="operator">=</span> <span class="number">0.1F</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">d3</span> <span class="operator">=</span> <span class="number">0.1</span>;</span><br><span class="line">        System.out.println(f3 == d3);</span><br><span class="line">        <span class="comment">//输出false 说明不相等</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Char字符集"><a href="#Char字符集" class="headerlink" title="Char字符集"></a>Char字符集</h4><p>说到char字符，首先要注意String类型<br><strong>String是字符串不是基本数据类型！</strong>是一个类！包含在Java.lang包里面，自动引入<br>本质上是一个字符的数组</p><h5 id="ASCII字符集"><a href="#ASCII字符集" class="headerlink" title="ASCII字符集"></a>ASCII字符集</h5><p>ASCII字符集由美国国家标准协会指定，由一个字节的后7位来表示一个字符。（所以一共有2^7 128字符）<br>剩下的最高位一般为0<br>例 字母A在计算机中就是01000001 也就是65<br>ASCII字符非常简单，就是一个简单的查表的过程（如下图）<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121503946.png" alt="image-20241005121503946"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121533973.png" alt="image-20241005121533973"></p><h5 id="字符集的发展过程"><a href="#字符集的发展过程" class="headerlink" title="字符集的发展过程"></a>字符集的发展过程</h5><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121604545.png" alt="image-20241005121604545"></p><p>ISO GB BIG5，都是不同地区自己制定的标准，由于不互通，经常造成乱码问题<br>所以有了Unicode字符集，每个字符都基于了全球独一无二的编码</p><h5 id="Unicode原理"><a href="#Unicode原理" class="headerlink" title="Unicode原理"></a>Unicode原理</h5><p>unicode采用了字符集和编码分开的策略。<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121931383.png" alt="image-20241005121931383"></p><p>unicode统一采用了两个字节表示一个字符，<strong>包括英文字母</strong><br>但是因为英文占据了互联网信息的绝大部分，所以在传输过程中会造成极大的浪费<br>所以现在主流的UTF-8</p><h5 id="UTF-8"><a href="#UTF-8" class="headerlink" title="UTF-8"></a>UTF-8</h5><p>用1-6个字节来编码表示Unicode字符，西欧字符仍然是一个字节，汉字是三个字节  </p><h4 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h4><p>对照表格<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005122714547.png" alt="image-20241005122714547"></p><h4 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h4><p>布尔类型由两个常量，一个true 一个false组成<br>在内存中占1或4个字节。<br><u>和C的区别</u>：不可以使用0或非0的整数来代替t或者f<br>常用来坐判断逻辑的条件。</p><p>练习代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//测试char</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="string">&#x27;薯&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        System.out.print(c1);</span><br><span class="line">        System.out.print(c2);</span><br><span class="line"></span><br><span class="line">        <span class="type">char</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">c4</span> <span class="operator">=</span> <span class="string">&#x27;片&#x27;</span>;</span><br><span class="line">        System.out.print(c2);</span><br><span class="line">        System.out.println(c3);</span><br><span class="line">        System.out.println(c4);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//字符串不是基本数据类型，是类！</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;\n薯片&quot;</span>;</span><br><span class="line">        <span class="comment">//字符串用双引号，本质上就是一个字符数组</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">&quot;\n\n\&quot;床前\&quot;\t明\&#x27;月光\&#x27;&quot;</span>;</span><br><span class="line">        System.out.println(str2);</span><br><span class="line">        <span class="comment">//布尔类型</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在写代码&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="基本运算符"><a href="#基本运算符" class="headerlink" title="基本运算符"></a>基本运算符</h2><h3 id="运算符分类"><a href="#运算符分类" class="headerlink" title="运算符分类"></a>运算符分类</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005130928325.png" alt="image-20241005130928325"></p><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005131146127.png" alt="image-20241005131146127"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========算术运算符=========&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> a + b * <span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">c1</span> <span class="operator">=</span> (a + b) * <span class="number">4</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;c=&quot;</span> + c);</span><br><span class="line">System.out.println(<span class="string">&quot;c1=&quot;</span>+ c1);</span><br><span class="line"><span class="type">int</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">15</span>/<span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="number">15</span>%<span class="number">4</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;d1=&quot;</span>+d1 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;d2=&quot;</span>+d2);</span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = a ++;  <span class="comment">//先赋值后自增，代码从左往右执行，先把a赋值给a然后a再打印</span></span><br><span class="line">System.out.println(<span class="string">&quot;b=&quot;</span>+b +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;a=&quot;</span>+a);</span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = ++a;  <span class="comment">//先自增后赋值,--和++同理</span></span><br><span class="line">System.out.println(<span class="string">&quot;b=&quot;</span>+b +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;a=&quot;</span>+a);</span><br></pre></td></tr></table></figure><h3 id="扩展运算符"><a href="#扩展运算符" class="headerlink" title="扩展运算符"></a>扩展运算符</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005132427532.png" alt="image-20241005132427532"></p><p>运算符和表达式完全等效 没有过多的说明，用的情况也少<br>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========拓展运算符=========&quot;</span>);</span><br><span class="line"></span><br><span class="line">a = <span class="number">20</span>;</span><br><span class="line">b = <span class="number">30</span>;</span><br><span class="line">a += b;</span><br><span class="line">System.out.println(<span class="string">&quot;a=&quot;</span>+a + <span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b=&quot;</span>+b);</span><br></pre></td></tr></table></figure><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153134726.png" alt="image-20241005153134726"></p><p>关系运算符的计算结果为布尔值<br>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========关系运算符=========&quot;</span>);</span><br><span class="line"> a = <span class="number">20</span>;</span><br><span class="line"> b = <span class="number">30</span>;</span><br><span class="line"> <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> a&lt;b;</span><br><span class="line"> System.out.println(result);</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>这一块基本上用图片来说明</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153620084.png" alt="image-20241005153620084"></p><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153743620.png" alt="image-20241005153743620"><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153828335.png" alt="image-20241005153828335"></p><p> 短路与、或可以节省计算量，提前返回ture或false<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153957310.png" alt="image-20241005153957310"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005154031303.png" alt="image-20241005154031303"></p><p><strong>关于异或</strong><br>个人理解就是简单的 “不同”<br>A和B不同 结果就是true<br>A和B相同 结果就是false 因为不是 “不同”<br>注意异或的符号是^,幂运算的符号，但是表示的不是幂运算<br>java中幂运算（科学计数法）要用E来表示 比如 xEy 就是x乘10的y次方<br>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========逻辑运算符=========&quot;</span>);</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="literal">true</span> &amp; <span class="literal">false</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="literal">true</span> | <span class="literal">false</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b3</span> <span class="operator">=</span> !b2;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b4</span> <span class="operator">=</span> <span class="literal">true</span>^<span class="literal">true</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;b1=&quot;</span>+ b1 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b2=&quot;</span>+ b2 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b3=&quot;</span>+ b3 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b4=&quot;</span>+ b4 );</span><br><span class="line"><span class="comment">//短路与、短路或</span></span><br><span class="line"><span class="type">int</span> <span class="variable">w</span> <span class="operator">=</span><span class="number">3</span>/<span class="number">0</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b5</span> <span class="operator">=</span> <span class="number">3</span>&lt;<span class="number">4</span> || (<span class="number">4</span>&lt;<span class="number">4</span>/<span class="number">0</span>); <span class="comment">//这里如果是普通的或的话就会报错，使用了短路就没问题</span></span><br><span class="line">System.out.println(b5);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005182815752.png" alt="image-20241005182815752"></p><p>例如“3”的二进制：00000000 00000000 00000000 00000011<br>取反就是： 11111111 11111111 11111111 11111100<br> <strong>示例代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">&quot;==========位运算符=========&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">7</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p1</span> <span class="operator">=</span> m&amp;n;</span><br><span class="line">        System.out.println(<span class="string">&quot;p1=&quot;</span>+p1);</span><br><span class="line"><span class="comment">/* 3 = 00000000 00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="comment">*  7 = 00000000 00000000 00000000 00000000 00000111</span></span><br><span class="line"><span class="comment">* 按为与 直观 的可以看到 上下的都是1的时候才是一所以答案为</span></span><br><span class="line"><span class="comment">* 00000000 00000000 00000000 00000011 = 3*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">p2</span> <span class="operator">=</span> m | n ;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p3</span> <span class="operator">=</span> m^n ;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p4</span> <span class="operator">=</span> ~m;</span><br><span class="line">        System.out.println(<span class="string">&quot;p2=&quot;</span>+p2);</span><br><span class="line">        System.out.println(<span class="string">&quot;p3=&quot;</span>+p3);</span><br><span class="line">        System.out.println(<span class="string">&quot;p4=&quot;</span>+p4);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">m2</span> <span class="operator">=</span> <span class="number">3</span>&lt;&lt;<span class="number">3</span>;<span class="comment">//左移3位 =3*2*2*2</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">m3</span> <span class="operator">=</span> <span class="number">12</span>&gt;&gt;<span class="number">2</span>;<span class="comment">//右移2位 =12/2/2</span></span><br><span class="line">        System.out.println(<span class="string">&quot;m2=&quot;</span>+m2);</span><br><span class="line">        System.out.println(<span class="string">&quot;m3=&quot;</span>+m3);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​     </p><h3 id="字符串连接符"><a href="#字符串连接符" class="headerlink" title="字符串连接符"></a>字符串连接符</h3><p>字符串连接符指的是+在连接字符时自动变为字符串连接符，会失去+原本的加的功能<br>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========字符串连接符=========&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">r1</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">r2</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">System.out.println(r1 + r2);<span class="comment">//正常显示</span></span><br><span class="line">System.out.println(<span class="string">&quot;result is&quot;</span>+r1+r2);<span class="comment">//这里+变成字符串连接符</span></span><br></pre></td></tr></table></figure><h3 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h3><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005185520236.png" alt="image-20241005185520236"><br>条件运算符可以很方便的替代if_else语句中的某些特殊情况</p><p><strong>示例代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(&quot;==========条件运算符=========&quot;);</span><br><span class="line">int y1 = 30;</span><br><span class="line">int y2 = 40;</span><br><span class="line">int minY = y1&lt;y2?y1:y2;//返回y1y2中比较小的值</span><br></pre></td></tr></table></figure><p>此致，java中所有的基本运算符都已经学完了</p><h2 id="数据类型自动和强制转换"><a href="#数据类型自动和强制转换" class="headerlink" title="数据类型自动和强制转换"></a>数据类型自动和强制转换</h2><h3 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008080327235.png" alt="image-20241008080327235"></p><p>自动类型转换指容量小的数据类型可以自动转换为容量大的数据类型</p><p><strong>注意</strong>：这里的容量大小，指的不是<u>字节数</u>，而是<u>表数范围</u><br>例如八个字节的long可以自动转换为四个字节的float<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008080511585.png" alt="image-20241008080511585"></p><p>图中的实线表示的是无数据丢失的自动类型转换，虚线表示的是可能会有数据丢失的自动类型转换。</p><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"><span class="comment">/*测试基本数据类型的转换（自动转换，强制转换）</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test006</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//自动类型转换：表数范围小的可以自动转换为表数范围大的</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="number">3456</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">a2</span> <span class="operator">=</span> a1;</span><br><span class="line">        System.out.println(<span class="string">&quot;a1=&quot;</span>+ a1 + <span class="string">&quot;\n&quot;</span> + <span class="string">&quot;a2=&quot;</span>+ a2);</span><br><span class="line">        <span class="comment">//整型常量自动赋值给byte/short/char等类型，只要不超表数范围，则可以自动转换</span></span><br><span class="line">        <span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">121</span>;<span class="comment">//legal</span></span><br><span class="line"><span class="comment">//        byte b2 = 200;//illegal 200超过了byte的表数范围，所以不合法</span></span><br><span class="line">        <span class="comment">//算术运算符，两个操作数都是整形的时候，有一个是long，则结果为long，否则结果为int（即使是byte，结果也是int）</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="number">1234</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="number">123</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">c3</span> <span class="operator">=</span> c1 + c2;<span class="comment">//c1是long，所以整个结果全部变成long</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//算术运算符有一个操作数是double，则结果是double</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">3.14</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">d3</span> <span class="operator">=</span> d1+d2;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//强制类型转换</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">m1</span> <span class="operator">=</span> <span class="number">3.98</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m2</span> <span class="operator">=</span> (<span class="type">int</span>)m1;</span><br><span class="line">        System.out.println(<span class="string">&quot;m2=&quot;</span> + m2 );</span><br><span class="line">        <span class="comment">//转型的时候直接把小数丢掉，不会做任何的四舍五入运算。</span></span><br><span class="line"></span><br><span class="line">        <span class="type">char</span> <span class="variable">m3</span> <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m4</span> <span class="operator">=</span> m3 + <span class="number">2</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">m5</span> <span class="operator">=</span> (<span class="type">char</span>)m4;</span><br><span class="line">        System.out.println(<span class="string">&quot;m5=&quot;</span>+ m5);</span><br><span class="line">        <span class="comment">//这里体现的基本上就是ASCII编码，C往后两位是E</span></span><br><span class="line">        <span class="comment">/*当将一种类型强制转换成另一种类型</span></span><br><span class="line"><span class="comment">        * 而又超出了目标类型的表数范围</span></span><br><span class="line"><span class="comment">        * 就会被截断成一个完全不同的值</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">n2</span> <span class="operator">=</span> (<span class="type">byte</span>)n1;</span><br><span class="line">        System.out.println(<span class="string">&quot;n2=&quot;</span>+n2);</span><br><span class="line">        <span class="comment">//不要去纠结这个值的意义，这个值没有任何的意义，就是随机截的</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//溢出错误，操作比较大的数，要留意是否溢出。</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">salary</span> <span class="operator">=</span> <span class="number">1000000000</span>;<span class="comment">//10e</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">years</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line"><span class="comment">//        int total1 = salary*years; 出来了负数，说明发生了溢出。</span></span><br><span class="line"><span class="comment">//特别需要注意 溢出不会报异常，还是会正常显示。</span></span><br><span class="line"><span class="comment">/*修改方法1，把salary和year改成int类型</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> <span class="comment">//修改方法2</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">total2</span> <span class="operator">=</span> <span class="number">1L</span>*salary*years;</span><br><span class="line">        System.out.println(total2);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="通过键盘输入"><a href="#通过键盘输入" class="headerlink" title="通过键盘输入"></a>通过键盘输入</h3><h2 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h2><p>流程控制语句有两种结构<br>1、选择结构<br>2、循环结构<br>学会了程序控制语句，我们的一只脚就迈进了程序员的大门。</p><h3 id="编程的本质"><a href="#编程的本质" class="headerlink" title="编程的本质"></a>编程的本质</h3><p>编程的本质就是用代码表达现实世界的逻辑。<br>而现实世界中的任何逻辑，最终都可以拆分成选择结构和循环结构。<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008211552442.png" alt="image-20241008211552442"></p><p>选择结构代表 如果…则…  这样的逻辑<br>例：如果看到红灯 则立即停车<br>循环结构就是选择结构的基础上加上重复执行。<br>任何的编程<br>本质上都是由“变量、选择语句、循环语句”组成</p><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009081542457.png" alt="image-20241009081542457"></p><p><strong>语法结构</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009081559194.png" alt="image-20241009081559194"></p><p><strong>流程图</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009081328179.png" alt="image-20241009081328179"></p><h4 id="if-else语句"><a href="#if-else语句" class="headerlink" title="if else语句"></a>if else语句</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083036459.png" alt="image-20241009083036459"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083036459.png" alt="image-20241009083036459">   </p><h4 id="多分支结构"><a href="#多分支结构" class="headerlink" title="多分支结构"></a>多分支结构</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083313068.png" alt="image-20241009083313068"></p><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083400325.png" alt="image-20241009083400325"> </p><h4 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"><span class="comment">/*流程控制语句</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test010</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(Math.random()<span class="comment">/*这个方法返回一个0-1之间的随机数【0，1）*/</span>);</span><br><span class="line">        <span class="comment">//所以如果要返回一个0-10之间的随机数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random() * <span class="number">10</span>);</span><br><span class="line">        System.out.println(r);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果r小于5，则打印&quot;数比较小&quot;</span></span><br><span class="line">        <span class="keyword">if</span>(r&lt;<span class="number">5</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;数比较小&quot;</span>);</span><br><span class="line">        &#125;<span class="comment">//这里如果不加这个花括号其实也有效，但是限制很大，重点是只对第一句有效。</span></span><br><span class="line">        <span class="comment">//所以为了更规范的写代码，最好还是加上。</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (r&lt;<span class="number">5</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;number is small&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;number is big&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//年龄筛选器</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">if</span> (age&lt;<span class="number">15</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;childhood&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">25</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;teenage&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">45</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;adult&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">65</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;old man&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">85</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;get rest&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span>  &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;die&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="特殊练习，数字和字母的转换"><a href="#特殊练习，数字和字母的转换" class="headerlink" title="特殊练习，数字和字母的转换"></a>特殊练习，数字和字母的转换</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test011</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*随机生成字母，aeiou输出元音，其他输出辅音*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">26</span>);</span><br><span class="line">        <span class="type">char</span> <span class="variable">alpha</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        alpha = (<span class="type">char</span>)(alpha + num);</span><br><span class="line">        <span class="keyword">if</span>(alpha == <span class="string">&#x27;a&#x27;</span>|| alpha == <span class="string">&#x27;e&#x27;</span>||alpha == <span class="string">&#x27;i&#x27;</span>||alpha == <span class="string">&#x27;o&#x27;</span>||alpha == <span class="string">&#x27;u&#x27;</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;元音&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;辅音&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Switch语句"><a href="#Switch语句" class="headerlink" title="Switch语句"></a>Switch语句</h3><p> switch语句特别适合做多值判断<br><strong>代码示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*以下是一个简单的判断语句</span></span><br><span class="line"><span class="comment">        * 随机生成了一个值 判断大学几年级*/</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">grade</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (grade == <span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 1&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade ==<span class="number">2</span> ) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 2&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade == <span class="number">3</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 3&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 4&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/* 以下是上面代码的switch语句版本*/</span></span><br><span class="line">        <span class="keyword">switch</span> (grade)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 1&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//必须要每个case后面跟一个break</span></span><br><span class="line">            <span class="comment">/*break是switch的跳出语句，没有break</span></span><br><span class="line"><span class="comment">            * switch就会一直执行*/</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 2&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 3&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 4&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">12</span>);</span><br><span class="line">        <span class="keyword">if</span> (month ==<span class="number">1</span> || month ==<span class="number">2</span> || month == <span class="number">3</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;spring&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (month ==<span class="number">4</span> || month ==<span class="number">5</span> || month == <span class="number">6</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;summer&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (month ==<span class="number">7</span> || month ==<span class="number">8</span> || month == <span class="number">9</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;autumn&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;winter&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (month)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;spring&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;summer&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;autumn&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//            case 10:</span></span><br><span class="line"><span class="comment">//            case 11:</span></span><br><span class="line"><span class="comment">//            case 12:</span></span><br><span class="line"><span class="comment">//                System.out.println(&quot;winter&quot;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;winter&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="switch的表达式"><a href="#switch的表达式" class="headerlink" title="switch的表达式"></a>switch的表达式</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009185237150.png" alt="image-20241009185237150"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009185312810.png" alt="image-20241009185312810"></p><p>switch语句练习</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test002</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//阿拉伯数字转化成英语。1--》one</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">10</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">Character</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;<span class="comment">//逻辑上来讲没有问题 但是从编译器的角度考虑最好先设置一个空值</span></span><br><span class="line">        <span class="keyword">switch</span> (num)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            Character = <span class="string">&quot;zero&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                Character = <span class="string">&quot;one&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                Character = <span class="string">&quot;two&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                Character = <span class="string">&quot;three&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                Character = <span class="string">&quot;four&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                Character = <span class="string">&quot;five&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                Character = <span class="string">&quot;six&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                Character = <span class="string">&quot;seven&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                Character = <span class="string">&quot;eight&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                Character = <span class="string">&quot;nine&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Character);</span><br><span class="line">        <span class="comment">/*超市推出积分活动，积分7000以上奖励苹果，5000以上奖励香蕉，3000以上奖励牛奶*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">10000</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;用户积分：&quot;</span>+ score);</span><br><span class="line">        <span class="comment">/*简单的做法， 用if判断 这里用switch练习*/</span></span><br><span class="line">        <span class="keyword">switch</span> (score/<span class="number">1000</span>)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;apple&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;banana&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;milk&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;none&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010075241955.png" alt="image-20241010075241955"></p><p> 一切的事物，核心都是循环，操作系统的核心是一个接一个的循环<br>屏幕显示是一个循环，键盘监听、鼠标监听，都是循环<br>大到宇宙的运行，也是循环；微观粒子运行，还是循环。<br>人生，也是循环。<br>循环结构分为两个</p><p>while循环和for循环<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010075523742.png" alt="image-20241010075523742"></p><h4 id="whlie的语法结构"><a href="#whlie的语法结构" class="headerlink" title="whlie的语法结构"></a>whlie的语法结构</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010075852717.png" alt="image-20241010075852717"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"><span class="comment">/*用于测试while循环*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test003</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*打印1-100*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">101</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i=&quot;</span>+i);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//计算1+2+...+100</span></span><br><span class="line"></span><br><span class="line">        i =<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">101</span>)&#123;</span><br><span class="line">            <span class="comment">//sum = sum + i;</span></span><br><span class="line">            sum += i ;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;和：&quot;</span>+sum);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010082020653.png" alt="image-20241010082020653"></p><p>只不过for循环的语法做了一些调整<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010082722211.png" alt="image-20241010082722211"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        <span class="comment">//for循环</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">0</span> ;i1&lt;<span class="number">10</span>;i1++)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i1=&quot;</span>+i1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum02</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">8</span>;m&lt;<span class="number">10</span>;m++)&#123;</span><br><span class="line">            sum02 += m;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;sum02=&quot;</span>+ sum02);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="嵌套循环"><a href="#嵌套循环" class="headerlink" title="嵌套循环"></a>嵌套循环</h3><p> 嵌套循环就是大循环里面套着小循环<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010174619193.png" alt="image-20241010174619193"></p><p>这样可以解决更加复杂的问题</p><p>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"><span class="comment">/*测试嵌套循环*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*打印输出十行，每行输出0-9*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>; l &lt;= <span class="number">10</span>; l++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> <span class="number">0</span>; h &lt; <span class="number">10</span>; h++) &#123;</span><br><span class="line">                System.out.print(h + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*for循环内部初始化的变量只再for循环内部使用</span></span><br><span class="line"><span class="comment">         * 除了for循环就没有了*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;奇\t&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;偶\t&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*输出一个矩形*/</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>; m&lt;<span class="number">6</span> ; m++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span><span class="number">0</span>; n&lt;<span class="number">6</span>;n++)&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*输出一个直角三角形*/</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>; m&lt;<span class="number">6</span> ; m++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span><span class="number">0</span>; n&lt;m;n++)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;========&quot;</span>);</span><br><span class="line">        <span class="comment">//输出一个倒直角三角形</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;m&lt;<span class="number">6</span>;m++)&#123;  <span class="comment">//  12345</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> n=<span class="number">5</span>;n&gt;<span class="number">5</span>-m;n--)&#123;<span class="comment">//54321</span></span><br><span class="line">                System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;========&quot;</span>);</span><br><span class="line">        <span class="comment">//输出一个倒直角三角形</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;m&lt;<span class="number">6</span>;m++)&#123;  <span class="comment">//  12345</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> n=<span class="number">0</span>;n&lt;<span class="number">5</span>-m;n++)&#123;<span class="comment">//54321</span></span><br><span class="line">                System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*输出一个等腰的三角形*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (j&gt;=num-i &amp;&amp; j&lt;=num+i)&#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="break和continue语句"><a href="#break和continue语句" class="headerlink" title="break和continue语句"></a>break和continue语句</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010194440523.png" alt="image-20241010194440523"></p><p>这段多说无益，直接上代码，通过代码来了解</p><p>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"><span class="comment">/*break和continue*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test005</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//产生100以内的随机数，知道随机数为88时终止循环</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">100</span>);</span><br><span class="line">            count +=<span class="number">1</span>;</span><br><span class="line">            System.out.println(m);</span><br><span class="line">            <span class="keyword">if</span> (m == <span class="number">88</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;count:&quot;</span>+count);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*测试continue*/</span></span><br><span class="line">        <span class="comment">/*把100-150之间补不能被3整除的数输出，并且每行输出5个*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">100</span>;i&lt;<span class="number">151</span>;i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i % <span class="number">3</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(i+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                    a++;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">if</span> (a % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/*        int a = 0;</span></span><br><span class="line"><span class="comment">        for (int i = 100;i&lt;151;i++) &#123;</span></span><br><span class="line"><span class="comment">            if (i % 3 == 0) &#123;</span></span><br><span class="line"><span class="comment">                continue;</span></span><br><span class="line"><span class="comment">            &#125; else if (a %5 ==0) &#123;</span></span><br><span class="line"><span class="comment">                System.out.println();</span></span><br><span class="line"><span class="comment">            &#125; else &#123;</span></span><br><span class="line"><span class="comment">                System.out.print(i);</span></span><br><span class="line"><span class="comment">                a++;</span></span><br><span class="line"><span class="comment">            &#125; 逻辑问题 */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test006</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 抓动物小游戏</span></span><br><span class="line"><span class="comment">        * 随机出现一个动物</span></span><br><span class="line"><span class="comment">        * 如果出现老虎，则游戏结束，如果出现老鹰，就躲起来等待下一个动物出现</span></span><br><span class="line"><span class="comment">        * 如果出现小猫小狗小鸟小乌龟就可以抓住。记数抓住多少个动物</span></span><br><span class="line"><span class="comment">        * 0老鼠1老鹰2小猫3小狗4小鸟*/</span></span><br><span class="line">        <span class="comment">//while(true)</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//抓住动物的数量</span></span><br><span class="line">        <span class="keyword">for</span>(;;)&#123;<span class="comment">//和while(true)等价</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">5</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">animal</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">switch</span> (num)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    animal = <span class="string">&quot;tiger&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    animal = <span class="string">&quot;eagel&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    animal = <span class="string">&quot;pussy&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    animal = <span class="string">&quot;doggy&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                    animal = <span class="string">&quot;bird&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    animal=<span class="string">&quot;unknow animal&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (animal ==<span class="string">&quot;tiger&quot;</span>)&#123;</span><br><span class="line">                System.out.println(animal);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (animal == <span class="string">&quot;eagel&quot;</span>) &#123;</span><br><span class="line">        System.out.println(animal);</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        count++;</span><br><span class="line">        System.out.println(animal);</span><br><span class="line">        System.out.println(count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="控制语句综合练习"><a href="#控制语句综合练习" class="headerlink" title="控制语句综合练习"></a>控制语句综合练习</h3><p>练习代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test007</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*使用for循环打印a-z的26个字母*/</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">character</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line">            System.out.println(character);</span><br><span class="line">            character++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*打印九九乘法表*/</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> m=<span class="number">1</span>; m&lt;<span class="number">10</span>;m++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span><span class="number">1</span>;n&lt;=m;n++)&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> m*n;</span><br><span class="line">                System.out.print(m+<span class="string">&quot;*&quot;</span>+n+<span class="string">&quot;=&quot;</span>+k+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/*个人理解 这一类问题的关键</span></span><br><span class="line"><span class="comment">* 其实是找到m和n的关系 也就是行和列之间的关系</span></span><br><span class="line"><span class="comment">* 找到了之后就好说*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*薪水计算器</span></span><br><span class="line"><span class="comment">        * 通过键盘输入月薪，每年是几个月的薪水</span></span><br><span class="line"><span class="comment">        * 输出年薪</span></span><br><span class="line"><span class="comment">        * 输出一行字“”如果每年粘性超过十万，恭喜你超过90%的国人</span></span><br><span class="line"><span class="comment">        * 如果年薪超过20万，恭喜你超越98%的国人</span></span><br><span class="line"><span class="comment">        * 知道键盘输入数字88，则退出程序 使用break退出循环</span></span><br><span class="line"><span class="comment">        * 输入中途 键盘输入数字66，则这个用户退出计算不显示 恭喜</span></span><br><span class="line"><span class="comment">        * 直接显示 重新开始计算，然后算下一个用户的年薪*/</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">/*这是面向对象里面的内容，总之通过这个方式可以获得键盘的输入*/</span></span><br><span class="line">        System.out.println(<span class="string">&quot;annual salary calculator&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;enter your salary:&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">monthSalary</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">            System.out.println(<span class="string">&quot;Enter the number of times you are paid in a year:&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">months</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">yearSalary</span> <span class="operator">=</span> monthSalary * months;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;your annual salary:&quot;</span>+ yearSalary );</span><br><span class="line">            <span class="keyword">if</span> (yearSalary&gt;=<span class="number">200000</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;king!&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (yearSalary&gt;=<span class="number">100000</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;victory&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;enter [88] to exit,enter [66] to continue&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">commandNum</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">88</span>==commandNum)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;exit&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">66</span> == commandNum)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;please reenter&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法的定义-内存结构"><a href="#方法的定义-内存结构" class="headerlink" title="方法的定义_内存结构"></a>方法的定义_内存结构</h2><h3 id="JAVA中的方法与函数的关系"><a href="#JAVA中的方法与函数的关系" class="headerlink" title="JAVA中的方法与函数的关系"></a>JAVA中的方法与函数的关系</h3><p>在 Java 中只使用“方法”（method）这个术语，而没有“函数”（function）的概念。Java 的方法（method）与其他编程语言中的函数（function）非常相似，它们都执行特定的任务并可以返回一个值。但是由于 Java 是面向对象的语言，所有方法必须属于一个类，因此使用“方法”这个词来强调它们是类的成员。</p><h3 id="方法的定义和调用"><a href="#方法的定义和调用" class="headerlink" title="方法的定义和调用"></a>方法的定义和调用</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008085025541.png" alt="image-20241008085025541"></p><h3 id="方法的声明格式"><a href="#方法的声明格式" class="headerlink" title="方法的声明格式"></a>方法的声明格式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*多个修饰符  返回值类型 方法名（形势参数列表）&#123;</span><br><span class="line">多个java语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里修饰符就是public static,对于现在来说不是很重要，只要记住就行<br>具体的情况之后再解释</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008085259515.png" alt="image-20241008085259515"></p><p> 示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"><span class="comment">/*测试方法的定义和调用</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test007</span> &#123;</span><br><span class="line">    <span class="comment">//main方法，程序的入口</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a1</span> <span class="operator">=</span> add(<span class="number">100</span>,<span class="number">200</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a2</span> <span class="operator">=</span> add(<span class="number">200</span>,<span class="number">300</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a3</span> <span class="operator">=</span> add(<span class="number">300</span>,<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> add(num1,num2);<span class="comment">//调用时实际传递的参数，实参</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;两个数的和&quot;</span>+ sum);</span><br><span class="line"></span><br><span class="line">        printInfo();</span><br><span class="line">        printInfo();</span><br><span class="line">        printInfo();<span class="comment">//可以多次调用</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//两个数求和</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1,<span class="type">int</span> n2<span class="comment">/*形参*/</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//定义新的变量 计算</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> n1 + n2;</span><br><span class="line">        <span class="keyword">return</span> sum;<span class="comment">//返回sum</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印公司信息</span></span><br><span class="line">    <span class="comment">//这类情况比较特殊，没有形参，也没有返回值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;玲珑山车神&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="方法的修饰符"><a href="#方法的修饰符" class="headerlink" title="方法的修饰符"></a>方法的修饰符</h3><p><strong>可见性修饰符：</strong></p><p><code>public</code>—在所有类中可见，在其他包中可以用import导入。<br><code>缺省</code>—就是没有修饰符，在同一个包中的类中可见，在其他包中不能用import导入。</p><p><strong>修饰符：</strong></p><p><code>final</code>—终态类，表示该类不能被继承<br><code>abstract</code>—抽象类，不能新建对象</p><h3 id="方法调用过程"><a href="#方法调用过程" class="headerlink" title="方法调用过程"></a>方法调用过程</h3><p>首先我们有一个叫栈的空间</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008091615217.png" alt="image-20241008091615217"></p><p>最初始的情况他是空的<br>然后看上面的示例代码，当我们执行到main方法（main方法是程序的入口）的时候<br>栈空间内部出现一个关于main方法的栈帧。（stack frame）</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008091705727.png" alt="image-20241008091705727"></p><p>每一个栈帧里面都包含main方法相关的信息<br>生成一个局部变量表，把上文main方法中的局部变量都放到表内</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008092330712.png" alt="image-20241008092330712"></p><p>当程序执行到int sum的时候，这里就需要调用一个新的add方法<br>开辟一个新的栈帧</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008092431525.png" alt="image-20241008092431525"></p><p>然后生成新的局部变量表<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008092505469.png" alt="image-20241008092505469"></p><p>调用函数的时候，把需要的局部变量的值传递进来。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241011093324455.png" alt="image-20241011093324455"></p><p>当调用printInfo()的时候，也同样会生成printInfo()的栈帧。 <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241011093820561.png" alt="image-20241011093820561"></p><p>打印完了之后直接车从栈里面出去 出栈<br>同时main方法执行完毕，main方法也出栈<br>然后栈就空了，然后整个程序结束执行。</p><h2 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h2><h3 id="overload"><a href="#overload" class="headerlink" title="overload"></a>overload</h3><p>方法的重载，指的是一个类中可以定义多个方法名相同，但参数不同的方法。调用时会根据不同的参数自动匹配对应的方法。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241012075559653.png" alt="image-20241012075559653"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241012075633825.png" alt="image-20241012075633825"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D11;</span><br><span class="line"><span class="comment">/*测试方法的重载*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(add(<span class="number">100.25</span>,<span class="number">100</span>));</span><br><span class="line">        System.out.println(add(<span class="number">100</span>,<span class="number">100</span>));</span><br><span class="line">        System.out.println(add(<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>));</span><br><span class="line">        System.out.println(add(<span class="number">100</span>,<span class="number">100.25</span>));</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1 , <span class="type">int</span> n2)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> n1 + n2;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法名相同，参数类型不同，构成重载。</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">add</span><span class="params">(<span class="type">double</span> n1,<span class="type">int</span> n2)</span>&#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> n1+n2;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1 , <span class="type">int</span> n2, <span class="type">int</span> n3)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> n1 + n2 + n3;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法名相同，参数顺序不同，构成重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1 , <span class="type">double</span> n2)</span>&#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> n1+n2;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*只有返回值不同不构成重载，会报编译错误*/</span></span><br><span class="line"><span class="comment">//    public static void add(int n1 , double n2)&#123;</span></span><br><span class="line"><span class="comment">//        double sum = n1+n2;</span></span><br><span class="line"><span class="comment">//        return sum;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">/*只有形参名字不一样，同样不构成重载，因为不知道调用的是哪一个*/</span></span><br><span class="line"><span class="comment">//    public static double add(int m1 , double m2)&#123;</span></span><br><span class="line"><span class="comment">//        double sum = m1+m2;</span></span><br><span class="line"><span class="comment">//        return sum;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><h3 id="类的基本元素"><a href="#类的基本元素" class="headerlink" title="类的基本元素"></a>类的基本元素</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013202627105.png" alt="image-20241013202627105"></p><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013203352570.png" alt="image-20241013203352570"></p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>初始化就是赋一个默认值给这个成员变量，详见下面的成员变量的默认值</p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D13;</span><br><span class="line"><span class="comment">/*建立一个学生类用来表示学生的信息*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">        <span class="comment">/*静态特征（数据），作为学生需要拥有的一些元素*/</span></span><br><span class="line">        <span class="type">int</span> id;</span><br><span class="line">        String name;</span><br><span class="line">        <span class="type">int</span> score;</span><br><span class="line">        <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*方法（动态行为）（对数据的操作）*/</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123;</span><br><span class="line">            System.out.println(name + <span class="string">&quot;is Studying&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*面向对象编程的好处就是把相关的数据和对他的操作全部都放在一起</span></span><br><span class="line"><span class="comment">        * 这样去调用和定义的时候会非常方便*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="成员变量的默认值"><a href="#成员变量的默认值" class="headerlink" title="成员变量的默认值"></a>成员变量的默认值</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013203930595.png" alt="image-20241013203930595"></p><p>规则：对于数字 可以是0的都赋值为0，对于字符 赋值\u0000 本质也是0<br>对于布尔默认是 false 占一个字节 实际上也是0<br>引用类型： 从现在面向对象开始讲解的新的类型 自定义的类型 都是引用类型。<br>比如上文定义的student 就是一个引用类型</p><h3 id="类和对象的关系"><a href="#类和对象的关系" class="headerlink" title="类和对象的关系"></a>类和对象的关系</h3><p>什么是对象？万物皆对象，在JAVA中，对象就是一类数据的实例化，他们有着一种或几种的相同特征。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013204949141.png" alt="image-20241013204949141"></p><p><strong>个人理解</strong>：用之前使用的过的写过的代码举例就是，比如说定义了 一个int类型的数据a1<br>那么就是存在一个a1，这个a1就是对象，属于的类是int类<br>比如说上文建立了一个student 的类之后，我再输入下面的语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">/*在main方里面去使用上面的内容*/</span></span><br><span class="line">    <span class="type">Student</span> <span class="variable">stu1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是创建了一个新的对象 这个对象的名字叫stu1 属于student的类<br>同时他也是所谓的引用类型变量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D13;</span><br><span class="line"><span class="comment">/**/</span></span><br><span class="line"><span class="comment">public class BaizhanStudent &#123;</span></span><br><span class="line"><span class="comment">    /*定义一个练习用的student类*/</span></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String sname;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="comment">/*假设每个学生都需要一台电脑，</span></span><br><span class="line"><span class="comment">    所以这里给每个学生加了一个电脑属性*/</span></span><br><span class="line">    Computer computer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123;<span class="comment">/*这里定义方法没有写修饰符，默认是公共抽象的，具体后面展开*/</span></span><br><span class="line">        System.out.println(<span class="string">&quot;我正在使用：&quot;</span>+ computer.brand+<span class="string">&quot;学习&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*关于修饰符*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Computer</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Computer</span>();<span class="comment">//这些new的本质是构造方法，这个后期再讲。</span></span><br><span class="line">        c1.brand = <span class="string">&quot;lenovo&quot;</span>;</span><br><span class="line">        c1.price = <span class="number">6000</span>;</span><br><span class="line">        <span class="type">Computer</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Computer</span>();</span><br><span class="line">        c2.brand = <span class="string">&quot;Republic of Gamers&quot;</span>;</span><br><span class="line">        c2.price = <span class="number">9000</span>;</span><br><span class="line">        <span class="type">Computer</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Computer</span>();</span><br><span class="line">        c3.brand = <span class="string">&quot;alienware&quot;</span>;</span><br><span class="line">        c3.price = <span class="number">10000</span>;</span><br><span class="line">        <span class="comment">/*定义computer*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*定义baizhanstudent*/</span></span><br><span class="line">        <span class="type">BaizhanStudent</span> <span class="variable">stu01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BaizhanStudent</span>();</span><br><span class="line">        stu01.id = <span class="number">1001</span>;</span><br><span class="line">        stu01.sname = <span class="string">&quot;疯狂小扬哥&quot;</span>;</span><br><span class="line">        stu01.age = <span class="number">18</span>;</span><br><span class="line">        stu01.computer = c1;</span><br><span class="line"></span><br><span class="line">        stu01.study();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> Y24M10D13;</span><br><span class="line"><span class="comment">/*这是对于computer整个类的定义*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Computer</span> &#123;</span><br><span class="line">    <span class="comment">/*定义电脑类的两个属性，品牌和价格*/</span></span><br><span class="line">    String brand;</span><br><span class="line">    <span class="type">int</span> price;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上是这段的示例代码，以下来讲述底层内存中的变化<br>首先内存中有栈和堆<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072610824.png" alt="image-20241014072610824"></p><p>当我们启动哦那这个类进行运算的时候。 内存中首先会做类的加载动作。<br>双引号中的内容，会被优先做处理，在堆中生成。<br> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072706630.png" alt="image-20241014072706630"></p><p>然后开始执行main方法，生成栈帧和局部变量表，其中c1 c2 stu1这些都是引用类型（四字节）<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072844614.png" alt="image-20241014072844614"><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072954550.png" alt="image-20241014072954550"></p><p>  然后创建一个computer对象，并给他的两个属性赋默认值。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014073750285.png" alt="image-20241014073750285"></p><p>然后这个对象会有一个<u><strong>地址</strong></u> 例0x11（0x代表16进制）这个数我随便写的，无特殊含义<br>也可以用十进制写个2345 反正就是一个标记，告诉我们这个对象的地址是多少。<br>然后这里对象就建立完成了，建立完成了之后会把这个值个给c1，也就是那个0x11<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014074129456.png" alt="image-20241014074129456"></p><p>同时这也就意味着，c1这个变量指向了这个对象。<br>这个时候就可以通过c1找到这个对象。<br>这时候就可以通过C1找到这个对象。<br>因为他引用了这个对象的地址。<br>然后再看下一步c1.brand = 联想<br>假设这里给联想一个虚拟的值0x88<br>然后堆中相当于c1.brand = 0x88<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014074730375.png" alt="image-20241014074730375"></p><p>也就是c1.brand引用了0x88，然后c1.price 重新赋值=6000<br>因为c1.price是基本数据类型，基本数据类型是直接赋值给他，引用数据类型才是给地址。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014074826036.png" alt="image-20241014074826036"></p><p>c2h和stu1的定义过程也是同理，这里就不赘述了，直接上结果</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014075459180.png" alt="image-20241014075459180"></p><p>注意 堆内存中的数据不会清除。因为不确定之后是否还会要被调用</p><h3 id="构造方法constructor"><a href="#构造方法constructor" class="headerlink" title="构造方法constructor"></a>构造方法constructor</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241015084635560.png" alt="image-20241015084635560"></p><p><strong>构造器的定义</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241015085112631.png" alt="image-20241015085112631"></p><p><strong>构造器 的四个要点</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017193612797.png" alt="image-20241017193612797"></p><p><strong>示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D17;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 描述二维空间中的一个点</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Point</span> &#123;</span><br><span class="line">    <span class="type">double</span> x;</span><br><span class="line">    <span class="type">double</span> y;</span><br><span class="line"><span class="comment">//构造器一定返回point对象所以没必要再声明返回值类型</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Point</span><span class="params">(<span class="type">double</span> _x,<span class="type">double</span> _y)</span>&#123;<span class="comment">//这个就是构造器</span></span><br><span class="line">        x = _x;</span><br><span class="line">        y = _y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Point</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Point</span>(<span class="number">3.0</span>,<span class="number">4</span>);<span class="comment">/*这个后面的括号没东西因为是无参的构造器</span></span><br><span class="line"><span class="comment">        当构造器里面加入了参数之后，就变成了有参的构造器，这里就会报错*/</span></span><br><span class="line">        <span class="comment">/*在之前还没有学习构造器的时候，baizhanstudent的时候</span></span><br><span class="line"><span class="comment">        * 也可以自动newStudent类，是因为java的编译器</span></span><br><span class="line"><span class="comment">        * 自动帮助我们添加了 无参构造器。*/</span></span><br><span class="line">        System.out.println(p1.x);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*构造方法的核心作用：初始化对象*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>创建对象的步骤</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017212316194.png" alt="image-20241017212316194"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D17;</span><br><span class="line"><span class="comment">/*模拟网站的账户（用于测试构造方法发的重载*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String uname;</span><br><span class="line">    String pwd;</span><br><span class="line">    <span class="comment">/*以上是用户名和密码*/</span></span><br><span class="line">    User()&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span>  <span class="title function_">User</span><span class="params">(<span class="type">int</span> _id)</span>&#123;<span class="comment">//这里定义了一个构造器 _id是里面的形参</span></span><br><span class="line">        id = _id;<span class="comment">//这里给id赋值_id</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*同名的构造器方法，但是参数不一样*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> _id,String _uname, String _pwd)</span>&#123;</span><br><span class="line">        id = _id;</span><br><span class="line">        uname = _uname;</span><br><span class="line">        pwd = _pwd;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">u1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        <span class="type">User</span> <span class="variable">u2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1001</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">u3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1001</span>,<span class="string">&quot;13&quot;</span>，<span class="number">123456</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>构造方法的重载</strong></p><p><strong><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017212921519.png" alt="image-20241017212316194"></strong></p><h3 id="内存-栈-和-堆"><a href="#内存-栈-和-堆" class="headerlink" title="内存 栈 和 堆"></a>内存 栈 和 堆</h3><p><strong>java虚拟机完整的内存模型</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017214816354.png" alt="image-20241017214816354"></p><p><strong>简化模型</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017214937026.png" alt="image-20241017214937026"></p><p><strong>栈的特点</strong></p><p>1、栈描述的是方法执行的内部模型。每个方法被调用都会船舰一个栈帧（存储局部变量、操作数、方法出口等）<br>2、栈的存储特性是“线进后出，后进先出”<br>3、栈是由系统自动分配，速度快！栈是一个联系的内存空间！<br>其他特性：<br>4、JVM为每个线程出啊昂建一个栈，用于存放改线程执行方法的信息（实际参数、局部变量等）<br>5、栈属于线程私有，不能实现线程之间的共享</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018195717248.png" alt="image-20241018195717248"></p><p>如同上面的方法，假设main方法中调用了另一个A方法，那么在mian方法上面加入那个调用的A方法的栈帧A<br>然后假设A方法又调用了一个B方法，那么在A方法的上面再加入一个B方法的栈帧B<br>然后最后加入的栈帧B方法执行完了之后最先离开栈帧，然后A方法执行完了之后再离开栈帧，最后是main方法<br>也就是说越早调用的越晚离开。</p><p><strong>堆的特点</strong></p><p>1、堆用于存储创建好的对象和数组（数组也是对象）<br>2、堆是一个不连续的内存空间，分配灵活，速度慢！<br>3、JVM只有一个堆，被所有线程共享。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018200537074.png" alt="image-20241018200537074"></p><p><strong>方法区</strong></p><p>1、方法区是JAVA虚拟机规范，可以有不同的实现。（比如JDK8是“元数据空间”和堆结合起来<br>2、方法区实际上也是堆，只是用于存储类、常量相关的信息！<br>3、用来存放程序中永远是不变或者唯一的内容。（类信息【class对象，放射机制中会重点讲授】、静态变量、字符串常量等）<br>4、JVM只有一个方法区，被所有线程共享！</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017221125546.png" alt="image-20241017221125546"></p><p><strong>示例代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D17;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="comment">//这是定义类里面的元素</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;姓名：&quot;</span>+ name + <span class="string">&quot;\t年龄：&quot;</span>+age);</span><br><span class="line">    &#125;</span><br><span class="line">    Person(String _name,<span class="type">int</span> _age)&#123;</span><br><span class="line">        name = _name;</span><br><span class="line">        age = _age;</span><br><span class="line">    &#125;</span><br><span class="line">    Person()&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        p1.age = <span class="number">24</span>;</span><br><span class="line">        p1.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">        p1.show();</span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;李四&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        p2.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当执行这段代码的时候<br>首先 在堆内存中的方法区生成这个person 类<br>然后固定的字符串也一起存储在方法区</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018204603943.png" alt="image-20241018204603943"></p><p>然后在栈中生成main方法的栈帧<br>然后执行person p1的时候，现在栈帧中生成p1，但是此时p1的值为null，<br>然后执行后半句的时候</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018204918572.png" alt="image-20241018204918572"></p><p>执行后半句的时候，调用构造器，在堆中创建person的对象，然后把地址返回给p1（假设地址为0x23)</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018205832177.png" alt="image-20241018205832177"></p><p>此时栈帧中储存的p1 也就有了值（地址）<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018205953095.png" alt="image-20241018205953095"></p><p>然后执行接下来的语句，把堆内存中的p1对象（0x23对象）中的age赋值24，在吧name的值改为张三的地址</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018210111493.png" alt="image-20241018210111493"></p><p>然后再往下调用show方法打印<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018210440169.png" alt="image-20241018210440169"></p><p>执行完了show方法之后直接出栈<br>P2的过程也是同理</p><h3 id="this-的本质"><a href="#this-的本质" class="headerlink" title="this 的本质"></a>this 的本质</h3><p>this的本质就是”当前对象的地址！”<br>普通方法中，this总是指向调用该方法的对象<br>构造方法中，this总是只想正要初始化的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D19;</span><br><span class="line"><span class="comment">/*this 关键字的本质</span></span><br><span class="line"><span class="comment">* this的用法测试*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String name;</span><br><span class="line">    String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> id,String name)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;正在要初始化的对象：&quot;</span>+ <span class="built_in">this</span>);<span class="comment">//这里实际输出的就是地址</span></span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="comment">// 将形参 id 的值赋给实例变量 id</span></span><br><span class="line">        <span class="comment">/*所以这个代码里面this的意思就是形参的值</span></span><br><span class="line"><span class="comment">        * 具体意思就是形参的值=什么*/</span></span><br><span class="line">        <span class="built_in">this</span>.name =name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> id,String name,String pwd)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>(id, name);<span class="comment">//调用重载的构造器，这种调用必须位于构造方法的第一行</span></span><br><span class="line">        <span class="built_in">this</span>.pwd = pwd;</span><br><span class="line">        System.out.println(<span class="string">&quot;正在要初始化的对象：&quot;</span>+ <span class="built_in">this</span>);<span class="comment">//这里实际输出的就是地址</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;要登陆：&quot;</span>+<span class="built_in">this</span>.name+<span class="string">&quot;，密码：&quot;</span>+<span class="built_in">this</span>.pwd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">u1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">101</span>,<span class="string">&quot;薯片&quot;</span>);</span><br><span class="line">        u1.login();</span><br><span class="line">        <span class="type">User</span> <span class="variable">u2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">102</span>,<span class="string">&quot;薯条&quot;</span>,<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        u2.login();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="static的本质"><a href="#static的本质" class="headerlink" title="static的本质"></a>static的本质</h3><p>static关键字核心用法：<br>用static声明的变量为静态成员变量，也成为类变量<br>1、重属于类，只有一份，在类被载入时被显式初始化。<br>2、一般用“类名.属性/方法”来调用<br>3、在static方法中不可直接访问非static的成员</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D19;</span><br><span class="line"><span class="comment">/*测试static的用法*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestStatic</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">String</span> <span class="variable">company</span> <span class="operator">=</span> <span class="string">&quot;薯片责任有限公司&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">companyId</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;类被初始化的调用&quot;</span>);</span><br><span class="line">        companyId = <span class="number">111222</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*类型: 这不是方法，也不是构造器，而是 静态初始化块（Static Initialization Block）。</span></span><br><span class="line"><span class="comment">作用: 在类被加载到 JVM 时执行。它可以用于初始化静态变量或执行一些一次性的操作。在这个例子中，它打印一条消息并将 companyId 设置为 111222。</span></span><br><span class="line"><span class="comment">特点:</span></span><br><span class="line"><span class="comment">只会在类加载时执行一次，适合进行静态变量的初始化。</span></span><br><span class="line"><span class="comment">可以包含多个静态初始化块，它们的执行顺序是从上到下的。*/</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printCompany</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公司信息&quot;</span>+company);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*在static里面不能使用非static的成员*/</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;登录&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        TestStatic.printCompany();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">TestStatic</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestStatic</span>();</span><br><span class="line">        t1.login();</span><br><span class="line">        <span class="type">TestStatic</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestStatic</span>();</span><br><span class="line">        t2.login();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231203130532.png" alt="image-20241231203130532"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;A&quot;</span>;</span><br><span class="line">    <span class="type">int</span> height;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rest</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;rest&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    String major;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="built_in">this</span>.name+<span class="string">&quot; is study&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name,<span class="type">int</span> height,String major)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.height =height;</span><br><span class="line">        <span class="built_in">this</span>.major = major;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;jack&quot;</span>,<span class="number">180</span>,<span class="string">&quot;math&quot;</span>);</span><br><span class="line">        s1.study();</span><br><span class="line">        s1.rest();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231203837050.png" alt="image-20241231203837050"></p><h3 id="重写"><a href="#重写" class="headerlink" title="重写"></a>重写</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231203955096.png" alt="image-20241231203955030"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231204101634.png" alt="image-20241231204101634"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Vehicle</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;stop&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Horse</span> <span class="keyword">extends</span> <span class="title class_">Vehicle</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;马在跑&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;马停了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">aircraft</span> <span class="keyword">extends</span>  <span class="title class_">Vehicle</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;飞机在飞&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;降落了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test002</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Horse</span> <span class="variable">h1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Horse</span>();</span><br><span class="line">        h1.run();</span><br><span class="line">        h1.stop();</span><br><span class="line"></span><br><span class="line">        <span class="type">aircraft</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">aircraft</span>();</span><br><span class="line">        a1.run();</span><br><span class="line">        a1.stop();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="final关键字"><a href="#final关键字" class="headerlink" title="final关键字"></a>final关键字</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231204454150.png" alt="image-20241231204454150"></p><p>类似c++中的const</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*final用法*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">func</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Base func()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">func2</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println( <span class="string">&quot;base func02()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> <span class="keyword">extends</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*正常继承*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">func</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;sons base func&quot;</span>);</span><br><span class="line">    &#125;<span class="comment">/*正常重写*/</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    public void func2()</span></span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;son base func2&quot;);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="comment">/*报错 final修饰无法重写</span></span><br><span class="line"><span class="comment">    * 整个概念类似常函数*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Base02</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*下面的语句报错 说明用final修饰的class 不能被继承*/</span></span><br><span class="line"><span class="comment">//class Son02 extends Base02</span></span><br><span class="line"><span class="comment">//&#123;&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test003</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">maxSpeed</span> <span class="operator">=</span> <span class="number">120</span>;</span><br><span class="line">        <span class="comment">/*maxSpeed = 100;</span></span><br><span class="line"><span class="comment">        * 报错 final修饰之后变成常量 只能赋值一次*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231205821634.png" alt="image-20241231205821634"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231205853835.png" alt="image-20241231205853835"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231205910445.png" alt="image-20241231205910445"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31.a;</span><br><span class="line"><span class="comment">/*同一个包中的*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BYD</span> <span class="keyword">extends</span> <span class="title class_">Car</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">//        super.check();</span></span><br><span class="line">        <span class="comment">/*编译不通过 无法调用私有的*/</span></span><br><span class="line">        <span class="built_in">super</span>.addOil();<span class="comment">/*同一个包中可以访问default*/</span></span><br><span class="line">        <span class="built_in">super</span>.autoLighten();<span class="comment">/*子类不管怎么样都可以访问父类的*/</span></span><br><span class="line">        <span class="built_in">super</span>.run();<span class="comment">/*任何类都能访问public*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> Y24M12D31.a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Car</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String brand;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span>  <span class="title function_">check</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Car_check&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">addOil</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;car.addoil&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">autoLighten</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;car.autoLighten&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println( <span class="string">&quot;car.run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> Y24M12D31.b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Y24M12D31.a.Car;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Testla</span> <span class="keyword">extends</span> <span class="title class_">Car</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//super.addoil();/*不同的包不可以访问default*/</span></span><br><span class="line">        <span class="built_in">super</span>.autoLighten();</span><br><span class="line">        <span class="built_in">super</span>.run();<span class="comment">/*任何类都能访问public*/</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231211205096.png" alt="image-20241231211205096"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span>  String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> admin;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAdmin</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> admin;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPwd</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPwd</span><span class="params">(String pwd)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Userlogin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">u1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        u1.setId(<span class="number">100</span>);</span><br><span class="line">        System.out.println(u1.getId());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231212028332.png" alt="image-20241231212028332"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D30;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Dog</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>(); </span><br><span class="line">        AnimalCry(d1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">AnimalCry</span><span class="params">(Animal a1)</span></span><br><span class="line">    &#123;</span><br><span class="line">        a1.shout();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> Y24M12D30;</span><br><span class="line"><span class="keyword">import</span> Y24M12D30.Animal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;动物叫&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;汪汪汪&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;喵喵&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="抽象方法和抽象类"><a href="#抽象方法和抽象类" class="headerlink" title="抽象方法和抽象类"></a>抽象方法和抽象类</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231220838611.png" alt="image-20241231220838611"></p><p>在类中的方法前面加上abstract变成抽象方法，只要有了一个抽象方法这个类必须定义成抽象类<br>类定义的前面也要加上abstract，这个类中还可以有其他不抽象的方法，然后在他的子类中<br>必须要实现他的抽象方法，否则编译不通过，或者也会当成抽象类。<br>抽象类无法实例化对象，也就是说new不出来新的这个类的对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D30;</span><br><span class="line"><span class="keyword">import</span> Y24M12D30.Animal;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*抽象类*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*抽象方法*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span>；</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sleep</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;sleep&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;汪汪汪&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;喵喵&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231221742904.png" alt="image-20241231221742904"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"><span class="comment">/*接口*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test007</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Angel</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Angel</span>();</span><br><span class="line">        <span class="comment">/*这里可以用接口类型 但是用接口类型就调用不了剩下的一个方法*/</span></span><br><span class="line">        a1.fly();</span><br><span class="line">        a1.helpOthers();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*飞行接口*/</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Volant</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="comment">/*public static final*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*public abstract void fly()*/</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">fly</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span>  <span class="title class_">Honest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">helpOthers</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Angel</span> <span class="keyword">implements</span> <span class="title class_">Volant</span>,Honest</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">helpOthers</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;帮助他人&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fly</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;起飞&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数组和算法"><a href="#数组和算法" class="headerlink" title="数组和算法"></a>数组和算法</h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017181748938.png" alt="image-20241017181748938"></p><p><strong>代码示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D19;</span><br><span class="line"><span class="comment">/*测试static的用法*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestStatic</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">String</span> <span class="variable">company</span> <span class="operator">=</span> <span class="string">&quot;薯片责任有限公司&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">companyId</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;类被初始化的调用&quot;</span>);</span><br><span class="line">        companyId = <span class="number">111222</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*类型: 这不是方法，也不是构造器，而是 静态初始化块（Static Initialization Block）。</span></span><br><span class="line"><span class="comment">作用: 在类被加载到 JVM 时执行。它可以用于初始化静态变量或执行一些一次性的操作。在这个例子中，它打印一条消息并将 companyId 设置为 111222。</span></span><br><span class="line"><span class="comment">特点:</span></span><br><span class="line"><span class="comment">只会在类加载时执行一次，适合进行静态变量的初始化。</span></span><br><span class="line"><span class="comment">可以包含多个静态初始化块，它们的执行顺序是从上到下的。*/</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printCompany</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公司信息&quot;</span>+company);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*在static里面不能使用非static的成员*/</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;登录&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        TestStatic.printCompany();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">TestStatic</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestStatic</span>();</span><br><span class="line">        t1.login();</span><br><span class="line">        <span class="type">TestStatic</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestStatic</span>();</span><br><span class="line">        t2.login();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231225912123.png" alt="image-20241231225912123"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test009</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] [] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>][];</span><br><span class="line">        a[<span class="number">0</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">        a[<span class="number">1</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">4</span>];</span><br><span class="line">        a[<span class="number">2</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        a[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line">        a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">20</span>;</span><br><span class="line">        a[<span class="number">1</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>&#125;;</span><br><span class="line">        a[<span class="number">2</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[][] b = &#123;</span><br><span class="line">                &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>&#125;,</span><br><span class="line">                &#123;<span class="number">10</span>,<span class="number">20</span>&#125;,</span><br><span class="line">                &#123;<span class="number">100</span>,<span class="number">200</span>,<span class="number">300</span>,<span class="number">400</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;b.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> m=<span class="number">0</span>;m&lt;b[i].length;m++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(b[i][m]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;b.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(Arrays.toString(b[i]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="package和import"><a href="#package和import" class="headerlink" title="package和import"></a>package和import</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241020225023951.png" alt="image-20241020225023951"></p><h3 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h3><p><strong>冒泡排序</strong></p><p>不断做两两比较，可以从前往后，也可以从后往前，如果从前往后，那就是不断两两比较，如果大的就放到后面，第一轮结束之后可以找出最大的。<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018085343879.png" alt="image-20241018085343879"></p><p>第一轮开始之前是这样</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018085353904.png" alt="image-20241018085353904"></p><p>第一轮结束之后就是这样</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018085432409.png" alt="image-20241018085432409"></p><p>最后的结果</p><p><strong>代码示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*测试冒泡排序*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test010</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] values = &#123;<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">9</span>,<span class="number">4</span>,<span class="number">8</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> tempo:values)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(tempo);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt;values.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j&lt;values.length-i-<span class="number">1</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">tempo</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (values[j]&gt;values[j+<span class="number">1</span>])</span><br><span class="line">                &#123;</span><br><span class="line">                    tempo = values[j];</span><br><span class="line">                    values[j] = values[j+<span class="number">1</span>];</span><br><span class="line">                    values[j+<span class="number">1</span>] = tempo;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> tempo:values)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(tempo);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><p>原理：每轮选择当前位置，开始找出后面的较小值与该位置交换<br>当前位置以此跟后面的比较，只要比他小的就交换</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231233009550.png" alt="image-20241231233009550"></p><p>总共需要确定的轮数：数组长度-1<br>每一轮确定一个元素，下一轮减少一个个元素参与</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test011</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>&#125;;</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*选择排序*/</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;arr.length;i++)<span class="comment">/*比较的轮数*/</span></span><br><span class="line">        &#123;<span class="comment">/*当前元素之后的所有元素索引*/</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;arr.length;j++)</span><br><span class="line">            &#123;<span class="comment">/*arr[i]是当前需要比的元素 找的位置*/</span></span><br><span class="line">                <span class="keyword">if</span> (arr[i] &gt;arr[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">int</span> temp= arr[i];</span><br><span class="line">                    arr[i] = arr[j];</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h3><p>前提条件：数组中的数据必须是有序的<br>核心思想：每次排除一半的数据，查询数据的性能明显提高极多</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test012</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[]arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">300</span>,<span class="number">400</span>&#125;;</span><br><span class="line">        System.out.println(arr[binSearch(arr,<span class="number">6</span>)]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*接受数组和要查找的数据，返回的是索引*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">binSearch</span><span class="params">(<span class="type">int</span>[] arr,<span class="type">int</span> number)</span></span><br><span class="line">    &#123;<span class="comment">/*查找范围，起始索引*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">/*查找范围，结束索引*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> arr.length-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right)</span><br><span class="line">        &#123;<span class="comment">/*判断条件 元素存在 可以查找*/</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (left+right)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (arr[mid]==number)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(arr[mid]&gt;number)</span><br><span class="line">            &#123;</span><br><span class="line">                right = mid -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (arr[mid]&lt;number) &#123;</span><br><span class="line">               left = mid +<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*代码走到此处 说明查找元素不存在*/</span></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="课堂题目"><a href="#课堂题目" class="headerlink" title="课堂题目"></a>课堂题目</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;h3 id=&quot;碎碎念&quot;&gt;&lt;a href=&quot;#碎碎念&quot; class=&quot;headerlink&quot; title=&quot;碎碎念&quot;&gt;&lt;/a&gt;碎碎念&lt;/h3&gt;&lt;p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>JSP学习笔记</title>
    <link href="http://example.com/posts/5f366732.html"/>
    <id>http://example.com/posts/5f366732.html</id>
    <published>2024-10-01T11:23:00.000Z</published>
    <updated>2024-12-07T11:31:45.552Z</updated>
    
    <content type="html"><![CDATA[<h1 id="速成"><a href="#速成" class="headerlink" title="速成"></a>速成</h1><h2 id="导论"><a href="#导论" class="headerlink" title="导论"></a>导论</h2><h3 id="什么是JSP？"><a href="#什么是JSP？" class="headerlink" title="什么是JSP？"></a>什么是JSP？</h3><p>用处：创建Web应用程序。<br>对比Servlet：功能更多，如表达式语言、JSTL<br>组成：一个JSP页面由HTML和JSP标签组成。JSP页面比Servlet更容易维护，原因是设计与开发分离。<br>额外的功能：表达式语言、自定义标签。</p><h3 id="JSP相对于Servlet的优势"><a href="#JSP相对于Servlet的优势" class="headerlink" title="JSP相对于Servlet的优势"></a>JSP相对于Servlet的优势</h3><h4 id="对Servlet的扩展"><a href="#对Servlet的扩展" class="headerlink" title="对Servlet的扩展"></a>对Servlet的扩展</h4><p>JSP技术是对Servlet的扩展，在JSP中可以用Servlet的所有功能。<br>此外，JSP中还可以使用隐含对象、预定义标签、表达式语言和自定义标签等，使JSP开发更加简单</p><h4 id="易于维护"><a href="#易于维护" class="headerlink" title="易于维护"></a>易于维护</h4><p>JSP业务逻辑和表现逻辑分开，在Servlet技术中，我们将业务逻辑与表现逻辑混合在一起。</p><h4 id="快速开发，不需要重新编译和部署"><a href="#快速开发，不需要重新编译和部署" class="headerlink" title="快速开发，不需要重新编译和部署"></a>快速开发，不需要重新编译和部署</h4><p>JSP页面修改之后，不需要重新编译和部署。</p><h4 id="更少的代码"><a href="#更少的代码" class="headerlink" title="更少的代码"></a>更少的代码</h4><p>JSP中的各类标签可以减少代码</p><h3 id="JSP的目录结构"><a href="#JSP的目录结构" class="headerlink" title="JSP的目录结构"></a>JSP的目录结构</h3><p>JSP页面部署要点：把JSP页面放在<strong>WEB-INF文件夹之外</strong>的目录</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009113256330.png" alt="image-20241009113256330"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009113317360.png" alt="image-20241009113317360"></p><h3 id="JSP-API"><a href="#JSP-API" class="headerlink" title="JSP API"></a>JSP API</h3><p>JSP API由两个包组成<br>javax.servlet.jsp<br>javax.servlet.jsp.tagext<br>javax.servlet.jsp包有两个接口和类<br>接口如下<br>JspPage<br>HttpJspPage<br>类如下：<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009113650700.png" alt="image-20241009113650700"></p><h2 id="JSP脚本元素"><a href="#JSP脚本元素" class="headerlink" title="JSP脚本元素"></a>JSP脚本元素</h2><p>JSP中，可以使用脚本元素在jsp页面编写代码。<br>脚本元素提供了在jsp中插入java代码的能力。<br>一共有三种类型的脚本元素</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">脚本标签  &lt;% java source code %&gt;</span><br><span class="line">表达式标签&lt;%= statement%&gt;</span><br><span class="line">声明标签&lt;%! field or method declaration %&gt;</span><br></pre></td></tr></table></figure><h1 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h1><h2 id="JSP和JSTL"><a href="#JSP和JSTL" class="headerlink" title="JSP和JSTL"></a>JSP和JSTL</h2><h3 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241015213018750.png" alt="image-20241015213018750"></p><h2 id="JSP基础语法"><a href="#JSP基础语法" class="headerlink" title="JSP基础语法"></a>JSP基础语法</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>JSP：javaServer Page  SUN公司提供的动态网页编程技术，是java web 服务器端的动态资源<br>和html相比：html只能提供静态数据，而jsp技术允许在页面中嵌套java代码，为用户提供动态数据<br>相比servlet而言，更容易排版<br>    不管是JSP还是servlet都可以用于开发动态web资源，但是由于这两门技术各自的特点，在长期的软件实践中，人们逐渐把servlet作为web应用中的控制器组件来使用，而把JSP技术作为数据显示模板来使用<br>    其实JSP就是一个Servlet，当我们第一次访问jsp的时候，jsp引擎都会将这个jsp翻译成一个servlet，这个问价存在tomcat（源码目录）中的work目录中</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>在JSP中支持两种注释的语法操作<br>    一种是显示注释，这种注释是允许客户端看见的；另一种是隐式注释，此种注释是客户端无法看见的<br>1、显示注释语法：从HTML风格继承而来<br>2、隐藏注释语法：从JAVA风格继承；JSP自己的注释</p><p>JSP的三种注释方式</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、<span class="comment">//注释，单行注释/*多行注释*/</span></span><br><span class="line"><span class="number">2</span> &lt;!-- HTML风格的注释--&gt;</span><br><span class="line"><span class="number">3</span>、&lt;%-- JSP注释 --%&gt;</span><br></pre></td></tr></table></figure><h3 id="Scriptlet"><a href="#Scriptlet" class="headerlink" title="Scriptlet"></a>Scriptlet</h3><p>在JSP中最重要的部分就是Scriptlet（脚本小程序），所有嵌入HTML代码中的java程序。<br>在jap中一共有三种Scriptlet代码：都必须使用Scriptlet标记出来</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一种&lt;%  %&gt;: java脚本段，可以定义局部变量、编写语句</span><br><span class="line">第二种&lt;%! %&gt;:声明，可以定义全局（成员）变量、方法、类</span><br><span class="line">第三种&lt;%= %&gt;表达式，数据的一个变量或者具体内容</span><br></pre></td></tr></table></figure><p>但是现在不建议这样写（脚本和html写一起），因为这样写会导致页面耦合度非常高。</p><p>通过观察解析为java文件的代码jsp代码理解三种小脚本</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: 薯片菌</span><br><span class="line">  Date: <span class="number">16</span>/<span class="number">10</span>/<span class="number">2024</span></span><br><span class="line">  Time: 上午 <span class="number">7</span>:<span class="number">34</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;scriptlet脚本小程序&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%--</span><br><span class="line">scriptlet 脚本小程序</span><br><span class="line">jsp一共有三种scriptlet脚本小程序：</span><br><span class="line">第一种：java脚本段，可以写java代码定义局部变量编写语句</span><br><span class="line">&lt;%</span><br><span class="line"><span class="comment">//可以写java代码</span></span><br><span class="line">%&gt;</span><br><span class="line">生成的代码在servlet中的service方法体中</span><br><span class="line">第二种：声明，声明全局变量、方法、类等</span><br><span class="line">&lt;%!</span><br><span class="line"><span class="comment">//声明全局变量</span></span><br><span class="line">%&gt;</span><br><span class="line">生成的代码在servlet的类体中</span><br><span class="line">第三种：输出表达式。</span><br><span class="line">&lt;%=  数值  %&gt;</span><br><span class="line">生成的代码在servlet中的service方法体中</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%--第一种--%&gt;</span><br><span class="line">&lt;%</span><br><span class="line"><span class="comment">//定义局部变量</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;Hello  Jsp&quot;</span>;</span><br><span class="line">    <span class="comment">//输出内容到控制台</span></span><br><span class="line">    System.out.println(str);</span><br><span class="line">    <span class="comment">//输出到浏览器</span></span><br><span class="line">    out.print(str);</span><br><span class="line">    out.write(<span class="string">&quot;-----&quot;</span>);</span><br><span class="line">    <span class="comment">//输出全局变量</span></span><br><span class="line">    out.write(<span class="string">&quot;全局变量:&quot;</span>+num);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line"><span class="comment">//声明全局变量</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%--第三种--%&gt;</span><br><span class="line">&lt;%= str%&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="JSP的指令标签"><a href="#JSP的指令标签" class="headerlink" title="JSP的指令标签"></a>JSP的指令标签</h2><h3 id="include静态包含"><a href="#include静态包含" class="headerlink" title="include静态包含"></a>include静态包含</h3><p>使用包含操作，可以将一些重复的代码包含进来继续使用，从正常的页面组成来看，有时可能分为几个区域，而其中的一些区域可能是一直不需要改变的，改变的就其中的一个具体内容区域，现在又两种方法可以实现上述功能。</p><p>​    方法一：再每个JSP页面（HTML）都包含工具栏、头部信息、尾部信息、具体内容<br>​    方法二：将工具栏、头部信息、尾部信息都分成各个独立的文件，使用的时候直接导入<br>​    很明显，第二种方法比第一种更好，第一种会存在很多重复的代码，并且修改很不方便，再JSP中如果想要实现包含操作，有两种做法：静态包含、动态包含，静态包含使用include指令即可，动态包含则需要使用include动作标签。<br>示例代码</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: 薯片菌</span><br><span class="line">  Date: <span class="number">16</span>/<span class="number">10</span>/<span class="number">2024</span></span><br><span class="line">  Time: 上午 <span class="number">8</span>:<span class="number">37</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;底部内容&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;Test005-header.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;h2&gt;主体&lt;/h2&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;Test005-footer.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>静态包含就是将内容进行了直接的替换，就好比程序中定义的变量一样 是在servlet引擎转译的时，就把此文件内容包含了进去（两个文件的源代码整合到一起，全部放到_jspService方法中），所以只生成了一个servlet,所以两个页面不能有同名的变量。运行效率高一点点。耦合性较高，不够灵活。</p><h3 id="include动态包含"><a href="#include动态包含" class="headerlink" title="include动态包含"></a>include动态包含</h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ <span class="type">include</span> <span class="variable">file</span> <span class="operator">=</span> <span class="string">&quot;要包含的文件路径&quot;</span> %&gt; &lt;/jsp:include&gt;</span><br></pre></td></tr></table></figure><p>动态包含在代码的编译阶段，包含和被包含部分是两个独立的部分，只有当运行时，才会动态包含进来，</p><p><strong>注意</strong>：动态包含，中间不要加任何内容，包括空格，除非确认要使用参数，否则报错！</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: 薯片菌</span><br><span class="line">  Date: <span class="number">16</span>/<span class="number">10</span>/<span class="number">2024</span></span><br><span class="line">  Time: 上午 <span class="number">11</span>:08</span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;include动态包含&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%--include 动态包含</span><br><span class="line">格式：</span><br><span class="line">   &lt;%@ <span class="type">include</span> <span class="variable">file</span> <span class="operator">=</span> <span class="string">&quot;要包含的文件路径&quot;</span> %&gt; &lt;/jsp:include&gt;</span><br><span class="line">   特点</span><br><span class="line">   <span class="number">1</span>、动态包含相当于方法的调用</span><br><span class="line">   <span class="number">2</span>、动态包含会生成多个源码文件</span><br><span class="line">   <span class="number">3</span>、可以定义同名变量</span><br><span class="line">   <span class="number">4</span>、效率高，耦合度低</span><br><span class="line">   注：</span><br><span class="line">   当动态包含不需要传递参数时，include双标签之间不要有任何内容，包括换行和空格</span><br><span class="line"></span><br><span class="line">   使用动态包含传递参数</span><br><span class="line">   &lt;jsp:include page=<span class="string">&quot;要包含的页面的路径&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;参数名&quot;</span> value=<span class="string">&quot;参数值&quot;</span>/&gt;</span><br><span class="line">   &lt;/jsp:include&gt;</span><br><span class="line">   注：name属性不支持表达式，value属性支持表达式</span><br><span class="line">   获取参数：</span><br><span class="line">   request.getParameter(name);通过特定参数名获取参数值</span><br><span class="line">   --%&gt;</span><br><span class="line"></span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;Test005-header.jsp&quot;</span>&gt;&lt;/jsp:include&gt;</span><br><span class="line">&lt;h2&gt;主体内容&lt;/h2&gt;</span><br><span class="line">&lt;%</span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;Test005-footer.jsp&quot;</span>&gt;&lt;/jsp:include&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--动态包含传递参数--%&gt;</span><br><span class="line">&lt;%  <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;%&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;Test005-footer.jsp&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;uname&quot;</span> value=<span class="string">&quot;admin&quot;</span>/&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;msg&quot;</span> value=<span class="string">&quot;&lt;%=str%&gt;&quot;</span>/&gt;</span><br><span class="line">&lt;/jsp:include&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="JSP四大域对象"><a href="#JSP四大域对象" class="headerlink" title="JSP四大域对象"></a>JSP四大域对象</h2><h3 id="四种属性的范围"><a href="#四种属性的范围" class="headerlink" title="四种属性的范围"></a>四种属性的范围</h3><p>在JSP中提供了四种属性的保存范围，所谓的属性保存范围，指的就是一个设置的对象，可以在多少个页面中保存并可以继续使用<br>就是说属性什么时候失效</p><p>1、page范围<br>        pageCountext：只在一个页面中保存属性，跳转之后无效<br>2、request范围<br>        request：只在一次请求中保存，服务器跳转后依然有效<br>3、session范围<br>        session：在一次会话范围中，无论何种跳转都可以使用<br>4、appliction范围</p><p>​        application: 在整个服务器上保存</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241022103827184.png" alt="image-20241022103827184"></p><h3 id="验证属性范围的特点"><a href="#验证属性范围的特点" class="headerlink" title="验证属性范围的特点"></a>验证属性范围的特点</h3><p>1、page<br>本页面取得，服务器端跳转（ &lt;  jsp:forward  &gt; ）后无效<br>2、request<br>服务器跳转有效，客户端跳转无效<br>如果是客户端跳转，则想打能与发出了两次请求，那么第一次的请求将不存在了；如果希望不管是客户端还是服务器跳转，都能保存的话，就需要继续扩大范围。</p><p>在自己设计的代码中，尽可能多的使用request比较合理</p><p>3、session<br>无论客户端还是服务器端都可以取得，但是现在重新开启一个新的浏览器，则无法取得之前设置的session了，因为每一个seesion只保存在当前的浏览器中，并在相关的页面取得。<br>对于服务器而言，每一个连接到它的客户端都是一个session<br>如果想要让属性设置一次之后，不管是否是新的浏览器打开都能取得则可以使用application<br>4、application<br>所有application属性直接保存在服务器上，所有的用户（每一个session）都可以直接访问取得<br>只要通过application设置的属性，则所有的session都可以取得，表示公共的内容，但是如果此时服务器重启了，则无法取得了，因为关闭服务器后，所有属性都消失了，所以需要重新设置。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;速成&quot;&gt;&lt;a href=&quot;#速成&quot; class=&quot;headerlink&quot; title=&quot;速成&quot;&gt;&lt;/a&gt;速成&lt;/h1&gt;&lt;h2 id=&quot;导论&quot;&gt;&lt;a href=&quot;#导论&quot; class=&quot;headerlink&quot; title=&quot;导论&quot;&gt;&lt;/a&gt;导论&lt;/h2&gt;&lt;h3 id</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>数据库学习笔记</title>
    <link href="http://example.com/posts/769d2f87.html"/>
    <id>http://example.com/posts/769d2f87.html</id>
    <published>2023-10-03T23:53:58.000Z</published>
    <updated>2025-01-04T15:51:05.556Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库（基于SQL-Server）"><a href="#数据库（基于SQL-Server）" class="headerlink" title="数据库（基于SQL Server）"></a>数据库（基于SQL Server）</h1><h2 id="T-SQL语句的代码"><a href="#T-SQL语句的代码" class="headerlink" title="T-SQL语句的代码"></a>T-SQL语句的代码</h2><p>所有的基础部分我直接用单独一个sql文件讲完，追求最高效率<br>包括数据库的创建、文件更改、文件增加、表的增删改查、数据的增删改查、连接、子查询、视图、存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*验证数据库是否存在，存在的话直接删除*/</span></span><br><span class="line">if <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sys.databases <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;DBTEST&#x27;</span>)</span><br><span class="line"><span class="keyword">drop</span> database DBTEST</span><br><span class="line"><span class="comment">--创建数据库</span></span><br><span class="line"><span class="keyword">create</span> database DBTEST</span><br><span class="line"><span class="comment">--创建数据库 数据库的名称为DBTest</span></span><br><span class="line"><span class="keyword">on</span>(<span class="comment">/*on 的意思就是创建数据文件，然后后面跟着的是括号</span></span><br><span class="line"><span class="comment">这个括号就是用来描述这个数据文件的，也就是写一些数据文件</span></span><br><span class="line"><span class="comment">基本的内容*/</span></span><br><span class="line">name <span class="operator">=</span> <span class="string">&#x27;DBTEST&#x27;</span>,</span><br><span class="line"><span class="comment">/*name就是逻辑名称，就是在数据库里面的代号</span></span><br><span class="line"><span class="comment">习惯上主数据文件的文件逻辑名称和数据库的名称一样</span></span><br><span class="line"><span class="comment">然后日志文件一般就是加上log</span></span><br><span class="line"><span class="comment">然后每两个描述句式之间要用逗号隔开*/</span></span><br><span class="line">filename <span class="operator">=</span> <span class="string">&#x27;D:\SqlS\SelfStudy\DBTest\DBTEST.mdf&#x27;</span>,</span><br><span class="line"><span class="comment">/*物理路径，就是实际上在计算机内的文件的文件路径和文件名</span></span><br><span class="line"><span class="comment">设置物理路径的时候不要忘记加上.mdf或者.ldf的后缀*/</span></span><br><span class="line">size <span class="operator">=</span> <span class="number">5</span>mb,<span class="comment">--设置初始大小</span></span><br><span class="line">filegrowth <span class="operator">=</span> <span class="number">2</span>mb,</span><br><span class="line"><span class="comment">--filegrowth = 10%</span></span><br><span class="line"><span class="comment">/*文件的增长方式，文件的增长方式可以写大小</span></span><br><span class="line"><span class="comment">也可以写百分比。*/</span></span><br><span class="line">maxsize <span class="operator">=</span> <span class="number">10</span>mb <span class="comment">/*最大大小，可以不设置*/</span></span><br><span class="line">)</span><br><span class="line">log <span class="keyword">on</span>(</span><br><span class="line"><span class="comment">/*同理 log on 用于编写日志文件</span></span><br><span class="line"><span class="comment">log内的描述方式和数据文件相同*/</span></span><br><span class="line">name <span class="operator">=</span> <span class="string">&#x27;DBTEST_log&#x27;</span>,</span><br><span class="line">filename <span class="operator">=</span>  <span class="string">&#x27;D:\SqlS\SelfStudy\DBTest\DBTEST_log.ldf&#x27;</span>,</span><br><span class="line">size <span class="operator">=</span> <span class="number">5</span>mb,</span><br><span class="line">filegrowth <span class="operator">=</span> <span class="number">2</span>mb</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建数据库简写</span></span><br><span class="line"><span class="keyword">create</span> database DBTEST1</span><br><span class="line"><span class="comment">--如果按照上述见到那的方法创建数据库，所有设置都采用默认值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*==========以上为创建数据库相关语句============*/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*==========创建数据表============*/</span></span><br><span class="line"></span><br><span class="line">use DBTEST</span><br><span class="line"><span class="comment">/*正常的新建咨询会默认使用master的系统表</span></span><br><span class="line"><span class="comment">如果这个时候直接建表会建到master里面去</span></span><br><span class="line"><span class="comment">所以这里可以在左上角店家更改使用的数据库</span></span><br><span class="line"><span class="comment">也可以直接使用useDBTEST语句*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除表*/</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> Department</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> People</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> [Rank]</span><br><span class="line"><span class="comment">/*删除表中的数据（表中的列）*/</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> Department;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> People;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> [Rank];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建表的基本语法</span></span><br><span class="line"><span class="comment">create table 表名</span></span><br><span class="line"><span class="comment">（字段名1 数据类型，</span></span><br><span class="line"><span class="comment">字段名2，数据类型）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">if <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sys.objects <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;Department&#x27;</span><span class="keyword">and</span> type <span class="operator">=</span> <span class="string">&#x27;U&#x27;</span>)</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> Department</span><br><span class="line"><span class="comment">/*建表（部门，职级，员工）*/</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Department</span><br><span class="line">( </span><br><span class="line">DepartmentId <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line"><span class="comment">/*部门编号</span></span><br><span class="line"><span class="comment">一般的表格都会加一个单独的编号</span></span><br><span class="line"><span class="comment">一方面防止名称有重复的</span></span><br><span class="line"><span class="comment">第二方面可以作为主键标识</span></span><br><span class="line"><span class="comment">primary key 是设置主键</span></span><br><span class="line"><span class="comment">作为唯一标识</span></span><br><span class="line"><span class="comment">identity(1,1)自动增长，初始值1，增长步长为1*/</span></span><br><span class="line">DepartmentName nVarchar(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>, </span><br><span class="line"><span class="comment">/*部门的名称 字符串类型</span></span><br><span class="line"><span class="comment"> 其中有varchar和nvarchar</span></span><br><span class="line"><span class="comment"> 其中varchar（50）代表50个字符</span></span><br><span class="line"><span class="comment"> 前面加上n变成nvarchar代表50个中文字符或者50个英文字符</span></span><br><span class="line"><span class="comment"> 其中varchar代表可变长度，如果你输入的是一个字符</span></span><br><span class="line"><span class="comment"> 那么这个varchar（50）就是一个字符的长度和大小</span></span><br><span class="line"><span class="comment"> 但是如果是char类型的话就是定长，不管你输入了多少字符 </span></span><br><span class="line"><span class="comment"> 他都是50个字符的大小，所以用varchar大部分情况下更加的 灵活</span></span><br><span class="line"><span class="comment"> 而且可以节省资源*/</span></span><br><span class="line"> <span class="comment">/*部门描述*/</span></span><br><span class="line"> DepartmentRemark text</span><br><span class="line"> <span class="comment">/*text长文本,*/</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">--建立职级表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> [Rank] </span><br><span class="line"><span class="comment">/*这里 Rank是sql中的关键字  所以需要用[]*/</span></span><br><span class="line">(</span><br><span class="line">RankId <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">RankName nvarchar(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">RankRemark text</span><br><span class="line"><span class="comment">/*分别床架按了职级的编号</span></span><br><span class="line"><span class="comment">职级的名称、职级的描述*/</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--建立员工表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> People</span><br><span class="line">(</span><br><span class="line">PeopleId <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">PeopleName  nvarchar(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">PeopleGender nvarchar(<span class="number">1</span>) <span class="keyword">default</span>(<span class="string">&#x27;男&#x27;</span>)<span class="keyword">check</span>(PeoPleGender <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span><span class="keyword">or</span> PeoPleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>)<span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">/*这里通过check加了一个约束，设置性别的值只能为男或者女</span></span><br><span class="line"><span class="comment">同时还添加了一个默认值，让这个性别默认为男*/</span></span><br><span class="line">PeopleBirth datetime <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">PeopleSalary  <span class="type">decimal</span>(<span class="number">12</span>,<span class="number">2</span>) <span class="keyword">check</span>(Peoplesalary <span class="operator">&gt;=</span> <span class="number">1000</span> <span class="keyword">and</span> Peoplesalary <span class="operator">&lt;=</span> <span class="number">1000000</span>)<span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">PeoplePhone <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">unique</span> <span class="keyword">not</span> <span class="keyword">null</span>, </span><br><span class="line"><span class="comment">/*unique关键字用于创建唯一约束，首先他的本质也是一个约束</span></span><br><span class="line"><span class="comment">然后唯一约束就是爆炸该列中所以的值都是唯一的，不能有重复的值*/</span></span><br><span class="line">PeopleAddress <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">PeopleAddTime smalldatetime <span class="keyword">default</span>(getdate()),  <span class="comment">--添加时间</span></span><br><span class="line"><span class="comment">/*这里用了一个getdate，是系统默认的函数，这个函数可以获取当前的时间</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*添加外键*/</span></span><br><span class="line">DepartmentId <span class="type">int</span> <span class="keyword">references</span> Department(DepartmentId) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">RankId <span class="type">int</span> <span class="keyword">references</span> [Rank](RankId) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="comment">/*添加这个reference字段就是添加了外键</span></span><br><span class="line"><span class="comment">然后添加了reference字段之后他就会自动去</span></span><br><span class="line"><span class="comment">外键对应的表中去寻找，如果找不到对应的值</span></span><br><span class="line"><span class="comment">他就不会添加</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*关于getdate（）</span></span><br><span class="line"><span class="comment">在sqls中 getdate()是一个内置函数，用于获取对当前的系统日期和时间。它返回一个datetime类型的值，</span></span><br><span class="line"><span class="comment">表示当前的日期和时间</span></span><br><span class="line"><span class="comment">基本用法</span></span><br><span class="line"><span class="comment">select getdate() as currentdatetime</span></span><br><span class="line"><span class="comment">用于插入数据</span></span><br><span class="line"><span class="comment">在插入数据时，你可以使用getdate（）来记录当前的时间。例如</span></span><br><span class="line"><span class="comment">INSERT INTO Orders (OrderDate) VALUES (GETDATE());</span></span><br><span class="line"><span class="comment">***与其他函数结合使用</span></span><br><span class="line"><span class="comment">很多时候需要我们得到当前的年份月份，所以我们可以用getdate（）提取年月日</span></span><br><span class="line"><span class="comment">语法</span></span><br><span class="line"><span class="comment">select year(getdate()) as currentyear</span></span><br><span class="line"><span class="comment">select month(getdate()) as currentmonth</span></span><br><span class="line"><span class="comment">select day(getdate()) as currentday</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*关于日期</span></span><br><span class="line"><span class="comment">datetime:</span></span><br><span class="line"><span class="comment">范围：1753-9999 年。</span></span><br><span class="line"><span class="comment">精度：可以存储的时间精度为 3.33 毫秒。</span></span><br><span class="line"><span class="comment">存储大小：8 字节。</span></span><br><span class="line"><span class="comment">适用场景：适合需要高精度和大范围的日期时间。</span></span><br><span class="line"><span class="comment">smalldatetime:</span></span><br><span class="line"><span class="comment">范围：1900-2079 年。</span></span><br><span class="line"><span class="comment">精度：可以存储的时间精度为 1 分钟。</span></span><br><span class="line"><span class="comment">存储大小：4 字节。</span></span><br><span class="line"><span class="comment">适用场景：适合对时间精度要求不高且范围较小的应用。</span></span><br><span class="line"><span class="comment">date:</span></span><br><span class="line"><span class="comment">范围：0001-9999 年（不包括时间部分）。</span></span><br><span class="line"><span class="comment">精度：只存储日期，不存储时间。</span></span><br><span class="line"><span class="comment">存储大小：3 字节。</span></span><br><span class="line"><span class="comment">适用场景：适合仅需要存储日期信息的场合，不需要时间。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 关于refence</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">在sqls中，reference关键字用于定义外键约束，它用于在一个表中建立对另一个表的引用。</span></span><br><span class="line"><span class="comment">外键约束的作用是确保了数字的一致性和完整性，它运行的逻辑就是你通过这个关键字添加的值</span></span><br><span class="line"><span class="comment">本质上是一种引用，你去引用别的表里面的数值，所以如果你通过这个关键字去添加列，再你输入值的时候</span></span><br><span class="line"><span class="comment">他就回去查找这个值在主表中是否存在，如果不存在就不会添加，也就是说没办法引用主表中不存在的数据*/</span></span><br><span class="line"></span><br><span class="line">use DBTEST</span><br><span class="line"><span class="comment">/*===表结构和约束的维护=====*/</span></span><br><span class="line"><span class="comment">/*基础知识 sqls中的几种约束</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">主键约束（PRIMARY KEY）：</span></span><br><span class="line"><span class="comment">确保表中每一行的唯一性。</span></span><br><span class="line"><span class="comment">不允许为空（NULL），每个主键值必须唯一。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">外键约束（FOREIGN KEY）：</span></span><br><span class="line"><span class="comment">用于在两个表之间建立关系。</span></span><br><span class="line"><span class="comment">确保外键列的值必须在参考表的主键或唯一键中存在，以保持数据的完整性。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">唯一约束（UNIQUE）：</span></span><br><span class="line"><span class="comment">确保列中的所有值都是唯一的，但允许空值（NULL）。</span></span><br><span class="line"><span class="comment">可以应用于一个或多个列的组合。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">非空约束（NOT NULL）：</span></span><br><span class="line"><span class="comment">确保列不能包含空值（NULL），强制要求输入数据。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">检查约束（CHECK）：</span></span><br><span class="line"><span class="comment">限制列中允许的值范围，例如，可以要求某个年龄列的值必须大于 0。</span></span><br><span class="line"><span class="comment">可以使用表达式来定义条件。</span></span><br><span class="line"><span class="comment">默认约束（DEFAULT）：</span></span><br><span class="line"><span class="comment">为列设置一个默认值，当插入新行时如果未提供该列的值，将使用默认值。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*修改表结构*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*下面三个操作本质上都是在修改原有的表格的结构</span></span><br><span class="line"><span class="comment">所以都要用alter table起手</span></span><br><span class="line"><span class="comment">比如添加就是alter table 表名  add 新列名 数据类型</span></span><br><span class="line"><span class="comment">删除列的语法就是</span></span><br><span class="line"><span class="comment">alter table 表名 drop column 列名</span></span><br><span class="line"><span class="comment">drop 就不需要类型了 但是要加一个关键字</span></span><br><span class="line"><span class="comment">column 就是列的意思</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">修改列的语法</span></span><br><span class="line"><span class="comment">alter table 表名 alter column  列名 数据类型 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 添加列*/</span></span><br><span class="line"> <span class="comment">/*假设现在给员工表添加一列邮箱*/</span></span><br><span class="line"> <span class="keyword">alter</span> <span class="keyword">table</span> People <span class="keyword">add</span> PeopleMail <span class="type">varchar</span>(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除列*/</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> People <span class="keyword">drop</span> <span class="keyword">column</span> PeopleMail</span><br><span class="line"></span><br><span class="line"><span class="comment">/*3、修改列*/</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> People <span class="keyword">alter</span> <span class="keyword">column</span> PeopleAddress <span class="type">varchar</span>(<span class="number">40</span>)</span><br><span class="line"><span class="comment">/*这种情况下 这种语句非常有可能报错</span></span><br><span class="line"><span class="comment">因为现在表中是空的没有数据，但是实际上如果有人输入了一个</span></span><br><span class="line"><span class="comment">超过40个字符的地址，那么这里执行语句的时候就会报错。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*维护约束*/</span></span><br><span class="line"><span class="comment">--删除约束</span></span><br><span class="line"><span class="comment">/*删除约束他的本质也是要去修改表</span></span><br><span class="line"><span class="comment">所以这里也是要用alter table起手</span></span><br><span class="line"><span class="comment">语法 alter table 表名 drop constraint 约束名*/</span></span><br><span class="line"><span class="comment">--删除月薪的约束</span></span><br><span class="line"><span class="keyword">alter</span>  <span class="keyword">table</span> People <span class="keyword">drop</span> <span class="keyword">constraint</span> CK__People__PeopleSa__5165187F</span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加约束</span></span><br><span class="line"><span class="comment">添加check约束的语法</span></span><br><span class="line"><span class="comment">check约束是用来判断输入的值是不是我们想要的值</span></span><br><span class="line"><span class="comment">添加工资字段约束，工资必须在1000-一百万之间*/</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> PeoPle <span class="keyword">add</span> <span class="keyword">constraint</span> Ck_PeoPle_Salary </span><br><span class="line"><span class="keyword">check</span>(Peoplesalary <span class="operator">&gt;=</span> <span class="number">1000</span> <span class="keyword">and</span> Peoplesalary <span class="operator">&lt;=</span><span class="number">1000000</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加主键约束的语法</span></span><br><span class="line"><span class="comment">alter table 表名 add constraint 约束名 primary key(列名)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">添加唯一约束的语法</span></span><br><span class="line"><span class="comment">alter table 表名 add constraint 约束名 unique(列名)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">添加默认值约束</span></span><br><span class="line"><span class="comment">alter table 表名 add constraint 约束名 default 默认值 for 列名</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">添加外键约束</span></span><br><span class="line"><span class="comment">alter table 表名 add constraint 约束名 foreign fey (列名)</span></span><br><span class="line"><span class="comment">reference 关联表名（列名（主键））</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*===插入数据=====*/</span></span><br><span class="line"><span class="comment">--向部门表插入数据</span></span><br><span class="line"><span class="comment">/*insert into 表名 (列1,列2)</span></span><br><span class="line"><span class="comment">values(&#x27;值1&#x27;,&#x27;值2&#x27;)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Department(DepartmentName,DepartmentRemark)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;市场部&#x27;</span>,<span class="string">&#x27;...&#x27;</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Department(DepartmentName,DepartmentRemark)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;软件部&#x27;</span>,<span class="string">&#x27;...&#x27;</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Department(DepartmentName,DepartmentRemark)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;企划部&#x27;</span>,<span class="string">&#x27;...&#x27;</span>) </span><br><span class="line"><span class="comment">/*关于数据的插入还有一种简写*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Department</span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;硬件部&#x27;</span>,<span class="string">&#x27;...&#x27;</span>)</span><br><span class="line"><span class="comment">/*但是这种简写一般不会用，因为这种简写有非常大的缺点</span></span><br><span class="line"><span class="comment">就是简写是根据默认的字段顺序写的，所以可能会遇到插入的值</span></span><br><span class="line"><span class="comment">插入错了列</span></span><br><span class="line"><span class="comment">比如上面的部门名和部门描述的值插入反了的情况</span></span><br><span class="line"><span class="comment">所以一般情况下不会用这种简写*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*一次性插入多行数据*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Department(DepartmentName,DepartmentRemark)</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;测试部&#x27;</span>,<span class="string">&#x27;...&#x27;</span><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span><span class="string">&#x27;实施部&#x27;</span>,<span class="string">&#x27;...&#x27;</span><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span><span class="string">&#x27;产品部&#x27;</span>,<span class="string">&#x27;...&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*向职级表插入数据*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> [Rank](RankName,RankRemark)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;初级&#x27;</span>,<span class="string">&#x27;...&#x27;</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> [Rank](RankName,RankRemark)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;中级&#x27;</span>,<span class="string">&#x27;...&#x27;</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> [Rank](RankName,RankRemark)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;高级&#x27;</span>,<span class="string">&#x27;...&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*向员工表中插入数据*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="string">&#x27;刘备&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1984-7-9&#x27;</span>,<span class="number">20000</span>,<span class="string">&#x27;13554785452&#x27;</span>,<span class="string">&#x27;成都&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;孙尚香&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;1987-7-9&#x27;</span>,<span class="number">15000</span>,<span class="string">&#x27;13256854578&#x27;</span>,<span class="string">&#x27;荆州&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;关羽&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1988-8-8&#x27;</span>,<span class="number">12000</span>,<span class="string">&#x27;13985745871&#x27;</span>,<span class="string">&#x27;荆州&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;张飞&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1990-8-8&#x27;</span>,<span class="number">8000</span>,<span class="string">&#x27;13535987412&#x27;</span>,<span class="string">&#x27;宜昌&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;赵云&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1989-8-8&#x27;</span>,<span class="number">9000</span>,<span class="string">&#x27;13845789568&#x27;</span>,<span class="string">&#x27;宜昌&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="number">3</span>,<span class="string">&#x27;马超&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1995-4-8&#x27;</span>,<span class="number">9500</span>,<span class="string">&#x27;13878562568&#x27;</span>,<span class="string">&#x27;香港&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="number">2</span>,<span class="string">&#x27;黄盖&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1989-4-20&#x27;</span>,<span class="number">8500</span>,<span class="string">&#x27;13335457412&#x27;</span>,<span class="string">&#x27;武汉&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="number">1</span>,<span class="string">&#x27;貂蝉&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;1989-4-20&#x27;</span>,<span class="number">6500</span>,<span class="string">&#x27;13437100050&#x27;</span>,<span class="string">&#x27;武汉&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">2</span>,<span class="number">2</span>,<span class="string">&#x27;曹操&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1987-12-20&#x27;</span>,<span class="number">25000</span>,<span class="string">&#x27;13889562354&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;许褚&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1981-11-11&#x27;</span>,<span class="number">9000</span>,<span class="string">&#x27;13385299632&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;典韦&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1978-1-13&#x27;</span>,<span class="number">8000</span>,<span class="string">&#x27;1347854263&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;曹仁&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1998-12-12&#x27;</span>,<span class="number">7500</span>,<span class="string">&#x27;13878523695&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="string">&#x27;孙坚&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1968-11-22&#x27;</span>,<span class="number">11000</span>,<span class="string">&#x27;13558745874&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="number">1</span>,<span class="string">&#x27;孙策&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1988-1-22&#x27;</span>,<span class="number">11000</span>,<span class="string">&#x27;1355874874&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="number">2</span>,<span class="string">&#x27;孙权&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1990-2-21&#x27;</span>,<span class="number">12000</span>,<span class="string">&#x27;13698745214&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="number">2</span>,<span class="string">&#x27;大乔&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;1995-2-21&#x27;</span>,<span class="number">13000</span>,<span class="string">&#x27;13985478512&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;小乔&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;1996-2-21&#x27;</span>,<span class="number">13500</span>,<span class="string">&#x27;13778787874&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;周瑜&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1992-10-11&#x27;</span>,<span class="number">8000</span>,<span class="string">&#x27;13987455214&#x27;</span>,<span class="string">&#x27;武汉&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;鲁肃&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1984-9-10&#x27;</span>,<span class="number">5500</span>,<span class="string">&#x27;13254785965&#x27;</span>,<span class="string">&#x27;成都&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="number">3</span>,<span class="string">&#x27;吕蒙&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1987-5-19&#x27;</span>,<span class="number">8500</span>,<span class="string">&#x27;13352197364&#x27;</span>,<span class="string">&#x27;成都 &#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;陆逊&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1996-5-19&#x27;</span>,<span class="number">7500</span>,<span class="string">&#x27;13025457392&#x27;</span>,<span class="string">&#x27;南京&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;太史慈&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1983-6-1&#x27;</span>,<span class="number">7500</span>,<span class="string">&#x27;13077778888&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;aaaa&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1983-6-1&#x27;</span>,<span class="number">7500</span>,<span class="string">&#x27;13177778888&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line">use DBTEST</span><br><span class="line"><span class="comment">/*修改表格中的数据</span></span><br><span class="line"><span class="comment">语法</span></span><br><span class="line"><span class="comment">update 表名 set 字段1 = 值1, 字段2 = 值2 where  条件</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="comment">/*工资调整，每个人加薪一千块*/</span></span><br><span class="line"><span class="keyword">update</span> People <span class="keyword">set</span> PeopleSalary <span class="operator">=</span> PeopleSalary<span class="operator">+</span><span class="number">1000</span></span><br><span class="line"><span class="comment">/*这里一般要用where 来确定自己要更改的到底是哪一行数据</span></span><br><span class="line"><span class="comment">但是因为这里是要给所有人都加薪，所以无所谓*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="comment">/*上面的语句是用来直接查询People表中的所有 数据的*/</span></span><br><span class="line"><span class="comment">/*给黄盖一个人的工资加500*/</span></span><br><span class="line"><span class="keyword">update</span> People <span class="keyword">set</span> PeopleSalary <span class="operator">=</span> PeopleSalary <span class="operator">+</span> <span class="number">500</span> <span class="keyword">where</span> PeopleName <span class="operator">=</span> <span class="string">&#x27;黄盖&#x27;</span></span><br><span class="line"><span class="comment">/*给员工编号为7的人减薪500*/</span></span><br><span class="line"><span class="keyword">update</span> People <span class="keyword">set</span> PeopleSalary <span class="operator">=</span> PeopleSalary <span class="operator">-</span> <span class="number">500</span> <span class="keyword">where</span> PeopleId <span class="operator">=</span> <span class="number">7</span></span><br><span class="line"><span class="comment">/*将软件部(部门编号1)人员工资低于15000的调整成15000*/</span></span><br><span class="line"><span class="keyword">update</span> PeoPle <span class="keyword">set</span> PeoPleSalary <span class="operator">=</span> <span class="number">15000</span> </span><br><span class="line"><span class="keyword">where</span> DepartmentId <span class="operator">=</span> <span class="number">1</span> <span class="keyword">and</span> PeopleSalary <span class="operator">&lt;</span><span class="number">15000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*多字段修改</span></span><br><span class="line"><span class="comment">修改刘备的工资为以前的两倍，再把地址改为北京*/</span></span><br><span class="line"><span class="keyword">update</span> People <span class="keyword">set</span> PeopleSalary <span class="operator">=</span> PeopleSalary<span class="operator">*</span><span class="number">2</span>,</span><br><span class="line">PeopleAddress <span class="operator">=</span> <span class="string">&#x27;北京&#x27;</span></span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="operator">=</span> <span class="string">&#x27;刘备&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除数据的语法*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">delete  from 表名 where 条件 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">删除员工表所有记录</span></span><br><span class="line"><span class="comment">delete from People</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除市场部 中 工资大于1w的人*/</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="operator">&gt;</span> <span class="number">10000</span> <span class="keyword">and</span> DepartmentId <span class="operator">=</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*关于删除</span></span><br><span class="line"><span class="comment">drop,truncate,delete</span></span><br><span class="line"><span class="comment">drop table People 删除表对象</span></span><br><span class="line"><span class="comment">这个操作实际上是把整个表删除了</span></span><br><span class="line"><span class="comment">不单单是 删除了表中的数据，是连表格本身都删除掉了 </span></span><br><span class="line"><span class="comment">truncate table People 清空数据 表依然存在</span></span><br><span class="line"><span class="comment">delete from People 删除所有数据 表依然存在</span></span><br><span class="line"><span class="comment">truncate 和delete的区别</span></span><br><span class="line"><span class="comment">truncate直接删除所有数据，不可以带附加条件</span></span><br><span class="line"><span class="comment">不可以删除部分数据，直接清空表内容</span></span><br><span class="line"><span class="comment">delete可以带条件可以只删除部分数据</span></span><br><span class="line"><span class="comment">自动编号：</span></span><br><span class="line"><span class="comment">假设表中自动编号为12345</span></span><br><span class="line"><span class="comment">如果使用truncate之后添加数据 编号仍然是12345</span></span><br><span class="line"><span class="comment">使用delete删除数据，删除的自动编号永远不会在存在</span></span><br><span class="line"><span class="comment">如果用delete删除 之后添加数据就会变成67891</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*======查询语句=====*/</span></span><br><span class="line"><span class="comment">/*查询基本语法</span></span><br><span class="line"><span class="comment">select * from 表名</span></span><br><span class="line"><span class="comment">查询所有列所有行</span></span><br><span class="line"><span class="comment">select 列名 from 表名 where 条件（用于 筛选行）</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询所有列所有行*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Department</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> [Rank]</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询指定列（姓名性别生日月薪电话）*/</span></span><br><span class="line"><span class="keyword">select</span> PeopleName <span class="keyword">as</span> 姓名,</span><br><span class="line">PeopleGender <span class="keyword">as</span> 性别,</span><br><span class="line">PeopleBirth <span class="keyword">as</span> 生日,</span><br><span class="line">PeopleSalary <span class="keyword">as</span> 月薪,</span><br><span class="line">PeoplePhone <span class="keyword">as</span> 电话</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出员工都来自于那些城市城市*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> (PeopleAddress) </span><br><span class="line"> <span class="keyword">from</span> People</span><br><span class="line"> <span class="comment">/*distinct 就是不重复显示相同的数据</span></span><br><span class="line"><span class="comment"> distinct的用法 就是distinct（列名）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/*假设准备加工资，现在还没有加</span></span><br><span class="line"><span class="comment"> 然后现在想要咨询加工资后的员工的数据</span></span><br><span class="line"><span class="comment"> 假设工资上调20%*/</span></span><br><span class="line"><span class="keyword">select</span> PeopleName <span class="keyword">as</span> 姓名,</span><br><span class="line">PeopleSalary<span class="operator">*</span><span class="number">1.2</span> <span class="keyword">as</span> 调薪后工资,</span><br><span class="line">PeopleSalary <span class="keyword">as</span> 原本工资,</span><br><span class="line">PeopleSalary <span class="operator">*</span> <span class="number">0.2</span> <span class="keyword">as</span> 工资涨幅</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">/*条件查询*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">sql中常用的运算符</span></span><br><span class="line"><span class="comment">= 等于 比较是否相等及赋值</span></span><br><span class="line"><span class="comment">!= 不等于</span></span><br><span class="line"><span class="comment">&gt; 大于</span></span><br><span class="line"><span class="comment">&lt; 小于</span></span><br><span class="line"><span class="comment">&gt;= 大于等于</span></span><br><span class="line"><span class="comment">&lt;= 小于等于</span></span><br><span class="line"><span class="comment">is null 为空</span></span><br><span class="line"><span class="comment">is not null 不为空</span></span><br><span class="line"><span class="comment">in 比较是否在其中</span></span><br><span class="line"><span class="comment">like 模糊查询</span></span><br><span class="line"><span class="comment">between...and,,, 比较是否在两者之间</span></span><br><span class="line"><span class="comment">and 逻辑与</span></span><br><span class="line"><span class="comment">or 逻辑或</span></span><br><span class="line"><span class="comment">not 逻辑非</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">use DBTEST</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询性别为女的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleGender  <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询工资&gt;=1w的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="operator">&gt;=</span> <span class="number">10000</span></span><br><span class="line"><span class="comment">/*查询出性别为女 工资大于等于1w的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> </span><br><span class="line"><span class="keyword">and</span> PeopleSalary <span class="operator">&gt;=</span> <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> </span><br><span class="line"><span class="keyword">and</span> PeopleSalary <span class="operator">&gt;=</span> <span class="number">10000</span></span><br><span class="line"><span class="keyword">and</span> DepartmentId <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询月薪大于等于1w或者月薪大于等于8k的女员工*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="operator">&gt;=</span> <span class="number">15000</span></span><br><span class="line"><span class="keyword">or</span> (PeopleSalary <span class="operator">&gt;=</span> <span class="number">8000</span></span><br><span class="line"><span class="keyword">and</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出出生年月在1980-1-1之后，而且月薪大于等于1w的女员工 </span></span><br><span class="line"><span class="comment">语法 select * from People where 条件1 and 条件2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleBirth <span class="operator">&gt;=</span> <span class="string">&#x27;1980-1-1&#x27;</span> </span><br><span class="line"><span class="keyword">and</span> PeopleSalary <span class="operator">&gt;=</span> <span class="number">10000</span></span><br><span class="line"><span class="keyword">and</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询月薪在1w-2w之间的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="operator">&gt;=</span> <span class="number">10000</span> <span class="keyword">and</span> PeopleSalary <span class="operator">&lt;=</span> <span class="number">20000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="keyword">between</span> <span class="number">10000</span> <span class="keyword">and</span> <span class="number">20000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出地址在武汉或北京的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span></span><br><span class="line">People <span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;武汉&#x27;</span></span><br><span class="line"><span class="keyword">or</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;北京&#x27;</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span></span><br><span class="line">People <span class="keyword">where</span> PeopleAddress <span class="keyword">in</span>(<span class="string">&#x27;武汉&#x27;</span>,<span class="string">&#x27;北京 &#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*排序</span></span><br><span class="line"><span class="comment">查询所偶有的员工信息 工具工资排序 降序 </span></span><br><span class="line"><span class="comment">在默认的情况下 查询出来的虚表是工具主键来进行排序</span></span><br><span class="line"><span class="comment">在默认情况下  展现出来的结果是工具表格的主键来排序</span></span><br><span class="line"><span class="comment">比如在上面查询的语句中</span></span><br><span class="line"><span class="comment">People表格的主键是PeopleId 所以结果以此排序</span></span><br><span class="line"><span class="comment">（执行查询语句后 在下面的结果 部分</span></span><br><span class="line"><span class="comment">展现出来的表格就是一张虚表 </span></span><br><span class="line"><span class="comment">他不是真正存储在数据库中的表格 只是作为结果展示）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">排序的关键字 order by</span></span><br><span class="line"><span class="comment">order by 就是根据 根据什么信息进行排序</span></span><br><span class="line"><span class="comment">默认情况下虚表根据主键排序</span></span><br><span class="line"><span class="comment">order by 列名 asc(升序） desc （降序）</span></span><br><span class="line"><span class="comment">其中 asc是默认值</span></span><br><span class="line"><span class="comment">只要用了order by 语法之后</span></span><br><span class="line"><span class="comment">就会按照你的列名 升序查询</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询所有员工的信息 根据工资排序 降序 */</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> PeopleSalary  <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询所有员工信息 根据名字长度排序（降序）*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> len(PeopleName) <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*在上方的代码中 len是sql提供给我们取长度的一个函数</span></span><br><span class="line"><span class="comment">len（） */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出工资最高的五个人的信息*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> top <span class="number">5</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> PeopleSalary <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出工资最高的10%的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">10</span><span class="keyword">percent</span> </span><br><span class="line"><span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> PeopleSalary <span class="keyword">desc</span></span><br><span class="line"><span class="comment">/*注意上面的查询百分之多少</span></span><br><span class="line"><span class="comment">不能直接用百分号% 而是要用percent</span></span><br><span class="line"><span class="comment">不然会报错</span></span><br><span class="line"><span class="comment">然后这个查询的结果会自动的四舍五入</span></span><br><span class="line"><span class="comment">比如一共有22条数据 就是四舍五入2条*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*null 空值*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;马云&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1977-7-7&#x27;</span>,<span class="number">500000</span>,<span class="string">&#x27;138585858&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出地址没有填写的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleAddress <span class="keyword">is</span> <span class="keyword">null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleAddress <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出80 后的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">where</span> PeopleBirth <span class="operator">&gt;=</span> <span class="string">&#x27;1980-1-1&#x27;</span></span><br><span class="line"><span class="keyword">and</span> PeopleBirth <span class="operator">&lt;=</span><span class="string">&#x27;1989-12-31&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">where</span> PeopleBirth <span class="keyword">between</span> <span class="string">&#x27;1980-1-1&#x27;</span></span><br><span class="line"><span class="keyword">and</span> <span class="string">&#x27;1989-12-31&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">year</span>(PeopleBirth) <span class="keyword">between</span> <span class="number">1980</span> <span class="keyword">and</span> <span class="number">1989</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询30-40岁之间 并且 工资在1.5w - 3w 之间的员工信息*/</span></span><br><span class="line"><span class="comment">/* 年龄 =   当前年份 - 出生年份</span></span><br><span class="line"><span class="comment">age =  year(getdate) -  year (PeopleBirth)*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> (<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth) <span class="keyword">between</span> <span class="number">30</span> <span class="keyword">and</span> <span class="number">40</span>)</span><br><span class="line"><span class="keyword">and</span> PeopleSalary <span class="keyword">between</span> <span class="number">15000</span> <span class="keyword">and</span> <span class="number">30000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出星座是巨蟹座的员工信息</span></span><br><span class="line"><span class="comment">6.22-7.22</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> </span><br><span class="line">(<span class="keyword">month</span>(PeopleBirth) <span class="operator">=</span> <span class="number">6</span> <span class="keyword">and</span> <span class="keyword">day</span>(PeopleBirth) <span class="operator">&gt;=</span> <span class="number">22</span>)</span><br><span class="line"><span class="keyword">or</span></span><br><span class="line">(<span class="keyword">month</span>(PeopleBirth) <span class="operator">=</span> <span class="number">7</span> <span class="keyword">and</span> <span class="keyword">day</span>(PeopleBirth) <span class="operator">&lt;=</span> <span class="number">22</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出工资比赵云高的人的信息*/</span></span><br><span class="line"><span class="comment">/*首先要查询出赵云的工资*/</span></span><br><span class="line"><span class="keyword">select</span> PeopleSalary</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="operator">=</span> <span class="string">&#x27;赵云&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="operator">&gt;</span> </span><br><span class="line">(<span class="keyword">select</span> PeopleSalary</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="operator">=</span> <span class="string">&#x27;赵云&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出和赵云在一个城市的人的信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">where</span> PeopleAddress </span><br><span class="line"><span class="operator">=</span> (<span class="keyword">select</span> PeopleAddress</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="operator">=</span> <span class="string">&#x27;赵云&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> PeopleAddress</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="operator">=</span> <span class="string">&#x27;赵云&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出生肖是鼠的人的信息*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 鼠牛虎兔龙蛇 马羊猴鸡狗猪</span></span><br><span class="line"><span class="comment">4    5   6   7   8   9  10   11  0   1   2   3*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span><span class="number">12</span> <span class="operator">=</span> <span class="number">4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询所有的员工信息，添加一列 显示生肖*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> ,</span><br><span class="line"><span class="keyword">case</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">4</span> <span class="keyword">then</span> <span class="string">&#x27;鼠&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">5</span> <span class="keyword">then</span> <span class="string">&#x27;牛&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">6</span> <span class="keyword">then</span> <span class="string">&#x27;虎&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">7</span> <span class="keyword">then</span> <span class="string">&#x27;兔&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">8</span> <span class="keyword">then</span> <span class="string">&#x27;龙&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">9</span> <span class="keyword">then</span> <span class="string">&#x27;蛇&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">10</span> <span class="keyword">then</span> <span class="string">&#x27;马&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">11</span> <span class="keyword">then</span> <span class="string">&#x27;羊&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">0</span> <span class="keyword">then</span> <span class="string">&#x27;猴&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">1</span> <span class="keyword">then</span> <span class="string">&#x27;鸡&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">2</span> <span class="keyword">then</span> <span class="string">&#x27;狗&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">3</span> <span class="keyword">then</span> <span class="string">&#x27;猪&#x27;</span></span><br><span class="line"><span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">as</span> 生肖</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> ,</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">4</span> <span class="keyword">then</span> <span class="string">&#x27;鼠&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">5</span> <span class="keyword">then</span> <span class="string">&#x27;牛&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">6</span> <span class="keyword">then</span> <span class="string">&#x27;虎&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">7</span> <span class="keyword">then</span> <span class="string">&#x27;兔&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">8</span> <span class="keyword">then</span> <span class="string">&#x27;龙&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">9</span> <span class="keyword">then</span> <span class="string">&#x27;蛇&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">10</span> <span class="keyword">then</span> <span class="string">&#x27;马&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">11</span> <span class="keyword">then</span> <span class="string">&#x27;羊&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">0</span> <span class="keyword">then</span> <span class="string">&#x27;猴&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">1</span> <span class="keyword">then</span> <span class="string">&#x27;鸡&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">2</span> <span class="keyword">then</span> <span class="string">&#x27;狗&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">3</span> <span class="keyword">then</span> <span class="string">&#x27;猪&#x27;</span></span><br><span class="line"><span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">as</span> 生肖</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*模糊查询*/</span></span><br><span class="line"><span class="comment">/*模糊查询使用like瓜庵案件之和通配符结合来实现</span></span><br><span class="line"><span class="comment">通配符如下</span></span><br><span class="line"><span class="comment">% 表示普配0个字符 1个字符或多个字符</span></span><br><span class="line"><span class="comment">_ 表示匹配有且仅有一个字符</span></span><br><span class="line"><span class="comment">[] 表示匹配范围内</span></span><br><span class="line"><span class="comment">[^] 表示不在匹配范围内</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*%（百分号）：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">％ 通配符代表零个或多个字符，意思是可以匹配任意数量（包括零个）字符。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">例如：</span></span><br><span class="line"><span class="comment">SELECT * FROM students WHERE name LIKE &#x27;J%&#x27;;</span></span><br><span class="line"><span class="comment">这个查询将返回所有名字以 &quot;J&quot; 开头的学生，后面可以跟任意数量的字符（例如：James、John、Jack 等）。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">另外，如果你写成 LIKE &#x27;%J%&#x27;，则会匹配所有包含字母 &quot;J&quot; 的名字。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">_（下划线）：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">_ 通配符代表 单个字符。它只能匹配一个字符，不管这个字符是什么。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">例如：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">SELECT * FROM students WHERE name LIKE &#x27;_o&#x27;;</span></span><br><span class="line"><span class="comment">这个查询将返回所有名字的第二个字符是 &quot;o&quot; 的学生，例如 &quot;Tom&quot; 或 &quot;Bob&quot;。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">如果使用 LIKE &#x27;_o_&#x27;，那么查询会返回所有名字中第二个字符是 &quot;o&quot;，且总长度为 3 的名字。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">总结：</span></span><br><span class="line"><span class="comment">% 用来匹配 任意数量的字符，包括零个字符。</span></span><br><span class="line"><span class="comment">_ 用来匹配 单个字符。*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出姓刘的员工信息 */</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="keyword">like</span> <span class="string">&#x27;刘%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出名字中含有尚的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="keyword">like</span> <span class="string">&#x27;%尚%&#x27;</span> <span class="keyword">or</span> PeopleName <span class="keyword">like</span> <span class="string">&#x27;史&#x27;</span></span><br><span class="line"><span class="comment">/*用这种两个百分号的方式查询出来的结果</span></span><br><span class="line"><span class="comment">只是名字中有尚的 可以在前面也可以在后面*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出姓刘的员工信息，名字是两个字*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="keyword">like</span> <span class="string">&#x27;刘_&#x27;</span></span><br><span class="line"><span class="comment">/*用这个下划线就能查出来 刘后面只有一个字的了*/</span></span><br><span class="line"><span class="comment">/*另外一种写法 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">SUBSTRING</span>(<span class="string">&#x27;helko,world&#x27;</span>,<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> <span class="built_in">SUBSTRING</span>(PeopleName,<span class="number">1</span>,<span class="number">1</span>) <span class="operator">=</span> <span class="string">&#x27;刘&#x27;</span></span><br><span class="line"><span class="comment">/*上面 的条件仅仅表达了第一个字是刘，没有表达名字有两个字组成</span></span><br><span class="line"><span class="comment">所以要加上一个条件*/</span></span><br><span class="line"><span class="keyword">and</span> LEN(PeopleName) <span class="operator">=</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询名字最后一个字为香，名字一共是三个字的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> <span class="built_in">SUBSTRING</span>(PeopleName,<span class="number">3</span>,<span class="number">1</span>) <span class="operator">=</span> <span class="string">&#x27;香&#x27;</span></span><br><span class="line"><span class="keyword">and</span> len(PeopleName) <span class="operator">=</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="keyword">like</span> <span class="string">&#x27;__香&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出电话号码开头为138的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span>  PeoplePhone <span class="keyword">like</span> <span class="string">&#x27;138%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出电话开头 为138 第四位是 7或者8的 </span></span><br><span class="line"><span class="comment">最后一个号码是5*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span>  PeoplePhone <span class="keyword">like</span> <span class="string">&#x27;138[7,8]%5&#x27;</span></span><br><span class="line"><span class="comment">/*这里就是用[]通配符选择*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> <span class="comment">/*查询出电话开头 为138 第四位是2-5之间的数字的 </span></span><br><span class="line"><span class="comment">最后一个号码是不是2和3*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span>  PeoplePhone <span class="keyword">like</span> <span class="string">&#x27;138[2-5]%[^2,3]&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*聚合函数*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">sqls中的聚合函数主要有</span></span><br><span class="line"><span class="comment">count 求数量</span></span><br><span class="line"><span class="comment">max 求最大值</span></span><br><span class="line"><span class="comment">min 求最小值</span></span><br><span class="line"><span class="comment">sum 求和</span></span><br><span class="line"><span class="comment">avg 求平均值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">use DBTEST</span><br><span class="line"></span><br><span class="line"><span class="comment">/*1. COUNT() — 求数量</span></span><br><span class="line"><span class="comment">作用：COUNT() 用于计算表中某列或记录的数量。如果指定了列名，它会计算该列中非 NULL 值的数量；如果不指定列名，它会计算记录的总数。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">用法：</span></span><br><span class="line"><span class="comment">计算某列非 NULL 值的数量：</span></span><br><span class="line"><span class="comment">SELECT COUNT(column_name) FROM table_name;</span></span><br><span class="line"><span class="comment">计算所有记录的数量（即使某列有 NULL 值）：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">SELECT COUNT(*) FROM table_name;</span></span><br><span class="line"><span class="comment">示例：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">SELECT COUNT(*) FROM employees;</span></span><br><span class="line"><span class="comment">-- 计算 employees 表中的记录总数</span></span><br><span class="line"><span class="comment">2. MAX() — 求最大值</span></span><br><span class="line"><span class="comment">作用：MAX() 用于返回指定列中的最大值。该列的数据类型必须支持比较（如数字、日期等）。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">用法：</span></span><br><span class="line"><span class="comment">SELECT MAX(column_name) FROM table_name;</span></span><br><span class="line"><span class="comment">示例：</span></span><br><span class="line"><span class="comment">SELECT MAX(salary) FROM employees;</span></span><br><span class="line"><span class="comment">-- 获取 employees 表中工资的最大值</span></span><br><span class="line"><span class="comment">3. MIN() — 求最小值</span></span><br><span class="line"><span class="comment">作用：MIN() 用于返回指定列中的最小值。与 MAX() 类似，该列的数据类型必须支持比较。</span></span><br><span class="line"><span class="comment">用法：</span></span><br><span class="line"><span class="comment">SELECT MIN(column_name) FROM table_name;</span></span><br><span class="line"><span class="comment">示例：</span></span><br><span class="line"><span class="comment">SELECT MIN(salary) FROM employees;</span></span><br><span class="line"><span class="comment">-- 获取 employees 表中工资的最小值</span></span><br><span class="line"><span class="comment">4. SUM() — 求和</span></span><br><span class="line"><span class="comment">作用：SUM() 用于返回指定列的所有数值之和。它只能用于数值类型的列（如整数或浮动类型的列）。</span></span><br><span class="line"><span class="comment">用法：</span></span><br><span class="line"><span class="comment">SELECT SUM(column_name) FROM table_name;</span></span><br><span class="line"><span class="comment">示例：</span></span><br><span class="line"><span class="comment">SELECT SUM(salary) FROM employees;</span></span><br><span class="line"><span class="comment">-- 计算 employees 表中所有员工的工资总和</span></span><br><span class="line"><span class="comment">5. AVG() — 求平均值</span></span><br><span class="line"><span class="comment">作用：AVG() 用于返回指定列的平均值。它只适用于数值类型的列，返回一个浮动类型的结果。</span></span><br><span class="line"><span class="comment">用法：</span></span><br><span class="line"><span class="comment">SELECT AVG(column_name) FROM table_name;</span></span><br><span class="line"><span class="comment">示例：</span></span><br><span class="line"><span class="comment">SELECT AVG(salary) FROM employees;</span></span><br><span class="line"><span class="comment">-- 获取 employees 表中所有员工的平均工资</span></span><br><span class="line"><span class="comment">聚合函数的使用注意事项：</span></span><br><span class="line"><span class="comment">聚合函数通常与 GROUP BY 子句一起使用，来对数据进行分组。例如，计算每个部门的员工人数、最大工资等：</span></span><br><span class="line"><span class="comment">SELECT department, COUNT(*), MAX(salary), MIN(salary), AVG(salary)</span></span><br><span class="line"><span class="comment">FROM employees</span></span><br><span class="line"><span class="comment">GROUP BY department;</span></span><br><span class="line"><span class="comment">如果不使用 GROUP BY，这些函数会对整张表进行计算，返回单个结果。</span></span><br><span class="line"><span class="comment">结论</span></span><br><span class="line"><span class="comment">COUNT()：计算记录数量。</span></span><br><span class="line"><span class="comment">MAX()：返回最大值。</span></span><br><span class="line"><span class="comment">MIN()：返回最小值。</span></span><br><span class="line"><span class="comment">SUM()：返回总和。</span></span><br><span class="line"><span class="comment">AVG()：返回平均值。</span></span><br><span class="line"><span class="comment">这些聚合函数广泛应用于数据分析、报告生成和业务统计等场景中。*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--求员工总人数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="comment">/*count 的意思 就是求列数</span></span><br><span class="line"><span class="comment">有几列 结果就是多少*/</span></span><br><span class="line"><span class="comment">--求最大值，求最高工资</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="comment">--求最小时，求最小工资</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--求和，求所有员工的工资总和</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 工资总和</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">--求平均值，求所有员工的平均工资</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">AVG</span>(PeopleSalary) <span class="keyword">as</span> 平均工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">--平均工资如果要只保留两位小数</span></span><br><span class="line"><span class="comment">/*通过round 关键字*/</span></span><br><span class="line"><span class="keyword">SELECT</span> ROUND(<span class="built_in">AVG</span>(PeopleSalary), <span class="number">2</span>) <span class="keyword">AS</span> 平均工资</span><br><span class="line"><span class="keyword">FROM</span> People;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--求数量，最大值，最小值，总和，平均值，在一行显示</span></span><br><span class="line"><span class="keyword">Select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出武汉地区的员工人数，总工资，最高工资，最低工资和平均工资*/</span></span><br><span class="line"><span class="keyword">Select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;武汉&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">--求出工资比平均工资高的人员信息</span></span><br><span class="line"><span class="comment">--思路 先求出平均工资</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">AVG</span>(PeopleSalary) <span class="keyword">from</span> People</span><br><span class="line"><span class="comment">--再通过where判断</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="operator">&gt;</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">AVG</span>(PeopleSalary) <span class="keyword">from</span> People)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*求数量，年龄最大值，最小值，总和，平均值</span></span><br><span class="line"><span class="comment">在一行内显示*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--求年龄</span></span><br><span class="line"><span class="keyword">select</span> (<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth))</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="comment">/*求上题*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*方案一*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工总数,</span><br><span class="line"><span class="built_in">max</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 最高年龄,</span><br><span class="line"><span class="built_in">min</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 最低年龄,</span><br><span class="line"><span class="built_in">sum</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 年龄总和,</span><br><span class="line"><span class="built_in">avg</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">/*方案2*/</span></span><br><span class="line"><span class="comment">/*使用datediff算日期*/</span></span><br><span class="line"><span class="keyword">select</span> datediff(<span class="keyword">YEAR</span>,<span class="string">&#x27;1991-1-1&#x27;</span>,<span class="string">&#x27;1993-3-3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*用这个datediff算出年龄*/</span></span><br><span class="line"><span class="keyword">select</span> PeopleName <span class="keyword">as</span> name,</span><br><span class="line">datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE()) <span class="keyword">as</span> age</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工总数,</span><br><span class="line"><span class="built_in">max</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 最高年龄,</span><br><span class="line"><span class="built_in">min</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 最低年龄,</span><br><span class="line"><span class="built_in">sum</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 年龄总和,</span><br><span class="line"><span class="built_in">avg</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="comment">/*datediff是一个日期函数，用于计算两个日期之间的差异。</span></span><br><span class="line"><span class="comment">它返回两个日期之间的天数差。</span></span><br><span class="line"><span class="comment">DATEDIFF 会返回一个整数值，表示 date1 和 date2 之间的天数差。</span></span><br><span class="line"><span class="comment">如果 date1 比 date2 晚，则返回正数；</span></span><br><span class="line"><span class="comment">如果 date1 比 date2 早，则返回负数；</span></span><br><span class="line"><span class="comment">如果两个日期相同，则返回 0*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*计算出月薪在10000 以上的男性员工的最大年龄 最小年龄和平均年龄*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工总数,</span><br><span class="line"><span class="built_in">max</span>(datediff(<span class="keyword">YEAR</span>,<span class="keyword">YEAR</span>(getdate()),PeopleBirth) ) <span class="keyword">as</span> 最高年龄,</span><br><span class="line"><span class="built_in">min</span>(datediff(<span class="keyword">YEAR</span>,<span class="keyword">YEAR</span>(getdate()),PeopleBirth) ) <span class="keyword">as</span> 最低年龄,</span><br><span class="line"><span class="built_in">sum</span>(datediff(<span class="keyword">YEAR</span>,<span class="keyword">YEAR</span>(getdate()),PeopleBirth) ) <span class="keyword">as</span> 年龄总和,</span><br><span class="line"><span class="built_in">avg</span>(datediff(<span class="keyword">YEAR</span>,<span class="keyword">YEAR</span>(getdate()),PeopleBirth) ) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="operator">&gt;</span> <span class="number">10000</span></span><br><span class="line"><span class="keyword">and</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*统计出所在地在 武汉或上海的 所有女员工数量以及</span></span><br><span class="line"><span class="comment">最大年龄 最小年龄和平均年龄*/</span></span><br><span class="line"><span class="comment">/*正常做法*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 女员工数量,</span><br><span class="line"><span class="built_in">max</span>(<span class="keyword">year</span>(GETDATE()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 最大年龄,</span><br><span class="line"><span class="built_in">min</span>(<span class="keyword">year</span>(GETDATE()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 最小年龄,</span><br><span class="line"><span class="built_in">avg</span>(<span class="keyword">year</span>(GETDATE())<span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span></span><br><span class="line"><span class="keyword">and</span> PeopleAddress <span class="keyword">in</span> (<span class="string">&#x27;上海&#x27;</span>,<span class="string">&#x27;武汉&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--年龄</span></span><br><span class="line"><span class="keyword">select</span> DATEDIFF(<span class="keyword">year</span>,<span class="keyword">year</span>(GETDATE()),PeopleBirth)</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工总数,</span><br><span class="line"><span class="built_in">max</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 最高年龄,</span><br><span class="line"><span class="built_in">min</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 最低年龄,</span><br><span class="line"><span class="built_in">sum</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 年龄总和,</span><br><span class="line"><span class="built_in">avg</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span></span><br><span class="line"><span class="keyword">and</span> PeopleAddress <span class="keyword">in</span> (<span class="string">&#x27;武汉&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 女员工总数,</span><br><span class="line"><span class="built_in">max</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 最高年龄,</span><br><span class="line"><span class="built_in">min</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 最低年龄,</span><br><span class="line"><span class="built_in">sum</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 年龄总和,</span><br><span class="line"><span class="built_in">avg</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span></span><br><span class="line"><span class="keyword">and</span> PeopleAddress <span class="keyword">in</span> (<span class="string">&#x27;武汉&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--求出年龄比平均年龄的人员信息</span></span><br><span class="line"><span class="comment">/*求年龄*/</span></span><br><span class="line"><span class="keyword">select</span> (<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth))</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="comment">/*求平均年龄*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"></span><br><span class="line"><span class="comment">/* */</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 年龄</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth))</span><br><span class="line"><span class="operator">&gt;</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*======分组查询=====*/</span></span><br><span class="line"><span class="comment">/*什么是分组查询？</span></span><br><span class="line"><span class="comment">为什么要用分组查询？</span></span><br><span class="line"><span class="comment">什么时候要用分组查询？*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--根据员工所在地区分组统计员工人数,员工工资总和,平均工资，最高工资和最低工资</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary)  最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) 最低工资</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"></span><br><span class="line"><span class="comment">/*如上面这道题 按这样的办法我们只能查出来一条信息</span></span><br><span class="line"><span class="comment">然后题目现在让我们根据地区进行分组</span></span><br><span class="line"><span class="comment">在引入group by之前 能用的方法就是union*/</span></span><br><span class="line"><span class="comment">/*使用union做*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;北京&#x27;</span> 地区,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary)  最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) 最低工资</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;北京&#x27;</span></span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;武汉&#x27;</span> 地区,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary)  最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) 最低工资</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;武汉&#x27;</span></span><br><span class="line"><span class="comment">/*如果不使用group by 分组查询</span></span><br><span class="line"><span class="comment">只能不断 通过这个union </span></span><br><span class="line"><span class="comment">把每一个地区的信息都咨询出来</span></span><br><span class="line"><span class="comment">=========注意==========</span></span><br><span class="line"><span class="comment">在通过union合并的时候</span></span><br><span class="line"><span class="comment">并不是所有的查询结果都可以合并</span></span><br><span class="line"><span class="comment">使用union要求两个查询结果的列的数量必须一致</span></span><br><span class="line"><span class="comment">同时数据类型也要求相同*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*方案二 使用group by*/</span></span><br><span class="line"><span class="keyword">select</span> PeopleAddress 地区,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary)  最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) 最低工资</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">Group</span> <span class="keyword">by</span> PeopleAddress</span><br><span class="line"><span class="comment">/*如果在上面加上一行PeopleName</span></span><br><span class="line"><span class="comment">就会报错</span></span><br><span class="line"><span class="comment">因为group by </span></span><br><span class="line"><span class="comment">只能显示</span></span><br><span class="line"><span class="comment">聚合函数的结果</span></span><br><span class="line"><span class="comment">或者 group by 本身的字段</span></span><br><span class="line"><span class="comment">其他的字段是无法显示的</span></span><br><span class="line"><span class="comment">从逻辑上面也说不过去</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--根据员工所在地区分组统计员工人数，员工工资总和，平均工资，最高工资和最低工资</span></span><br><span class="line"><span class="comment">--1985 年及以后出身的员工不参与统计。</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">&lt;</span> <span class="number">1985</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> PeopleAddress</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--根据员工所在地区分组统计员工人数，员工工资总和，平均工资，最高工资和最低工资</span></span><br><span class="line"><span class="comment">--要求筛选出员工人数至少在2人及以上的记录，并且1985年及以后出身的员工不参与统计。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">select count(*) as 员工人数,</span></span><br><span class="line"><span class="comment">sum(PeopleSalary) as 工资总和,</span></span><br><span class="line"><span class="comment">avg(PeopleSalary) as 平均工资,</span></span><br><span class="line"><span class="comment">max(PeopleSalary) as 最高工资,</span></span><br><span class="line"><span class="comment">min(PeopleSalary) as 最低工资</span></span><br><span class="line"><span class="comment">from People</span></span><br><span class="line"><span class="comment">where year(PeopleBirth) &lt; 1985</span></span><br><span class="line"><span class="comment">and 员工人数 &gt;= 2</span></span><br><span class="line"><span class="comment">group by PeopleAddress</span></span><br><span class="line"><span class="comment">一开始想到的是这种写法</span></span><br><span class="line"><span class="comment">然后这里报错 </span></span><br><span class="line"><span class="comment">显示 聚合不应该出现在where字句中</span></span><br><span class="line"><span class="comment">所以 where 子句中不能出现聚合函数</span></span><br><span class="line"><span class="comment">只能出现原始数据</span></span><br><span class="line"><span class="comment">所以这个时候我们就需要使用having 关键字</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*用下面的做法就正常了*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">&lt;</span> <span class="number">1985</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> PeopleAddress</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>)  <span class="operator">&gt;=</span><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*然后联想到 如果不是聚合函数可不可以在having里面</span></span><br><span class="line"><span class="comment">比如说我把那个年龄的判断放在having里面*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> PeopleAddress</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>)  <span class="operator">&gt;=</span><span class="number">2</span></span><br><span class="line"><span class="keyword">and</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">&lt;</span> <span class="number">1985</span></span><br><span class="line"><span class="comment">/*上面的代码还是报错</span></span><br><span class="line"><span class="comment">HAVING 子句中的列 &#x27;People.PeopleBirth&#x27; 无效，因为该列没有包含在聚合函数或 GROUP BY 子句中。</span></span><br><span class="line"><span class="comment">说明没有包含聚合函数或者group by 的一般数据</span></span><br><span class="line"><span class="comment">having同样不接收*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*多表查询*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span></span><br><span class="line">Department</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span></span><br><span class="line">People</span><br><span class="line"><span class="comment">/*笛卡尔乘机*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> </span><br><span class="line">People,Department</span><br><span class="line"><span class="comment">/*咨询结果将Department 所有记录</span></span><br><span class="line"><span class="comment">和People表所有记录依次排列组合</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">这个笛卡尔积 他不考虑这么多</span></span><br><span class="line"><span class="comment">直接将所有的数据相乘</span></span><br><span class="line"><span class="comment">之前的外键他也不考虑</span></span><br><span class="line"><span class="comment">所以这里出现了不应该出现的冗余数据</span></span><br><span class="line"><span class="comment">比如说每个人都有属于每个部门的数据</span></span><br><span class="line"><span class="comment">比如说刘备真实情况下属于软件部的</span></span><br><span class="line"><span class="comment">但是在这个笛卡尔积中既有属于软件部的刘备 </span></span><br><span class="line"><span class="comment">也有属于硬件部乃至其他所有部门的刘备</span></span><br><span class="line"><span class="comment">这样明显是不合理不科学的</span></span><br><span class="line"><span class="comment">所以这里要做的事情 就是</span></span><br><span class="line"><span class="comment">让员工表中的department id</span></span><br><span class="line"><span class="comment">和部门表中的department id 相同</span></span><br><span class="line"><span class="comment">关联 之后</span></span><br><span class="line"><span class="comment">再去显示他部门的id</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">之前有说到在建表的时候 通过创建外键的方式</span></span><br><span class="line"><span class="comment">关联了这个department id</span></span><br><span class="line"><span class="comment">所以部门表中没有的department id</span></span><br><span class="line"><span class="comment">无法在员工表中被创建 </span></span><br><span class="line"><span class="comment">这就使得在插入数据的时候就保证了数据是一一对应的</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">tips 外键可以为空 就是说这里 原则上可以存在部门为null的情况</span></span><br><span class="line"><span class="comment">不过我们在上面建表的时候加了not null的非空约束 */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*简单多表查询*/</span></span><br><span class="line"><span class="comment">/*查询员工信息 显示部门名称*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People,</span><br><span class="line">Department</span><br><span class="line"><span class="keyword">where</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="comment">/*通过DepartmentId 连接两张表</span></span><br><span class="line"><span class="comment">使得两张表中的数据对应*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出员工信息 显示职级名称*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> ,</span><br><span class="line">RankName <span class="keyword">as</span> 职级名称</span><br><span class="line"><span class="keyword">from</span> People,</span><br><span class="line">[Rank]</span><br><span class="line"><span class="keyword">where</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出员工信息 显示部门名称，职级名称*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">DepartmentName,</span><br><span class="line">RankName</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">People,</span><br><span class="line">Department,</span><br><span class="line">[Rank]</span><br><span class="line"><span class="keyword">where</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="keyword">and</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--猜想 如果把where中的语句等号两边换位</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">DepartmentName,</span><br><span class="line">RankName</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">People,</span><br><span class="line">Department,</span><br><span class="line">[Rank]</span><br><span class="line"><span class="keyword">where</span> Department.DepartmentId <span class="operator">=</span> People.DepartmentId</span><br><span class="line"><span class="keyword">and</span> [Rank].RankId <span class="operator">=</span> People.RankId</span><br><span class="line"><span class="comment">/*得出结论 等号两边换位置不影响结果*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*直接把所有数据显示出来*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span></span><br><span class="line">People,</span><br><span class="line">Department,</span><br><span class="line">[Rank]</span><br><span class="line"><span class="keyword">where</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="keyword">and</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"></span><br><span class="line"><span class="comment">/*内连接查询*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*内连接（INNER JOIN）是一种常用的连接方式，</span></span><br><span class="line"><span class="comment">指的是只返回在两个表中都有匹配的记录。</span></span><br><span class="line"><span class="comment">在下面的咨询中，INNER JOIN会返回People表与</span></span><br><span class="line"><span class="comment">Department、Rank表中符合条件的所有行。</span></span><br><span class="line"><span class="comment">只要存在匹配行，结果才会返回。</span></span><br><span class="line"><span class="comment">同时如果遇到People中的DepartmentId为空值的情况下</span></span><br><span class="line"><span class="comment">就不会返回记录何结果 </span></span><br><span class="line"><span class="comment">但是因为我在前面添加了非空约束和外键约束</span></span><br><span class="line"><span class="comment">所以一不会出现不对应的情况 二不会出现空值的情况*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*咨询员工信息  显示部门名称 */</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="comment">/**/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*咨询员工信息  显示职级名称 */</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*咨询员工信息 显示部门名称 显示职级名称*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"></span><br><span class="line"><span class="comment">/*简单多表咨询和内连接共同的特点：</span></span><br><span class="line"><span class="comment">不符合主外键关系的数据不会被显示出来</span></span><br><span class="line"><span class="comment">也就是我上面说的  不满足上面约束的数据 咨询不到</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*为了测试下面的外连接 和这里的内连接  现在我要手动删除外键约束</span></span><br><span class="line"><span class="comment">选择people表 然后选择关系 然后删除FK 接着插入下面的数据</span></span><br><span class="line"><span class="comment">insert into People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span></span><br><span class="line"><span class="comment">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span></span><br><span class="line"><span class="comment">values（99,99,&#x27;abc&#x27;,&#x27;男&#x27;,&#x27;1975-8-9&#x27;,&#x27;8000,&#x27;13556857548&#x27;,&#x27;香港&#x27;,getdate()）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">99</span>,<span class="number">99</span>,<span class="string">&#x27;abc&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1975-8-9&#x27;</span>,<span class="number">8000</span>,<span class="string">&#x27;1351123465&#x27;</span>,<span class="string">&#x27;香港&#x27;</span>,getdate())</span><br><span class="line"></span><br><span class="line"><span class="comment">/*插入成功后 首先我们先来进行查询 会发现我们查询不到abc这条数据</span></span><br><span class="line"><span class="comment">说明不满足主外键关系的数据不会被显示在内连接和简单多表咨询里面</span></span><br><span class="line"><span class="comment">这两种连接 的本质就是根据主外键关系连接*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"><span class="comment">/**/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*外连接</span></span><br><span class="line"><span class="comment">外连接分成三类</span></span><br><span class="line"><span class="comment">左外连接</span></span><br><span class="line"><span class="comment">右外连接 </span></span><br><span class="line"><span class="comment">全外连接*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*咨询员工信息  显示部门名称 */</span></span><br><span class="line"><span class="comment">/*左外连接*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="comment">/*首先左外连接的语法就是把内连接的inner改成left</span></span><br><span class="line"><span class="comment">然后咨询之后发现这个 数据的变化就是</span></span><br><span class="line"><span class="comment">左边出现了上面添加的abc</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">然后我们进行以下分析</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">什么是左表？怎么看？</span></span><br><span class="line"><span class="comment">上面的左外连接 可以写成</span></span><br><span class="line"><span class="comment">People left join Department</span></span><br><span class="line"><span class="comment">这里 People表在left join 语句的左边 所以是左表</span></span><br><span class="line"><span class="comment">通过left join 语句分成左右两张表</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">什么是左外连接？</span></span><br><span class="line"><span class="comment">左外连接就是把左表的数据当主要参考点</span></span><br><span class="line"><span class="comment">也就是说左表中的每一列数据</span></span><br><span class="line"><span class="comment">都要在右表找到对应的值</span></span><br><span class="line"><span class="comment">在这个例子中</span></span><br><span class="line"><span class="comment">People是主表</span></span><br><span class="line"><span class="comment">abc这列数据在people中有 </span></span><br><span class="line"><span class="comment">所以生成的虚表中一定会有这一列</span></span><br><span class="line"><span class="comment">然后在department表中又找不到这一列对应的数据</span></span><br><span class="line"><span class="comment">所以就用null来表示</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">所以这类左外连接适用的范围就是对于左表中的每一行数据</span></span><br><span class="line"><span class="comment">都必须要找到他的对应关系的情况</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Department</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> People <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="comment">/*以department 作为主表</span></span><br><span class="line"><span class="comment">那么所有的部门都会显示出来</span></span><br><span class="line"><span class="comment">同时 没有人的部门会用null的样子来表示*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*咨询员工信息  显示职级名称 */</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*咨询员工信息 显示部门名称 显示职级名称*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"></span><br><span class="line"><span class="comment">/*右连 </span></span><br><span class="line"><span class="comment">A left join B = B right join A</span></span><br><span class="line"><span class="comment">右连 就是把右边的表格当成主表</span></span><br><span class="line"><span class="comment">然后查询出的结果中带着右边的表格中的每一列</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*下面两种咨询咨询出来的结果相同 </span></span><br><span class="line"><span class="comment">只是列显示的顺序不同 可以说是等价的*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> </span><br><span class="line">People <span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> </span><br><span class="line">Department <span class="keyword">right</span> <span class="keyword">join</span> People <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"></span><br><span class="line"><span class="comment">/*全外连</span></span><br><span class="line"><span class="comment">两张表的数据 无论是否符合关系 都要显示</span></span><br><span class="line"><span class="comment">在这个表的关系中</span></span><br><span class="line"><span class="comment">如果说left join 可以显示说有的人（无论这个人是否有部门</span></span><br><span class="line"><span class="comment">right join 可以显示所有的部门（无论部门是否有人</span></span><br><span class="line"><span class="comment">那么 full join 既可以显示所有的人 又可以显示 所有的部门</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> </span><br><span class="line">People <span class="keyword">full</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"></span><br><span class="line"><span class="comment">/*多表查询综合实例*/</span></span><br><span class="line"> <span class="comment">/*查询出武汉地区所有员工信息，要求显示部门名称以及员工的详细资料*/</span></span><br><span class="line"> <span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"> <span class="keyword">from</span> People</span><br><span class="line"> <span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId<span class="operator">=</span>Department.DepartmentId</span><br><span class="line"> <span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;武汉&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"> <span class="keyword">from</span> People</span><br><span class="line"> <span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId<span class="operator">=</span>Department.DepartmentId</span><br><span class="line"> <span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;武汉&#x27;</span></span><br><span class="line"> <span class="comment">/*这里应该用哪一种连接方式 </span></span><br><span class="line"><span class="comment"> 如果用inner join 则如果有人位于武汉但是没有部门名称不会被显示</span></span><br><span class="line"><span class="comment"> 如果用left join 则没有部门名称会显示null*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/*咨询处武汉地区所有员工信息，要求显示部门名称</span></span><br><span class="line"><span class="comment"> 职级名称 以及员工的详细 资料*/</span></span><br><span class="line"> <span class="comment">/*这种情况就不需要考虑 肯定是用left join</span></span><br><span class="line"><span class="comment"> 因为可能出现有人没有部门编号 但是有职业级编号 的情况 */</span></span><br><span class="line"> <span class="keyword">select</span> PeopleName <span class="keyword">as</span> 姓名,</span><br><span class="line"> DepartmentName <span class="keyword">as</span> 部门名,</span><br><span class="line"> RankName <span class="keyword">as</span> 职级</span><br><span class="line"> <span class="keyword">from</span> People <span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"> <span class="keyword">left</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"> <span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;武汉&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">select</span> PeopleName <span class="keyword">as</span> 姓名,</span><br><span class="line"> DepartmentName <span class="keyword">as</span> 部门名,</span><br><span class="line"> People.DepartmentId <span class="keyword">as</span> 部门编号,<span class="comment">/*</span></span><br><span class="line"><span class="comment"> 如果要写下面连接的子句的话 </span></span><br><span class="line"><span class="comment"> 一定要说明这个是左表还是右表里面的数据</span></span><br><span class="line"><span class="comment"> 虽然左表和右表里面到店数据理论上是相同的*/</span></span><br><span class="line"> RankName <span class="keyword">as</span> 职级</span><br><span class="line"> <span class="keyword">from</span> People <span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"> <span class="keyword">left</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"> <span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;武汉&#x27;</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">/*根据部门分组同居员工人数</span></span><br><span class="line"><span class="comment"> 员工工资总和 平均工资 最高最低工资*/</span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资,</span><br><span class="line">DepartmentName <span class="keyword">as</span> 部门名称</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Department.DepartmentId,Department.DepartmentName</span><br><span class="line"><span class="comment">/*这样会发现 有一条错误的数据 没有部门名称 不希望显示 所以改成内连接*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资,</span><br><span class="line">DepartmentName <span class="keyword">as</span> 部门名称</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Department.DepartmentId,DepartmentName</span><br><span class="line"></span><br><span class="line"><span class="comment">/*根据部门分组统计员工人数</span></span><br><span class="line"><span class="comment">员工工资总和 平均工资 最高和最低工资</span></span><br><span class="line"><span class="comment">平均工资10000以下的不参与统计 并且根据平均工资降序排列*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资,</span><br><span class="line">DepartmentName <span class="keyword">as</span> 部门名称</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.Departmentid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> People.DepartmentId,DepartmentName</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">avg</span>(PeopleSalary) <span class="operator">&gt;=</span> <span class="number">10000</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 平均工资 <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*根据部门名称 然后根据职位名称</span></span><br><span class="line"><span class="comment">分组统计员工人数 员工工资总和 平均工资 最高最低工资*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资,</span><br><span class="line">DepartmentName <span class="keyword">as</span> 部门名称,</span><br><span class="line">Rankname <span class="keyword">as</span> 职级</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.Departmentid</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> People.DepartmentId,People.RankId,DepartmentName,RankName</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">avg</span>(PeopleSalary) <span class="operator">&gt;=</span> <span class="number">10000</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 平均工资 <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*自连接</span></span><br><span class="line"><span class="comment">自己连自己*/</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Dept</span><br><span class="line">(</span><br><span class="line">DeptId <span class="type">int</span> <span class="keyword">Primary</span> key , <span class="comment">--部门编号</span></span><br><span class="line">DeptName <span class="type">varchar</span>(<span class="number">50</span>),<span class="comment">--部门名称</span></span><br><span class="line">ParentId <span class="type">int</span>,<span class="comment">--上级部门编号</span></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">DeptId DeptName ParentId</span></span><br><span class="line"><span class="comment">1       软件部    0</span></span><br><span class="line"><span class="comment">2硬件部  0</span></span><br><span class="line"><span class="comment">3软件研发部 1</span></span><br><span class="line"><span class="comment">4硬件测试部 2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*一级部门*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">1</span>,<span class="string">&#x27;软件部&#x27;</span>,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">2</span>,<span class="string">&#x27;硬件部&#x27;</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment">/*二级部门*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">3</span>,<span class="string">&#x27;软件研发部&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">4</span>,<span class="string">&#x27;软件测试部&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">5</span>,<span class="string">&#x27;软件实施部&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">6</span>,<span class="string">&#x27;硬件研发部&#x27;</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">7</span>,<span class="string">&#x27;硬件测试部&#x27;</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">8</span>,<span class="string">&#x27;硬件实施部&#x27;</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Dept</span><br><span class="line"><span class="comment">/*要查询每个部门的上级部门*/</span></span><br><span class="line"><span class="keyword">select</span> A.DeptId <span class="keyword">as</span> 部门编号,</span><br><span class="line">A.DeptName <span class="keyword">as</span> 部门名称,</span><br><span class="line">B.DeptName <span class="keyword">as</span> 上级部门</span><br><span class="line"><span class="keyword">from</span> Dept A</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Dept B <span class="keyword">on</span> A.ParentId <span class="operator">=</span> B.DeptId</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*视图*/</span></span><br><span class="line"><span class="comment">/*视图  可以理解陈 虚拟表</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*存储过程*/</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="其他课堂的代码"><a href="#其他课堂的代码" class="headerlink" title="其他课堂的代码"></a>其他课堂的代码</h2><h3 id="建库表"><a href="#建库表" class="headerlink" title="建库表"></a>建库表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建数据库 DB1</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE DB1</span><br><span class="line"><span class="keyword">ON</span></span><br><span class="line">(</span><br><span class="line">    NAME <span class="operator">=</span> DB1_data,</span><br><span class="line">    FILENAME <span class="operator">=</span> <span class="string">&#x27;D:\SQL2019\数据库代码\Y24M9D29\DB1_data.mdf&#x27;</span>,</span><br><span class="line">    SIZE <span class="operator">=</span> <span class="number">30</span>MB,</span><br><span class="line">    MAXSIZE <span class="operator">=</span> <span class="number">100</span>MB,</span><br><span class="line">    FILEGROWTH <span class="operator">=</span> <span class="number">10</span><span class="operator">%</span></span><br><span class="line">)</span><br><span class="line">LOG <span class="keyword">ON</span></span><br><span class="line">(</span><br><span class="line">    NAME <span class="operator">=</span> DB1_log,</span><br><span class="line">    FILENAME <span class="operator">=</span> <span class="string">&#x27;D:\SQL2019\数据库代码\Y24M9D29\DB1_log.ldf&#x27;</span>,</span><br><span class="line">    SIZE <span class="operator">=</span> <span class="number">10</span>MB,</span><br><span class="line">    FILEGROWTH <span class="operator">=</span> <span class="number">20</span>MB</span><br><span class="line">);</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 检查数据库</span></span><br><span class="line"><span class="keyword">EXEC</span> sp_helpdb DB1;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加一个数据文件 DB1_data2，位置自定义，其他设置采用默认</span></span><br><span class="line"><span class="keyword">ALTER</span> DATABASE DB1</span><br><span class="line"><span class="keyword">ADD</span> FILE</span><br><span class="line">(</span><br><span class="line">    NAME <span class="operator">=</span> DB1_data2,</span><br><span class="line">    FILENAME <span class="operator">=</span> <span class="string">&#x27;D:\SQL2019\数据库代码\Y24M9D29\DB1_data2.ndf&#x27;</span></span><br><span class="line">);</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将数据文件 DB1_data2 扩大到 20MB</span></span><br><span class="line"><span class="keyword">ALTER</span> DATABASE DB1</span><br><span class="line">MODIFY FILE</span><br><span class="line">(</span><br><span class="line">    NAME <span class="operator">=</span> DB1_data2,</span><br><span class="line">    SIZE <span class="operator">=</span> <span class="number">20</span>MB</span><br><span class="line">);</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用数据库 DB1</span></span><br><span class="line">USE DB1;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表格 StudentT</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> StudentT (</span><br><span class="line">    sno <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    sname <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    sex <span class="type">CHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">    birthday <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    IDcard <span class="type">CHAR</span>(<span class="number">18</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    phone <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NULL</span>,</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> pk_Student <span class="keyword">PRIMARY</span> KEY (sno),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> uq_IDcard <span class="keyword">UNIQUE</span> (IDcard),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> chk_sex <span class="keyword">CHECK</span> (sex <span class="keyword">IN</span> (<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;女&#x27;</span>)),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> chk_birthday <span class="keyword">CHECK</span> (birthday <span class="operator">&lt;</span> GETDATE()),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> chk_phone_email <span class="keyword">CHECK</span> (phone <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">OR</span> email <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>)</span><br><span class="line">);</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> pk_Student;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将学号字段的数据类型修改为定长8位字符型</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> sno <span class="type">CHAR</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将学号字段的数据类型修改为 int 型</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> sno <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 重新创建主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> pk_Student <span class="keyword">PRIMARY</span> KEY (sno);</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建选课表 SC</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> SC (</span><br><span class="line">    sno <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    cno <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    score <span class="type">DECIMAL</span>(<span class="number">5</span>, <span class="number">2</span>) <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> pk_SC <span class="keyword">PRIMARY</span> KEY (sno, cno),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> chk_score <span class="keyword">CHECK</span> (score <span class="keyword">BETWEEN</span> <span class="number">0</span> <span class="keyword">AND</span> <span class="number">100</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> fk_sno <span class="keyword">FOREIGN</span> KEY (sno) <span class="keyword">REFERENCES</span> StudentT(sno)</span><br><span class="line">);</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建表格StudentT</span></span><br><span class="line"><span class="comment">--学号：snoint型不允许空</span></span><br><span class="line"><span class="comment">--姓名：sname变长20位字符型不允许空 </span></span><br><span class="line"><span class="comment">--性别：sex定长2位字符型不允许空 </span></span><br><span class="line"><span class="comment">--生日：birthday日期型不允许空</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 检查表是否存在，若存在则删除</span></span><br><span class="line">IF OBJECT_ID(<span class="string">&#x27;dbo.StudentT&#x27;</span>, <span class="string">&#x27;U&#x27;</span>) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DROP</span> <span class="keyword">TABLE</span> dbo.StudentT;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表格 StudentT</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> StudentT (</span><br><span class="line">    sno <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,                 <span class="comment">-- 学号：int 型，不允许空</span></span><br><span class="line">    sname <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,      <span class="comment">-- 姓名：变长 20 位字符型，不允许空</span></span><br><span class="line">    sex <span class="type">CHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,            <span class="comment">-- 性别：定长 2 位字符型，不允许空</span></span><br><span class="line">    birthday <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,           <span class="comment">-- 生日：日期型，不允许空</span></span><br><span class="line">    <span class="keyword">CONSTRAINT</span> pk_Student <span class="keyword">PRIMARY</span> KEY (sno)  <span class="comment">-- 设置学号为主键</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--增加一个字段：身份证号码IDcard定长18位字符型不允许空A</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> IDcard <span class="type">CHAR</span>(<span class="number">18</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--增加2个字段：电话phone变长20位字符型允许空</span></span><br><span class="line"><span class="comment">--        邮箱email变长20位字符型允许空</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> phone <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NULL</span>,  <span class="comment">-- 增加电话字段，变长20位字符型，允许空</span></span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NULL</span>;  <span class="comment">-- 增加邮箱字段，变长20位字符型，允许空</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--删除一下主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT <span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> pk_Student;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--将学号字段的数据类型修改为定长8位字符型</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> sno <span class="type">CHAR</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--将学号设置为主键</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">PRIMARY</span> KEY(sno);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--删除与 sno 列相关的主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT <span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> PK_sno;</span><br><span class="line"></span><br><span class="line"><span class="comment">--将学号字段的数据类型修改为int型</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> sno <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"> <span class="keyword">ADD</span> <span class="keyword">PRIMARY</span> KEY(sno)</span><br><span class="line"></span><br><span class="line"><span class="comment">--将身份证号设为惟一</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> IDcard <span class="type">VARCHAR</span>(<span class="number">18</span>);</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">--将性别默认设为“男”</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> DF_sex <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--将性别字段规定为只能是“男”和“女”</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> CK_sex <span class="keyword">CHECK</span> (sex <span class="keyword">IN</span>(<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;女&#x27;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--将生日字段规定为必须小于今天</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> CK_birthday <span class="keyword">CHECK</span> (birthday <span class="operator">&lt;</span> GETDATE());</span><br><span class="line"></span><br><span class="line"><span class="comment">--要求电话号码和邮箱不能同时为空</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="comment">--加上 with nocheck 达到的效果就是前面的情况不管看（非唯一约束）</span></span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> CK_phone_email <span class="keyword">CHECK</span> (phone <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">or</span> email <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建一张选课表SC，包含字段：</span></span><br><span class="line"><span class="comment">--学号：snoint型不可为空</span></span><br><span class="line"><span class="comment">--课程号：cnoint型不可为空</span></span><br><span class="line"><span class="comment">--成绩：score可保留2位小数可为空</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> sc(</span><br><span class="line">sno <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">cno <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">score <span class="type">decimal</span>(<span class="number">5</span>,<span class="number">2</span>)<span class="keyword">null</span>,);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--将学号和课程号设为主键</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> sc</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> pk_SC <span class="keyword">primary</span> key (sno,cno);</span><br><span class="line"></span><br><span class="line"><span class="comment">--将成绩规定为0~100之间</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> sc</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> ck_score <span class="keyword">check</span>(score <span class="keyword">between</span> <span class="number">0</span> <span class="keyword">and</span> <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--设置学号为外键</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> sc</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> fk_sno <span class="keyword">foreign</span> key (sno) <span class="keyword">references</span> StudentT(sno);</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建S表格</span></span><br><span class="line"><span class="comment">/*表名 S</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">列名 数据类型 长度 是否允许为空 默认值 说明</span></span><br><span class="line"><span class="comment">sid  char  8  不允许为空 主键</span></span><br><span class="line"><span class="comment">sname varchar 20 不允许 无</span></span><br><span class="line"><span class="comment">sex char 2 不允许 男 男，女</span></span><br><span class="line"><span class="comment">birthday date 3 不允许 无 必须小于今天</span></span><br><span class="line"><span class="comment">IDCard char 18 不允许  无 必须唯一</span></span><br><span class="line"><span class="comment">phone varchar 20 允许 无</span></span><br><span class="line"><span class="comment">email varchar 20 允许 无 Phone与email不能同时为空*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> S (</span><br><span class="line">    sid <span class="type">CHAR</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    sname <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    sex <span class="type">CHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">CHECK</span> (sex <span class="keyword">IN</span> (<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;女&#x27;</span>)),</span><br><span class="line">    birthday <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">CHECK</span> (birthday <span class="operator">&lt;</span> GETDATE()),</span><br><span class="line">    IDCard <span class="type">CHAR</span>(<span class="number">18</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">    phone <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NULL</span>,</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> CK_PhoneEmail <span class="keyword">CHECK</span> (phone <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">OR</span> email <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">--查看建表情况</span></span><br><span class="line"><span class="keyword">EXEC</span> sp_help <span class="string">&#x27;S&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--向学生表StudentT(在DB1数据库中）中添加字段“联系地址address变长50位字符型可为空默认为‘杭州市临安区青山湖街道杭电路1号’”</span></span><br><span class="line">USE DB1;  <span class="comment">-- 切换到 DB1 数据库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> address <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;杭州市临安区青山湖街道杭电路1号&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--向学生表中添加字段编号：id自动增长列不可为空</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> [PK__StudentT__DDDF644604DB6235];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">USE DB1;  <span class="comment">-- 切换到 DB1 数据库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> id <span class="type">INT</span> <span class="keyword">IDENTITY</span>(<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY;</span><br><span class="line"><span class="comment">--出了点问题 清除一下</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> StudentT;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--向学生表StudentT中插入以下数据</span></span><br><span class="line"><span class="comment">--学号姓名性别生日身份证号电话邮箱地址</span></span><br><span class="line"><span class="comment">--1s1男1999-1-211111111                88166401                s1@163.com杭州</span></span><br><span class="line"><span class="comment">--2s2女1999-12-312222222288166402不知不知</span></span><br><span class="line"><span class="comment">--3s3默认1998-3-433333333不知s3@163.com不知</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> StudentT (sno, sname, sex, birthday, IDcard, phone, email, address)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;s1&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;1999-01-02&#x27;</span>, <span class="string">&#x27;11111111&#x27;</span>, <span class="string">&#x27;88166401&#x27;</span>, <span class="string">&#x27;s1@163.com&#x27;</span>, <span class="string">&#x27;杭州&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> StudentT (sno, sname, sex, birthday, IDcard, phone, email, address)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;s2&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1999-12-31&#x27;</span>, <span class="string">&#x27;22222222&#x27;</span>, <span class="string">&#x27;88166402&#x27;</span>, <span class="string">&#x27;不知&#x27;</span>, <span class="string">&#x27;不知&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> StudentT (sno, sname, sex, birthday, IDcard, phone, email, address)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;s3&#x27;</span>, <span class="string">&#x27;默认&#x27;</span>, <span class="string">&#x27;1998-03-04&#x27;</span>, <span class="string">&#x27;33333333&#x27;</span>, <span class="string">&#x27;不知&#x27;</span>, <span class="string">&#x27;s3@163.com&#x27;</span>, <span class="string">&#x27;不知&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> sex <span class="type">VARCHAR</span>(<span class="number">4</span>);  </span><br><span class="line"></span><br><span class="line"><span class="keyword">EXEC</span> sp_help <span class="string">&#x27;StudentT&#x27;</span>;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--向表中继续插入数据：</span></span><br><span class="line"><span class="comment">--学号姓名性别生日身份证号电话邮箱地址</span></span><br><span class="line"><span class="comment">--4s4中2999-1-211111111                不知不知不知</span></span><br><span class="line"><span class="comment">--请观察成功插入后的编号值</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> StudentT (sno, sname, sex, birthday, IDcard, phone, email, address)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">&#x27;s4&#x27;</span>, <span class="string">&#x27;中&#x27;</span>, <span class="string">&#x27;2999-01-02&#x27;</span>, <span class="string">&#x27;11111111&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> StudentT;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--删除4号学生</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> StudentT <span class="keyword">WHERE</span> sno <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"><span class="comment">--DELETE FROM StudentT WHERE sno = 3;老师上课的代码 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--将2号同学的邮箱改为“s2@163.com”</span></span><br><span class="line"><span class="keyword">UPDATE</span> StudentT </span><br><span class="line"><span class="keyword">SET</span> email <span class="operator">=</span> <span class="string">&#x27;s2@163.com&#x27;</span> </span><br><span class="line"><span class="keyword">WHERE</span> sno <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--将3号同学的电话改为“88166403”</span></span><br><span class="line"><span class="keyword">UPDATE</span> StudentT </span><br><span class="line"><span class="keyword">SET</span> phone <span class="operator">=</span> <span class="string">&#x27;88166403&#x27;</span> </span><br><span class="line"><span class="keyword">WHERE</span> sno <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="简单查询"><a href="#简单查询" class="headerlink" title="简单查询"></a>简单查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--使用pubs数据库完成下面操作</span></span><br><span class="line"><span class="comment">--检索title表中的所有列</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> titles</span><br><span class="line"><span class="comment">--检索所有书的书的编号、书名、类型、价格</span></span><br><span class="line"><span class="keyword">select</span> title_id,title,type,price</span><br><span class="line"><span class="keyword">from</span>  titles</span><br><span class="line"><span class="comment">--在titles表中检索所有书的编号、单价、打7折后的价格</span></span><br><span class="line"><span class="keyword">SELECT</span> title_id <span class="keyword">as</span> <span class="string">&#x27;标号&#x27;</span>, price <span class="keyword">as</span> <span class="string">&#x27;原价&#x27;</span>, price <span class="operator">*</span> <span class="number">0.7</span> <span class="keyword">AS</span> <span class="string">&#x27;7折后的价格&#x27;</span> <span class="keyword">FROM</span> titles;</span><br><span class="line"><span class="comment">--在authors表中检索所有作者的编号、作者的姓名（firstname与lastname的组合）</span></span><br><span class="line"><span class="keyword">SELECT</span> au_id, CONCAT(au_fname, <span class="string">&#x27; &#x27;</span>, au_lname) <span class="keyword">AS</span> full_name <span class="keyword">FROM</span> authors;</span><br><span class="line"><span class="comment">--查询作者来自哪些州</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> state <span class="keyword">FROM</span> authors;</span><br><span class="line"><span class="comment">--查询作者来自哪些州、哪些城市</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> state, city <span class="keyword">FROM</span> authors;</span><br><span class="line"><span class="comment">--查询前面6本书的所有信息</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">6</span> <span class="operator">*</span> <span class="keyword">FROM</span> titles;</span><br><span class="line"><span class="comment">--查询前10%的书的所有信息</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">10</span> <span class="keyword">PERCENT</span> <span class="operator">*</span> <span class="keyword">FROM</span> titles;</span><br><span class="line"><span class="comment">--查询前面10本书的编号和单价</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">10</span> title_id, price <span class="keyword">FROM</span> titles;</span><br><span class="line"><span class="comment">--查询书的全部信息，按书的类型和价格升序排列</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> titles <span class="keyword">ORDER</span> <span class="keyword">BY</span> type <span class="keyword">ASC</span>, price <span class="keyword">ASC</span>;</span><br><span class="line"><span class="comment">--查询书的全部信息，按书的类型和价格降序排列</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> titles <span class="keyword">ORDER</span> <span class="keyword">BY</span> type <span class="keyword">DESC</span>, price <span class="keyword">DESC</span>;</span><br><span class="line"><span class="comment">--查询单价最高的10本书的信息</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">10</span><span class="operator">*</span> <span class="keyword">FROM</span> titles <span class="keyword">ORDER</span> <span class="keyword">BY</span> price <span class="keyword">DESC</span>;</span><br><span class="line"><span class="comment">--查询单价最高的5本书的信息（显示并列项）</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">5</span> <span class="keyword">WITH</span> TIES <span class="operator">*</span>  <span class="comment">--这个就是显示并列项</span></span><br><span class="line"><span class="keyword">FROM</span> TITLES</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> price <span class="keyword">DESC</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--检索编号为’F-C16315M’的员工的编号、姓、名、雇佣日期</span></span><br><span class="line"><span class="keyword">SELECT</span> emp_id, lname, fname, hire_date <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> emp_id <span class="operator">=</span> <span class="string">&#x27;F-C16315M&#x27;</span>;</span><br><span class="line"><span class="comment">--查询authors表中所有居住在UT州的作者姓名和电话。（作者的姓名由au_fname和au_lname组合成，中间以空格分隔）</span></span><br><span class="line"><span class="keyword">SELECT</span> au_fname<span class="operator">+</span> <span class="string">&#x27; &#x27;</span><span class="operator">+</span> au_lname <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>,phone  <span class="keyword">as</span> <span class="string">&#x27;电话&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> state <span class="operator">=</span> <span class="string">&#x27;UT&#x27;</span>;</span><br><span class="line"><span class="comment">--查询单价小于10的书的所有信息</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> price <span class="operator">&lt;</span> <span class="number">10</span>;</span><br><span class="line"><span class="comment">--查询类型为’business’的书的书名和单价</span></span><br><span class="line"><span class="keyword">SELECT</span> title, price </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> type <span class="operator">=</span> <span class="string">&#x27;business&#x27;</span>;</span><br><span class="line"><span class="comment">--从表 titles 中，查找书名中包含字符串“computer”的书名。</span></span><br><span class="line"><span class="keyword">SELECT</span> title </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> title <span class="keyword">LIKE</span> <span class="string">&#x27;%computer%&#x27;</span>;</span><br><span class="line"><span class="comment">--从表 authors 中，查找au_fname以字符“D”打头的作者的姓、名。</span></span><br><span class="line"><span class="keyword">SELECT</span> au_lname, au_fname </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_fname <span class="keyword">LIKE</span> <span class="string">&#x27;D%&#x27;</span>;</span><br><span class="line"><span class="comment">--从表 authors 中，查找au_id类似于”72?-?”格式的作者的编号、姓、名、电话。</span></span><br><span class="line"><span class="keyword">SELECT</span> au_id, au_lname, au_fname, phone </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;72_-%&#x27;</span>;</span><br><span class="line"><span class="comment">--从表 authors 中，查找au_id的第2个数字是7的作者的编号、姓、名、电话。</span></span><br><span class="line"><span class="keyword">SELECT</span> au_id, au_lname, au_fname, phone </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;_7%&#x27;</span>;</span><br><span class="line"><span class="comment">--从表 authors 中，查找au_id只能是”723-?”、 ”724-?”、 ”725-?”格式 的作者的编号、姓、名、电话。</span></span><br><span class="line"><span class="keyword">SELECT</span> au_id, au_lname, au_fname, phone </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;723-%&#x27;</span> <span class="keyword">OR</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;724-%&#x27;</span> <span class="keyword">OR</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;725-%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> au_id, au_lname, au_fname, phone </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;72[3-5]-%&#x27;</span></span><br><span class="line"><span class="comment">--从表 authors 中，查找au_id的第1个数字是5-9中的一个，第2个数字是1-4中的一个的作者的编号、姓、名、电话。</span></span><br><span class="line"><span class="keyword">SELECT</span> au_id, au_lname, au_fname, phone </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;[5-9][1-4]%&#x27;</span>;</span><br><span class="line"><span class="comment">--从表 authors 中，查找au_id的第1个数字不是5-9中的一个，第2个数字不是1-4中的一个的作者的编号、姓、名、电话。</span></span><br><span class="line"><span class="keyword">SELECT</span> au_id, au_lname, au_fname, phone </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_id <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">&#x27;[5-9][1-4]%&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> au_id, au_lname, au_fname, phone </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;[^5-9][^1-4]%&#x27;</span>;</span><br><span class="line"><span class="comment">--查找书名中含有“computer”，或书的编号以“B”打头的书，且价格低于15的书的信息。</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> (title <span class="keyword">LIKE</span> <span class="string">&#x27;%computer%&#x27;</span> <span class="keyword">OR</span> title_id <span class="keyword">LIKE</span> <span class="string">&#x27;B%&#x27;</span>) </span><br><span class="line">  <span class="keyword">AND</span> price <span class="operator">&lt;</span> <span class="number">15</span>;</span><br><span class="line"><span class="comment">--从titles表中查询单价在15美元到20美元之间的书名和单价</span></span><br><span class="line"><span class="keyword">SELECT</span> title, price </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> price <span class="keyword">BETWEEN</span> <span class="number">15</span> <span class="keyword">AND</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> title, price </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> price <span class="operator">&gt;=</span><span class="number">15</span> <span class="keyword">and</span> price <span class="operator">&lt;=</span><span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> title, price </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> price <span class="keyword">not</span> <span class="keyword">BETWEEN</span> <span class="number">15</span> <span class="keyword">AND</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> title, price </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> price <span class="operator">&lt;</span> <span class="number">15</span> <span class="keyword">or</span> price <span class="operator">&gt;</span><span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--从表 authors 中搜索state位于‘CA’,‘KS’,‘MI’,‘IN’的作者姓名和所在州。</span></span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(au_fname, <span class="string">&#x27; &#x27;</span>, au_lname) <span class="keyword">AS</span> full_name, state </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> state <span class="keyword">IN</span> (<span class="string">&#x27;CA&#x27;</span>, <span class="string">&#x27;KS&#x27;</span>, <span class="string">&#x27;MI&#x27;</span>, <span class="string">&#x27;IN&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(au_fname, <span class="string">&#x27; &#x27;</span>, au_lname) <span class="keyword">AS</span> full_name, state </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> state <span class="operator">=</span><span class="string">&#x27;CA&#x27;</span> <span class="keyword">or</span> state <span class="operator">=</span>  <span class="string">&#x27;KS&#x27;</span><span class="keyword">or</span> state <span class="operator">=</span>  <span class="string">&#x27;MI&#x27;</span><span class="keyword">or</span> state <span class="operator">=</span>  <span class="string">&#x27;IN&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--查询表 titles 中还没有定价格的书名和价格。</span></span><br><span class="line"><span class="keyword">SELECT</span> title, price </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> price <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line">use pubs</span><br><span class="line"></span><br><span class="line">use gradeManager</span><br><span class="line"><span class="comment">--自我练习部分（使用GradeManager数据库完成下面操作）</span></span><br><span class="line"><span class="comment">--（1）查询班级表（Class）的全部内容；</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> Class;</span><br><span class="line"><span class="comment">--（2）在学生表Student中查询学生姓名、所在班级。</span></span><br><span class="line"><span class="keyword">SELECT</span> sname, Clno </span><br><span class="line"><span class="keyword">FROM</span> Student;</span><br><span class="line"><span class="comment">--（3）找出01311班女学生的个人信息；</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> Student </span><br><span class="line"><span class="keyword">WHERE</span> Clno <span class="operator">=</span> <span class="string">&#x27;01311&#x27;</span> <span class="keyword">AND</span> Ssex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>;</span><br><span class="line"><span class="comment">--（4）找出所有被学生选修了的课程号；</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">distinct</span> cno</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（5）找出01311班和01312班的学生姓名、性别、出生年份；</span></span><br><span class="line"><span class="keyword">SELECT</span> sname, Ssex,<span class="keyword">year</span>(GETDATE())<span class="operator">-</span>sage <span class="keyword">as</span><span class="string">&#x27;出生年份&#x27;</span>  </span><br><span class="line"><span class="keyword">FROM</span> Student </span><br><span class="line"><span class="keyword">WHERE</span> Clno <span class="keyword">IN</span> (<span class="string">&#x27;01311&#x27;</span>, <span class="string">&#x27;01312&#x27;</span>);</span><br><span class="line"><span class="comment">--（6）找出所有姓李的学生的个人信息。</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> sname <span class="keyword">LIKE</span> <span class="string">&#x27;李%&#x27;</span>;  <span class="comment">-- 使用LIKE语句来查找姓李的学生</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="聚合与分组查询"><a href="#聚合与分组查询" class="headerlink" title="聚合与分组查询"></a>聚合与分组查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--使用pubs数据库完成下面操作</span></span><br><span class="line"><span class="comment">--查询titles表中类型是’popular_comp’的书的平均价格</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(price) <span class="keyword">as</span> avgprice</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">where</span> type <span class="operator">=</span> <span class="string">&#x27;popular_comp&#x27;</span></span><br><span class="line"><span class="comment">--查询publishers表中供应商的数量</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="string">&#x27;供应商的数量&#x27;</span></span><br><span class="line"><span class="keyword">from</span> publishers</span><br><span class="line"><span class="comment">--查询publishers表中供应商所在州的数量</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> state) <span class="keyword">as</span> 供应商所在州的数量</span><br><span class="line"><span class="keyword">from</span> publishers</span><br><span class="line"></span><br><span class="line"><span class="comment">--查询titles表中书的类型有几种</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> type) <span class="keyword">as</span> 书的类型有几种</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"></span><br><span class="line"><span class="comment">--按书的种类分类，求出各类书籍的数量</span></span><br><span class="line"><span class="keyword">select</span> type,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> book_count</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> type</span><br><span class="line"></span><br><span class="line"><span class="comment">--按书的种类分类，求出3种类型书籍‘business’,‘mod_cook’,‘trad_cook’的价格总和、平均价格以及该类书籍的数量</span></span><br><span class="line"><span class="keyword">select</span> type,</span><br><span class="line"><span class="built_in">sum</span>(price) <span class="keyword">as</span> total_price,</span><br><span class="line"><span class="built_in">avg</span>(price) <span class="keyword">as</span> avg_price,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> book_count</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">where</span> type <span class="keyword">in</span> (<span class="string">&#x27;business&#x27;</span>,<span class="string">&#x27;mod_cook&#x27;</span>,<span class="string">&#x27;trad_cook&#x27;</span>)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> type</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> book_count <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--按书的类型分类，查询每个出版商销售的书的</span></span><br><span class="line"><span class="comment">--平均价和总销售额 </span></span><br><span class="line"><span class="keyword">SELECT</span> type,pub_id <span class="keyword">as</span> pubid,<span class="built_in">AVG</span>(price) avgprice,<span class="built_in">SUM</span>(ytd_sales) total</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> type,pub_id</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> type,<span class="built_in">count</span>(<span class="keyword">distinct</span> pub_id),<span class="built_in">AVG</span>(price) avgprice,<span class="built_in">SUM</span>(ytd_sales) total</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> type</span><br><span class="line"><span class="comment">--按书的类型分类，查询平均价大于15的书的类型、平均价</span></span><br><span class="line"><span class="keyword">select</span> type,<span class="built_in">avg</span>(price)<span class="string">&#x27;平均价&#x27;</span></span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> type</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">avg</span>(price) <span class="operator">&gt;</span><span class="number">15</span>;</span><br><span class="line"><span class="comment">--从titles表中，查询得到总销售额（ytd_sales）超过  $40,000 的出版商。</span></span><br><span class="line"><span class="keyword">select</span> pub_id</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> pub_id</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">sum</span>(ytd_sales)<span class="operator">&gt;</span><span class="number">40000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--从titles表中，查询得到至少出版六本书的出版商及其总销售额。</span></span><br><span class="line"><span class="keyword">select</span>  pub_id,</span><br><span class="line"><span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> 书数,</span><br><span class="line"><span class="built_in">SUM</span>(ytd_sales) <span class="keyword">as</span> 总额</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> pub_id</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">&gt;=</span><span class="number">6</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--从titles表中，查询标识号大于 0800、支付的总预付款已超过 $15,000 且销售书籍的平均价格小于 $20 的出版商。 </span></span><br><span class="line"><span class="keyword">select</span>  pub_id</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">where</span> title_id <span class="operator">&gt;</span> <span class="string">&#x27;0800&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> pub_id</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">sum</span>(advance) <span class="operator">&gt;</span><span class="number">15000</span> <span class="keyword">and</span> <span class="built_in">AVG</span>(price) <span class="operator">&lt;</span><span class="number">20</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">use GradeManager</span><br><span class="line"><span class="comment">--自我练习1（使用GradeManager数据库完成下面操作）</span></span><br><span class="line"><span class="comment">--（1）计算选2号课程的学生平均成绩，保留2位小数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">convert</span>(<span class="type">decimal</span>(<span class="number">5</span>,<span class="number">2</span>),<span class="built_in">AVG</span>(Gmark)) <span class="keyword">as</span> avggrade</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">where</span> Cno <span class="operator">=</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line"><span class="comment">--（2）求各课程相应的选课人数，显示课程号和选课人数</span></span><br><span class="line"><span class="keyword">select</span> Cno <span class="keyword">as</span> 课程号 ,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 选课人数</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Cno</span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）计算有人选修的每门课程的平均成绩，显示课程号和平均成绩</span></span><br><span class="line"><span class="keyword">select</span> Cno <span class="keyword">as</span> 课程号,<span class="built_in">AVG</span>(Gmark) <span class="keyword">as</span> avg_grades</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Cno</span><br><span class="line"><span class="comment">--（4）计算参加过考试的每个学生的平均成绩</span></span><br><span class="line"><span class="keyword">select</span> sno <span class="keyword">as</span> 学号,<span class="built_in">AVG</span>(gmark) <span class="keyword">as</span> 平均成绩</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">where</span> gmark <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="comment">--（5）求选课人数最多的课程号及选课人数</span></span><br><span class="line"><span class="keyword">select</span>  top <span class="number">1</span> </span><br><span class="line">cno <span class="keyword">as</span> 课程号,</span><br><span class="line"><span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> 选课人数</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cno</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 选课人数 <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--（6）求平均成绩大于86分的学生学号及平均成绩</span></span><br><span class="line"><span class="keyword">select</span> sno <span class="keyword">as</span> 学号,</span><br><span class="line"><span class="built_in">AVG</span>(gmark) <span class="keyword">as</span> 平均成绩</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">avg</span>(gmark) <span class="operator">&gt;</span> <span class="number">86</span></span><br><span class="line"><span class="comment">--统计过后的判断用having语句而不是where</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--自我练习2</span></span><br><span class="line"><span class="comment">--（1）统计每年每个专业的班级数</span></span><br><span class="line"><span class="keyword">select</span> inyear <span class="keyword">as</span> 年份 ,</span><br><span class="line">speciality <span class="keyword">as</span> 专业,</span><br><span class="line"><span class="built_in">count</span>(<span class="keyword">distinct</span> Clno) <span class="keyword">as</span> 班级数</span><br><span class="line"><span class="keyword">from</span> Class</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> inyear,speciality</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> inyear <span class="keyword">as</span> 年份 ,</span><br><span class="line">speciality <span class="keyword">as</span> 专业,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 班级数</span><br><span class="line"><span class="keyword">from</span> Class</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> inyear,speciality</span><br><span class="line"></span><br><span class="line"><span class="comment">--（2）统计每年每个专业的班级数及学生人数</span></span><br><span class="line"><span class="keyword">select</span> inyear <span class="keyword">as</span> 年份 ,</span><br><span class="line">speciality <span class="keyword">as</span> 专业,</span><br><span class="line"><span class="built_in">count</span>(<span class="keyword">distinct</span> Clno) <span class="keyword">as</span> 班级数,</span><br><span class="line"><span class="built_in">sum</span>(number) <span class="keyword">as</span> 学生人数</span><br><span class="line"><span class="keyword">from</span> Class</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> inyear,speciality</span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）统计每个班级19岁以上的男生人数，显示班级号和人数</span></span><br><span class="line"><span class="keyword">select</span> clno <span class="keyword">as</span> 班级号 ,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 男生人数</span><br><span class="line"><span class="keyword">from</span> Student</span><br><span class="line"><span class="keyword">where</span> Ssex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">and</span> sage <span class="operator">&gt;</span><span class="number">19</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Clno</span><br><span class="line"></span><br><span class="line"><span class="comment">--（4）统计每门课程，显示平均分高于85分的课程号及平均分</span></span><br><span class="line"><span class="keyword">select</span> cno <span class="keyword">as</span> 课程号,</span><br><span class="line"><span class="built_in">avg</span>(gmark) <span class="keyword">as</span> 平均分</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">avg</span> (gmark)<span class="operator">&gt;</span> <span class="number">85</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--（5）显示没有一门功课不及格的学生的学号</span></span><br><span class="line"><span class="keyword">select</span> sno <span class="keyword">as</span> 学号</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">min</span>(gmark) <span class="operator">&gt;=</span><span class="number">60</span></span><br><span class="line"><span class="comment">--（6）统计选课人数低于3人且平均分低于80分的课程号</span></span><br><span class="line"><span class="keyword">select</span> cno <span class="keyword">as</span> 课程号</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">&lt;</span> <span class="number">3</span> <span class="keyword">and</span> <span class="built_in">AVG</span>(Gmark) <span class="operator">&lt;</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--（7）统计80分（含）以上成绩最多的学生学号</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">1</span> sno <span class="keyword">as</span>  学号,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 成绩数量</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">where</span> gmark <span class="operator">&gt;=</span> <span class="number">80</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 成绩数量 <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（8）显示”李勇”同学所选课程的课程号和成绩</span></span><br><span class="line"><span class="keyword">select</span> cno <span class="keyword">as</span> 课程号,</span><br><span class="line">gmark <span class="keyword">as</span> 成绩</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">where</span> sno <span class="operator">=</span> (<span class="keyword">select</span> sno <span class="keyword">from</span> Student <span class="keyword">where</span> Sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> cno <span class="keyword">as</span> 课程号,</span><br><span class="line">gmark <span class="keyword">as</span> 成绩</span><br><span class="line"><span class="keyword">from</span> grade <span class="keyword">join</span> student <span class="keyword">on</span> grade.Sno<span class="operator">=</span>student.Sno</span><br><span class="line"><span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--使用GradeManager数据库完成下面操作</span></span><br><span class="line"><span class="comment">--（1）查询学生“李勇”选修的课程号</span></span><br><span class="line"><span class="keyword">select</span> cno</span><br><span class="line"><span class="keyword">from</span> grade g <span class="keyword">join</span> student s <span class="keyword">on</span> g.Sno <span class="operator">=</span> s.sno</span><br><span class="line"><span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span></span><br><span class="line"><span class="comment">--（2）查询学生“李勇”选修课程的平均分</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(gmark)<span class="string">&#x27;平均分&#x27;</span></span><br><span class="line"><span class="keyword">from</span> grade g <span class="keyword">join</span> Student s <span class="keyword">on</span> s.Sno <span class="operator">=</span> g.Sno</span><br><span class="line"><span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）查询成绩大于80分的学生的姓名</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> sname</span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno <span class="operator">=</span> g.sno</span><br><span class="line"><span class="keyword">where</span> Gmark<span class="operator">&gt;</span><span class="number">80</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（4）查询没有一门考试科目成绩低于70分的学生的姓名</span></span><br><span class="line"><span class="keyword">select</span> sname </span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno<span class="operator">=</span>g.Sno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sno,sname</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">min</span>(gmark)<span class="operator">&gt;=</span><span class="number">70</span></span><br><span class="line"><span class="comment">--（5）查询选了课的每位同学的总学分，显示学号和总学分</span></span><br><span class="line"><span class="keyword">select</span> sno,<span class="built_in">sum</span>(credit)<span class="string">&#x27;总学分&#x27;</span></span><br><span class="line"><span class="keyword">from</span> Course c <span class="keyword">join</span> Grade g <span class="keyword">on</span> c.cno<span class="operator">=</span>g.cno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Sno</span><br><span class="line"><span class="comment">--（6）查询选课人数最多的课程号、课程名</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">1</span>  c.cno ,c.cname</span><br><span class="line"><span class="keyword">from</span> grade g</span><br><span class="line"><span class="keyword">join</span> Course c <span class="keyword">on</span> g.Cno <span class="operator">=</span> c.Cno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> c.cno,c.Cname</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">count</span>(g.cno) <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（7）查询选课人数超过2人且平均分高于75分的课程号、课程名</span></span><br><span class="line"><span class="keyword">select</span> c.cno,cname</span><br><span class="line"><span class="keyword">from</span> grade g <span class="keyword">join</span> course c <span class="keyword">on</span> c.Cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> c.Cno,</span><br><span class="line">Cname</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">2</span> <span class="keyword">and</span> <span class="built_in">AVG</span>(Gmark) <span class="operator">&gt;</span><span class="number">75</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（8）查询所有学生的选课号和成绩。</span></span><br><span class="line"><span class="keyword">select</span> cno,gmark</span><br><span class="line"><span class="keyword">from</span> grade g <span class="keyword">right</span> <span class="keyword">join</span> Student s <span class="keyword">on</span> g.sno <span class="operator">=</span> s.sno</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    g.Sno, </span><br><span class="line">    g.Cno, </span><br><span class="line">    g.Gmark</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">    Grade g;</span><br><span class="line"></span><br><span class="line"><span class="comment">--(子)查询选修了数据库和离散数学课程的同学信息，显示学生学号、姓名。</span></span><br><span class="line"><span class="keyword">select</span> g1.sno</span><br><span class="line"><span class="keyword">from</span> Grade g1</span><br><span class="line"><span class="keyword">join</span> Course c1 <span class="keyword">on</span> g1.Cno <span class="operator">=</span> c1.Cno</span><br><span class="line"><span class="keyword">join</span> grade g2 <span class="keyword">on</span> g1.sno <span class="operator">=</span> g2.Sno</span><br><span class="line"><span class="keyword">join</span> Course c2 <span class="keyword">on</span> g2.Cno <span class="operator">=</span> c2.Cno</span><br><span class="line"><span class="keyword">where</span> c1.Cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span></span><br><span class="line"><span class="keyword">and</span> c2.Cname <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> g1.Sno</span><br><span class="line"><span class="keyword">having</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span></span><br><span class="line">(<span class="keyword">select</span> top <span class="number">2</span> s.sno,sname,cname,gmark</span><br><span class="line"><span class="keyword">from</span> grade g <span class="keyword">join</span> student s <span class="keyword">on</span> s.sno <span class="operator">=</span> g.Sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">where</span> cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> gmark <span class="keyword">desc</span>) <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">2</span> s.sno,sname,cname,gmark</span><br><span class="line"><span class="keyword">from</span> grade g <span class="keyword">join</span> student s <span class="keyword">on</span> s.sno <span class="operator">=</span> g.Sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">where</span> cname <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> gmark <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> s.sno,sname</span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno <span class="operator">=</span> g.sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">where</span> cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span> <span class="keyword">or</span> cname <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> s.sno,sname</span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno <span class="operator">=</span> g.sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">where</span> cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span> <span class="keyword">or</span> cname <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> s.sno,sname</span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno <span class="operator">=</span> g.sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">where</span> cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span>  <span class="keyword">and</span> s.sno <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> sno</span><br><span class="line"><span class="keyword">from</span>  grade g <span class="keyword">join</span> course c <span class="keyword">on</span> c.cno <span class="operator">=</span> g.Cno</span><br><span class="line"><span class="keyword">where</span>  cname <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--自我练习</span></span><br><span class="line"><span class="comment">--（1）查看全部选课信息，显示学生姓名、课程名、成绩</span></span><br><span class="line"><span class="keyword">select</span> sname,cname,gmark</span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno <span class="operator">=</span> g.Sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno<span class="operator">=</span>g.Cno</span><br><span class="line"><span class="comment">--（2）查看所有学生的选课情况，显示学生姓名、课程名、成绩</span></span><br><span class="line"><span class="keyword">select</span> s.sname,</span><br><span class="line">c.cname,</span><br><span class="line">g.gmark</span><br><span class="line"><span class="keyword">from</span> grade g</span><br><span class="line"><span class="keyword">join</span> Student s <span class="keyword">on</span> g.Sno <span class="operator">=</span> s.Sno</span><br><span class="line"><span class="keyword">join</span> Course c <span class="keyword">on</span> g.Cno <span class="operator">=</span> c.Cno</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> s.sname,</span><br><span class="line">c.cname,</span><br><span class="line">g.gmark</span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">left</span> <span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno<span class="operator">=</span>g.sno</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> course c <span class="keyword">on</span> c.Cno <span class="operator">=</span> g.Cno</span><br><span class="line"><span class="comment">--（3）查看所有课程的选课人数，显示课程名、选课人数</span></span><br><span class="line"><span class="keyword">SELECT</span> c.Cname <span class="keyword">AS</span> 课程名, <span class="built_in">COUNT</span>(g.Sno) <span class="keyword">AS</span> 选课人数</span><br><span class="line"><span class="keyword">FROM</span> Course c</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> Grade g <span class="keyword">ON</span> c.Cno <span class="operator">=</span> g.Cno</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> c.Cname;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> c.cname <span class="keyword">as</span> 课程名,</span><br><span class="line"><span class="built_in">count</span>(g.sno) <span class="keyword">as</span> 选课人数</span><br><span class="line"><span class="keyword">from</span> Course c</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Grade g <span class="keyword">on</span> c.cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> c.Cname</span><br><span class="line"></span><br><span class="line"><span class="comment">--（4）查看所有学生的选课总学分，显示学生姓名、总学分</span></span><br><span class="line"><span class="keyword">select</span> sname <span class="keyword">as</span> 学生姓名,</span><br><span class="line">isnull(<span class="built_in">SUM</span>(c.Credit), <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Course c</span><br><span class="line"><span class="keyword">join</span> grade g <span class="keyword">on</span> c.cno <span class="operator">=</span> g.Cno</span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span> Student s  <span class="keyword">on</span> s.Sno <span class="operator">=</span> g.Sno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sno,sname</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="子查询和高级数据操作"><a href="#子查询和高级数据操作" class="headerlink" title="子查询和高级数据操作"></a>子查询和高级数据操作</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--使用GradeManger数据库完成下面操作</span></span><br><span class="line"><span class="comment">--（1）查询李勇的成绩</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> gmark</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">where</span> sno <span class="operator">=</span>(</span><br><span class="line"><span class="keyword">select</span> sno</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--（2）查询参加了两次考试以上的学生姓名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sname <span class="keyword">from</span> Student <span class="keyword">where</span> sno <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> Sno</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(Gmark) <span class="operator">&gt;=</span> <span class="number">2</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）查询没有参加任何一门考试的学生姓名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sname <span class="keyword">from</span> Student <span class="keyword">where</span> sno <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> Sno</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(Gmark) <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sname <span class="keyword">from</span> Student <span class="keyword">where</span> sno <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> Sno</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(Gmark) <span class="operator">!=</span> <span class="number">0</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--（4）查询王一鸣高于其所有课程平均分的那些课程的课程名和成绩</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> cno,gmark</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">where</span> sno <span class="operator">=</span>(</span><br><span class="line"><span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;王一鸣&#x27;</span>)</span><br><span class="line"><span class="keyword">and</span> Gmark <span class="operator">&gt;</span></span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">AVG</span>(gmark)</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">where</span> sno <span class="operator">=</span>(</span><br><span class="line"><span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;王一鸣&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> cname,gmark</span><br><span class="line"><span class="keyword">from</span> course c <span class="keyword">join</span></span><br><span class="line">(<span class="keyword">select</span> cno,gmark</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">where</span> sno<span class="operator">=</span>(<span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> sname<span class="operator">=</span><span class="string">&#x27;王一鸣&#x27;</span>)</span><br><span class="line"><span class="keyword">and</span> gmark<span class="operator">&gt;</span></span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">avg</span>(gmark)</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">where</span> sno<span class="operator">=</span>(<span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> sname<span class="operator">=</span><span class="string">&#x27;王一鸣&#x27;</span>))) <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">on</span> c.cno<span class="operator">=</span>t.cno</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（5）查询王一鸣高于其所选课程平均分的那些课程的课程名和成绩</span></span><br><span class="line"><span class="keyword">select</span> cname,gmark</span><br><span class="line"><span class="keyword">from</span> course c <span class="keyword">join</span> </span><br><span class="line">(<span class="keyword">select</span> cno,gmark</span><br><span class="line"><span class="keyword">from</span> Grade g1</span><br><span class="line"><span class="keyword">where</span> sno <span class="operator">=</span>  (<span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;王一鸣&#x27;</span>)</span><br><span class="line"><span class="keyword">and</span> gmark <span class="operator">&gt;</span></span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">avg</span>(gmark)</span><br><span class="line"><span class="keyword">from</span> grade g2</span><br><span class="line"><span class="keyword">where</span> g2.cno <span class="operator">=</span> g1.cno )) <span class="keyword">as</span> t </span><br><span class="line"><span class="keyword">on</span> c.cno <span class="operator">=</span> t.cno</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--数据高级操作练习</span></span><br><span class="line"><span class="comment">--（1）将李勇的数据库课程的成绩上调5分。</span></span><br><span class="line"><span class="keyword">update</span> grade</span><br><span class="line"><span class="keyword">set</span> gmark <span class="operator">=</span>  gmark <span class="operator">+</span><span class="number">5</span></span><br><span class="line"><span class="keyword">where</span> sno <span class="operator">=</span> </span><br><span class="line">(<span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span>)</span><br><span class="line"><span class="keyword">and</span> cno <span class="operator">=</span> (<span class="keyword">select</span> cno <span class="keyword">from</span> course <span class="keyword">where</span> cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（2）将没有一门考试不及格的学生的各门课成绩上调5分。</span></span><br><span class="line"><span class="keyword">update</span> grade</span><br><span class="line"><span class="keyword">set</span> gmark <span class="operator">=</span>  gmark <span class="operator">+</span><span class="number">0</span></span><br><span class="line"><span class="keyword">where</span> sno <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> sno <span class="keyword">from</span> grade  <span class="keyword">group</span> <span class="keyword">by</span> sno <span class="keyword">having</span> <span class="built_in">min</span>(gmark) <span class="operator">&gt;=</span><span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）将01311班的班长更改为贾向东</span></span><br><span class="line"><span class="keyword">update</span> class</span><br><span class="line"><span class="keyword">set</span> monitor <span class="operator">=</span> (</span><br><span class="line"><span class="keyword">select</span> sno <span class="keyword">from</span> Student <span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;贾向东&#x27;</span>)</span><br><span class="line"><span class="keyword">where</span> clno <span class="operator">=</span> <span class="number">01311</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(price) <span class="keyword">from</span> titles </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> price,price<span class="operator">-</span>(<span class="keyword">select</span> <span class="built_in">avg</span>(price) <span class="keyword">from</span> titles )</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">where</span> title_id <span class="operator">=</span> <span class="string">&#x27;BU1111&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> title</span><br><span class="line"><span class="keyword">from</span> titles t <span class="keyword">join</span> sales s <span class="keyword">on</span> t.title_id <span class="operator">=</span> s.title_id</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">year</span>(ord_date) <span class="operator">=</span> <span class="number">1993</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> title <span class="keyword">from</span> titles <span class="keyword">where</span> title_id <span class="keyword">in</span>(</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> title_id</span><br><span class="line"><span class="keyword">from</span> sales</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">year</span>(ord_date) <span class="operator">=</span> <span class="number">1993</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="视图和存储过程"><a href="#视图和存储过程" class="headerlink" title="视图和存储过程"></a>视图和存储过程</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--视图练习</span></span><br><span class="line"><span class="comment">--使用GradeManger数据库，完成下面操作</span></span><br><span class="line"><span class="comment">--（1）建立00312班选了数据库课程并且成绩不及格的学生信息视图Stu_cs(包括学生学号、姓名、性别、成绩)</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> Stu_cs <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> s.sno <span class="keyword">as</span> 学号,</span><br><span class="line">s.sname <span class="keyword">as</span> 姓名,</span><br><span class="line">s.ssex <span class="keyword">as</span> 性别,</span><br><span class="line">g.gmark <span class="keyword">as</span> 成绩</span><br><span class="line"><span class="keyword">from</span> Student s <span class="keyword">join</span> Grade G <span class="keyword">on</span> S.sno <span class="operator">=</span> g.sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> g.cno <span class="operator">=</span> c.Cno</span><br><span class="line"><span class="keyword">where</span> s.clno <span class="operator">=</span> <span class="string">&#x27;00312&#x27;</span></span><br><span class="line"><span class="keyword">and</span> c.cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span></span><br><span class="line"><span class="keyword">and</span> g.gmark <span class="operator">&lt;</span> <span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">exec</span> sp_help <span class="string">&#x27;Stu_cs&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--（2）查询00312班选了数据库课程并且成绩不及格的学生的学号、姓名</span></span><br><span class="line"><span class="keyword">select</span> s.sno <span class="keyword">as</span> 学号,</span><br><span class="line">s.sname <span class="keyword">as</span> 姓名</span><br><span class="line"><span class="keyword">from</span> Student s</span><br><span class="line"><span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno <span class="operator">=</span> g.sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> G.cno <span class="operator">=</span> c.cno</span><br><span class="line"><span class="keyword">where</span> s.clno <span class="operator">=</span> <span class="string">&#x27;00312&#x27;</span></span><br><span class="line"><span class="keyword">and</span> c.cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span></span><br><span class="line"><span class="keyword">and</span> g.gmark <span class="operator">&lt;</span><span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> 学号,姓名 <span class="keyword">from</span> Stu_cs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--查00312班，学生学号和选课数</span></span><br><span class="line"><span class="keyword">create</span> proc up_XK</span><br><span class="line"><span class="variable">@clno</span> <span class="type">char</span>(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> s.sno,<span class="built_in">count</span>(cno)选课数</span><br><span class="line"><span class="keyword">from</span> grade g <span class="keyword">join</span> student s <span class="keyword">on</span> g.sno<span class="operator">=</span>s.sno</span><br><span class="line"><span class="keyword">where</span> clno<span class="operator">=</span><span class="variable">@clno</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sno</span><br><span class="line"></span><br><span class="line"><span class="keyword">exec</span> up_XK <span class="string">&#x27;01311&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）创建视图vw_XK，查看所有学生的选课数，显示学生学号、姓名和选课数</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> vw_XK <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> s.sno <span class="keyword">as</span> 学号,</span><br><span class="line">s.sname <span class="keyword">as</span> 姓名,</span><br><span class="line"><span class="built_in">count</span>(G.cno) <span class="keyword">as</span> 选课数</span><br><span class="line"><span class="keyword">from</span> Student S</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Grade G <span class="keyword">on</span> s.sno <span class="operator">=</span> g.sno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sno, s.sname</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> vw_XK</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（4）创建视图vw_01311，查询01311班的学生信息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">view</span> vw_01311 <span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> s.sno <span class="keyword">as</span> 学号,</span><br><span class="line">s.sname <span class="keyword">as</span> 姓名,</span><br><span class="line">s.ssex <span class="keyword">as</span> 性别,</span><br><span class="line">s.sage <span class="keyword">as</span> 年龄,</span><br><span class="line">s.Clno <span class="keyword">as</span> 班级号</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> vw_01311 <span class="keyword">where</span> 班级号 <span class="operator">=</span> <span class="string">&#x27;01311&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Stu_cs</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> vw_XK</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--存储过程练习</span></span><br><span class="line"><span class="comment">--（1）根据学号，得到该学号的选课情况，包括课程名和成绩 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> GetCourseInfoBySno</span><br><span class="line">    <span class="variable">@student_id</span> <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span> C.Cname, G.Gmark</span><br><span class="line">    <span class="keyword">FROM</span> Grade G</span><br><span class="line">    <span class="keyword">JOIN</span> Course C <span class="keyword">ON</span> G.Cno <span class="operator">=</span> C.Cno</span><br><span class="line">    <span class="keyword">WHERE</span> G.Sno <span class="operator">=</span> <span class="variable">@student_id</span>;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> proc up_xkBySno</span><br><span class="line"><span class="variable">@sno</span> <span class="type">char</span>(<span class="number">7</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> cname,gmark</span><br><span class="line"><span class="keyword">from</span> course c <span class="keyword">join</span> grade g <span class="keyword">on</span> c.cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">where</span> sno<span class="operator">=</span><span class="variable">@sno</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">exec</span> up_xkBySno <span class="string">&#x27;2000101&#x27;</span></span><br><span class="line"><span class="comment">--（2）根据学号、课程号，得到该学生该课程的成绩</span></span><br><span class="line"><span class="keyword">create</span> proc up_CJbYNo</span><br><span class="line"><span class="variable">@sno</span> <span class="type">char</span>(<span class="number">7</span>),</span><br><span class="line"><span class="variable">@cno</span> <span class="type">char</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> gmark <span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">where</span> sno <span class="operator">=</span> <span class="variable">@sno</span></span><br><span class="line"><span class="keyword">and</span> cno <span class="operator">=</span> <span class="variable">@cno</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">exec</span> up_CJbYNo <span class="string">&#x27;2000101&#x27;</span>,<span class="string">&#x27;1&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）根据班级号，查询该系每位学生总学分，显示学号、姓名、总学分</span></span><br><span class="line"><span class="keyword">create</span> proc up_SumXF</span><br><span class="line"><span class="variable">@clno</span> <span class="type">char</span>(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> s.sno,sname,<span class="built_in">sum</span>(Credit) 总学分</span><br><span class="line"><span class="keyword">from</span> Student  s  </span><br><span class="line"><span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">join</span> Course c  <span class="keyword">on</span> c.cno <span class="operator">=</span> g.Cno</span><br><span class="line"><span class="keyword">where</span> clno <span class="operator">=</span> <span class="variable">@clno</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.Sno,Sname</span><br><span class="line"></span><br><span class="line"><span class="keyword">exec</span> up_SumXF <span class="string">&#x27;01311&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--（4）根据学生学号、课程号，修改该生该课程成绩为新的成绩</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> proc up_Updatecj</span><br><span class="line"><span class="variable">@sno</span> <span class="type">char</span>(<span class="number">7</span>),<span class="variable">@cno</span> <span class="type">char</span>(<span class="number">1</span>),<span class="variable">@newgmark</span> <span class="type">decimal</span>(<span class="number">4</span>,<span class="number">1</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">update</span> grade</span><br><span class="line"><span class="keyword">set</span> gmark<span class="operator">=</span><span class="variable">@newgmark</span></span><br><span class="line"><span class="keyword">where</span> sno<span class="operator">=</span><span class="variable">@sno</span> <span class="keyword">and</span> cno<span class="operator">=</span><span class="variable">@cno</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">exec</span> up_Updatecj <span class="string">&#x27;2000101&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="number">100</span></span><br><span class="line"><span class="keyword">exec</span> up_cjbyno<span class="string">&#x27;2000101&#x27;</span>,<span class="string">&#x27;1&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="知识点复习"><a href="#知识点复习" class="headerlink" title="知识点复习"></a>知识点复习</h2><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/f0a7fb8eecd9c6e277499eb05cc0eba.jpg" alt="f0a7fb8eecd9c6e277499eb05cc0eba"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/ccb6d95adc6d4f2df5a238437177f6b.jpg" alt="ccb6d95adc6d4f2df5a238437177f6b"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;数据库（基于SQL-Server）&quot;&gt;&lt;a href=&quot;#数据库（基于SQL-Server）&quot; class=&quot;headerlink&quot; title=&quot;数据库（基于SQL Server）&quot;&gt;&lt;/a&gt;数据库（基于SQL Server）&lt;/h1&gt;&lt;h2 id=&quot;T-SQL</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/posts/4a17b156.html"/>
    <id>http://example.com/posts/4a17b156.html</id>
    <published>2023-10-02T23:53:58.000Z</published>
    <updated>2024-12-07T10:52:39.217Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://site.shupianjun.fun/">薯片の前端小窝</a></p><p>上面的蓝字是一个神奇的传送门，你可以试试看点击一下</p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://site.shupianjun.fun/&quot;&gt;薯片の前端小窝&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上面的蓝字是一个神奇的传送门，你可以试试看点击一下&lt;/p&gt;
&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>吉他自学成长记录</title>
    <link href="http://example.com/posts/1564132a.html"/>
    <id>http://example.com/posts/1564132a.html</id>
    <published>2022-10-03T23:53:58.000Z</published>
    <updated>2024-12-07T11:35:27.569Z</updated>
    
    <content type="html"><![CDATA[<h2 id="这里记录吉他自学生涯，按照时间线发布"><a href="#这里记录吉他自学生涯，按照时间线发布" class="headerlink" title="这里记录吉他自学生涯，按照时间线发布"></a>这里记录吉他自学生涯，按照时间线发布</h2><h2 id="《I-Really-want-to-stay-at-your-house》"><a href="#《I-Really-want-to-stay-at-your-house》" class="headerlink" title="《I Really want to stay at  your house》"></a>《I Really want to stay at  your house》</h2><p>又名寡妇歌</p><p>2023-02-10，看完边缘行者之后，辗转反侧，起身拿起吉他，在屋外录下了这一段</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1FG4y1M743/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《龙卷风》"><a href="#《龙卷风》" class="headerlink" title="《龙卷风》"></a>《龙卷风》</h2><p>原告：周杰伦<br>买早饭的时候看到了不错的风景，有感而发回去录的。<br>有一说一水杉路的锅贴真是一绝。</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1d94y1Y7Bz/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《一路向北-》"><a href="#《一路向北-》" class="headerlink" title="《一路向北 》"></a>《一路向北 》</h2><p>原告:周杰伦<br>不要问为什么不唱，我学吉他第一节课第一次弹唱第一次张嘴之后，老师就告诉我我生来就是干指弹的，干不了弹唱。</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1C94y1x7AT/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《Flower-Dance》"><a href="#《Flower-Dance》" class="headerlink" title="《Flower Dance》"></a>《Flower Dance》</h2><p>薯片吉他生涯前半生的集大成之作<br>第一段可能还只是感情的沉淀<br>第二段开始的变调直接变成了纯粹的秀技</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1tT4y1h7w4/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《sprial》"><a href="#《sprial》" class="headerlink" title="《sprial》"></a>《sprial》</h2><p>第一次尝试vlog形式，明白了vlog是整不好剪</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1yzqVY5EcP/?vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《花の塔》"><a href="#《花の塔》" class="headerlink" title="《花の塔》"></a>《花の塔》</h2><p>永远怀念穿蓝色雨衣的少女</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV18kD6YPE26/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;这里记录吉他自学生涯，按照时间线发布&quot;&gt;&lt;a href=&quot;#这里记录吉他自学生涯，按照时间线发布&quot; class=&quot;headerlink&quot; title=&quot;这里记录吉他自学生涯，按照时间线发布&quot;&gt;&lt;/a&gt;这里记录吉他自学生涯，按照时间线发布&lt;/h2&gt;&lt;h2 id=&quot;《</summary>
      
    
    
    
    
  </entry>
  
</feed>

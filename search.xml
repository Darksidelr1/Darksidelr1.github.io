<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>安卓开发学习笔记</title>
      <link href="/posts/43db8671.html"/>
      <url>/posts/43db8671.html</url>
      
        <content type="html"><![CDATA[<h1 id="安卓开发学习笔记"><a href="#安卓开发学习笔记" class="headerlink" title="安卓开发学习笔记"></a>安卓开发学习笔记</h1><h2 id="基础部分"><a href="#基础部分" class="headerlink" title="基础部分"></a>基础部分</h2><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>创建项目的时候先选择模板，不同的模板会有不同的预设。<br>这是google官方写的几个模板。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250303100208984.png" alt="image-20250303100208984"></p><p>其中特别要说的是，如果选的是这个empty activity，就只能使用kotlin语言</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250303100625435.png" alt="image-20250303100625435"></p><p>在学校推荐使用如下模板，因为可以切换语言<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250303100934809.png" alt="image-20250303100934809"></p><h3 id="安卓项目目录结构"><a href="#安卓项目目录结构" class="headerlink" title="安卓项目目录结构"></a>安卓项目目录结构</h3><p>.gradle和.idea是编译后生成的文件，编译后自动生成，一般情况下不需要去动。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250303105058053.png" alt="image-20250303105058053"></p><p>gradle文件夹 主要就是配置gradle的版本。<br>首先他会寻找本地是否有该gradle版本，如果没有的话就回去网络上下载。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250303200829668.png" alt="image-20250303200829668"></p><p>app是我们的主要战场，基本上的开发都是在这个目录下面进行的。</p><p>上面其实说的非常不清晰，但是下面我们切换到安卓模式重新认识一次<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250304082514386.png" alt="image-20250304082514386"></p><p>直接来看这个列表，首先最上面的manifest是整个项目的一些配置文件，java下面第一个文件夹是我们写的所有java文件<br>下面两个test文件夹都是用于编写测试用例的<br>再往下是自动生成的java文件夹 ，估计是jvm虚拟机的编译产物，所以也先不用管。再往下layout存储的是页面资源，类似前端页面。然后其他的都是一些配置文件，之后在使用的过程中用到再慢慢了解。<br>gradle整体是一个对软件编译打包的套件，不太需要去了解具体的运行原理。</p><h1 id="实战项目开发"><a href="#实战项目开发" class="headerlink" title="实战项目开发"></a>实战项目开发</h1><p>对自己的java水平自视甚高<br>直接实战，就是傲慢</p><h2 id="记事本"><a href="#记事本" class="headerlink" title="记事本"></a>记事本</h2><p>实现一个带提醒功能的记事本</p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li>笔记列表</li><li>提醒模式（定时提醒的笔记）</li><li>黑夜模式</li><li>时间倒序</li><li>按钮外观颜色自定义</li><li>笔记格式部分自定义</li><li>搜索功能</li></ul><h2 id="适合范围"><a href="#适合范围" class="headerlink" title="适合范围"></a>适合范围</h2><p>了解安卓四大组件：Activity,Service,Content Provider,BroadcastReceiver广播接收器 至少了解其中三个<br>熟悉java ,了解OOP<br>至少使用过Android Studio新手教程，创建过Hello World项目<br>想要开发一款安卓应用</p><h2 id="实操"><a href="#实操" class="headerlink" title="实操"></a>实操</h2><p>关于创建应用和架构以及组件的部分不赘述</p><h3 id="编辑笔记功能"><a href="#编辑笔记功能" class="headerlink" title="编辑笔记功能"></a>编辑笔记功能</h3><h4 id="修改主页面页面"><a href="#修改主页面页面" class="headerlink" title="修改主页面页面"></a>修改主页面页面</h4><p>首先作为记事本，最重要的就是编辑笔记的功能。实现这个功能，首先我们需要一个编辑笔记的页面，然后在java中完成交互。</p><p>添加mainifest文件<br>所有要显示出来的activity文件都需要加入manifest<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250304202507851.png" alt="image-20250304202507851"></p><p>加入如图所示24行代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.EditActivity&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后我们要实现浮动布局，加入浮动的小圆球实现跳转<br>如果要实现这个浮动小圆球。就一定不能使用容器布局，因为浮动圆球不能随着页面移动，必须浮在页面上方。<br>这里我们要用到一个相对布局 relativeLayout<br>修改完了在主界面搜索FloatingActionButton 然后加入一个浮标<br>然后再主界面xml里面加入图标的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">activity_main.xml</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/main&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Hello World!&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerInParent</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.google.android.material.floatingactionbutton.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/floatingActionButton&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentEnd</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;9dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;43dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:clickable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:contentDescription</span>=<span class="string">&quot;@string/fab_description&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:srcCompat</span>=<span class="string">&quot;@drawable/baseline_add_24&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后还需要给他加一个icon<br>在下图的位置</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250304210415779.png" alt="image-20250304210415779"></p><p>然后在上面的xml中引入（代码中已经引入）<br>这个设置是看不到的，仅仅只是定位用（我猜的）</p><p>这里还是有几个警告其中第一个是namespace未使用 这个之后会用到，先不管他，第二个是说你没有照顾到盲人，难道我开发一个记事本备忘录应用我还要去照顾到盲人，盲人难道不用盲文，不用语音备忘录来用盲文吗？到时候销量排行榜一结算，盲人得了MVP！躺赢狗！你健全的人就是躺赢狗！<img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250304211007815.png" alt="image-20250304211007815"></p><p>接下来基本的设置已经完成，我们可以看一下效果。<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250304210904392.png" alt="image-20250304210904392"></p><p>效果一切正常，点击也有样式，然后我们就需要为这个按钮添加点击事件，那么就来到了java的部分</p><h4 id="初始化点击事件"><a href="#初始化点击事件" class="headerlink" title="初始化点击事件"></a>初始化点击事件</h4><p>EditActivity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.selfstudy001;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.android.material.floatingactionbutton.FloatingActionButton;</span><br><span class="line"><span class="comment">/*和v4 v7版本一样 但是v4 v7等版本比较杂 x版本集成度比较高</span></span><br><span class="line"><span class="comment">* 所以选择了x*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EditActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    EditText et;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.edit_layout);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>MainActivity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.selfstudy001;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.android.material.floatingactionbutton.FloatingActionButton;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span><span class="comment">/*这个是安卓系统提供的一个基类*/</span> &#123;</span><br><span class="line"></span><br><span class="line">    FloatingActionButton btn1;<span class="comment">/*先把我们定义的浮标引入*/</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*这个onCreate的function是所有activity必须的*/</span></span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            btn1 = (FloatingActionButton)findViewById(R.id.fab);</span><br><span class="line">            btn1.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                   <span class="comment">/* Log.d(TAG, &quot;onClick: click&quot;);</span></span><br><span class="line"><span class="comment">                   通过这一行代码可以在logcat里面查看</span></span><br><span class="line"><span class="comment">                   点击事件是否正常触发 */</span></span><br><span class="line">                    <span class="comment">// 创建跳转到 EditActivity 的 Intent</span></span><br><span class="line">                    <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, EditActivity.class);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 使用 startActivities 方法传递 Intent 数组</span></span><br><span class="line">                    startActivities(<span class="keyword">new</span> <span class="title class_">Intent</span>[]&#123;intent&#125;);</span><br><span class="line">                    <span class="comment">/*上面两行代码主要实现跳转功能</span></span><br><span class="line"><span class="comment">                    * 这里intent相当于一个事件或者信号 后面的参数是从这个页面跳转到edit页面</span></span><br><span class="line"><span class="comment">                    * 然后下面是触发这个intent事件*/</span></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在上面这两个部分已经编辑好了<br>首先edit页面主要就是引入浮标。其他目前为止还没有什么功能。<br>mainactivict界面 首先是把btn引入 然后写了点击事件，实现跳转。</p><h4 id="插入文字组件"><a href="#插入文字组件" class="headerlink" title="插入文字组件"></a><strong>插入文字组件</strong></h4><p>edit_layout</p><p>在这里我们要编辑输入文本页面。相当于是加入一个可以编辑文字的组件，这个组件将作为记事本的核心。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;top&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">EditText</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="重设返回键"><a href="#重设返回键" class="headerlink" title="重设返回键"></a>重设返回键</h4><p>先防结果 在编辑界面编辑完之后按下返回键返回主页面 ，应用程序自动吧你输入的文字返回</p><p>下面是日志文件的截图<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250305091335961.png" alt="image-20250305091335961"></p><p>要达到这个效果 首先我们要修改主界面，具体的解析我都写在注释里面了<br>MainActivity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.selfstudy001;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.android.material.floatingactionbutton.FloatingActionButton;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span><span class="comment">/*这个是安卓系统提供的一个基类*/</span> &#123;</span><br><span class="line"></span><br><span class="line">    FloatingActionButton btn1;<span class="comment">/*先把我们定义的浮标引入*/</span></span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*这个onCreate的function是所有activity必须的*/</span></span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            btn1 = (FloatingActionButton)findViewById(R.id.fab);</span><br><span class="line">            btn1.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                   <span class="comment">/* Log.d(TAG, &quot;onClick: click&quot;);</span></span><br><span class="line"><span class="comment">                   通过这一行代码可以在logcat里面查看</span></span><br><span class="line"><span class="comment">                   点击事件是否正常触发 */</span></span><br><span class="line">                    <span class="comment">// 创建跳转到 EditActivity 的 Intent</span></span><br><span class="line">                    <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, EditActivity.class);</span><br><span class="line">                    <span class="comment">// 使用 startActivities 方法传递 Intent 数组</span></span><br><span class="line"><span class="comment">//                    startActivities(new Intent[]&#123;intent&#125;);</span></span><br><span class="line">                    <span class="comment">/*上面两行代码主要实现跳转功能</span></span><br><span class="line"><span class="comment">                    * 这里intent相当于一个事件或者信号 后面的参数是从这个页面跳转到edit页面</span></span><br><span class="line"><span class="comment">                    * 然后下面是触发这个intent事件*/</span></span><br><span class="line"></span><br><span class="line">                    startActivityForResult(intent,<span class="number">0</span>);</span><br><span class="line">                    <span class="comment">/*这个是启动活动获取结果 下面有一个警告是说这个未来会被弃用，但是我看了一下代替的东西一点也不比这个简单</span></span><br><span class="line"><span class="comment">                    * 所以我这里看看 能不能先凑合用了。</span></span><br><span class="line"><span class="comment">                    * 这个主要的作用就是传回返回值*/</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*这里相当于写了一个function来专门接收上面说的传回的数据*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(<span class="type">int</span> requestCode,<span class="type">int</span> resultCode,Intent data)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onActivityResult(requestCode,resultCode,data);</span><br><span class="line">        <span class="type">String</span> <span class="variable">edit</span> <span class="operator">=</span> data.getStringExtra(<span class="string">&quot;input&quot;</span>);</span><br><span class="line">        <span class="comment">/*这样如果我们传回的信息中有一个intent的信息的话我们就可以传到这个input里面*/</span></span><br><span class="line">        <span class="comment">/*获取edit的内容之后打印*/</span></span><br><span class="line">        Log.d(TAG,edit);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后我们要写EditActivity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.selfstudy001;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.android.material.floatingactionbutton.FloatingActionButton;</span><br><span class="line"><span class="comment">/*和v4 v7版本一样 但是v4 v7等版本比较杂 x版本集成度比较高</span></span><br><span class="line"><span class="comment">* 所以选择了x*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EditActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    EditText et;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*创建点击事件*/</span></span><br><span class="line">    <span class="comment">/*为该活动初始化界面并设置布局。*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.edit_layout);</span><br><span class="line">        et = findViewById(R.id.et);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*给返回键也创建一个结束事件*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onKeyDown</span><span class="params">(<span class="type">int</span> keyCode,KeyEvent event)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(keyCode == KeyEvent.KEYCODE_HOME)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_BACK)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/*这里的逻辑是如果使用返回键返回应用程序之外</span></span><br><span class="line"><span class="comment">            * 然后通过我们定义在main里面的函数接受信息*/</span></span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">            intent.putExtra(<span class="string">&quot;input&quot;</span>,et.getText().toString());</span><br><span class="line">            setResult(RESULT_OK,intent);</span><br><span class="line">            finish();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onKeyDown(keyCode,event);</span><br><span class="line">        <span class="comment">/*处理了按下返回键时的逻辑，获取用户输入的文本并传回主 Activity  */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这样通过java文件就实现了上面的功能，虽然看起来好像很简单但是修改bug 的过程很漫长。<br>总之到这一步我们实际上已经实现了点击悬浮按钮进入编辑页面和点击返回按钮记录编辑页面记录的东西两个部分的功能。</p><h3 id="数据库操作和笔记显示"><a href="#数据库操作和笔记显示" class="headerlink" title="数据库操作和笔记显示"></a>数据库操作和笔记显示</h3><h4 id="返回编辑结束的文本"><a href="#返回编辑结束的文本" class="headerlink" title="返回编辑结束的文本"></a>返回编辑结束的文本</h4><p>首先稍微修改了一下代码 达到了我现在在编辑页面编辑之后再返回到主页面，程序可以通过onActivityResult接受startActivityForResult的结果，然后替换helloworld的功能</p><p>效果：<br>首先在编辑页面输入123321 然后返回<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250305123733035.png" alt="image-20250305123733035"></p><p>主页面的helloworld被替换<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250305123748246.png" alt="image-20250305123748246"></p><p>实现代码</p><p>在mainactivity中修改</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(<span class="type">int</span> requestCode,<span class="type">int</span> resultCode,Intent data)</span>&#123;</span><br><span class="line">    <span class="built_in">super</span>.onActivityResult(requestCode,resultCode,data);</span><br><span class="line">    <span class="type">String</span> <span class="variable">edit</span> <span class="operator">=</span> data.getStringExtra(<span class="string">&quot;input&quot;</span>);</span><br><span class="line">    <span class="comment">/*这样如果我们传回的信息中有一个intent的信息的话我们就可以传到这个input里面*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*获取edit的内容之后打印*/</span></span><br><span class="line">    <span class="comment">//Log.d(TAG,edit); 测试时用 现在不用就先注释</span></span><br><span class="line">    <span class="comment">/*通过下面的代码可以实现把你在编辑页面的值*/</span></span><br><span class="line">    tv.setText(edit);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在mainxml里面修改</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">&quot;Hello World!&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_centerInParent</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>现在我们想要实现的功能是在手机屏幕的左上角按一条一条来区分，目前的代码只能实现显示一条，而且是显示在屏幕中央，不过显示位置可以通过在mainxml里面修改来实现。<br>    现在的主要逻辑是我们要不断的生成笔记并且输入笔记内容，然后我们需要按某种顺序把输入的笔记排列在屏幕上。<br>    然后屏幕肯定会被填满，我们需要实现一个屏幕长度无线 可以下拉滚动的效果，并且曾经输入过的笔记必须是可以随时重新编辑和修改的。</p><p>​    为了实现上述的效果 我们就需要引入一个记事本功能的核心</p><h4 id="ListView"><a href="#ListView" class="headerlink" title="ListView"></a><strong><u>ListView</u></strong></h4><p>相关的介绍可以自行百度，这里截一张图凑合一下</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250305124753321.png" alt="image-20250305124753321"></p><p>这张图就是非常只管的演示，这个lv的功能就是把你传入的信息一条一条排列（并且包括分割线）<br>总之通过这个就可以实现上面说的所有功能<br>然后他是如何实现的<br>列表的显示需要三个元素：<br>1、listview用来展示列表的view<br>2、适配器 用来吧数据映射到ListView上的中介<br>3、数据 具体的将被映射的字符串，图片，或者基本组件<br>所以我们现在首先要创建一个数据结构（一个类）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.selfstudy001;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Note</span> &#123;</span><br><span class="line"><span class="comment">/*说一下下面四个属性</span></span><br><span class="line"><span class="comment">* id是用来定位的，第一次传入的时候自动生成</span></span><br><span class="line"><span class="comment">* 后面如果要更改数据，就要通过id来定位到之前的数据</span></span><br><span class="line"><span class="comment">* 然后content是内容 就是备忘录笔记的正文部分</span></span><br><span class="line"><span class="comment">* time就是时间 分成创建时间和最后编辑的时间</span></span><br><span class="line"><span class="comment">* 如果只是获取创建时间的话很简单</span></span><br><span class="line"><span class="comment">* 但是如果要改成最后编辑时间的话很复杂 后面会不会做出来我们且看且说</span></span><br><span class="line"><span class="comment">* tag相当于给笔记分类 比如有的笔记可能是学习笔记 有的可能是账本*/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> String time;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> tag;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*下面写一下构造函数还有封装的getset方法 直接右键 启动！</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Note</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Note</span><span class="params">(String content, String time, <span class="type">int</span> tag)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.content = content;</span><br><span class="line">        <span class="built_in">this</span>.time = time;</span><br><span class="line">        <span class="built_in">this</span>.tag = tag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">long</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getContent</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setContent</span><span class="params">(String content)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTime</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> time;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTime</span><span class="params">(String time)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.time = time;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTag</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> tag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTag</span><span class="params">(<span class="type">int</span> tag)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.tag = tag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*下面重写了toString方法 时间用了切片的格式 主要是为了debug</span></span><br><span class="line"><span class="comment">    * 下面的toString获取的就是最后要显示的信息 内容（标题） +时间+文章id*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> content + <span class="string">&quot;\n&quot;</span> + time.substring(<span class="number">5</span>,<span class="number">16</span>) + <span class="string">&quot; &quot;</span> + id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>基本上的解析我都通过注释写在代码里了 所以现在也不赘述了。</p><p>接下来就到了我最讨厌的数据库环节了。</p><p>首先我们需要通过定义语句创建一个数据库（在这个安卓里面创建 不用连接mysql这些）</p><h4 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h4><p>NoteDatabase</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.selfstudy001;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteOpenHelper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NoteDatabase</span> <span class="keyword">extends</span> <span class="title class_">SQLiteOpenHelper</span> &#123;</span><br><span class="line">    <span class="comment">/*创建完之后发现一定要实现一个oncreat不然就是抽象的 就是上学期C++虚函数那块*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*下面先定义一些全局常量，唯一的作用就是方便后续命名和修改</span></span><br><span class="line"><span class="comment">    * 没有什么别的作用*/</span></span><br><span class="line">    <span class="comment">/*也可以换一种方式理解成我们定义数据库中的列名*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TABLE_NAME</span> <span class="operator">=</span> <span class="string">&quot;notes&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CONTENT</span> <span class="operator">=</span> <span class="string">&quot;content&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ID</span> <span class="operator">=</span> <span class="string">&quot;_id&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TIME</span> <span class="operator">=</span> <span class="string">&quot;time&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">MODE</span> <span class="operator">=</span> <span class="string">&quot;mode&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*SQLiteOpenHelper 类，并设置数据库的相关参数*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">NoteDatabase</span><span class="params">(Context context)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(context, TABLE_NAME, <span class="literal">null</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;<span class="comment">/*具体不了解 但是看到文档里是这样的格式我就写了具体原理不清楚*/</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(SQLiteDatabase db)</span> &#123;</span><br><span class="line">        <span class="comment">/*这个下面的db就是大家心心念念非常熟悉的sql语句了*/</span></span><br><span class="line">        <span class="comment">/*下面就是大家熟悉的创表语句了 不必多说</span></span><br><span class="line"><span class="comment">        * 哦 还是要多说一嘴 要把id定义成主键  想想id的作用</span></span><br><span class="line"><span class="comment">        * 然后时间和内容不为空这个肯定的</span></span><br><span class="line"><span class="comment">        * 然后最后那个mode就是对应tag*/</span></span><br><span class="line">        db.execSQL(<span class="string">&quot;CREATE TABLE &quot;</span> + TABLE_NAME</span><br><span class="line">                + <span class="string">&quot;(&quot;</span></span><br><span class="line">                + ID + <span class="string">&quot; INTEGER PRIMARY KEY AUTOINCREMENT,&quot;</span></span><br><span class="line">                + CONTENT + <span class="string">&quot; TEXT NOT NULL,&quot;</span></span><br><span class="line">                + TIME + <span class="string">&quot; TEXT NOT NULL,&quot;</span></span><br><span class="line">                + MODE + <span class="string">&quot; INTEGER DEFAULT 1)&quot;</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*这个function会检测你已有的版本 相当于会做版本匹配 内核其实是一个for循环 里面嵌套了一个switch</span></span><br><span class="line"><span class="comment">    * 如果版本不一致就会调用这个upgrade*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUpgrade</span><span class="params">(SQLiteDatabase db, <span class="type">int</span> oldVersion, <span class="type">int</span> newVersion)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面的代码主要是要负责管理数据库的创建和版本升级，这段代码说实话有很多细节其实不是很了解，都是去搜出来的，但是只要会用就算赢，老师问起来我直接放文档就行了应该。<br>简单来说<code>onCreate</code> 方法负责创建表，并定义了表的结构<br><code>onUpgrade</code> 方法用于处理数据库版本升级时的操作</p><h4 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h4><p>那么现在数据库初始化也有了，可以开始写数据库操作需要的代码了</p><p>CRUD.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.selfstudy001;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ContentValues;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.database.Cursor;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteOpenHelper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CRUD</span> &#123;</span><br><span class="line">    <span class="comment">/*下面的从名字就可以知道是帮助你操作数据库的</span></span><br><span class="line"><span class="comment">    * 说白了就是数据操作*/</span></span><br><span class="line">    SQLiteOpenHelper dbHandler;</span><br><span class="line">    <span class="comment">/*下面的SQLiteDatabase是用来初始化和定义数据库*/</span></span><br><span class="line">    SQLiteDatabase db;</span><br><span class="line"><span class="comment">/*在这两个定义完了之后正常导包就行*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] columns = &#123;</span><br><span class="line">            NoteDatabase.ID,</span><br><span class="line">            NoteDatabase.CONTENT,</span><br><span class="line">            NoteDatabase.TIME,</span><br><span class="line">            NoteDatabase.MODE</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*孩子们我写完定义语句回来了 现在再来一个构造函数</span></span><br><span class="line"><span class="comment">    * 下面其实就是初始化一个刚才写的创建语句 相当于创建了数据库*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CRUD</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        dbHandler = <span class="keyword">new</span> <span class="title class_">NoteDatabase</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*然后下面通过open和close来控制数据库写入模式的开关*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">open</span><span class="params">()</span>&#123;</span><br><span class="line">        db = dbHandler.getWritableDatabase();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span>&#123;</span><br><span class="line">        dbHandler.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*孩子们，接下来就是本次项目的核心了 添加笔记功能，终于要来了。*/</span></span><br><span class="line">    <span class="keyword">public</span> Note <span class="title function_">addNote</span><span class="params">(Note note)</span>&#123;</span><br><span class="line">        <span class="comment">//这个contentvalues就是安卓四大组件其中之一</span></span><br><span class="line">        <span class="comment">/*这个cv就是一个专门处理数据的一个类 然后对它进行初始化。*/</span></span><br><span class="line">        <span class="type">ContentValues</span> <span class="variable">contentValues</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">        contentValues.put(NoteDatabase.CONTENT, note.getContent());</span><br><span class="line">        contentValues.put(NoteDatabase.TIME, note.getTime());</span><br><span class="line">        contentValues.put(NoteDatabase.MODE, note.getTag());</span><br><span class="line">        <span class="type">long</span> <span class="variable">insertId</span> <span class="operator">=</span> db.insert(NoteDatabase.TABLE_NAME, <span class="literal">null</span>, contentValues);</span><br><span class="line">        note.setId(insertId);</span><br><span class="line">        <span class="keyword">return</span> note;</span><br><span class="line">        <span class="comment">/*解析一下这行代码 我们刚才写了一个note类 然后这里调用这个构造方法的时候需要传入这个note类</span></span><br><span class="line"><span class="comment">        * 然后在传入的note类中获取上面的数据，然后insert那一行是一个内置的方式</span></span><br><span class="line"><span class="comment">        * 插入一行信息返回一个long值 然后我们把这个long值再拿来当做id 最后再把完整的note返回*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*下面的代码直接长话短说 上面我们已经有了id的基本概念，然后下面我们就可以通过这个id来获得note的信息</span></span><br><span class="line"><span class="comment">    * 简单来说下面的代码就是这个功能*/</span></span><br><span class="line">    <span class="keyword">public</span> Note <span class="title function_">getNote</span><span class="params">(<span class="type">long</span> id)</span>&#123;</span><br><span class="line">        <span class="comment">//孩子们 java也有自己的指针了</span></span><br><span class="line">        <span class="comment">/*这部分完全死记硬背 */</span></span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">cursor</span> <span class="operator">=</span> db.query(NoteDatabase.TABLE_NAME, columns, NoteDatabase.ID + <span class="string">&quot;=?&quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;String.valueOf(id)&#125;, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">/*如果找到这个note就用新值去覆盖</span></span><br><span class="line"><span class="comment">        * 相关知识点：潜拷贝*/</span></span><br><span class="line">        <span class="keyword">if</span> (cursor != <span class="literal">null</span>) cursor.moveToFirst();</span><br><span class="line">        <span class="type">Note</span> <span class="variable">e</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Note</span>(cursor.getString(<span class="number">1</span>), cursor.getString(<span class="number">2</span>), cursor.getInt(<span class="number">3</span>));</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*下面代码意思是再调用上面添加方法的时候我们其实在不断往list里面加数据</span></span><br><span class="line"><span class="comment">    然后我们返回所有的list 相当于查全部的功能或者说遍历*/</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Note&gt; <span class="title function_">getAllNotes</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">cursor</span> <span class="operator">=</span> db.query(NoteDatabase.TABLE_NAME, columns, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line"><span class="comment">/*这里原代码报错 我自己修改了一下代码*/</span></span><br><span class="line">        List&lt;Note&gt; notes = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (cursor.getCount() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span> (cursor.moveToNext()) &#123;</span><br><span class="line">                <span class="type">Note</span> <span class="variable">note</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Note</span>();</span><br><span class="line">                <span class="comment">// 获取各个列的索引</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">idIndex</span> <span class="operator">=</span> cursor.getColumnIndex(NoteDatabase.ID);</span><br><span class="line">                <span class="type">int</span> <span class="variable">contentIndex</span> <span class="operator">=</span> cursor.getColumnIndex(NoteDatabase.CONTENT);</span><br><span class="line">                <span class="type">int</span> <span class="variable">timeIndex</span> <span class="operator">=</span> cursor.getColumnIndex(NoteDatabase.TIME);</span><br><span class="line">                <span class="type">int</span> <span class="variable">modeIndex</span> <span class="operator">=</span> cursor.getColumnIndex(NoteDatabase.MODE);</span><br><span class="line">                <span class="comment">// 确保列索引有效</span></span><br><span class="line">                <span class="keyword">if</span> (idIndex != -<span class="number">1</span>) &#123;note.setId(cursor.getLong(idIndex));&#125;</span><br><span class="line">                <span class="keyword">if</span> (contentIndex != -<span class="number">1</span>) &#123;note.setContent(cursor.getString(contentIndex));&#125;</span><br><span class="line">                <span class="keyword">if</span> (timeIndex != -<span class="number">1</span>) &#123;note.setTime(cursor.getString(timeIndex));&#125;</span><br><span class="line">                <span class="keyword">if</span> (modeIndex != -<span class="number">1</span>) &#123;note.setTag(cursor.getInt(modeIndex));&#125;</span><br><span class="line">                notes.add(note);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> notes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*后面是更新和删除的代码 没有太大的区别*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateNote</span><span class="params">(Note note)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">ContentValues</span> <span class="variable">values</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">        values.put(NoteDatabase.CONTENT, note.getContent());</span><br><span class="line">        values.put(NoteDatabase.TIME, note.getTime());</span><br><span class="line">        values.put(NoteDatabase.MODE, note.getTag());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> db.update(NoteDatabase.TABLE_NAME, values,</span><br><span class="line">                NoteDatabase.ID + <span class="string">&quot;=?&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; String.valueOf(note.getId())&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeNote</span><span class="params">(Note note)</span>&#123;</span><br><span class="line">        db.delete(NoteDatabase.TABLE_NAME, NoteDatabase.ID + <span class="string">&quot;=&quot;</span> + note.getId(), <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里我们把数据库操作和初始化的语句也写好了，然后我们就可以开始写适配器了。</p><p>mainactivity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.selfstudy001;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.ListView;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.android.material.floatingactionbutton.FloatingActionButton;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span><span class="comment">/*这个是安卓系统提供的一个基类*/</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*基本组件列表</span></span><br><span class="line"><span class="comment">    * 在这里初始化所有组件*/</span></span><br><span class="line">    <span class="keyword">private</span> NoteDatabase dbHelper;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line">    FloatingActionButton btn1;<span class="comment">/*先把我们定义的浮标引入*/</span></span><br><span class="line">    TextView tv;</span><br><span class="line">    <span class="keyword">private</span> ListView lv;</span><br><span class="line">    <span class="keyword">private</span> NoteAdapter adapter;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Note&gt; noteList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Note&gt;();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Context</span> <span class="variable">context</span> <span class="operator">=</span> <span class="built_in">this</span>;</span><br><span class="line"><span class="comment">/*基本上的元素创建好了之后都需要定位*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="comment">/*这个onCreate的function是所有activity必须的*/</span></span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line">            <span class="comment">/*初始化按钮*/</span></span><br><span class="line">            btn1 = (FloatingActionButton)findViewById(R.id.fab);</span><br><span class="line">            <span class="comment">/*把下面的元素都初始化定位*/</span></span><br><span class="line">            tv = findViewById(R.id.tv);</span><br><span class="line">            lv = findViewById(R.id.lv);</span><br><span class="line">            <span class="comment">/*下面就是把适配器搞起来*/</span></span><br><span class="line">            <span class="comment">/*下面代码 初始化的同时调用了一个获取context的内容*/</span></span><br><span class="line">            adapter = <span class="keyword">new</span> <span class="title class_">NoteAdapter</span>(getApplicationContext(), noteList);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*每次调用的时候刷新内容 调用一个刷新功能，在后面实现*/</span></span><br><span class="line">            refreshListView();</span><br><span class="line"></span><br><span class="line">            lv.setAdapter(adapter);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            btn1.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                   <span class="comment">/* Log.d(TAG, &quot;onClick: click&quot;);</span></span><br><span class="line"><span class="comment">                   通过这一行代码可以在logcat里面查看</span></span><br><span class="line"><span class="comment">                   点击事件是否正常触发 */</span></span><br><span class="line">                    <span class="comment">// 创建跳转到 EditActivity 的 Intent</span></span><br><span class="line">                    <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, EditActivity.class);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 使用 startActivities 方法传递 Intent 数组</span></span><br><span class="line"><span class="comment">//                    startActivities(new Intent[]&#123;intent&#125;);</span></span><br><span class="line">                    <span class="comment">/*上面两行代码主要实现跳转功能</span></span><br><span class="line"><span class="comment">                    * 这里intent相当于一个事件或者信号 后面的参数是从这个页面跳转到edit页面</span></span><br><span class="line"><span class="comment">                    * 然后下面是触发这个intent事件*/</span></span><br><span class="line"></span><br><span class="line">                    startActivityForResult(intent,<span class="number">0</span>);</span><br><span class="line">                    <span class="comment">/*这个是启动活动获取结果 下面有一个警告是说这个未来会被弃用，但是我看了一下代替的东西一点也不比这个简单</span></span><br><span class="line"><span class="comment">                    * 所以我这里看看 能不能先凑合用了。</span></span><br><span class="line"><span class="comment">                    * 这个主要的作用就是传回返回值*/</span></span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*这里相当于写了一个function来专门接收上面说的传回的数据</span></span><br><span class="line"><span class="comment">    * 也就是接受startActivityForResult的结果*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(<span class="type">int</span> requestCode,<span class="type">int</span> resultCode,Intent data)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onActivityResult(requestCode,resultCode,data);</span><br><span class="line">        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> data.getStringExtra(<span class="string">&quot;content&quot;</span>);</span><br><span class="line">        <span class="comment">/*这样如果我们传回的信息中有一个intent的信息的话我们就可以传到这个input里面*/</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">time</span> <span class="operator">=</span> data.getStringExtra(<span class="string">&quot;time&quot;</span>);</span><br><span class="line">        <span class="type">Note</span> <span class="variable">note</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Note</span>(content,time,<span class="number">1</span>);</span><br><span class="line">        <span class="type">CRUD</span> <span class="variable">op</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CRUD</span>(context);</span><br><span class="line">        op.open();</span><br><span class="line">        op.addNote(note);</span><br><span class="line">        op.close();</span><br><span class="line">        <span class="comment">/*获取edit的内容之后打印*/</span></span><br><span class="line">        <span class="comment">//Log.d(TAG,edit); 测试时用 现在不用就先注释</span></span><br><span class="line">        <span class="comment">/*通过下面的代码可以实现把你在编辑页面的值传回去*/</span></span><br><span class="line">       <span class="comment">// tv.setText(edit); 测试完之后也注释掉 具体功能实现的时候不需要这个</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">refreshListView</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">CRUD</span> <span class="variable">op</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CRUD</span>(context);</span><br><span class="line">        op.open();</span><br><span class="line">        <span class="comment">// set adapter</span></span><br><span class="line">        <span class="keyword">if</span> (noteList.size() &gt; <span class="number">0</span>) noteList.clear();</span><br><span class="line">        noteList.addAll(op.getAllNotes());</span><br><span class="line">        op.close();</span><br><span class="line">        adapter.notifyDataSetChanged();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="总体代码"><a href="#总体代码" class="headerlink" title="总体代码"></a>总体代码</h4><p>CRUD</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.selfstudy001;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ContentValues;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.database.Cursor;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteOpenHelper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CRUD</span> &#123;</span><br><span class="line">    <span class="comment">/*下面的从名字就可以知道是帮助你操作数据库的</span></span><br><span class="line"><span class="comment">    * 说白了就是数据操作*/</span></span><br><span class="line">    SQLiteOpenHelper dbHandler;</span><br><span class="line">    <span class="comment">/*下面的SQLiteDatabase是用来初始化和定义数据库*/</span></span><br><span class="line">    SQLiteDatabase db;</span><br><span class="line"><span class="comment">/*在这两个定义完了之后正常导包就行*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] columns = &#123;</span><br><span class="line">            NoteDatabase.ID,</span><br><span class="line">            NoteDatabase.CONTENT,</span><br><span class="line">            NoteDatabase.TIME,</span><br><span class="line">            NoteDatabase.MODE</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*孩子们我写完定义语句回来了 现在再来一个构造函数</span></span><br><span class="line"><span class="comment">    * 下面其实就是初始化一个刚才写的创建语句 相当于创建了数据库*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">CRUD</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        dbHandler = <span class="keyword">new</span> <span class="title class_">NoteDatabase</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*然后下面通过open和close来控制数据库写入模式的开关*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">open</span><span class="params">()</span>&#123;</span><br><span class="line">        db = dbHandler.getWritableDatabase();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span>&#123;</span><br><span class="line">        dbHandler.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*孩子们，接下来就是本次项目的核心了 添加笔记功能，终于要来了。*/</span></span><br><span class="line">    <span class="keyword">public</span> Note <span class="title function_">addNote</span><span class="params">(Note note)</span>&#123;</span><br><span class="line">        <span class="comment">//这个contentvalues就是安卓四大组件其中之一</span></span><br><span class="line">        <span class="comment">/*这个cv就是一个专门处理数据的一个类 然后对它进行初始化。*/</span></span><br><span class="line">        <span class="type">ContentValues</span> <span class="variable">contentValues</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">        contentValues.put(NoteDatabase.CONTENT, note.getContent());</span><br><span class="line">        contentValues.put(NoteDatabase.TIME, note.getTime());</span><br><span class="line">        contentValues.put(NoteDatabase.MODE, note.getTag());</span><br><span class="line">        <span class="type">long</span> <span class="variable">insertId</span> <span class="operator">=</span> db.insert(NoteDatabase.TABLE_NAME, <span class="literal">null</span>, contentValues);</span><br><span class="line">        note.setId(insertId);</span><br><span class="line">        <span class="keyword">return</span> note;</span><br><span class="line">        <span class="comment">/*解析一下这行代码 我们刚才写了一个note类 然后这里调用这个构造方法的时候需要传入这个note类</span></span><br><span class="line"><span class="comment">        * 然后在传入的note类中获取上面的数据，然后insert那一行是一个内置的方式</span></span><br><span class="line"><span class="comment">        * 插入一行信息返回一个long值 然后我们把这个long值再拿来当做id 最后再把完整的note返回*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*下面的代码直接长话短说 上面我们已经有了id的基本概念，然后下面我们就可以通过这个id来获得note的信息</span></span><br><span class="line"><span class="comment">    * 简单来说下面的代码就是这个功能*/</span></span><br><span class="line">    <span class="keyword">public</span> Note <span class="title function_">getNote</span><span class="params">(<span class="type">long</span> id)</span>&#123;</span><br><span class="line">        <span class="comment">//孩子们 java也有自己的指针了</span></span><br><span class="line">        <span class="comment">/*这部分完全死记硬背 */</span></span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">cursor</span> <span class="operator">=</span> db.query(NoteDatabase.TABLE_NAME, columns, NoteDatabase.ID + <span class="string">&quot;=?&quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;String.valueOf(id)&#125;, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">/*如果找到这个note就用新值去覆盖</span></span><br><span class="line"><span class="comment">        * 相关知识点：潜拷贝*/</span></span><br><span class="line">        <span class="keyword">if</span> (cursor != <span class="literal">null</span>) cursor.moveToFirst();</span><br><span class="line">        <span class="type">Note</span> <span class="variable">e</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Note</span>(cursor.getString(<span class="number">1</span>), cursor.getString(<span class="number">2</span>), cursor.getInt(<span class="number">3</span>));</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*下面代码意思是再调用上面添加方法的时候我们其实在不断往list里面加数据</span></span><br><span class="line"><span class="comment">    然后我们返回所有的list 相当于查全部的功能或者说遍历*/</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Note&gt; <span class="title function_">getAllNotes</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">cursor</span> <span class="operator">=</span> db.query(NoteDatabase.TABLE_NAME, columns, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line"><span class="comment">/*这里原代码报错 我自己修改了一下代码*/</span></span><br><span class="line">        List&lt;Note&gt; notes = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (cursor.getCount() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span> (cursor.moveToNext()) &#123;</span><br><span class="line">                <span class="type">Note</span> <span class="variable">note</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Note</span>();</span><br><span class="line">                <span class="comment">// 获取各个列的索引</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">idIndex</span> <span class="operator">=</span> cursor.getColumnIndex(NoteDatabase.ID);</span><br><span class="line">                <span class="type">int</span> <span class="variable">contentIndex</span> <span class="operator">=</span> cursor.getColumnIndex(NoteDatabase.CONTENT);</span><br><span class="line">                <span class="type">int</span> <span class="variable">timeIndex</span> <span class="operator">=</span> cursor.getColumnIndex(NoteDatabase.TIME);</span><br><span class="line">                <span class="type">int</span> <span class="variable">modeIndex</span> <span class="operator">=</span> cursor.getColumnIndex(NoteDatabase.MODE);</span><br><span class="line">                <span class="comment">// 确保列索引有效</span></span><br><span class="line">                <span class="keyword">if</span> (idIndex != -<span class="number">1</span>) &#123;note.setId(cursor.getLong(idIndex));&#125;</span><br><span class="line">                <span class="keyword">if</span> (contentIndex != -<span class="number">1</span>) &#123;note.setContent(cursor.getString(contentIndex));&#125;</span><br><span class="line">                <span class="keyword">if</span> (timeIndex != -<span class="number">1</span>) &#123;note.setTime(cursor.getString(timeIndex));&#125;</span><br><span class="line">                <span class="keyword">if</span> (modeIndex != -<span class="number">1</span>) &#123;note.setTag(cursor.getInt(modeIndex));&#125;</span><br><span class="line">                notes.add(note);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> notes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*后面是更新和删除的代码 没有太大的区别*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateNote</span><span class="params">(Note note)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">ContentValues</span> <span class="variable">values</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">        values.put(NoteDatabase.CONTENT, note.getContent());</span><br><span class="line">        values.put(NoteDatabase.TIME, note.getTime());</span><br><span class="line">        values.put(NoteDatabase.MODE, note.getTag());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> db.update(NoteDatabase.TABLE_NAME, values,</span><br><span class="line">                NoteDatabase.ID + <span class="string">&quot;=?&quot;</span>, <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; String.valueOf(note.getId())&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeNote</span><span class="params">(Note note)</span>&#123;</span><br><span class="line"></span><br><span class="line">        db.delete(NoteDatabase.TABLE_NAME, NoteDatabase.ID + <span class="string">&quot;=&quot;</span> + note.getId(), <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>EditActivity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.selfstudy001;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.android.material.floatingactionbutton.FloatingActionButton;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="comment">/*和v4 v7版本一样 但是v4 v7等版本比较杂 x版本集成度比较高</span></span><br><span class="line"><span class="comment">* 所以选择了x*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EditActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    EditText et;</span><br><span class="line">    <span class="comment">/*现在我们可以把content和time引入了</span></span><br><span class="line"><span class="comment">    * 是时候升级一下我们的编辑页面逻辑了*/</span></span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> String time;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*创建点击事件*/</span></span><br><span class="line">    <span class="comment">/*为该活动初始化界面并设置布局。*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(<span class="meta">@Nullable</span> Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.edit_layout);</span><br><span class="line">        et = findViewById(R.id.et);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*给返回键也创建一个结束事件*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onKeyDown</span><span class="params">(<span class="type">int</span> keyCode,KeyEvent event)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(keyCode == KeyEvent.KEYCODE_HOME)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (keyCode == KeyEvent.KEYCODE_BACK)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/*这里的逻辑是如果使用返回键返回应用程序之外</span></span><br><span class="line"><span class="comment">            * 然后通过我们定义在main里面的函数接受信息*/</span></span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">            <span class="comment">/*首先我们把获取的内容改成content*/</span></span><br><span class="line">            intent.putExtra(<span class="string">&quot;content&quot;</span>,et.getText().toString());</span><br><span class="line">            <span class="comment">/*然后我们再传回去一个time*/</span></span><br><span class="line">            intent.putExtra(<span class="string">&quot;time&quot;</span>, dateToStr());</span><br><span class="line">            setResult(RESULT_OK,intent);</span><br><span class="line">            finish();</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onKeyDown(keyCode,event);</span><br><span class="line">        <span class="comment">/*处理了按下返回键时的逻辑，获取用户输入的文本并传回主 Activity  */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*下面我们再写一个方法，作用是把时间戳改变成我们想要的格式*/</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">dateToStr</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">simpleDateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> simpleDateFormat.format(date);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>MainActivity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.selfstudy001;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.ListView;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.ActivityResultLauncher;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.result.contract.ActivityResultContracts;</span><br><span class="line"><span class="keyword">import</span> androidx.activity.EdgeToEdge;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.core.graphics.Insets;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.ViewCompat;</span><br><span class="line"><span class="keyword">import</span> androidx.core.view.WindowInsetsCompat;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.android.material.floatingactionbutton.FloatingActionButton;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span><span class="comment">/*这个是安卓系统提供的一个基类*/</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*基本组件列表</span></span><br><span class="line"><span class="comment">     * 在这里初始化所有组件*/</span></span><br><span class="line">    <span class="keyword">private</span> NoteDatabase dbHelper;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;test&quot;</span>;</span><br><span class="line">    FloatingActionButton btn1;<span class="comment">/*先把我们定义的浮标引入*/</span></span><br><span class="line">    TextView tv;</span><br><span class="line">    <span class="keyword">private</span> ListView lv;</span><br><span class="line">    <span class="keyword">private</span> NoteAdapter adapter;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Note&gt; noteList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Note&gt;();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Context</span> <span class="variable">context</span> <span class="operator">=</span> <span class="built_in">this</span>;</span><br><span class="line">    <span class="comment">/*基本上的元素创建好了之后都需要定位*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 新增的 ActivityResultLauncher 用于代替 startActivityForResult</span></span><br><span class="line">    ActivityResultLauncher&lt;Intent&gt; startActivityForResultLauncher;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="comment">/*这个onCreate的function是所有activity必须的*/</span></span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        EdgeToEdge.enable(<span class="built_in">this</span>);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化 ActivityResultLauncher</span></span><br><span class="line">        startActivityForResultLauncher = registerForActivityResult(</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ActivityResultContracts</span>.StartActivityForResult(),</span><br><span class="line">                result -&gt; &#123;</span><br><span class="line">                    <span class="keyword">if</span> (result.getResultCode() == RESULT_OK &amp;&amp; result.getData() != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="comment">// 获取返回的数据</span></span><br><span class="line">                        <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> result.getData().getStringExtra(<span class="string">&quot;content&quot;</span>);</span><br><span class="line">                        <span class="type">String</span> <span class="variable">time</span> <span class="operator">=</span> result.getData().getStringExtra(<span class="string">&quot;time&quot;</span>);</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 创建新的 Note 对象</span></span><br><span class="line">                        <span class="type">Note</span> <span class="variable">note</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Note</span>(content, time, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 存储到数据库</span></span><br><span class="line">                        <span class="type">CRUD</span> <span class="variable">op</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CRUD</span>(context);</span><br><span class="line">                        op.open();</span><br><span class="line">                        op.addNote(note);</span><br><span class="line">                        op.close();</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 刷新 ListView</span></span><br><span class="line">                        refreshListView();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; &#123;</span><br><span class="line">            <span class="type">Insets</span> <span class="variable">systemBars</span> <span class="operator">=</span> insets.getInsets(WindowInsetsCompat.Type.systemBars());</span><br><span class="line">            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*初始化按钮*/</span></span><br><span class="line">            btn1 = (FloatingActionButton)findViewById(R.id.fab);</span><br><span class="line">            <span class="comment">/*把下面的元素都初始化定位*/</span></span><br><span class="line">            tv = findViewById(R.id.tv);</span><br><span class="line">            lv = findViewById(R.id.lv);</span><br><span class="line">            <span class="comment">/*下面就是把适配器搞起来*/</span></span><br><span class="line">            adapter = <span class="keyword">new</span> <span class="title class_">NoteAdapter</span>(getApplicationContext(), noteList);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*每次调用的时候刷新内容 调用一个刷新功能，在后面实现*/</span></span><br><span class="line">            refreshListView();</span><br><span class="line"></span><br><span class="line">            lv.setAdapter(adapter);</span><br><span class="line"></span><br><span class="line">            btn1.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                   <span class="comment">/* Log.d(TAG, &quot;onClick: click&quot;);</span></span><br><span class="line"><span class="comment">                   通过这一行代码可以在logcat里面查看</span></span><br><span class="line"><span class="comment">                   点击事件是否正常触发 */</span></span><br><span class="line">                    <span class="comment">// 创建跳转到 EditActivity 的 Intent</span></span><br><span class="line">                    <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, EditActivity.class);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 使用新的 ActivityResultLauncher 启动 Activity</span></span><br><span class="line">                    startActivityForResultLauncher.launch(intent);</span><br><span class="line">                    <span class="comment">/*这个是启动活动获取结果 下面有一个警告是说这个未来会被弃用，但是我看了一下代替的东西一点也不比这个简单</span></span><br><span class="line"><span class="comment">                     * 所以我这里看看 能不能先凑合用了。</span></span><br><span class="line"><span class="comment">                     * 这个主要的作用就是传回返回值*/</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> insets;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*这里相当于写了一个function来专门接收上面说的传回的数据</span></span><br><span class="line"><span class="comment">     * 也就是接受startActivityForResult的结果*/</span></span><br><span class="line">    <span class="comment">// 此方法已经不再需要，因为我们使用了新的 ActivityResultLauncher API</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">refreshListView</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">CRUD</span> <span class="variable">op</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CRUD</span>(context);</span><br><span class="line">        op.open();</span><br><span class="line">        <span class="comment">// set adapter</span></span><br><span class="line">        <span class="keyword">if</span> (noteList.size() &gt; <span class="number">0</span>) noteList.clear();</span><br><span class="line">        noteList.addAll(op.getAllNotes());</span><br><span class="line">        op.close();</span><br><span class="line">        adapter.notifyDataSetChanged();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Note</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.selfstudy001;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Note</span> &#123;</span><br><span class="line"><span class="comment">/*说一下下面四个属性</span></span><br><span class="line"><span class="comment">* id是用来定位的，第一次传入的时候自动生成</span></span><br><span class="line"><span class="comment">* 后面如果要更改数据，就要通过id来定位到之前的数据</span></span><br><span class="line"><span class="comment">* 然后content是内容 就是备忘录笔记的正文部分</span></span><br><span class="line"><span class="comment">* time就是时间 分成创建时间和最后编辑的时间</span></span><br><span class="line"><span class="comment">* 如果只是获取创建时间的话很简单</span></span><br><span class="line"><span class="comment">* 但是如果要改成最后编辑时间的话很复杂 后面会不会做出来我们且看且说</span></span><br><span class="line"><span class="comment">* tag相当于给笔记分类 比如有的笔记可能是学习笔记 有的可能是账本*/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="keyword">private</span> String time;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> tag;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*下面写一下构造函数还有封装的getset方法 直接右键 启动！</span></span><br><span class="line"><span class="comment">    * */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Note</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Note</span><span class="params">(String content, String time, <span class="type">int</span> tag)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.content = content;</span><br><span class="line">        <span class="built_in">this</span>.time = time;</span><br><span class="line">        <span class="built_in">this</span>.tag = tag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">long</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getContent</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> content;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setContent</span><span class="params">(String content)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.content = content;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getTime</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> time;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTime</span><span class="params">(String time)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.time = time;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getTag</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> tag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setTag</span><span class="params">(<span class="type">int</span> tag)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.tag = tag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*下面重写了toString方法 时间用了切片的格式 主要是为了debug</span></span><br><span class="line"><span class="comment">    * 下面的toString获取的就是最后要显示的信息 内容（标题） +时间+文章id*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> content + <span class="string">&quot;\n&quot;</span> + time.substring(<span class="number">5</span>,<span class="number">16</span>) + <span class="string">&quot; &quot;</span> + id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>NoteAdapter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.selfstudy001;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.text.TextUtils;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.BaseAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.Filter;</span><br><span class="line"><span class="keyword">import</span> android.widget.Filterable;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*主要是用于展示笔记内容的自定义适配器，主要功能是显示笔记内容，并实现了搜索过滤功能</span></span><br><span class="line"><span class="comment">* 用一句话来说就是三要素中的适配器*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NoteAdapter</span> <span class="keyword">extends</span> <span class="title class_">BaseAdapter</span> <span class="keyword">implements</span> <span class="title class_">Filterable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Note&gt; backList; <span class="comment">//用来备份原始数据</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Note&gt; noteList; <span class="comment">//这个数据是会改变的，所以要有个变量来备份一下原始数据</span></span><br><span class="line">    <span class="keyword">private</span> MyFilter mFilter;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">NoteAdapter</span><span class="params">(Context mContext, List&lt;Note&gt; noteList)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mContext = mContext;</span><br><span class="line">        <span class="built_in">this</span>.noteList = noteList;</span><br><span class="line">        <span class="built_in">this</span>.backList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(noteList); <span class="comment">// 创建一个备份列表</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*这个Filter实现了一个按时间正序和倒叙的排列 其实可以算一个进阶功能了</span></span><br><span class="line"><span class="comment">     * 然后这个东西是一个类中类。*/</span></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">MyFilter</span> <span class="keyword">extends</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">        <span class="comment">//我们在performFiltering(CharSequence charSequence)这个方法中定义过滤规则</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">protected</span> FilterResults <span class="title function_">performFiltering</span><span class="params">(CharSequence charSequence)</span> &#123;</span><br><span class="line">            <span class="type">FilterResults</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterResults</span>();</span><br><span class="line">            List&lt;Note&gt; list;</span><br><span class="line">            <span class="keyword">if</span> (TextUtils.isEmpty(charSequence)) &#123; <span class="comment">//当过滤的关键字为空的时候，我们则显示所有的数据</span></span><br><span class="line">                list = backList;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">//否则把符合条件的数据对象添加到集合中</span></span><br><span class="line">                list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                <span class="keyword">for</span> (Note note : backList) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (note.getContent().contains(charSequence)) &#123;</span><br><span class="line">                        list.add(note);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            result.values = list; <span class="comment">//将得到的集合保存到FilterResults的value变量中</span></span><br><span class="line">            result.count = list.size(); <span class="comment">//将集合的大小保存到FilterResults的count变量中</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在publishResults方法中告诉适配器更新界面</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">publishResults</span><span class="params">(CharSequence charSequence, FilterResults filterResults)</span> &#123;</span><br><span class="line">            noteList = (List&lt;Note&gt;) filterResults.values;</span><br><span class="line">            <span class="keyword">if</span> (filterResults.count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                notifyDataSetChanged(); <span class="comment">//通知数据发生了改变</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                notifyDataSetInvalidated(); <span class="comment">//通知数据失效</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*下面是几个get方法 可以获得需要的东西 */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> noteList.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getItem</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> noteList.get(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getItemId</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*根据指定位置返回一个视图，展示笔记内容。*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="type">int</span> position, View convertView, ViewGroup parent)</span> &#123;</span><br><span class="line">        <span class="type">View</span> <span class="variable">v</span> <span class="operator">=</span> View.inflate(mContext, R.layout.note_layout, <span class="literal">null</span>);</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv_content</span> <span class="operator">=</span> v.findViewById(R.id.tv_content);</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv_time</span> <span class="operator">=</span> v.findViewById(R.id.tv_time);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Set text for TextView</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">allText</span> <span class="operator">=</span> noteList.get(position).getContent();</span><br><span class="line">        tv_content.setText(allText);</span><br><span class="line">        tv_time.setText(noteList.get(position).getTime());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Save note id to long ,man！</span></span><br><span class="line">        v.setTag(noteList.get(position).getId());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 实现Filterable接口中的getFilter方法</span></span><br><span class="line">    <span class="comment">/*这里我不知道为什么 示例的代码和视频里都没有这一段 但是我没有这一段就报错。</span></span><br><span class="line"><span class="comment">    * 显示不实现这个功能，这个类永远是一个抽象类，所以没有办法先把这个加上再说。后续如果要调整再说。</span></span><br><span class="line"><span class="comment">    * 然后这里我即使加上了之后还是警告，然后下面的警告太多了，我也没办法一个个处理了，只能暂时先这样了。</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * 最后发现这里是我的误会 这个确实是有的 只是我自己少了 但是注释我也先留下来纪念一下。*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Filter <span class="title function_">getFilter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (mFilter ==<span class="literal">null</span>)&#123;</span><br><span class="line">            mFilter = <span class="keyword">new</span> <span class="title class_">MyFilter</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mFilter;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>NoteDatabase</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.selfstudy001;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteOpenHelper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">NoteDatabase</span> <span class="keyword">extends</span> <span class="title class_">SQLiteOpenHelper</span> &#123;</span><br><span class="line">    <span class="comment">/*创建完之后发现一定要实现一个oncreat不然就是抽象的 就是上学期C++虚函数那块*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*下面先定义一些全局常量，唯一的作用就是方便后续命名和修改</span></span><br><span class="line"><span class="comment">    * 没有什么别的作用*/</span></span><br><span class="line">    <span class="comment">/*也可以换一种方式理解成我们定义数据库中的列名*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TABLE_NAME</span> <span class="operator">=</span> <span class="string">&quot;notes&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CONTENT</span> <span class="operator">=</span> <span class="string">&quot;content&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ID</span> <span class="operator">=</span> <span class="string">&quot;_id&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TIME</span> <span class="operator">=</span> <span class="string">&quot;time&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">MODE</span> <span class="operator">=</span> <span class="string">&quot;mode&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*SQLiteOpenHelper 类，并设置数据库的相关参数*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">NoteDatabase</span><span class="params">(Context context)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>(context, TABLE_NAME, <span class="literal">null</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;<span class="comment">/*具体不了解 但是看到文档里是这样的格式我就写了具体原理不清楚*/</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(SQLiteDatabase db)</span> &#123;</span><br><span class="line">        <span class="comment">/*这个下面的db就是大家心心念念非常熟悉的sql语句了*/</span></span><br><span class="line">        <span class="comment">/*下面就是大家熟悉的创表语句了 不必多说</span></span><br><span class="line"><span class="comment">        * 哦 还是要多说一嘴 要把id定义成主键  想想id的作用</span></span><br><span class="line"><span class="comment">        * 然后时间和内容不为空这个肯定的</span></span><br><span class="line"><span class="comment">        * 然后最后那个mode就是对应tag*/</span></span><br><span class="line">        db.execSQL(<span class="string">&quot;CREATE TABLE &quot;</span> + TABLE_NAME</span><br><span class="line">                + <span class="string">&quot;(&quot;</span></span><br><span class="line">                + ID + <span class="string">&quot; INTEGER PRIMARY KEY AUTOINCREMENT,&quot;</span></span><br><span class="line">                + CONTENT + <span class="string">&quot; TEXT NOT NULL,&quot;</span></span><br><span class="line">                + TIME + <span class="string">&quot; TEXT NOT NULL,&quot;</span></span><br><span class="line">                + MODE + <span class="string">&quot; INTEGER DEFAULT 1)&quot;</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*这个function会检测你已有的版本 相当于会做版本匹配 内核其实是一个for循环 里面嵌套了一个switch</span></span><br><span class="line"><span class="comment">    * 如果版本不一致就会调用这个upgrade*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUpgrade</span><span class="params">(SQLiteDatabase db, <span class="type">int</span> oldVersion, <span class="type">int</span> newVersion)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>layout部分<br>activity_main.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">&quot;@+id/main&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Hello World!&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerInParent</span>=<span class="string">&quot;true&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">TextView</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/lv&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;8dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:divider</span>=<span class="string">&quot;@android:color/darker_gray&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:dividerHeight</span>=<span class="string">&quot;8dp&quot;</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ListView</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.google.android.material.floatingactionbutton.FloatingActionButton</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/fab&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentEnd</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">&quot;9dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">&quot;43dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:clickable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:contentDescription</span>=<span class="string">&quot;@string/fab_description&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:srcCompat</span>=<span class="string">&quot;@drawable/baseline_add_24&quot;</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--上网搜了一下说如果直接在一个括号内添加注释会造成闭合混乱，所以只能在括号外注释</span></span><br><span class="line"><span class="comment">        那么主要说一下</span></span><br><span class="line"><span class="comment">        tools:srcCompat=&quot;@drawable/baseline_add_24&quot;&quot;</span></span><br><span class="line"><span class="comment">        这个部分是一个定位--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>edit_layout.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/et&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">&quot;top&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">EditText</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>new_layout</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--推荐使用这种布局，因为还有一种ConstrintLayout不知道为什么会报错--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">             <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>note_layout.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingLeft</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingRight</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingTop</span>=<span class="string">&quot;5dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingBottom</span>=<span class="string">&quot;12dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;@drawable/note_shape&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:outlineAmbientShadowColor</span>=<span class="string">&quot;@color/black&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;20dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;@color/tv_main_color&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:singleLine</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_time&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;Time&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">&quot;@color/greyC&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="自定义活动栏和笔记可点击"><a href="#自定义活动栏和笔记可点击" class="headerlink" title="自定义活动栏和笔记可点击"></a>自定义活动栏和笔记可点击</h3><h4 id="首先在mainactivity里面加入工具栏"><a href="#首先在mainactivity里面加入工具栏" class="headerlink" title="首先在mainactivity里面加入工具栏"></a>首先在mainactivity里面加入工具栏</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--工具栏--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/myToolbar&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;?attr/actionBarSize&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;?attr/colorPrimary&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:elevation</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:titleTextColor</span>=<span class="string">&quot;?attr/titleColor&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;?attr/toolbarTheme&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:popupTheme</span>=<span class="string">&quot;@style/ThemeOverlay.AppCompat.Light&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="然后在mainactivity里面加入代码"><a href="#然后在mainactivity里面加入代码" class="headerlink" title="然后在mainactivity里面加入代码"></a>然后在mainactivity里面加入代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">private</span> Toolbar myToolbar;</span><br><span class="line">myToolbar = findViewById(R.id.myToolbar);</span><br><span class="line"> <span class="comment">/*加入工具栏*/</span></span><br><span class="line">    setSupportActionBar(myToolbar);</span><br><span class="line">    <span class="comment">/*下面两句的意思就是设置一个活动栏代替原本的工具栏*/</span></span><br><span class="line">    getSupportActionBar().setHomeButtonEnabled(<span class="literal">true</span>);</span><br><span class="line">    getSupportActionBar().setDisplayHomeAsUpEnabled(<span class="literal">true</span>); <span class="comment">//设置toolbar取代actionBar      </span></span><br><span class="line">    initPopUpView();</span><br><span class="line">    myToolbar.setNavigationIcon(R.drawable.ic_menu_black_24dp);</span><br><span class="line">    myToolbar.setNavigationOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br></pre></td></tr></table></figure><p>这样改完之后工具栏就会出现在主页面，然后笔记的位置也会下移。（要加个css below样式）</p><h4 id="在mainactivity中加入以下内容，"><a href="#在mainactivity中加入以下内容，" class="headerlink" title="在mainactivity中加入以下内容，"></a>在mainactivity中加入以下内容，</h4><p>实现可实现点击已创建过的笔记</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*这个mode是3的意思就是我们定义了一个点击时间，点击了之前已经存在的笔记之后</span></span><br><span class="line"><span class="comment">* 就打开一个新的界面，其实这个笔记和原本的笔记没有关系 是一个全新的笔记</span></span><br><span class="line"><span class="comment">* 只是读取了之前笔记的值*/</span></span><br><span class="line">        <span class="keyword">if</span> (openMode == <span class="number">3</span>) &#123;<span class="comment">//打开已存在的note</span></span><br><span class="line">            <span class="comment">/*下面几行都是获取接受的信息 非常直白*/</span></span><br><span class="line">            id = getIntent.getLongExtra(<span class="string">&quot;id&quot;</span>, <span class="number">0</span>);</span><br><span class="line">            old_content = getIntent.getStringExtra(<span class="string">&quot;content&quot;</span>);</span><br><span class="line">            old_time = getIntent.getStringExtra(<span class="string">&quot;time&quot;</span>);</span><br><span class="line">            old_Tag = getIntent.getIntExtra(<span class="string">&quot;tag&quot;</span>, <span class="number">1</span>);</span><br><span class="line">            <span class="comment">/*下面一行主要说用信息设置内容 填充编辑栏*/</span></span><br><span class="line">            et.setText(old_content);</span><br><span class="line">            <span class="comment">/*然后这个就是设置光标的位置*/</span></span><br><span class="line">            et.setSelection(old_content.length());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        intent.putExtra(<span class="string">&quot;mode&quot;</span>, <span class="number">4</span>);</span><br></pre></td></tr></table></figure><h4 id="在editactivity设置"><a href="#在editactivity设置" class="headerlink" title="在editactivity设置"></a>在editactivity设置</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">autoSetMessage();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">autoSetMessage</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(openMode == <span class="number">4</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(et.getText().toString().length() == <span class="number">0</span>)&#123;</span><br><span class="line">                intent.putExtra(<span class="string">&quot;mode&quot;</span>, -<span class="number">1</span>); <span class="comment">//nothing new happens.</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                intent.putExtra(<span class="string">&quot;mode&quot;</span>, <span class="number">0</span>); <span class="comment">// new one note;</span></span><br><span class="line">                intent.putExtra(<span class="string">&quot;content&quot;</span>, et.getText().toString());</span><br><span class="line">                intent.putExtra(<span class="string">&quot;time&quot;</span>, dateToStr());</span><br><span class="line">                intent.putExtra(<span class="string">&quot;tag&quot;</span>, tag);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (et.getText().toString().equals(old_content) &amp;&amp; !tagChange)</span><br><span class="line">                intent.putExtra(<span class="string">&quot;mode&quot;</span>, -<span class="number">1</span>); <span class="comment">// edit nothing</span></span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                intent.putExtra(<span class="string">&quot;mode&quot;</span>, <span class="number">1</span>); <span class="comment">//edit the content</span></span><br><span class="line">                intent.putExtra(<span class="string">&quot;content&quot;</span>, et.getText().toString());</span><br><span class="line">                intent.putExtra(<span class="string">&quot;time&quot;</span>, dateToStr());</span><br><span class="line">                intent.putExtra(<span class="string">&quot;id&quot;</span>, id);</span><br><span class="line">                intent.putExtra(<span class="string">&quot;tag&quot;</span>, tag);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>总结就是先在页面里面加入了活动栏的布局，在前端方面就有了活动栏。</p><p>然后再mainactivicy里面加入活动栏初始化的代码。<br>然后编写function，添加点击事件，给list里面的每一条笔记添加一个点击事件，点击笔记的时候新建一个页面，并且读取之前的笔记内容，然后生成，然后监听对原本的笔记内容是否有改变，有的话就用新的笔记页面取代旧的。<br>简单来说就是这样 然后还引入了mode设置 不同mode不一样。</p><h3 id="菜单栏"><a href="#菜单栏" class="headerlink" title="菜单栏"></a>菜单栏</h3><p>首先前面已经添加了 活动栏，但是活动栏上面还没有元素</p><p>标签需要在活动栏中修改，所以我们先搞定活动蓝（菜单栏）是完成后续标签功能的前置条件</p><p>对于每一个活动栏需要添加的功能都需要在res文件夹下面新建一个menu类的资源文件夹</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250309203221726.png" alt="image-20250309203221726"></p><p>然后在里面创建菜单文件<br>接着在drawable里面创建图标文件</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250309203438372.png" alt="image-20250309203438372"></p><p>然后在menu的xml文件里面引入图标</p><h4 id="mainmenu-xml"><a href="#mainmenu-xml" class="headerlink" title="mainmenu.xml"></a>mainmenu.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/action_search&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;?attr/menu_search&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:showAsAction</span>=<span class="string">&quot;always&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:actionViewClass</span>=<span class="string">&quot;androidx.appcompat.widget.SearchView&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">&quot;Search&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/menu_clear&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;?attr/menu_delete_all&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">&quot;Clear&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:showAsAction</span>=<span class="string">&quot;always&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="edit-menu-xml"><a href="#edit-menu-xml" class="headerlink" title="edit_menu.xml"></a>edit_menu.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/delete&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;?attr/menu_delete&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">&quot;Delete&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:showAsAction</span>=<span class="string">&quot;always&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure><p>引入的图标默认靠右，如果要设置位置的话就要设置一些属性往中间靠。</p><p>修改mainactivity.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*替换主页面菜单栏返回的图标*/</span></span><br><span class="line">myToolbar.setNavigationIcon(R.drawable.ic_menu_black_24dp);</span><br><span class="line">myToolbar.setNavigationOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">        Log.d(TAG, <span class="string">&quot;onClick: shit&quot;</span>);</span><br><span class="line">        showPopUpView();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>editactivity.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*创建设置初始化编辑页面的菜单栏*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> &#123;</span><br><span class="line">    getMenuInflater().inflate(R.menu.edit_menu, menu);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">super</span>.onCreateOptionsMenu(menu);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*为该活动初始化界面并设置布局。</span></span><br><span class="line"><span class="comment">* 主要就是点击之后生成的编辑栏页面*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.edit_layout);</span><br><span class="line"></span><br><span class="line">    myToolbar = findViewById(R.id.my_Toolbar);</span><br><span class="line">    setSupportActionBar(myToolbar);</span><br><span class="line">    getSupportActionBar().setHomeButtonEnabled(<span class="literal">true</span>);</span><br><span class="line">    getSupportActionBar().setDisplayHomeAsUpEnabled(<span class="literal">true</span>); <span class="comment">//设置toolbar取代actionbar</span></span><br><span class="line"></span><br><span class="line">    myToolbar.setNavigationOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">            autoSetMessage();</span><br><span class="line">            setResult(RESULT_OK, intent);</span><br><span class="line">            finish();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    et = findViewById(R.id.et);</span><br><span class="line">    <span class="comment">/*获取其他avtivity传入的值*/</span></span><br><span class="line">    <span class="type">Intent</span> <span class="variable">getIntent</span> <span class="operator">=</span> getIntent();</span><br><span class="line">    <span class="comment">/*获取信息*/</span></span><br><span class="line">    openMode = getIntent.getIntExtra(<span class="string">&quot;mode&quot;</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><h3 id="删除功能的实现"><a href="#删除功能的实现" class="headerlink" title="删除功能的实现"></a>删除功能的实现</h3><p>上一部分加入了状态栏的图标，但是具体的功能还没有实现，这一章节过来实现一下</p><p>先从编辑页面开始，因为编辑页面的删除功能只需要删除当前页面，会比较简单。</p><h4 id="editactivity"><a href="#editactivity" class="headerlink" title="editactivity"></a>editactivity</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*选择元素并点击，监听状态栏上任一元素*/</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onOptionsItemSelected</span><span class="params">(<span class="meta">@NonNull</span> MenuItem item)</span> &#123;</span><br><span class="line">    <span class="comment">/*对item进行定位*/</span></span><br><span class="line">    <span class="keyword">switch</span> (item.getItemId())&#123;</span><br><span class="line">        <span class="comment">/*这里是先定位到之前的delete元素*/</span></span><br><span class="line">        <span class="keyword">case</span> R.id.delete:</span><br><span class="line">            <span class="comment">/*下面是引入并且初始化了一个系统自带的东西</span></span><br><span class="line"><span class="comment">            * 就是一个对话框</span></span><br><span class="line"><span class="comment">            * 然后会弹出问你要不要删除</span></span><br><span class="line"><span class="comment">            * 代码运行基本上就是监听整个导航栏</span></span><br><span class="line"><span class="comment">            * 然后如果*/</span></span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder(EditActivity.<span class="built_in">this</span>)</span><br><span class="line">                    .setMessage(<span class="string">&quot;删除吗？&quot;</span>)</span><br><span class="line">                    <span class="comment">/*然后在下面创建了一个监听器 监听点击*/</span></span><br><span class="line">                    .setPositiveButton(android.R.string.yes, <span class="keyword">new</span> <span class="title class_">DialogInterface</span>.OnClickListener() &#123;</span><br><span class="line">                        <span class="comment">/*然后下面编辑点击事件，也是判断打开文件是新文件还是旧文件</span></span><br><span class="line"><span class="comment">                        * 如果是新笔记就什么都不管 不创建新笔记就行 直接返回</span></span><br><span class="line"><span class="comment">                        * 如果是旧笔记 就定位id 然后删除*/</span></span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialog, <span class="type">int</span> which)</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (openMode == <span class="number">4</span>)&#123; <span class="comment">// new note</span></span><br><span class="line">                                intent.putExtra(<span class="string">&quot;mode&quot;</span>, -<span class="number">1</span>);</span><br><span class="line">                                setResult(RESULT_OK, intent);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">else</span> &#123; <span class="comment">// existing note</span></span><br><span class="line">                                intent.putExtra(<span class="string">&quot;mode&quot;</span>, <span class="number">2</span>);</span><br><span class="line">                                intent.putExtra(<span class="string">&quot;id&quot;</span>, id);</span><br><span class="line">                                setResult(RESULT_OK, intent);</span><br><span class="line">                            &#125;</span><br><span class="line">                            finish();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;).setNegativeButton(android.R.string.no, <span class="keyword">new</span> <span class="title class_">DialogInterface</span>.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span><span class="comment">/*下面是取消的方法 只是为了语法完整性*/</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialog, <span class="type">int</span> which)</span> &#123;</span><br><span class="line">                    dialog.dismiss();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).create().show();</span><br><span class="line">                    <span class="comment">/*上面两个方法分别是创建和显示的方法*/</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*不知道为什么，但是文档里是这么写的，所以就这样了*/</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">super</span>.onOptionsItemSelected(item);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="mainactivity"><a href="#mainactivity" class="headerlink" title="mainactivity"></a>mainactivity</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onOptionsItemSelected</span><span class="params">(<span class="meta">@NonNull</span> MenuItem item)</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> (item.getItemId())&#123;</span><br><span class="line">        <span class="keyword">case</span> R.id.menu_clear:</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder(MainActivity.<span class="built_in">this</span>)</span><br><span class="line">                    .setMessage(<span class="string">&quot;删除全部吗？&quot;</span>)</span><br><span class="line">                    .setPositiveButton(android.R.string.yes, <span class="keyword">new</span> <span class="title class_">DialogInterface</span>.OnClickListener() &#123;</span><br><span class="line">                        <span class="meta">@Override</span></span><br><span class="line">                        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialog, <span class="type">int</span> which)</span> &#123;</span><br><span class="line">                            dbHelper = <span class="keyword">new</span> <span class="title class_">NoteDatabase</span>(context);</span><br><span class="line">                            <span class="type">SQLiteDatabase</span> <span class="variable">db</span> <span class="operator">=</span> dbHelper.getWritableDatabase();</span><br><span class="line">                            db.delete(<span class="string">&quot;notes&quot;</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">                            db.execSQL(<span class="string">&quot;update sqlite_sequence set seq=0 where name=&#x27;notes&#x27;&quot;</span>);</span><br><span class="line">                            refreshListView();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;).setNegativeButton(android.R.string.no, <span class="keyword">new</span> <span class="title class_">DialogInterface</span>.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialog, <span class="type">int</span> which)</span> &#123;</span><br><span class="line">                    dialog.dismiss();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).create().show();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">super</span>.onOptionsItemSelected(item);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 笔记的主要功能其实到这里已经结束了，因为增删改都已经实现了。<br>接下来就是对其他功能的优化迭代了。还有实现查找功能。</p><h3 id="搜索笔记"><a href="#搜索笔记" class="headerlink" title="搜索笔记"></a>搜索笔记</h3><p>有什么用？<br>一方面增删改查就差个查找了<br>另一方面编辑很多的时候确实有用。</p><h4 id="main-menu-xml"><a href="#main-menu-xml" class="headerlink" title="main_menu.xml"></a>main_menu.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--主页面的搜索功能--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/action_search&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;?attr/menu_search&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:showAsAction</span>=<span class="string">&quot;always&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:actionViewClass</span>=<span class="string">&quot;androidx.appcompat.widget.SearchView&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">&quot;Search&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--主页面的删除功能--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/menu_clear&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:icon</span>=<span class="string">&quot;?attr/menu_delete_all&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">&quot;Clear&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:showAsAction</span>=<span class="string">&quot;always&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="mainacticity"><a href="#mainacticity" class="headerlink" title="mainacticity"></a>mainacticity</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="comment">/*引入menu菜单栏*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> &#123;</span><br><span class="line">        <span class="comment">/*渲染出menu这个对象*/</span></span><br><span class="line">        getMenuInflater().inflate(R.menu.main_menu, menu);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*渲染并初始化搜索功能*/</span></span><br><span class="line">        <span class="type">MenuItem</span> <span class="variable">mSearch</span> <span class="operator">=</span> menu.findItem(R.id.action_search);</span><br><span class="line">        <span class="type">SearchView</span> <span class="variable">mSearchView</span> <span class="operator">=</span> (SearchView) mSearch.getActionView();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*创建监听事件*/</span></span><br><span class="line">        mSearchView.setQueryHint(<span class="string">&quot;Search&quot;</span>);</span><br><span class="line">        mSearchView.setOnQueryTextListener(<span class="keyword">new</span> <span class="title class_">SearchView</span>.OnQueryTextListener() &#123;</span><br><span class="line">            <span class="comment">/*上方法 提交输入文字的时候的具体实现</span></span><br><span class="line"><span class="comment">            * 这里不用写 因为我们根本没有提交键*/</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onQueryTextSubmit</span><span class="params">(String query)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">/*下方法 文字改变的时候的实现</span></span><br><span class="line"><span class="comment">* 每次修改文本之后自动传入值 然后搜索传入的值*/</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onQueryTextChange</span><span class="params">(String newText)</span> &#123;</span><br><span class="line"></span><br><span class="line">                adapter.getFilter().filter(newText);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onCreateOptionsMenu(menu);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>因为这个代码具体的实现在适配器里面已经写了过滤器了，所以直接把按钮装上之后把方法调用过来就行，所以写起来特别方便。</p><h3 id="弹出菜单"><a href="#弹出菜单" class="headerlink" title="弹出菜单"></a>弹出菜单</h3><p>想要实现功能，首先必须要有这个页面，所以我们先加一个设置菜单。</p><h4 id="setting-layout"><a href="#setting-layout" class="headerlink" title="setting_layout"></a>setting_layout</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;?attr/actionBarSize&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;?attr/colorPrimary&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:elevation</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/ThemeOverlay.AppCompat.ActionBar&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:popupTheme</span>=<span class="string">&quot;@style/ThemeOverlay.AppCompat.Light&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:title</span>=<span class="string">&quot;弹出菜单&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:titleTextColor</span>=<span class="string">&quot;?attr/titleColor&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:focusable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:focusableInTouchMode</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:clickable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;48dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">            &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/setting_settings_image&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_margin</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:src</span>=<span class="string">&quot;?attr/settingIcon&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/setting_settings_text&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;设置&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;?attr/tvMainColor&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;24dp&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;1dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:alpha</span>=<span class="string">&quot;0.2&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/lv_tag&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ListView</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="再引入设置图标"><a href="#再引入设置图标" class="headerlink" title="再引入设置图标"></a>再引入设置图标</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250309225623196.png" alt="image-20250309225623196"></p><h4 id="mainactivity-1"><a href="#mainactivity-1" class="headerlink" title="mainactivity"></a>mainactivity</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//弹出菜单</span></span><br><span class="line"><span class="keyword">private</span> PopupWindow popupWindow;</span><br><span class="line"><span class="keyword">private</span> PopupWindow popupCover;</span><br><span class="line"><span class="comment">/*这里设置了蒙版 就是弹出菜单的透明层*/</span></span><br><span class="line"><span class="keyword">private</span> ViewGroup customView;</span><br><span class="line"><span class="keyword">private</span> ViewGroup coverView;</span><br><span class="line">initPopUpView();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initPopUpView</span><span class="params">()</span>&#123;</span><br><span class="line">    layoutInfater = (LayoutInflater)MainActivity.<span class="built_in">this</span>.getSystemService(Context.LAYOUT_INFLATER_SERVICE);</span><br><span class="line">    customView = (ViewGroup) layoutInfater.inflate(R.layout.setting_layout, <span class="literal">null</span>);</span><br><span class="line">    coverView = (ViewGroup) layoutInfater.inflate(R.layout.setting_cover, <span class="literal">null</span>);</span><br><span class="line">    main = findViewById(R.id.main_layout);</span><br><span class="line">    wm = getWindowManager();</span><br><span class="line">    metrics = <span class="keyword">new</span> <span class="title class_">DisplayMetrics</span>();</span><br><span class="line">    wm.getDefaultDisplay().getMetrics(metrics);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">showPopUpView</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">width</span> <span class="operator">=</span> metrics.widthPixels;</span><br><span class="line">    <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> metrics.heightPixels;</span><br><span class="line"></span><br><span class="line">    popupCover = <span class="keyword">new</span> <span class="title class_">PopupWindow</span>(coverView, width, height, <span class="literal">false</span>);</span><br><span class="line">    popupWindow = <span class="keyword">new</span> <span class="title class_">PopupWindow</span>(customView, (<span class="type">int</span>)(width*<span class="number">0.7</span>), height, <span class="literal">true</span>);</span><br><span class="line">    popupWindow.setBackgroundDrawable(<span class="keyword">new</span> <span class="title class_">ColorDrawable</span>(Color.WHITE));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在主界面加载成功之后 显示弹出</span></span><br><span class="line">    findViewById(R.id.main_layout).post(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">            popupCover.showAtLocation(main, Gravity.NO_GRAVITY, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            popupWindow.showAtLocation(main, Gravity.NO_GRAVITY, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">            setting_image = customView.findViewById(R.id.setting_settings_image);</span><br><span class="line">            setting_text = customView.findViewById(R.id.setting_settings_text);</span><br><span class="line"></span><br><span class="line">            setting_image.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                    startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, UserSettingsActivity.class));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            setting_text.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                    startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, UserSettingsActivity.class));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            coverView.setOnTouchListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnTouchListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onTouch</span><span class="params">(View v, MotionEvent event)</span> &#123;</span><br><span class="line">                    popupWindow.dismiss();</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            popupWindow.setOnDismissListener(<span class="keyword">new</span> <span class="title class_">PopupWindow</span>.OnDismissListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDismiss</span><span class="params">()</span> &#123;</span><br><span class="line">                    popupCover.dismiss();</span><br><span class="line">                    Log.d(TAG, <span class="string">&quot;onDismiss: test&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里想实现的一个效果是弹出窗口，然后弹出窗口加载之后要让背景变暗，然后弹出窗口保持原本的亮度。<br>但是查阅了文档和我上网搜了之后没有发现任何一个方法可以实现这个效果，所以选择曲线救国。在上面再铺设一层透明的层。</p><h4 id="setting-cover-xml"><a href="#setting-cover-xml" class="headerlink" title="setting_cover.xml"></a>setting_cover.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span> <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;@color/cover&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="黑夜模式"><a href="#黑夜模式" class="headerlink" title="黑夜模式"></a>黑夜模式</h3><p>首先黑夜模式需要在设置里面切换，那么我们首先要写一个基础的BaseActivity</p><p>作用主要是减少重复的代码，只有用通用的功能 也是写在baseActiviy里面 类似上学期的java</p><h4 id="BaseActivity"><a href="#BaseActivity" class="headerlink" title="BaseActivity"></a>BaseActivity</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.biji;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.SharedPreferences;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.preference.PreferenceManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setNightMode();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isNightMode</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SharedPreferences</span> <span class="variable">sharedPreferences</span> <span class="operator">=</span> PreferenceManager.getDefaultSharedPreferences(getBaseContext());</span><br><span class="line">        <span class="keyword">return</span> sharedPreferences.getBoolean(<span class="string">&quot;nightMode&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNightMode</span><span class="params">()</span>&#123;</span><br><span class="line">        setTheme(R.style.DayTheme);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="UserSettingActivity"><a href="#UserSettingActivity" class="headerlink" title="UserSettingActivity"></a>UserSettingActivity</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.biji;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.content.SharedPreferences;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.preference.PreferenceManager;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.widget.CompoundButton;</span><br><span class="line"><span class="keyword">import</span> android.widget.Switch;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.widget.Toolbar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserSettingsActivity</span> <span class="keyword">extends</span> <span class="title class_">BaseActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Switch nightMode;</span><br><span class="line">    <span class="keyword">private</span> SharedPreferences sharedPreferences;</span><br><span class="line">    <span class="keyword">private</span> Boolean night_change;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.preference_layout);</span><br><span class="line"></span><br><span class="line">        sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getBaseContext());</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> getIntent();</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        if(intent.getExtras() != null) night_change = intent.getBooleanExtra(&quot;night_change&quot;, false);</span></span><br><span class="line"><span class="comment">        else night_change = false;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        initView();</span><br><span class="line"></span><br><span class="line">        <span class="type">Toolbar</span> <span class="variable">myToolbar</span> <span class="operator">=</span> (Toolbar) findViewById(R.id.my_toolbar);</span><br><span class="line">        setSupportActionBar(myToolbar);</span><br><span class="line">        getSupportActionBar().setHomeButtonEnabled(<span class="literal">true</span>);</span><br><span class="line">        getSupportActionBar().setDisplayHomeAsUpEnabled(<span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">if</span>(isNightMode()) myToolbar.setNavigationIcon(getDrawable(R.drawable.ic_settings_white_24dp));</span><br><span class="line">        <span class="keyword">else</span> myToolbar.setNavigationIcon(getDrawable(R.drawable.ic_settings_black_24dp));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initView</span><span class="params">()</span>&#123;</span><br><span class="line">        nightMode = findViewById(R.id.nightMode);</span><br><span class="line">        nightMode.setChecked(sharedPreferences.getBoolean(<span class="string">&quot;nightMode&quot;</span>, <span class="literal">false</span>));</span><br><span class="line">        nightMode.setOnCheckedChangeListener(<span class="keyword">new</span> <span class="title class_">CompoundButton</span>.OnCheckedChangeListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCheckedChanged</span><span class="params">(CompoundButton buttonView, <span class="type">boolean</span> isChecked)</span> &#123;</span><br><span class="line">                setNightModePref(isChecked);</span><br><span class="line">                setSelfNightMode();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setNightModePref</span><span class="params">(<span class="type">boolean</span> night)</span>&#123;</span><br><span class="line">        <span class="comment">//通过nightMode switch修改pref中的nightMode</span></span><br><span class="line">        sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getBaseContext());</span><br><span class="line">        SharedPreferences.<span class="type">Editor</span> <span class="variable">editor</span> <span class="operator">=</span> sharedPreferences.edit();</span><br><span class="line">        editor.putBoolean(<span class="string">&quot;nightMode&quot;</span>, night);</span><br><span class="line">        editor.commit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setSelfNightMode</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//重新赋值并重启本activity</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">super</span>.setNightMode();</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="built_in">this</span>, UserSettingsActivity.class);</span><br><span class="line">        <span class="comment">//intent.putExtra(&quot;night_change&quot;, !night_change); //重启一次，正负颠倒。最终为正值时重启MainActivity。</span></span><br><span class="line"></span><br><span class="line">        startActivity(intent);</span><br><span class="line">        finish();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="preference-layout-xml"><a href="#preference-layout-xml" class="headerlink" title="preference_layout.xml"></a>preference_layout.xml</h4><p>然后要实现这个设置页面 肯定需要有设置页面的前端</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;?attr/lvBackground&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/my_toolbar&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;?attr/actionBarSize&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;?attr/colorPrimary&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:elevation</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:titleTextColor</span>=<span class="string">&quot;?attr/titleColor&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:title</span>=<span class="string">&quot;设置&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/ThemeOverlay.AppCompat.ActionBar&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:popupTheme</span>=<span class="string">&quot;@style/ThemeOverlay.AppCompat.Light&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">&quot;20dp&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;黑夜模式&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;?attr/tvMainColor&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;20dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;@string/pref_night_summary&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;?attr/tvSubColor&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;16dp&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Switch</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/nightMode&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:clickable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:switchMinWidth</span>=<span class="string">&quot;50dp&quot;</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;1dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:foreground</span>=<span class="string">&quot;@color/greyC&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="mainactivity-2"><a href="#mainactivity-2" class="headerlink" title="mainactivity"></a>mainactivity</h4><p>修改设置代码 点击设置字符跳转。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*设置的文字和图标 下面是这两个组件的监听器和跳转事件*/</span></span><br><span class="line">setting_image = customView.findViewById(R.id.setting_settings_image);</span><br><span class="line">setting_text = customView.findViewById(R.id.setting_settings_text);</span><br><span class="line"></span><br><span class="line">setting_image.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">        startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, UserSettingsActivity.class));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">setting_text.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">        startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, UserSettingsActivity.class));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="设置黑夜模式主题颜色"><a href="#设置黑夜模式主题颜色" class="headerlink" title="设置黑夜模式主题颜色"></a>设置黑夜模式主题颜色</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250310004311534.png" alt="image-20250310004311534"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250310004334356.png" alt="image-20250310004334356"></p><p>注意安卓开发过程中有一些部分的颜色会有一些专用名词来指代</p><p>重新添加图标并且添加黑夜主体的xml配置文件</p><p>theme.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span> <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Base application theme. --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;DayTheme&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;Theme.AppCompat.DayNight.NoActionBar&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;toolbarTheme&quot;</span>&gt;</span>@style/ThemeOverlay.AppCompat.ActionBar<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimary&quot;</span>&gt;</span>@color/white<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:textColorPrimary&quot;</span>&gt;</span>@color/black<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimaryDark&quot;</span>&gt;</span>@color/colorPrimaryDark<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorAccent&quot;</span>&gt;</span>@color/colorAccent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;tvBackground&quot;</span>&gt;</span>@color/white<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;lvBackground&quot;</span>&gt;</span>@color/near_white<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;settingIcon&quot;</span>&gt;</span>@drawable/ic_settings_black_24dp<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;menu_delete_all&quot;</span>&gt;</span>@drawable/ic_delete_forever_black_24dp<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;menu_delete&quot;</span>&gt;</span>@drawable/ic_delete_black_24dp<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;menu_search&quot;</span>&gt;</span>@drawable/ic_search_black_24dp<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;titleColor&quot;</span>&gt;</span>@color/black<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;tvMainColor&quot;</span>&gt;</span>@color/black<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;tvSubColor&quot;</span>&gt;</span>@color/grey9<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorControlActivated&quot;</span>&gt;</span>@color/black<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorSwitchThumbNormal&quot;</span>&gt;</span>@color/black<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">&quot;NightTheme&quot;</span> <span class="attr">parent</span>=<span class="string">&quot;Theme.AppCompat.DayNight.NoActionBar&quot;</span>&gt;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;toolbarTheme&quot;</span>&gt;</span>@style/ThemeOverlay.AppCompat.Dark.ActionBar<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimary&quot;</span>&gt;</span>@color/black<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;android:textColorPrimary&quot;</span>&gt;</span>@color/black<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimaryDark&quot;</span>&gt;</span>@color/colorPrimaryDark<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorAccent&quot;</span>&gt;</span>@color/colorAccent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;tvBackground&quot;</span>&gt;</span>@color/black<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;lvBackground&quot;</span>&gt;</span>@color/near_black<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;settingIcon&quot;</span>&gt;</span>@drawable/ic_settings_white_24dp<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;menu_delete_all&quot;</span>&gt;</span>@drawable/ic_delete_forever_white_24dp<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;menu_delete&quot;</span>&gt;</span>@drawable/ic_delete_white_24dp<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;menu_search&quot;</span>&gt;</span>@drawable/ic_search_white_24dp<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;titleColor&quot;</span>&gt;</span>@color/white<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;tvMainColor&quot;</span>&gt;</span>@color/near_white<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;tvSubColor&quot;</span>&gt;</span>@color/greyC<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorControlActivated&quot;</span>&gt;</span>@color/white<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">&quot;colorSwitchThumbNormal&quot;</span>&gt;</span>@color/white<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后去base里面设置一下 让所有页面创建的时候默认就通过黑夜模式创建</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.biji;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.SharedPreferences;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.preference.PreferenceManager;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*base本身不需要实例化 所以可以当作抽象类</span></span><br><span class="line"><span class="comment">* 不过这里目前还没有当抽象类 只是加了更加规范*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setNightMode();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isNightMode</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SharedPreferences</span> <span class="variable">sharedPreferences</span> <span class="operator">=</span> PreferenceManager.getDefaultSharedPreferences(getBaseContext());</span><br><span class="line">        <span class="keyword">return</span> sharedPreferences.getBoolean(<span class="string">&quot;nightMode&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNightMode</span><span class="params">()</span>&#123;</span><br><span class="line">        setTheme(R.style.NightTheme);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后因为弹窗不属于任何一个页面 ，我们需要单独给他设置一个样式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--首先工具栏处于最大的前进布局下面--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;?attr/lvBackground&quot;</span>&gt;</span> 在这里加</span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;?attr/actionBarSize&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;?attr/colorPrimary&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:elevation</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;@style/ThemeOverlay.AppCompat.ActionBar&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:popupTheme</span>=<span class="string">&quot;@style/ThemeOverlay.AppCompat.Light&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:title</span>=<span class="string">&quot;弹出菜单&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:titleTextColor</span>=<span class="string">&quot;?attr/titleColor&quot;</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--在下面定义一个正向布局--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:focusable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:focusableInTouchMode</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:clickable</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--再定义一个横向布局放设置--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;48dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">            &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/setting_settings_image&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_margin</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:src</span>=<span class="string">&quot;?attr/settingIcon&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/setting_settings_text&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;设置&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;?attr/tvMainColor&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginLeft</span>=<span class="string">&quot;10dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_weight</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_gravity</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;24dp&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;1dp&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">&quot;@color/black&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:alpha</span>=<span class="string">&quot;0.2&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/lv_tag&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ListView</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="baseactivity"><a href="#baseactivity" class="headerlink" title="baseactivity"></a>baseactivity</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.biji;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.SharedPreferences;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.preference.PreferenceManager;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*base本身不需要实例化 所以可以当作抽象类</span></span><br><span class="line"><span class="comment">* 不过这里目前还没有当抽象类 只是加了更加规范*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BaseActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;BaseActivity&quot;</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setNightMode();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isNightMode</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SharedPreferences</span> <span class="variable">sharedPreferences</span> <span class="operator">=</span> PreferenceManager.getDefaultSharedPreferences(getBaseContext());</span><br><span class="line">        <span class="keyword">return</span> sharedPreferences.getBoolean(<span class="string">&quot;nightMode&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 根据夜间模式的设置选择主题</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNightMode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 判断是否为夜间模式</span></span><br><span class="line">        <span class="keyword">if</span> (isNightMode()) &#123;</span><br><span class="line">            Log.d(TAG, <span class="string">&quot;Night mode enabled&quot;</span>);</span><br><span class="line">            setTheme(R.style.NightTheme);  <span class="comment">// 设置夜间主题</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Log.d(TAG, <span class="string">&quot;Day mode enabled&quot;</span>);</span><br><span class="line">            setTheme(R.style.DayTheme);  <span class="comment">// 设置日间主题</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>做好了 结课</p><h2 id="课外专题"><a href="#课外专题" class="headerlink" title="课外专题"></a>课外专题</h2><p>根据老师的要求，加上单词本和答题功能。</p><h2 id="英语词汇助手功能"><a href="#英语词汇助手功能" class="headerlink" title="英语词汇助手功能"></a>英语词汇助手功能</h2><h3 id="功能概述"><a href="#功能概述" class="headerlink" title="功能概述"></a>功能概述</h3><p>英语词汇助手是一个帮助用户学习和记忆英语单词的功能模块，主要包含以下功能：</p><ul><li><p>单词本：存储和管理用户添加的英语单词</p></li><li><p>单词查询：通过网络API获取单词释义、例句和音标</p></li><li><p>单词测试：针对已添加的单词进行记忆测试</p></li><li><p>学习计划：设置每日学习单词数量和提醒</p></li></ul><h3 id="单词数据模型设计"><a href="#单词数据模型设计" class="headerlink" title="单词数据模型设计"></a>单词数据模型设计</h3><p>首先我们需要创建一个单词的数据模型，用于存储单词相关信息：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.biji.vocabulary;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Word</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String word;       <span class="comment">// 单词</span></span><br><span class="line">    <span class="keyword">private</span> String phonetic;   <span class="comment">// 音标</span></span><br><span class="line">    <span class="keyword">private</span> String definition; <span class="comment">// 释义</span></span><br><span class="line">    <span class="keyword">private</span> String example;    <span class="comment">// 例句</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> familiarity;   <span class="comment">// 熟悉度(0-5)</span></span><br><span class="line">    <span class="keyword">private</span> String addTime;    <span class="comment">// 添加时间</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Word</span><span class="params">()</span> &#123; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Word</span><span class="params">(String word, String phonetic, String definition, String example, <span class="type">int</span> familiarity, String addTime)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.word = word;</span><br><span class="line">        <span class="built_in">this</span>.phonetic = phonetic;</span><br><span class="line">        <span class="built_in">this</span>.definition = definition;</span><br><span class="line">        <span class="built_in">this</span>.example = example;</span><br><span class="line">        <span class="built_in">this</span>.familiarity = familiarity;</span><br><span class="line">        <span class="built_in">this</span>.addTime = addTime;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// getter和setter方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getId</span><span class="params">()</span> &#123; <span class="keyword">return</span> id; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">long</span> id)</span> &#123; <span class="built_in">this</span>.id = id; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getWord</span><span class="params">()</span> &#123; <span class="keyword">return</span> word; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setWord</span><span class="params">(String word)</span> &#123; <span class="built_in">this</span>.word = word; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPhonetic</span><span class="params">()</span> &#123; <span class="keyword">return</span> phonetic; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPhonetic</span><span class="params">(String phonetic)</span> &#123; <span class="built_in">this</span>.phonetic = phonetic; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getDefinition</span><span class="params">()</span> &#123; <span class="keyword">return</span> definition; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setDefinition</span><span class="params">(String definition)</span> &#123; <span class="built_in">this</span>.definition = definition; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getExample</span><span class="params">()</span> &#123; <span class="keyword">return</span> example; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setExample</span><span class="params">(String example)</span> &#123; <span class="built_in">this</span>.example = example; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getFamiliarity</span><span class="params">()</span> &#123; <span class="keyword">return</span> familiarity; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setFamiliarity</span><span class="params">(<span class="type">int</span> familiarity)</span> &#123; <span class="built_in">this</span>.familiarity = familiarity; &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAddTime</span><span class="params">()</span> &#123; <span class="keyword">return</span> addTime; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAddTime</span><span class="params">(String addTime)</span> &#123; <span class="built_in">this</span>.addTime = addTime; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h3><p>接下来创建单词的数据库表结构：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.biji.vocabulary;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteOpenHelper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WordDatabase</span> <span class="keyword">extends</span> <span class="title class_">SQLiteOpenHelper</span> &#123;</span><br><span class="line">    <span class="comment">// 数据库相关常量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TABLE_NAME</span> <span class="operator">=</span> <span class="string">&quot;words&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ID</span> <span class="operator">=</span> <span class="string">&quot;_id&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">WORD</span> <span class="operator">=</span> <span class="string">&quot;word&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">PHONETIC</span> <span class="operator">=</span> <span class="string">&quot;phonetic&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DEFINITION</span> <span class="operator">=</span> <span class="string">&quot;definition&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">EXAMPLE</span> <span class="operator">=</span> <span class="string">&quot;example&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">FAMILIARITY</span> <span class="operator">=</span> <span class="string">&quot;familiarity&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">ADD_TIME</span> <span class="operator">=</span> <span class="string">&quot;add_time&quot;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">WordDatabase</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, <span class="string">&quot;vocabulary.db&quot;</span>, <span class="literal">null</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(SQLiteDatabase db)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建单词表</span></span><br><span class="line">        db.execSQL(<span class="string">&quot;CREATE TABLE &quot;</span> + TABLE_NAME</span><br><span class="line">                + <span class="string">&quot;(&quot;</span></span><br><span class="line">                + ID + <span class="string">&quot; INTEGER PRIMARY KEY AUTOINCREMENT,&quot;</span></span><br><span class="line">                + WORD + <span class="string">&quot; TEXT UNIQUE NOT NULL,&quot;</span></span><br><span class="line">                + PHONETIC + <span class="string">&quot; TEXT,&quot;</span></span><br><span class="line">                + DEFINITION + <span class="string">&quot; TEXT NOT NULL,&quot;</span></span><br><span class="line">                + EXAMPLE + <span class="string">&quot; TEXT,&quot;</span></span><br><span class="line">                + FAMILIARITY + <span class="string">&quot; INTEGER DEFAULT 0,&quot;</span></span><br><span class="line">                + ADD_TIME + <span class="string">&quot; TEXT NOT NULL)&quot;</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUpgrade</span><span class="params">(SQLiteDatabase db, <span class="type">int</span> oldVersion, <span class="type">int</span> newVersion)</span> &#123;</span><br><span class="line">        <span class="comment">// 升级数据库时的操作</span></span><br><span class="line">        <span class="keyword">if</span> (oldVersion &lt; newVersion) &#123;</span><br><span class="line">            <span class="comment">// 可以在这里添加新的列或表</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="单词数据操作类"><a href="#单词数据操作类" class="headerlink" title="单词数据操作类"></a>单词数据操作类</h3><p>创建一个类用于处理单词的CRUD操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.biji.vocabulary;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ContentValues;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.database.Cursor;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WordCRUD</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> WordDatabase dbHandler;</span><br><span class="line">    <span class="keyword">private</span> SQLiteDatabase db;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 列名数组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] columns = &#123;</span><br><span class="line">            WordDatabase.ID,</span><br><span class="line">            WordDatabase.WORD,</span><br><span class="line">            WordDatabase.PHONETIC,</span><br><span class="line">            WordDatabase.DEFINITION,</span><br><span class="line">            WordDatabase.EXAMPLE,</span><br><span class="line">            WordDatabase.FAMILIARITY,</span><br><span class="line">            WordDatabase.ADD_TIME</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 构造方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">WordCRUD</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        dbHandler = <span class="keyword">new</span> <span class="title class_">WordDatabase</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 打开数据库连接</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">open</span><span class="params">()</span> &#123;</span><br><span class="line">        db = dbHandler.getWritableDatabase();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 关闭数据库连接</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span> &#123;</span><br><span class="line">        dbHandler.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加单词</span></span><br><span class="line">    <span class="keyword">public</span> Word <span class="title function_">addWord</span><span class="params">(Word word)</span> &#123;</span><br><span class="line">        <span class="type">ContentValues</span> <span class="variable">values</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">        values.put(WordDatabase.WORD, word.getWord());</span><br><span class="line">        values.put(WordDatabase.PHONETIC, word.getPhonetic());</span><br><span class="line">        values.put(WordDatabase.DEFINITION, word.getDefinition());</span><br><span class="line">        values.put(WordDatabase.EXAMPLE, word.getExample());</span><br><span class="line">        values.put(WordDatabase.FAMILIARITY, word.getFamiliarity());</span><br><span class="line">        values.put(WordDatabase.ADD_TIME, word.getAddTime());</span><br><span class="line">        </span><br><span class="line">        <span class="type">long</span> <span class="variable">insertId</span> <span class="operator">=</span> db.insert(WordDatabase.TABLE_NAME, <span class="literal">null</span>, values);</span><br><span class="line">        word.setId(insertId);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> word;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取单个单词</span></span><br><span class="line">    <span class="keyword">public</span> Word <span class="title function_">getWord</span><span class="params">(<span class="type">long</span> id)</span> &#123;</span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">cursor</span> <span class="operator">=</span> db.query(WordDatabase.TABLE_NAME, columns, </span><br><span class="line">                WordDatabase.ID + <span class="string">&quot;=?&quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;String.valueOf(id)&#125;, </span><br><span class="line">                <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (cursor != <span class="literal">null</span>) cursor.moveToFirst();</span><br><span class="line">        </span><br><span class="line">        <span class="type">Word</span> <span class="variable">word</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Word</span>();</span><br><span class="line">        word.setId(cursor.getLong(<span class="number">0</span>));</span><br><span class="line">        word.setWord(cursor.getString(<span class="number">1</span>));</span><br><span class="line">        word.setPhonetic(cursor.getString(<span class="number">2</span>));</span><br><span class="line">        word.setDefinition(cursor.getString(<span class="number">3</span>));</span><br><span class="line">        word.setExample(cursor.getString(<span class="number">4</span>));</span><br><span class="line">        word.setFamiliarity(cursor.getInt(<span class="number">5</span>));</span><br><span class="line">        word.setAddTime(cursor.getString(<span class="number">6</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> word;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取所有单词</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Word&gt; <span class="title function_">getAllWords</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Word&gt; wordList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">cursor</span> <span class="operator">=</span> db.query(WordDatabase.TABLE_NAME, columns, </span><br><span class="line">                <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, </span><br><span class="line">                WordDatabase.FAMILIARITY + <span class="string">&quot; ASC&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (cursor.getCount() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span> (cursor.moveToNext()) &#123;</span><br><span class="line">                <span class="type">Word</span> <span class="variable">word</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Word</span>();</span><br><span class="line">                word.setId(cursor.getLong(<span class="number">0</span>));</span><br><span class="line">                word.setWord(cursor.getString(<span class="number">1</span>));</span><br><span class="line">                word.setPhonetic(cursor.getString(<span class="number">2</span>));</span><br><span class="line">                word.setDefinition(cursor.getString(<span class="number">3</span>));</span><br><span class="line">                word.setExample(cursor.getString(<span class="number">4</span>));</span><br><span class="line">                word.setFamiliarity(cursor.getInt(<span class="number">5</span>));</span><br><span class="line">                word.setAddTime(cursor.getString(<span class="number">6</span>));</span><br><span class="line">                </span><br><span class="line">                wordList.add(word);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> wordList;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 更新单词</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">updateWord</span><span class="params">(Word word)</span> &#123;</span><br><span class="line">        <span class="type">ContentValues</span> <span class="variable">values</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">        values.put(WordDatabase.WORD, word.getWord());</span><br><span class="line">        values.put(WordDatabase.PHONETIC, word.getPhonetic());</span><br><span class="line">        values.put(WordDatabase.DEFINITION, word.getDefinition());</span><br><span class="line">        values.put(WordDatabase.EXAMPLE, word.getExample());</span><br><span class="line">        values.put(WordDatabase.FAMILIARITY, word.getFamiliarity());</span><br><span class="line">        values.put(WordDatabase.ADD_TIME, word.getAddTime());</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> db.update(WordDatabase.TABLE_NAME, values,</span><br><span class="line">                WordDatabase.ID + <span class="string">&quot;=?&quot;</span>, </span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;String.valueOf(word.getId())&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 删除单词</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeWord</span><span class="params">(Word word)</span> &#123;</span><br><span class="line">        db.delete(WordDatabase.TABLE_NAME, </span><br><span class="line">                WordDatabase.ID + <span class="string">&quot;=?&quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;String.valueOf(word.getId())&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 根据单词文本搜索</span></span><br><span class="line">    <span class="keyword">public</span> Word <span class="title function_">findWordByText</span><span class="params">(String wordText)</span> &#123;</span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">cursor</span> <span class="operator">=</span> db.query(WordDatabase.TABLE_NAME, columns,</span><br><span class="line">                WordDatabase.WORD + <span class="string">&quot;=?&quot;</span>,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">String</span>[] &#123;wordText&#125;,</span><br><span class="line">                <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">                </span><br><span class="line">        <span class="keyword">if</span> (cursor != <span class="literal">null</span> &amp;&amp; cursor.moveToFirst()) &#123;</span><br><span class="line">            <span class="type">Word</span> <span class="variable">word</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Word</span>();</span><br><span class="line">            word.setId(cursor.getLong(<span class="number">0</span>));</span><br><span class="line">            word.setWord(cursor.getString(<span class="number">1</span>));</span><br><span class="line">            word.setPhonetic(cursor.getString(<span class="number">2</span>));</span><br><span class="line">            word.setDefinition(cursor.getString(<span class="number">3</span>));</span><br><span class="line">            word.setExample(cursor.getString(<span class="number">4</span>));</span><br><span class="line">            word.setFamiliarity(cursor.getInt(<span class="number">5</span>));</span><br><span class="line">            word.setAddTime(cursor.getString(<span class="number">6</span>));</span><br><span class="line">            <span class="keyword">return</span> word;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="单词列表界面"><a href="#单词列表界面" class="headerlink" title="单词列表界面"></a>单词列表界面</h3><p>创建一个展示所有单词的列表界面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- word_list_layout.xml --&gt;</span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    android:background=&quot;?attr/lvBackground&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;androidx.appcompat.widget.Toolbar</span><br><span class="line">        android:id=&quot;@+id/word_toolbar&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;?attr/actionBarSize&quot;</span><br><span class="line">        android:background=&quot;?attr/colorPrimary&quot;</span><br><span class="line">        android:elevation=&quot;4dp&quot;</span><br><span class="line">        app:title=&quot;词汇助手&quot;</span><br><span class="line">        app:titleTextColor=&quot;?attr/titleColor&quot;</span><br><span class="line">        android:theme=&quot;?attr/toolbarTheme&quot;</span><br><span class="line">        app:popupTheme=&quot;@style/ThemeOverlay.AppCompat.Light&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ListView</span><br><span class="line">        android:id=&quot;@+id/word_list_view&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;</span><br><span class="line">        android:layout_below=&quot;@id/word_toolbar&quot;</span><br><span class="line">        android:divider=&quot;@android:color/darker_gray&quot;</span><br><span class="line">        android:dividerHeight=&quot;1dp&quot;</span><br><span class="line">        android:padding=&quot;8dp&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;com.google.android.material.floatingactionbutton.FloatingActionButton</span><br><span class="line">        android:id=&quot;@+id/add_word_fab&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_alignParentEnd=&quot;true&quot;</span><br><span class="line">        android:layout_alignParentBottom=&quot;true&quot;</span><br><span class="line">        android:layout_margin=&quot;16dp&quot;</span><br><span class="line">        android:clickable=&quot;true&quot;</span><br><span class="line">        android:contentDescription=&quot;添加单词&quot;</span><br><span class="line">        app:srcCompat=&quot;@drawable/baseline_add_24&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure><h3 id="单词项布局"><a href="#单词项布局" class="headerlink" title="单词项布局"></a>单词项布局</h3><p>为ListView中的每个单词项创建布局</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- word_item_layout.xml --&gt;</span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:orientation=&quot;vertical&quot;</span><br><span class="line">    android:padding=&quot;12dp&quot;</span><br><span class="line">    android:background=&quot;@drawable/word_item_bg&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:orientation=&quot;horizontal&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:id=&quot;@+id/tv_word&quot;</span><br><span class="line">            android:layout_width=&quot;0dp&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            android:layout_weight=&quot;1&quot;</span><br><span class="line">            android:text=&quot;Word&quot;</span><br><span class="line">            android:textColor=&quot;?attr/tvMainColor&quot;</span><br><span class="line">            android:textSize=&quot;18sp&quot;</span><br><span class="line">            android:textStyle=&quot;bold&quot; /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:id=&quot;@+id/tv_phonetic&quot;</span><br><span class="line">            android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            android:text=&quot;[fəˈnetɪk]&quot;</span><br><span class="line">            android:textColor=&quot;?attr/tvSubColor&quot;</span><br><span class="line">            android:textSize=&quot;16sp&quot; /&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/tv_definition&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginTop=&quot;4dp&quot;</span><br><span class="line">        android:text=&quot;Definition&quot;</span><br><span class="line">        android:textColor=&quot;?attr/tvMainColor&quot;</span><br><span class="line">        android:textSize=&quot;14sp&quot;</span><br><span class="line">        android:maxLines=&quot;2&quot;</span><br><span class="line">        android:ellipsize=&quot;end&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_marginTop=&quot;6dp&quot;</span><br><span class="line">        android:orientation=&quot;horizontal&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:id=&quot;@+id/tv_time&quot;</span><br><span class="line">            android:layout_width=&quot;0dp&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            android:layout_weight=&quot;1&quot;</span><br><span class="line">            android:text=&quot;2025-03-15&quot;</span><br><span class="line">            android:textColor=&quot;?attr/tvSubColor&quot;</span><br><span class="line">            android:textSize=&quot;12sp&quot; /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;RatingBar</span><br><span class="line">            android:id=&quot;@+id/rb_familiarity&quot;</span><br><span class="line">            style=&quot;?android:attr/ratingBarStyleSmall&quot;</span><br><span class="line">            android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            android:layout_gravity=&quot;center_vertical&quot;</span><br><span class="line">            android:numStars=&quot;5&quot;</span><br><span class="line">            android:stepSize=&quot;1&quot;</span><br><span class="line">            android:rating=&quot;3&quot; /&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><h3 id="单词适配器"><a href="#单词适配器" class="headerlink" title="单词适配器"></a>单词适配器</h3><p>创建一个适配器用于将单词数据显示在ListView中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.biji.vocabulary;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.BaseAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.Filter;</span><br><span class="line"><span class="keyword">import</span> android.widget.Filterable;</span><br><span class="line"><span class="keyword">import</span> android.widget.RatingBar;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.biji.R;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WordAdapter</span> <span class="keyword">extends</span> <span class="title class_">BaseAdapter</span> <span class="keyword">implements</span> <span class="title class_">Filterable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Word&gt; wordList;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Word&gt; originalWordList;</span><br><span class="line">    <span class="keyword">private</span> WordFilter wordFilter;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">WordAdapter</span><span class="params">(Context context, List&lt;Word&gt; wordList)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.context = context;</span><br><span class="line">        <span class="built_in">this</span>.wordList = wordList;</span><br><span class="line">        <span class="built_in">this</span>.originalWordList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(wordList);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> wordList.size();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">getItem</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> wordList.get(position);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">getItemId</span><span class="params">(<span class="type">int</span> position)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> wordList.get(position).getId();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="type">int</span> position, View convertView, ViewGroup parent)</span> &#123;</span><br><span class="line">        ViewHolder holder;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (convertView == <span class="literal">null</span>) &#123;</span><br><span class="line">            convertView = LayoutInflater.from(context).inflate(R.layout.word_item_layout, parent, <span class="literal">false</span>);</span><br><span class="line">            </span><br><span class="line">            holder = <span class="keyword">new</span> <span class="title class_">ViewHolder</span>();</span><br><span class="line">            holder.tvWord = convertView.findViewById(R.id.tv_word);</span><br><span class="line">            holder.tvPhonetic = convertView.findViewById(R.id.tv_phonetic);</span><br><span class="line">            holder.tvDefinition = convertView.findViewById(R.id.tv_definition);</span><br><span class="line">            holder.tvTime = convertView.findViewById(R.id.tv_time);</span><br><span class="line">            holder.rbFamiliarity = convertView.findViewById(R.id.rb_familiarity);</span><br><span class="line">            </span><br><span class="line">            convertView.setTag(holder);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            holder = (ViewHolder) convertView.getTag();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="type">Word</span> <span class="variable">word</span> <span class="operator">=</span> wordList.get(position);</span><br><span class="line">        holder.tvWord.setText(word.getWord());</span><br><span class="line">        holder.tvPhonetic.setText(word.getPhonetic());</span><br><span class="line">        holder.tvDefinition.setText(word.getDefinition());</span><br><span class="line">        holder.tvTime.setText(word.getAddTime());</span><br><span class="line">        holder.rbFamiliarity.setRating(word.getFamiliarity());</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> convertView;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">ViewHolder</span> &#123;</span><br><span class="line">        TextView tvWord;</span><br><span class="line">        TextView tvPhonetic;</span><br><span class="line">        TextView tvDefinition;</span><br><span class="line">        TextView tvTime;</span><br><span class="line">        RatingBar rbFamiliarity;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Filter <span class="title function_">getFilter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (wordFilter == <span class="literal">null</span>) &#123;</span><br><span class="line">            wordFilter = <span class="keyword">new</span> <span class="title class_">WordFilter</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> wordFilter;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">WordFilter</span> <span class="keyword">extends</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">protected</span> FilterResults <span class="title function_">performFiltering</span><span class="params">(CharSequence constraint)</span> &#123;</span><br><span class="line">            <span class="type">FilterResults</span> <span class="variable">results</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterResults</span>();</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (constraint == <span class="literal">null</span> || constraint.length() == <span class="number">0</span>) &#123;</span><br><span class="line">                results.values = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(originalWordList);</span><br><span class="line">                results.count = originalWordList.size();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">filterString</span> <span class="operator">=</span> constraint.toString().toLowerCase();</span><br><span class="line">                List&lt;Word&gt; filteredList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">for</span> (Word word : originalWordList) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (word.getWord().toLowerCase().contains(filterString) || </span><br><span class="line">                            word.getDefinition().toLowerCase().contains(filterString)) &#123;</span><br><span class="line">                        filteredList.add(word);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">                results.values = filteredList;</span><br><span class="line">                results.count = filteredList.size();</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">return</span> results;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">publishResults</span><span class="params">(CharSequence constraint, FilterResults results)</span> &#123;</span><br><span class="line">            wordList = (List&lt;Word&gt;) results.values;</span><br><span class="line">            notifyDataSetChanged();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="单词列表Activity"><a href="#单词列表Activity" class="headerlink" title="单词列表Activity"></a>单词列表Activity</h3><p>实现单词列表的Activity：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.biji.vocabulary;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.AdapterView;</span><br><span class="line"><span class="keyword">import</span> android.widget.ListView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.widget.SearchView;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.widget.Toolbar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.biji.BaseActivity;</span><br><span class="line"><span class="keyword">import</span> com.example.biji.R;</span><br><span class="line"><span class="keyword">import</span> com.google.android.material.floatingactionbutton.FloatingActionButton;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WordListActivity</span> <span class="keyword">extends</span> <span class="title class_">BaseActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> ListView wordListView;</span><br><span class="line">    <span class="keyword">private</span> WordAdapter adapter;</span><br><span class="line">    <span class="keyword">private</span> List&lt;Word&gt; wordList;</span><br><span class="line">    <span class="keyword">private</span> WordCRUD wordCRUD;</span><br><span class="line">    <span class="keyword">private</span> FloatingActionButton addWordFab;</span><br><span class="line">    <span class="keyword">private</span> Toolbar toolbar;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.word_list_layout);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 初始化工具栏</span></span><br><span class="line">        toolbar = findViewById(R.id.word_toolbar);</span><br><span class="line">        setSupportActionBar(toolbar);</span><br><span class="line">        getSupportActionBar().setDisplayHomeAsUpEnabled(<span class="literal">true</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 初始化控件</span></span><br><span class="line">        wordListView = findViewById(R.id.word_list_view);</span><br><span class="line">        addWordFab = findViewById(R.id.add_word_fab);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 初始化数据</span></span><br><span class="line">        wordList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        adapter = <span class="keyword">new</span> <span class="title class_">WordAdapter</span>(<span class="built_in">this</span>, wordList);</span><br><span class="line">        wordListView.setAdapter(adapter);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 初始化数据库操作</span></span><br><span class="line">        wordCRUD = <span class="keyword">new</span> <span class="title class_">WordCRUD</span>(<span class="built_in">this</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 加载数据</span></span><br><span class="line">        loadWords();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置监听器</span></span><br><span class="line">        addWordFab.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                <span class="comment">// 跳转到添加单词界面</span></span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(WordListActivity.<span class="built_in">this</span>, AddWordActivity.class);</span><br><span class="line">                startActivityForResult(intent, <span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        wordListView.setOnItemClickListener(<span class="keyword">new</span> <span class="title class_">AdapterView</span>.OnItemClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onItemClick</span><span class="params">(AdapterView&lt;?&gt; parent, View view, <span class="type">int</span> position, <span class="type">long</span> id)</span> &#123;</span><br><span class="line">                <span class="comment">// 跳转到单词详情界面</span></span><br><span class="line">                <span class="type">Word</span> <span class="variable">word</span> <span class="operator">=</span> wordList.get(position);</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(WordListActivity.<span class="built_in">this</span>, WordDetailActivity.class);</span><br><span class="line">                intent.putExtra(<span class="string">&quot;word_id&quot;</span>, word.getId());</span><br><span class="line">                startActivityForResult(intent, <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">loadWords</span><span class="params">()</span> &#123;</span><br><span class="line">        wordCRUD.open();</span><br><span class="line">        wordList.clear();</span><br><span class="line">        wordList.addAll(wordCRUD.getAllWords());</span><br><span class="line">        wordCRUD.close();</span><br><span class="line">        adapter.notifyDataSetChanged();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="type">int</span> resultCode, Intent data)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">        <span class="keyword">if</span> (resultCode == RESULT_OK) &#123;</span><br><span class="line">            loadWords(); <span class="comment">// 刷新列表</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> &#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.word_list_menu, menu);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 配置搜索功能</span></span><br><span class="line">        <span class="type">MenuItem</span> <span class="variable">searchItem</span> <span class="operator">=</span> menu.findItem(R.id.action_search_word);</span><br><span class="line">        <span class="type">SearchView</span> <span class="variable">searchView</span> <span class="operator">=</span> (SearchView) searchItem.getActionView();</span><br><span class="line">        searchView.setQueryHint(<span class="string">&quot;搜索单词或释义&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        searchView.setOnQueryTextListener(<span class="keyword">new</span> <span class="title class_">SearchView</span>.OnQueryTextListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onQueryTextSubmit</span><span class="params">(String query)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onQueryTextChange</span><span class="params">(String newText)</span> &#123;</span><br><span class="line">                adapter.getFilter().filter(newText);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onOptionsItemSelected</span><span class="params">(<span class="meta">@NonNull</span> MenuItem item)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (item.getItemId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> android.R.id.home:</span><br><span class="line">                finish();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.action_test:</span><br><span class="line">                <span class="comment">// 跳转到单词测试界面</span></span><br><span class="line">                startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="built_in">this</span>, WordTestActivity.class));</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onOptionsItemSelected(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="单词详情页面"><a href="#单词详情页面" class="headerlink" title="单词详情页面"></a>单词详情页面</h3><p>创建一个用于显示单词详细信息的界面</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- word_detail_layout.xml --&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;?attr/lvBackground&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/word_detail_toolbar&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;?attr/actionBarSize&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;?attr/colorPrimary&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:elevation</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:titleTextColor</span>=<span class="string">&quot;?attr/titleColor&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;?attr/toolbarTheme&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:popupTheme</span>=<span class="string">&quot;@style/ThemeOverlay.AppCompat.Light&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ScrollView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:padding</span>=<span class="string">&quot;16dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_detail_word&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;Word&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;?attr/tvMainColor&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;28sp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textStyle</span>=<span class="string">&quot;bold&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_detail_phonetic&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;8dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;[fəˈnetɪk]&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;?attr/tvSubColor&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;18sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;释义&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;?attr/tvMainColor&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textStyle</span>=<span class="string">&quot;bold&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_detail_definition&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;8dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;Definition&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;?attr/tvMainColor&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;例句&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;?attr/tvMainColor&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textStyle</span>=<span class="string">&quot;bold&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/tv_detail_example&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;8dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;Example sentence&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;?attr/tvMainColor&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;熟悉度&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textColor</span>=<span class="string">&quot;?attr/tvMainColor&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textSize</span>=<span class="string">&quot;16sp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:textStyle</span>=<span class="string">&quot;bold&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">RatingBar</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/rb_detail_familiarity&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;8dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:numStars</span>=<span class="string">&quot;5&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:stepSize</span>=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:rating</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_update_familiarity&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;更新熟悉度&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_delete_word&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;8dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:backgroundTint</span>=<span class="string">&quot;#FF5252&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;删除单词&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ScrollView</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="添加单词功能"><a href="#添加单词功能" class="headerlink" title="添加单词功能"></a>添加单词功能</h3><p>创建一个用于添加新单词的界面：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- add_word_layout.xml --&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">&quot;?attr/lvBackground&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">androidx.appcompat.widget.Toolbar</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/add_word_toolbar&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;?attr/actionBarSize&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">&quot;?attr/colorPrimary&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:elevation</span>=<span class="string">&quot;4dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:title</span>=<span class="string">&quot;添加单词&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:titleTextColor</span>=<span class="string">&quot;?attr/titleColor&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:theme</span>=<span class="string">&quot;?attr/toolbarTheme&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:popupTheme</span>=<span class="string">&quot;@style/ThemeOverlay.AppCompat.Light&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ScrollView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:padding</span>=<span class="string">&quot;16dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">com.google.android.material.textfield.TextInputLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;8dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/et_add_word&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:hint</span>=<span class="string">&quot;单词&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:inputType</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">com.google.android.material.textfield.TextInputLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">com.google.android.material.textfield.TextInputLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;16dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/et_add_phonetic&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:hint</span>=<span class="string">&quot;音标&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:inputType</span>=<span class="string">&quot;text&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">com.google.android.material.textfield.TextInputLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">com.google.android.material.textfield.TextInputLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;16dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/et_add_definition&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:hint</span>=<span class="string">&quot;释义&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:inputType</span>=<span class="string">&quot;textMultiLine&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:minLines</span>=<span class="string">&quot;3&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">com.google.android.material.textfield.TextInputLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">com.google.android.material.textfield.TextInputLayout</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;16dp&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:id</span>=<span class="string">&quot;@+id/et_add_example&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:hint</span>=<span class="string">&quot;例句&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:inputType</span>=<span class="string">&quot;textMultiLine&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">android:minLines</span>=<span class="string">&quot;2&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">com.google.android.material.textfield.TextInputLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_search_word&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;在线查询&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:id</span>=<span class="string">&quot;@+id/btn_save_word&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_marginTop</span>=<span class="string">&quot;16dp&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:text</span>=<span class="string">&quot;保存单词&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ScrollView</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C#学习笔记</title>
      <link href="/posts/9526375f.html"/>
      <url>/posts/9526375f.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-程序学习笔记"><a href="#C-程序学习笔记" class="headerlink" title="C#程序学习笔记"></a>C#程序学习笔记</h1><h1 id="控制台编程基础"><a href="#控制台编程基础" class="headerlink" title="控制台编程基础"></a>控制台编程基础</h1><h2 id="基础信息"><a href="#基础信息" class="headerlink" title="基础信息"></a>基础信息</h2><p>C#是一个现代的、通用的、面向对象的编程语言，它是由微软开发的</p><p>开发工具：VS</p><h3 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250218223758519.png" alt="image-20250218223758519"></p><p>注意这里要选第二个</p><h2 id="C-程序的结构"><a href="#C-程序的结构" class="headerlink" title="C#程序的结构"></a>C#程序的结构</h2><h3 id="第一段代码（输出hello-world）"><a href="#第一段代码（输出hello-world）" class="headerlink" title="第一段代码（输出hello world）"></a>第一段代码（输出hello world）</h3><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="comment">/*在程序中包含system命名空间*/</span></span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSPro002</span></span><br><span class="line"><span class="comment">/*namespace声明，一个namespace包含一系列的类。</span></span><br><span class="line"><span class="comment"> CSPro002命名空间包含了类Program*/</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*class声明，类Helloworld包含了程序使用的数据和方法声明</span></span><br><span class="line"><span class="comment">         类中一半有多个方法，方法定义了类的行为，在这里类中有一个main方法*/</span></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/*和C一样，程序的入口*/</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;Hello,world!&quot;</span>);</span><br><span class="line">            <span class="comment">/*输出语句*/</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>先看这个helloworld的代码，观察一下程序结构<br>个人的理解是：利用了C++的namespace，同时main方法和类中定义方法的模式又是java的<br>总之就是先声明namespace，在namespace中定义类<br>在类中定义方法。</p><h3 id="C-语言的特点"><a href="#C-语言的特点" class="headerlink" title="C#语言的特点"></a>C#语言的特点</h3><ul><li>C#是大小写敏感的</li><li>所有的语句和表达式比如以分号结尾</li><li>程序运行从main方法开始</li><li>与java不同，文件名可以不同于类的名称</li></ul><h3 id="C-程序执行步骤原理"><a href="#C-程序执行步骤原理" class="headerlink" title="C#程序执行步骤原理"></a>C#程序执行步骤原理</h3><ol><li>程序员编写源代码（调用.net framework类库）</li><li>源代码被编译，编译成中间代码MSIL（支持多种语言格式源代码编译成相同的中间代码）</li><li>中间代码在framework中的公共语言运行时CLR环境中被二次编译成机器语言</li><li>经过二次编译的代码在操作系统平台下运行。.net framework ： 主要包括公共语言运行时CLR和类库</li></ol><h3 id="C-的注释"><a href="#C-的注释" class="headerlink" title="C#的注释"></a>C#的注释</h3><p>简单的分成单行和多行</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单行注释</span></span><br><span class="line"><span class="comment">/*多行注释，行内注释*/</span></span><br></pre></td></tr></table></figure><h3 id="控制台输出"><a href="#控制台输出" class="headerlink" title="控制台输出"></a>控制台输出</h3><p><strong>不换行输出</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Console.Write(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">Console.Write(<span class="string">&quot;world!&quot;</span>);</span><br><span class="line"><span class="comment">/*输出后不换行*/</span></span><br></pre></td></tr></table></figure><p><strong>换行输出</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">      Console.WriteLine(<span class="string">&quot;world!&quot;</span>);</span><br><span class="line">      <span class="comment">/*输出后换行*/</span></span><br></pre></td></tr></table></figure><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><ul><li>空格:用于分割字符</li><li>制表符（\t)：用于定位显示的数据，与word中Tabl的文字效果类型</li><li>换行符（\n)：用于是现在新的一行输出信息。</li><li>其他转义字符：如单双引号等</li></ul><p>示例：输出姓名、年龄、分数列表，要求类似表格形式排列整齐</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Console.Write(<span class="string">&quot;姓名\t年龄\t分数\n&quot;</span> +</span><br><span class="line">    <span class="string">&quot;jack\t23\t78\n&quot;</span> +</span><br><span class="line">    <span class="string">&quot;tom\t20\t80\n&quot;</span>);</span><br></pre></td></tr></table></figure><p>示例：输出 我爱“C#”编程</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Console.WriteLine(<span class="string">&quot;I love \&quot;C#\&quot; coding&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="变量和数据类型"><a href="#变量和数据类型" class="headerlink" title="变量和数据类型"></a>变量和数据类型</h2><h3 id="变量和常量"><a href="#变量和常量" class="headerlink" title="变量和常量"></a>变量和常量</h3><p>变量：在程序运行给过程中，存储的内容可以被改变<br>常量：在程序运行的过程中，存储的内容不能被改变</p><p>变量和常量都是在计算机内部申请的存储空间，在这块空间上操作数据</p><p><strong>变量举例：</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span> age - <span class="number">20</span>;</span><br><span class="line">age - <span class="number">21</span>;</span><br><span class="line">Console.WriteLine(age);</span><br></pre></td></tr></table></figure><p><strong>常量举例</strong>：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//圆周率程序会报错，原因是PI是一个const定义的常量，常量不允许改变</span></span><br><span class="line"><span class="keyword">const</span> <span class="built_in">double</span> PI = <span class="number">3.14</span>;</span><br><span class="line">PI = <span class="number">3.15</span>;<span class="comment">//报错</span></span><br></pre></td></tr></table></figure><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p><strong>基本类型如下</strong>：(能够表示的数据范围由小到大)</p><p>整型:byte(sbyte) (u)short (u)int (u)long<br>小数：float double<br>布尔： bool<br>字符：char<br>引用类型：String类型不是基本数据类型，是一种特殊的引用类型。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Threading.Tasks;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">CSPro003</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] args</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/*变量和常量*/</span></span><br><span class="line">            <span class="comment">/*变量*/</span></span><br><span class="line">            <span class="built_in">int</span> age;<span class="comment">//变量的声明</span></span><br><span class="line">            age = <span class="number">18</span>;<span class="comment">//变量赋值</span></span><br><span class="line">            <span class="built_in">int</span> age2 = <span class="number">18</span>;<span class="comment">/*声明+赋值*/</span></span><br><span class="line">            Console.WriteLine(age);</span><br><span class="line">            Console.WriteLine(age2);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*常量(使用const关键字，常量名习惯大写)*/</span></span><br><span class="line">            <span class="keyword">const</span> <span class="built_in">double</span> PI = <span class="number">3.14</span>;</span><br><span class="line">            <span class="comment">//PI = 3.15; 报错</span></span><br><span class="line">            Console.WriteLine(PI);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*数据类型*/</span></span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             1 值类型 2 引用类型</span></span><br><span class="line"><span class="comment">             值类型：</span></span><br><span class="line"><span class="comment">            整数类型 byte(sbyte) ,short(ushort),int(uint),</span></span><br><span class="line"><span class="comment">            浮点型 float double decimal(高精度，适用于钱）</span></span><br><span class="line"><span class="comment">            字符 char</span></span><br><span class="line"><span class="comment">            布尔 bool</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line"></span><br><span class="line">            <span class="built_in">byte</span> n1 = <span class="number">20</span>;</span><br><span class="line">            Console.WriteLine(n1);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// float n2 = 10.1;/*同样报错，同样默认为double*/</span></span><br><span class="line">            <span class="built_in">float</span> n2 = <span class="number">10.1f</span>; <span class="comment">/*同样用强制类型转换*/</span></span><br><span class="line">            Console.WriteLine(n2);</span><br><span class="line">            <span class="built_in">char</span> n3 = <span class="string">&#x27;a&#x27;</span>; <span class="comment">/*给char类型赋值，使用单引号，单引号里面只能是一个字符*/</span></span><br><span class="line">            Console.WriteLine(n3);</span><br><span class="line">            <span class="built_in">bool</span> n4 = <span class="literal">false</span>; <span class="comment">/*只能是t或f*/</span></span><br><span class="line">            Console.WriteLine(n4);</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*sizeof关键字 获取数据类型占用空间</span></span><br><span class="line"><span class="comment">             maxValue 数据类型最大值</span></span><br><span class="line"><span class="comment">             minValue 数据类型最小值*/</span></span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;byte空间&quot;</span>+<span class="keyword">sizeof</span>(<span class="built_in">byte</span>)+<span class="string">&quot;最小值&quot;</span>+<span class="built_in">byte</span>.MinValue + <span class="string">&quot;最大值:&quot;</span> + <span class="built_in">byte</span>.MaxValue);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;sbyte空间&quot;</span>+<span class="keyword">sizeof</span>(<span class="built_in">sbyte</span>) +<span class="string">&quot;最小值&quot;</span>+ <span class="built_in">sbyte</span>.MinValue + <span class="string">&quot;最大值:&quot;</span> + <span class="built_in">sbyte</span>.MaxValue);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;short空间&quot;</span>+<span class="keyword">sizeof</span>(<span class="built_in">short</span>) +<span class="string">&quot;最小值&quot;</span>+ <span class="built_in">short</span>.MinValue + <span class="string">&quot;最大值:&quot;</span> + <span class="built_in">short</span>.MaxValue);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;ushort空间&quot;</span>+<span class="keyword">sizeof</span>(<span class="built_in">ushort</span>) +<span class="string">&quot;最小值&quot;</span>+ <span class="built_in">ushort</span>.MinValue + <span class="string">&quot;最大值:&quot;</span> + <span class="built_in">ushort</span>.MaxValue);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;int空间&quot;</span>+<span class="keyword">sizeof</span>(<span class="built_in">int</span>) +<span class="string">&quot;最小值&quot;</span>+ <span class="built_in">int</span>.MinValue + <span class="string">&quot;最大值:&quot;</span> + <span class="built_in">int</span>.MaxValue);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;uint空间&quot;</span>+<span class="keyword">sizeof</span>(<span class="built_in">uint</span>) +<span class="string">&quot;最小值&quot;</span>+ <span class="built_in">uint</span>.MinValue + <span class="string">&quot;最大值:&quot;</span> + <span class="built_in">uint</span>.MaxValue);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;long空间&quot;</span>+<span class="keyword">sizeof</span>(<span class="built_in">long</span>) +<span class="string">&quot;最小值&quot;</span>+ <span class="built_in">long</span>.MinValue + <span class="string">&quot;最大值:&quot;</span> + <span class="built_in">long</span>.MaxValue);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;float空间&quot;</span>+<span class="keyword">sizeof</span>(<span class="built_in">float</span>) +<span class="string">&quot;最小值&quot;</span>+ <span class="built_in">float</span>.MinValue + <span class="string">&quot;最大值:&quot;</span> + <span class="built_in">float</span>.MaxValue);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;double空间&quot;</span>+<span class="keyword">sizeof</span>(<span class="built_in">double</span>) +<span class="string">&quot;最小值&quot;</span>+ <span class="built_in">double</span>.MinValue + <span class="string">&quot;最大值:&quot;</span> + <span class="built_in">double</span>.MaxValue);</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;char空间&quot;</span>+<span class="keyword">sizeof</span>(<span class="built_in">char</span>));</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;bool空间&quot;</span>+<span class="keyword">sizeof</span>(<span class="built_in">bool</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">//string类型 特殊类型，引用数据类型</span></span><br><span class="line">            <span class="built_in">string</span> str1 = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">            <span class="comment">//使用双引号赋值 双引号里面可以存储多个字符</span></span><br><span class="line">            Console.WriteLine(str1);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//变量Console打印</span></span><br><span class="line">            <span class="built_in">int</span> age1 = <span class="number">50</span>;</span><br><span class="line">            <span class="built_in">int</span> age2 = <span class="number">40</span>;</span><br><span class="line">            <span class="built_in">int</span> age3 = <span class="number">25</span>;</span><br><span class="line">            <span class="comment">//拼接打印</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;age1&quot;</span> + age1</span><br><span class="line">                +<span class="string">&quot;age2&quot;</span> + age2 </span><br><span class="line">                + <span class="string">&quot;age3&quot;</span> + age3);</span><br><span class="line">            <span class="comment">//使用占位符</span></span><br><span class="line">            Console.WriteLine(<span class="string">&quot;刘备年龄:&#123;0&#125;，关于年龄:&#123;1&#125;,张飞年龄:&#123;2&#125;&quot;</span>,age1,age2,age3);</span><br><span class="line">                 </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="运算符、表达式和数据类型"><a href="#运算符、表达式和数据类型" class="headerlink" title="运算符、表达式和数据类型"></a>运算符、表达式和数据类型</h2><h3 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a>表达式</h3><p>表达式：表达式是指由操作数和运算符组成的用于完成某种运算功能的语句。</p><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><h4 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h4><p>算术运算符用在数学表达式中，它们的作用和在数学中的作用一样。下表列出了所有的算术运算符。<br>表格中的示例假设整数变量A的值为10，变量B 的值为20；</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250226185141700.png" alt="image-20250226185141700"></p><p>其中+运算符，除了数学运算，还可以再输出的过程中进行数据拼接，例如：</p><h1 id="窗口化编程基础"><a href="#窗口化编程基础" class="headerlink" title="窗口化编程基础"></a>窗口化编程基础</h1><p>前面的学习过程还是按照传统的应用台控制系统学的，但是从上第一节课开始我才知道这学期要学的是窗体应用，<br>这一点和这学期的培养方案也有关系，因为培养方案来看这学期学的主要是图形化开发。</p><p>然后我打算结合视频和已经有的知识直接来开发大作业。</p><h2 id="图书管理系统设计"><a href="#图书管理系统设计" class="headerlink" title="图书管理系统设计"></a>图书管理系统设计</h2><p>1、分为管理员和普通用户</p><p>2、主要功能：登陆，注册，图书的管理（增删改查），借还书</p><p>3、数据库<br>管理员表：只需要账号（id）密码（password）；<br>用户表：id,name ,sex,pwd；<br>图书表：id,name,autor,publisher，库存。<br>借书表：用户id，图书id，日期</p><p>表名和值</p><p>admin:id,pwd;<br>user:id,name,sex,pwd;<br>book:id,name,author,publisher,number;<br>lend:uid,bid,datetime</p><p>1、在表格控件dataGridView1中显示所有的数据，从数据库中读取数据显示在表格控件中。<br>2、点击返回按钮buttonBack，返回Admin_Main.cs<br>3、有一个label组件labelChosenBook，点击dataGridView1中的一行的值（已经设置了每次获取都是获取一整行）会把id值和name值传给这个label组件，修改这个组件的text值为当前选择的id+name<br>4、点击buttonDelete，进行验证，当前是否有在dataGridView1中选择值，如果有，就弹窗，是否确认删除，如果确认，就执行删除操作，删除选择的dataGridView1中的值。将数据库中的那一行消息删除。删除成功或者失败都通过弹窗提示。<br>5、点击buttonChange，只需要跳转到<br>6、点击buttonRefresh，刷新表格<br>7、点击btnSearchById，先判断textBoxId中的值是否是数字，如果不是则通过弹窗提示，如果是则获取textBoxId中的值作为Id来查询数据，并显示在dataGridView1中，<br>8、点击btnSearchByName，获取textBoxName中的值作为id来查询数据，并且显示在dataGridView1。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Admin_BookManage.cs</span><br><span class="line"></span><br><span class="line">Admin_Main.cs</span><br><span class="line"></span><br><span class="line">BookAdd.cs</span><br><span class="line"></span><br><span class="line">BookChange.cs</span><br><span class="line"></span><br><span class="line">Dao.cs</span><br><span class="line"></span><br><span class="line">Data.cs</span><br><span class="line"></span><br><span class="line">Login.cs</span><br><span class="line"></span><br><span class="line">Program.cs</span><br><span class="line"></span><br><span class="line">Reset.cs</span><br><span class="line"></span><br><span class="line">User_lend.cs</span><br><span class="line"></span><br><span class="line">User_Main.cs</span><br><span class="line"></span><br><span class="line">Userregister.cs</span><br><span class="line"></span><br><span class="line">User_return.cs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">你好，我正在学习一个C# 这是我开发的一个管理系统。请帮我修改User_land.cs的代码，帮我完成一些需求。</span><br><span class="line">1、首先类似Admin_BookManage.cs界面，在User_land.cs中的dataGridView1中显示所有图书数据。</span><br><span class="line">2、其次在用户同样可以通过btnSearchById获取textBoxId中的值查询，btnSearchByName则是获取textBoxName的值查询，然后如果是通过通过btnSearchById获取textBoxId中的值查询，将唯一的查询结果的id+name赋值给labelChosenBook标签的text值。并且选中该图书，获取该书的id</span><br><span class="line">3、点击buttonLend的时候执行咨询操作，先判断现在是否有选中的图书，如果没有则弹窗没有，如果有，再判断该字段的number值是否大于0，如果不满足则再弹窗提示，如果满足则执行借书操作，生成一条lend表的字段信息，uid为当前用户id，bid为书本的id，datetime获取当前时间即可，然后将Book表中的该书本字段信息中的number值-1。</span><br><span class="line">如果要满足上述功能，请告诉我要如何修改代码？</span><br></pre></td></tr></table></figure><h3 id="需要补充的NuGet包"><a href="#需要补充的NuGet包" class="headerlink" title="需要补充的NuGet包"></a>需要补充的NuGet包</h3><div class="table-container"><table><thead><tr><th style="text-align:left">包名称</th><th style="text-align:left">版本</th><th style="text-align:left">作用</th></tr></thead><tbody><tr><td style="text-align:left">System.Text.Json</td><td style="text-align:left">≥6.0</td><td style="text-align:left">JSON解析</td></tr><tr><td style="text-align:left">Microsoft.CSharp</td><td style="text-align:left">≥4.7</td><td style="text-align:left">动态类型支持</td></tr><tr><td style="text-align:left">System.Net.Http.Json</td><td style="text-align:left">≥5.0</td><td style="text-align:left">HTTP内容处理</td></tr></tbody></table></div><h3 id=""><a href="#" class="headerlink" title=" "></a> </h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QT图形界面开发学习笔记</title>
      <link href="/posts/1fa48c3e.html"/>
      <url>/posts/1fa48c3e.html</url>
      
        <content type="html"><![CDATA[<h1 id="QT图形界面开发"><a href="#QT图形界面开发" class="headerlink" title="QT图形界面开发"></a>QT图形界面开发</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="进入网站"><a href="#进入网站" class="headerlink" title="进入网站"></a>进入网站</h3><p><a href="https://www.qt.io/download-qt-installer-oss">Download Qt OSS: Get Qt Online Installer</a></p><p>进入这个网站，一定要先注册，注册之后要打开邮箱做邮箱验证，然后才可以使用。</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250111175702039.png" alt="image-20250111175702039"></p><p>选择正确的版本，点击按钮就自动下载了</p><h3 id="切换镜像开启安装（重要）"><a href="#切换镜像开启安装（重要）" class="headerlink" title="切换镜像开启安装（重要）"></a>切换镜像开启安装（重要）</h3><p>下载完成之后一定要使用power shell打开下载文件所在的文件夹</p><p><img src="C:/Users/darks/AppData/Roaming/Typora/typora-user-images/image-20250111180005886.png" alt="image-20250111175917787"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250111180016897.png" alt="image-20250111180016897"></p><p>然后输入</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\ （连括号整个替换成下载下来的文件名） <span class="literal">--mirror</span> https://mirrors.ustc.edu.cn/qtproject/</span><br></pre></td></tr></table></figure><p>然后就自动切换镜像并且开始了安装流程</p><p>如果你出现<code>“无法将“.\qt-online-installer-windows-x64-4.8.0.exe”项识别为 cmdlet、函数、脚本文件或可运行程序的名称。”</code>这样的错误，那90%概率你替换有误</p><h3 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h3><p>输入账号密码开始安装，基本上一直点下一步就行<br>（懒得重新截图了，下面的几张图来自csdn 文章编号：132645054）</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/1afd6dc33e2c4160b2425194b45f49b0.png" alt=""></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/d82f396c20af4eba807f271a6e4bf155.png" alt="在这里插入图片描述"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/ad888d350e974ee1bb04ad90ced03c0b.png" alt="在这里插入图片描述"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/082bf8cbb98c4d699ef2d6b791bb2069.png" alt="在这里插入图片描述"></p><p>这里要选择安装路径（不能有中文）</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/e1144cff005c4cf9bcf22a07a290cbce.png" alt="在这里插入图片描述"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/1a3fea68f7654094a9f577cb51cc7c8f.png" alt="在这里插入图片描述"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/cc5cf14941c3438aa9ea59a97f136923.png" alt="在这里插入图片描述"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/b723d37443f34b328504859e53632311.png" alt="在这里插入图片描述"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/77ae7c2e76e545ee85efea659d2b9dba.png" alt="在这里插入图片描述"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/5dd3f8cb176a4e2cb829e4ac447eee53.png" alt="在这里插入图片描述"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/9170d5855c5d41b5ab5db1e256898631.png" alt="在这里插入图片描述"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/fc271c75c40844e1a85288408116b7af.png" alt="在这里插入图片描述"></p><p>等待安装完成就结束了安装。</p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>创建项目随便选一个，基于这里创建的类型不同可能会有不同，但是基本上差别不大。</p><p>后记：这里如果选第一个就是用C++的方式去编写程序，如果选第二个就是编写控制台程序<br>只有选第三个和第四个才是用QML编写程序</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250111183731110.png" alt="image-20250111183731110"></p><p>进去之后 直接点左下角运行一下<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250111183830421.png" alt="image-20250111183830421"></p><p>如果出现这个可以拖动的helloword就是创建成功了<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250111183849888.png" alt="image-20250111183849888"></p><h2 id="代码学习-基于QML的方式"><a href="#代码学习-基于QML的方式" class="headerlink" title="代码学习(基于QML的方式)"></a>代码学习(基于QML的方式)</h2><h3 id="认识QT"><a href="#认识QT" class="headerlink" title="认识QT"></a>认识QT</h3><p>qt是一个图形框架，基于C++开发<br>可以做什么？<br>windows linux mac软件，安卓，ios，鸿蒙<br>qt两大派系<br>QML C++<br>QML的语法更加简单 适合没学过C++的</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">import QtQuick</span><br><span class="line"><span class="comment">/*相当于C语言的包含头文件 引入库</span></span><br><span class="line"><span class="comment">QtQuick是一个库*/</span></span><br><span class="line"><span class="comment">/*下面的windows就是一个基本数据类型*/</span></span><br><span class="line"><span class="comment">/*在QT里面 数据类型分为两大类</span></span><br><span class="line"><span class="comment">一种叫做对象类型：Window</span></span><br><span class="line"><span class="comment">另一种叫值类型：整形 浮点型 字符串 布尔型</span></span><br><span class="line"><span class="comment">如何区分？</span></span><br><span class="line"><span class="comment">凡是对象类型的 都会有一个花括号&#123;&#125;来标示它是个对象</span></span><br><span class="line"><span class="comment">后面没有 带花括号的都是值类型</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*根对象 在每个源文件中只允许存在一个根对象</span></span><br><span class="line"><span class="comment">类似c++和java中的main函数 只能有一个*/</span></span><br><span class="line">Window &#123;</span><br><span class="line">    <span class="comment">/*声明自己的属性 通过property关键字声明</span></span><br><span class="line"><span class="comment">        property 数据类型 名称 ： 值</span></span><br><span class="line"><span class="comment">    可以不赋值 通过换行分隔*/</span></span><br><span class="line">    property <span class="type">int</span> a</span><br><span class="line">    property <span class="built_in">string</span> str1 :<span class="string">&quot;hello world QML&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*括号中的部分都是window这个对象的属性</span></span><br><span class="line"><span class="comment">    通过冒号给属性赋值，下面的属性都是window里面自带的属性*/</span></span><br><span class="line">    width: <span class="number">640</span></span><br><span class="line">    height: <span class="number">480</span></span><br><span class="line">    visible: <span class="literal">true</span></span><br><span class="line">    <span class="comment">// title: qsTr(&quot;Hello World&quot;)</span></span><br><span class="line">    <span class="comment">/*上面分别对应窗口的长宽 是否可见和标题*/</span></span><br><span class="line">    title: str1</span><br><span class="line">    <span class="comment">/*id是给上个面的window根对象取一个名字</span></span><br><span class="line"><span class="comment">      QT中赋值的操作在对象中 不在定义的时候</span></span><br><span class="line"><span class="comment">      同时对象的名字可以为空*/</span></span><br><span class="line">    id:root</span><br><span class="line">    <span class="comment">/*子对象：矩形*/</span></span><br><span class="line">    Rectangle&#123;</span><br><span class="line">        x:<span class="number">100</span></span><br><span class="line">        y:<span class="number">100</span></span><br><span class="line">        width:root.width/<span class="number">3</span> <span class="comment">/*设置矩形的宽度为窗口宽度的三分之一*/</span></span><br><span class="line">        <span class="comment">/*这种哦绑定的方式类似动态绑定*/</span></span><br><span class="line">        height:<span class="number">200</span></span><br><span class="line">        color:<span class="string">&quot;blue&quot;</span></span><br><span class="line">        <span class="comment">/*把这个子对象赋给矩形</span></span><br><span class="line"><span class="comment">          文本的坐标轴就从矩形（父对象 ）左上角开始为0*/</span></span><br><span class="line">        Text&#123;</span><br><span class="line">            x:<span class="number">20</span></span><br><span class="line">            y:<span class="number">100</span></span><br><span class="line">            text:<span class="string">&quot;第二个文本&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*子对象：文本 */</span></span><br><span class="line">    Text&#123;</span><br><span class="line">        text:<span class="string">&quot;你好 123&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*正常情况下直接加下面的文本对象会重叠</span></span><br><span class="line"><span class="comment">    QT使用笛卡尔坐标系 坐标原点在左上角*/</span></span><br><span class="line">    <span class="comment">// Text&#123;</span></span><br><span class="line">    <span class="comment">//     text:&quot;第二个文本&quot;</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>笛卡尔坐标系</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250111193656537.png" alt="image-20250111193656537"></p><h3 id="登陆界面"><a href="#登陆界面" class="headerlink" title="登陆界面"></a>登陆界面</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> QtQuick</span><br><span class="line"><span class="keyword">import</span> QtQuick.Controls</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Window &#123;</span><br><span class="line">    property string str1:<span class="string">&quot;登陆界面&quot;</span></span><br><span class="line"></span><br><span class="line">    width: <span class="number">320</span></span><br><span class="line">    height: <span class="number">480</span></span><br><span class="line">    visible: <span class="literal">true</span></span><br><span class="line">    title: str1</span><br><span class="line">    id:root</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Image&#123;</span><br><span class="line">        id:redrabbit</span><br><span class="line">        x:(root.width-redrabbit.width)/<span class="number">2</span></span><br><span class="line">        width:<span class="number">120</span></span><br><span class="line">        height:<span class="number">140</span></span><br><span class="line">        source: <span class="string">&quot;https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/5eea8644b528184bef8380be5fb36de9.jpg&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    TextField&#123;</span><br><span class="line">        x:<span class="number">30</span></span><br><span class="line">        y:<span class="number">200</span></span><br><span class="line">        width:<span class="number">250</span></span><br><span class="line">        height: <span class="number">45</span></span><br><span class="line">        font.pixelSize: <span class="number">20</span><span class="comment">/*设置字体大小*/</span></span><br><span class="line">        verticalAlignment:Text.AlignVCenter<span class="comment">/*水平对齐*/</span></span><br><span class="line">        horizontalAlignment: Text.AlignHCenter<span class="comment">/*垂直对其*/</span></span><br><span class="line">        placeholderText: <span class="string">&quot;请输入账号&quot;</span></span><br><span class="line">        <span class="comment">/*前面的是属性*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    TextField&#123;</span><br><span class="line">        x:<span class="number">30</span></span><br><span class="line">        y:<span class="number">270</span></span><br><span class="line">        width:<span class="number">250</span></span><br><span class="line">        height: <span class="number">45</span></span><br><span class="line">        font.pixelSize: <span class="number">20</span><span class="comment">/*设置字体大小*/</span></span><br><span class="line">        verticalAlignment:Text.AlignVCenter<span class="comment">/*水平对齐*/</span></span><br><span class="line">        horizontalAlignment: Text.AlignHCenter<span class="comment">/*垂直对其*/</span></span><br><span class="line">        placeholderText: <span class="string">&quot;请输入密码 &quot;</span></span><br><span class="line">        <span class="comment">/*添加掩码*/</span></span><br><span class="line">        echoMode: TextInput.Password</span><br><span class="line">        <span class="comment">/*前面的是属性*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Button&#123;</span><br><span class="line">        x:<span class="number">30</span></span><br><span class="line">        y:<span class="number">350</span></span><br><span class="line">        width:<span class="number">250</span></span><br><span class="line">        height:<span class="number">50</span></span><br><span class="line">        text:<span class="string">&quot;登录&quot;</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="使用技巧-快捷键"><a href="#使用技巧-快捷键" class="headerlink" title="使用技巧(快捷键)"></a>使用技巧(快捷键)</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250206145134819.png" alt="image-20250206145134819"></p><h3 id="项目管理"><a href="#项目管理" class="headerlink" title="项目管理"></a>项目管理</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250206145724852.png" alt="image-20250206145724852"></p><p>Clang代码模型<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250206145754306.png" alt="image-20250206145754306"></p><h3 id="QT框架功能概述"><a href="#QT框架功能概述" class="headerlink" title="QT框架功能概述"></a>QT框架功能概述</h3><p><strong>QT类库的模块</strong><br>QT中的模块分为两大类<br>QT基本模块：提供了QT再所有平台上的基本功能<br>QT附加模块：实现一些特定功能的模块</p><p><strong>基本模块</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250209023039408.png" alt="image-20250209023039408"></p><p><strong>附加模块</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250209023149900.png" alt="image-20250209023149900"></p><p>QT附加模块可以实现一些特定目的，可能只在某些开发平台上有，或只能用于某些操作系统</p><h3 id="QT全局定义"><a href="#QT全局定义" class="headerlink" title="QT全局定义"></a>QT全局定义</h3><p><QTGlobal>头文件（QT类的头文件都会包含该头文件)包含了QT类库的一些全局定义:<br>基本数据<br>函数<br>宏<br><strong>数据类型定义:</strong><br>确保再各个平台上都有同意确定的长度</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250209030636816.png" alt="image-20250209030636816"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250209030650424.png" alt="image-20250209030650424"></p><p><strong>全局函数定义</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250209053057136.png" alt="image-20250209053057136"></p><p>还有一些基础的数学原酸函数再<QtMath>头文件中定义，比如三角运算函数，弧度与角度之间的转换函数</p><p><strong>宏定义</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250209053501541.png" alt="image-20250209053501541"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250209053509892.png" alt="image-20250209053509892"></p><h3 id="QT的元对象系统"><a href="#QT的元对象系统" class="headerlink" title="QT的元对象系统"></a>QT的元对象系统</h3><p>QT中引入元对象系统堆标准C++语言进行了扩展<br>QObject类是所有使用原对象系统的类的基类<br>必须在一个类的开头部分插入宏Q_OBJECT，才可以使用元对象系统的特性。当MOC发现类中定义了Q_OBJECT宏时,会为其生成相应的C++源文件<br>元对象编译器是一个预处理器，先将Qt的特性程序转换为标准C++程序，再由标准C++编译器进行编译</p><p>Object类<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250212221442194.png" alt="image-20250212221442194"></p><p>QMetaObject类<br>元对象是对类的描述，包含类信息、方法、属性等元数据<br>QObject和QMetaObject 提供了以下函数接口，可以获取运行时类型信息，类似标准的C++中的RTTI<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250212221629316.png" alt="image-20250212221629316"></p><p>属性系统</p><p>在OObject的子类中可以通过Q_PROPERTY宏定义属性</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250216192921648.png" alt="image-20250216192921648"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250216192932650.png" alt="image-20250216192932650"></p><p>这个部分后面太难了，学不懂，确定要用了再回来学</p><h3 id="信号与槽"><a href="#信号与槽" class="headerlink" title="信号与槽"></a>信号与槽</h3><p>信号与槽是元对象系统支持的，对象间通信所采用的机制</p><p>connect函数的使用</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250216195058634.png" alt="image-20250216195058634"></p><p>其中第一个参数是发送者，第二个参数是信号，第三个参数是接收者，这样就可以读懂了。<br>可知接收者往往就是指针，另这个函数是静态函数，所以不管在哪里调用都行。<br>比如在widget里面使用，那么肯定是指向widget的（子类)</p><p>如果信号和槽函数都存在重载的情况，则需要使用qOverload&lt;参数类型&gt;进行指定:</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250216201925347.png" alt="image-20250216201925347"></p><p>上面的形式都是静态函数版本，无法获得对象本身的this指针。还有成员函数的版本</p><p><strong>disconnect()函数的使用</strong><br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250216202257164.png" alt="image-20250216202257164"></p><p>sender()函数<br>在槽函数里，使用QObject::sender()可以获取信号发射者的指针</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QSPinBox*spinbox = <span class="built_in">qobject_cast</span>&lt;QSpinBox*&gt;(<span class="built_in">sender</span>())</span><br></pre></td></tr></table></figure><p>自定义信号及其使用</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250216202421414.png" alt="image-20250216202421414"></p><h2 id="代码学习（基于C-）"><a href="#代码学习（基于C-）" class="headerlink" title="代码学习（基于C++）"></a>代码学习（基于C++）</h2><p>声明：此部分的学习过程严格遵循《QT6 C++开发指南 2023》</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250117213926322.png" alt="image-20250117213926322"></p><h2 id="认识QT-1"><a href="#认识QT-1" class="headerlink" title="认识QT"></a>认识QT</h2><p>简介：QT是一个跨平台的应用开发框架，也是最主流的C++开发框架<br>QT具有其他编程语言的拓展，但QT本身是用C++开发</p><h3 id="跨平台"><a href="#跨平台" class="headerlink" title="跨平台"></a>跨平台</h3><p>QT具有跨平台开发的的能力，只要熟悉一种平台的开发，很快就能适应其他平台的开发。并且QT源代码编译之后生成目标平台的原生二进制代码，不像JAVA那样需要虚拟机，运行效率更高。</p><h3 id="QT支持的开发语言"><a href="#QT支持的开发语言" class="headerlink" title="QT支持的开发语言"></a>QT支持的开发语言</h3><p>C++和QML：<br>Q对标准的C+++语言进行了扩展，引入了信号和槽等机制。<br>QML是一个用来描述应用程序界面的声明式脚本语言<br>C++和QML可以混合使用<br>python：不做赘述</p><h3 id="编写一个hello-world程序"><a href="#编写一个hello-world程序" class="headerlink" title="编写一个hello world程序"></a>编写一个hello world程序</h3><p>创建文件</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250117223552019.png" alt="image-20250117223552019"></p><p>这里就要选择第一个了，因为现在要用C++的方式编写</p><p>重点是下图的地方要选qmake或者cmake，要求是选qmake</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250117223612580.png" alt="image-20250117223612580"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250117223650958.png" alt="image-20250117223650958"></p><p>上面是选择基类，基本上也这样选，之后如果没有特殊情况都这样构建新项目。</p><p>构建完程序之后进入下面的画面，其中点击.ui文件自动跳转到了Design界面去编辑界面，编辑的方式类似早期我学过的VB，大概了解到了，这个.ui文件就是对于窗口布局的描述说明。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250117223741477.png" alt="image-20250117223741477"></p><p>再design里面找到label，然后拖到右边。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250117225823302.png" alt="image-20250117225823302"></p><p>就可以在这里写上hello world了<br>在右下角的部分可以改变文字的属性，框体也可以直接用拖动的方式编辑。<br>点击左下角就可以直接运行，这样第一个程序就结束了。</p><h2 id="GUI程序设计基础"><a href="#GUI程序设计基础" class="headerlink" title="GUI程序设计基础"></a>GUI程序设计基础</h2><h3 id="GUI程序结构与运行机制"><a href="#GUI程序结构与运行机制" class="headerlink" title="GUI程序结构与运行机制"></a>GUI程序结构与运行机制</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250117230212187.png" alt="image-20250117230212187"></p><p>上面说了我们选择qmake的方式编写，这样一定会生成.pro结尾的配置文件，对于qmake中的配置文件有一些常见变量和含义（如下）</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250120172350271.png" alt="image-20250120172350271"></p><p>再来说一下这个pro文件中常见的+=语法和格式，相当于把右边的包中的内容加到左边，类似于C++中的包含头文件</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250120172444538.png" alt="image-20250120172444538"></p><p>qmake是构建项目的软件，它根据.pro文件生成makefile文件，然后C++编译器可以根据makefile文件进行编译和链接<br>qmake还会自动生成moc（meta-object compiler）和UIC（user interface compiler）生成构建规则</p><p>$$为替换函数的前缀</p><h3 id="认识qt基础文件"><a href="#认识qt基础文件" class="headerlink" title="认识qt基础文件"></a>认识qt基础文件</h3><p>pro文件在上面已经说了，剩下的几个文件我通过注释的方式大概了解一下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">widget.h</span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> WIDGET_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIDGET_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QWidget&gt;</span></span></span><br><span class="line"></span><br><span class="line">QT_BEGIN_NAMESPACE</span><br><span class="line"><span class="keyword">namespace</span> Ui &#123; <span class="comment">/*命名空间*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Widget</span>;<span class="comment">/*ui_widget.h里面定义的类，外部声明*/</span></span><br><span class="line">&#125;</span><br><span class="line">QT_END_NAMESPACE</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Widget</span> : <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT<span class="comment">//宏 使用qt信号与槽机制必须添加</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Widget</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">Widget</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::Widget *ui;<span class="comment">//Ui::Widget类型的一个指针，指向可视化的界面。</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// WIDGET_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">main.cpp</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;widget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QApplication&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;<span class="comment">//定义并创建应用程序</span></span><br><span class="line">    Widget w;<span class="comment">//定义并创建窗口</span></span><br><span class="line">    w.<span class="built_in">show</span>();<span class="comment">//显式窗口</span></span><br><span class="line">    <span class="keyword">return</span> a.<span class="built_in">exec</span>();<span class="comment">//应用程序运行，开始消息循环和事件处理</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">widget.cpp</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_widget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">/*实现了组件的各种设置、信号与槽的关联*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Widget::~<span class="built_in">Widget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>更改窗口标题</p><p>在如下图右下角位置可以更改<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250120225124520.png" alt="image-20250120225124520"></p><h2 id="信号与槽简介"><a href="#信号与槽简介" class="headerlink" title="信号与槽简介"></a>信号与槽简介</h2><p>信号与槽式QT编程的基础，也是QT的一大创新，它使QT中的组件就叫唤变得直观<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250120234108333.png" alt="image-20250120234108333"></p><p>上面式信号槽多种实现方式中的一种，connect式QObject类中的静态成员函数。signal和slot式QT的宏，用于将哟参数转换为相应的字符串。下面式一些注意事项：<br>一个信号可以连接多个槽函数<br>多个信号可以连接同一个参函数<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250120234259986.png" alt="image-20250120234259986"></p><p>一个型号可以连接另一个信号<br>QT还支持通过函数名称将信号和槽相关联，需要首先开启该功能。</p><h3 id="QT项目构建过程的基本原理"><a href="#QT项目构建过程的基本原理" class="headerlink" title="QT项目构建过程的基本原理"></a>QT项目构建过程的基本原理</h3><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250120234428162.png" alt="image-20250120234428162"></p><h2 id="实操部分"><a href="#实操部分" class="headerlink" title="实操部分"></a>实操部分</h2><h3 id="关闭程序"><a href="#关闭程序" class="headerlink" title="关闭程序"></a>关闭程序</h3><p>因为全部是实操涉及代码 ，所以只能由我来描述操作的过程。实际过程也没办法用视频展示。首先按照惯例新建一个项目，然后来到ui设计的部分。然后拖入一个label 拖入一个btn。<br>然后就来到了这部分的关键操作：在下面选择信号与槽，然后选择刚才加入的按钮对象，事件选择关闭，对象选择整个widget窗口，触发选择点击。<br>到这里为止关闭的功能就做好了，可以直接运行程序。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250120225551212.png" alt="image-20250120225551212"></p><p>除此之外，关于修改按钮内容和标签内容，还可以通过代码的方式修改，在widget.cpp文件中使用this指针赋值就行</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_widget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    ui-&gt;label-&gt;<span class="built_in">setText</span>(<span class="string">&quot;这是用代码修改的标签&quot;</span>);</span><br><span class="line">    ui-&gt;pushButton-&gt;<span class="built_in">setText</span>(<span class="string">&quot;代码修改&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Widget::~<span class="built_in">Widget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250120233348033.png" alt="image-20250120233348033"></p><p>同时经过我自己的测试，代码修改的方式优先级比直接在设置里面修改高。</p><h3 id="可视化UI设计"><a href="#可视化UI设计" class="headerlink" title="可视化UI设计"></a>可视化UI设计</h3><p>项目要求</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250120233559611.png" alt="image-20250120233559611"></p><p>注意 这个项目创建的时候必须要选择Qdialog作为窗口基类<br>比如我就做错了，所以下面的教程前面的部分都是根据错误的项目做的，但是步骤都是对的，只是中间我退回去重新构建了一下项目</p><h4 id="加入qrc文件"><a href="#加入qrc文件" class="headerlink" title="加入qrc文件"></a>加入qrc文件</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121161042620.png" alt="image-20250121161042620"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121161209236.png" alt="image-20250121161209236"></p><p>成功导入之后进入设计页面，再右下角搜索icon，这个windowicon就是这个窗口左上角的图标了，然后通过右边的选择就可以选择刚才导入成功的bmp图标，然后再运行就会出现图中的样子，显示导入已经成功了，图标已经替换成了我们想要的图标。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121161426308.png" alt="image-20250121161426308"></p><p>接下来就可以设计ui了<br>ui设计大致如下，上面我们已经改了窗口的图标<br>然后这里的设计用了两个group box 来排版<br>然后字体部分用了check box 颜色部分是radio button<br>下面就是一个可以输入的input widgets 输入窗口 选择的是Plain Text Edit </p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121162650778.png" alt="image-20250121162650778"></p><p>构建好了基础的ui之后再为下方的三个按钮加上图标<br>首先选择要更改的按钮，点击之后在右下角搜索icon，然后通过选择的方式就可以选择到自己加入过的图标了。<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121165351154.png" alt="image-20250121165351154"></p><p>这里我做到这这一步 才发现程序建立的时候建立错误了。我的程序不是基于Qdialog的 我用了widget<br>所以这里我退回去重做了<br>重新构建完了之后，先进去信号与槽，然后通过选择把退出按钮的功能实现<br>然后把确定按钮的功能暂定为accept（）</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121180454871.png" alt="image-20250121180454871"></p><p>接下来要做清空的功能，首先右键清空键，选择go to slot<br>然后选择clicked（）</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121180628616.png" alt="image-20250121180628616"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121180656955.png" alt="image-20250121180656955"></p><p>然后就进入了一个代码界面<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121180726418.png" alt="image-20250121180726418"></p><p>然后通过手动的方式写功能，调用了一个clear函数<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121182524224.png" alt="image-20250121182524224"></p><p>编写完了之后测试一下 功能正常<br>然后在来到字体部分，同样是右键点击。但是这里是要选择勾中和没勾中的状态，所以这里要选择布尔类型的clicked</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121182702224.png" alt="image-20250121182702224"></p><p>同样也是通过代码的方式修改，这里可能有点困难，所以我把截图先放上来，最后把代码全部放上来。<br>简单来说就是通过上面的操作修改之后，再通过下面的代码实现功能 三个字体操作的代码基本上是一样的<br>只有调用的set方法不同</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121194003363.png" alt="image-20250121194003363"></p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dialog.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_dialog.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Dialog::<span class="built_in">Dialog</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QDialog</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Dialog)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dialog::~<span class="built_in">Dialog</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dialog::on_clearBtn_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*这里就相当于是用手动编写的方式给这个按钮添加功能*/</span></span><br><span class="line">    ui-&gt;plainTextEdit-&gt;<span class="built_in">clear</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dialog::on_checkBox_clicked</span><span class="params">(<span class="type">bool</span> checked)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*下划线的本质是修改字体，所以我们要先拿到当前的字体然后修改</span></span><br><span class="line"><span class="comment">当前字体的下划线部分*/</span></span><br><span class="line">    QFont font = ui-&gt;plainTextEdit-&gt;<span class="built_in">font</span>();</span><br><span class="line">    font.<span class="built_in">setUnderline</span>(checked);</span><br><span class="line">    ui-&gt;plainTextEdit-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line">    <span class="comment">/*先创建一个字体对象 然后获取当前的字体</span></span><br><span class="line"><span class="comment">     * 然后对获取到的字体调用添加下划线的方法</span></span><br><span class="line"><span class="comment">     * 最后使用set方法设回字体</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dialog::on_checkBox_3_clicked</span><span class="params">(<span class="type">bool</span> checked)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QFont font = ui-&gt;plainTextEdit-&gt;<span class="built_in">font</span>();</span><br><span class="line">    font.<span class="built_in">setItalic</span>(checked);</span><br><span class="line">    ui-&gt;plainTextEdit-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dialog::on_checkBox_2_clicked</span><span class="params">(<span class="type">bool</span> checked)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QFont font = ui-&gt;plainTextEdit-&gt;<span class="built_in">font</span>();</span><br><span class="line">    font.<span class="built_in">setBold</span>(checked);</span><br><span class="line">    ui-&gt;plainTextEdit-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>到这里为止 字体的部分已经全部设置好了，功能已经全部实现了。</p><p>接下来是关于颜色的部分，颜色是单选框 然后需要发送给同样的slots<br>说人话就是要手写代码了：首先来到头文件<br>首先在头文件里创建一个slot函数（注意slot函数的返回值类型都是void<br>然后再右键 去定义</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121200915398.png" alt="image-20250121200915398"></p><p>来到cpp文件的部分完成这里的代码 发现没有起作用</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121223152431.png" alt="image-20250121223152431"></p><p>说人话就是这里相当于只是写了一个函数，但是没有被调用，没有被加在主程序中，所以没有效果。</p><p>所以还要在上面的基类中加入connect<br>那么问题来了，怎么写这个connect语句<br>首先我们来到文件的顶部<br>然后点击上面自动生成的ui头文件<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121223524908.png" alt="image-20250121223524908"></p><p>在里面第一个函数结束前上方就可以找到<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121223623940.png" alt="image-20250121223623940"></p><p>然后我们手动添加connect就成功了</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121225327404.png" alt="image-20250121225327404"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">dialog.cpp</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dialog.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_dialog.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">Dialog::<span class="built_in">Dialog</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QDialog</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Dialog)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">connect</span>(ui-&gt;blackRad,<span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">do_FontColor</span>()));</span><br><span class="line">    <span class="built_in">connect</span>(ui-&gt;blueRad,<span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">do_FontColor</span>()));</span><br><span class="line">    <span class="built_in">connect</span>(ui-&gt;redRad,<span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">do_FontColor</span>()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dialog::~<span class="built_in">Dialog</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dialog::on_clearBtn_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*这里就相当于是用手动编写的方式给这个按钮添加功能*/</span></span><br><span class="line">    ui-&gt;plainTextEdit-&gt;<span class="built_in">clear</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dialog::on_checkBox_clicked</span><span class="params">(<span class="type">bool</span> checked)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*下划线的本质是修改字体，所以我们要先拿到当前的字体然后修改</span></span><br><span class="line"><span class="comment">当前字体的下划线部分*/</span></span><br><span class="line">    QFont font = ui-&gt;plainTextEdit-&gt;<span class="built_in">font</span>();</span><br><span class="line">    font.<span class="built_in">setUnderline</span>(checked);</span><br><span class="line">    ui-&gt;plainTextEdit-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line">    <span class="comment">/*先创建一个字体对象 然后获取当前的字体</span></span><br><span class="line"><span class="comment">     * 然后对获取到的字体调用添加下划线的方法</span></span><br><span class="line"><span class="comment">     * 最后使用set方法设回字体</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dialog::on_checkBox_3_clicked</span><span class="params">(<span class="type">bool</span> checked)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QFont font = ui-&gt;plainTextEdit-&gt;<span class="built_in">font</span>();</span><br><span class="line">    font.<span class="built_in">setItalic</span>(checked);</span><br><span class="line">    ui-&gt;plainTextEdit-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dialog::on_checkBox_2_clicked</span><span class="params">(<span class="type">bool</span> checked)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QFont font = ui-&gt;plainTextEdit-&gt;<span class="built_in">font</span>();</span><br><span class="line">    font.<span class="built_in">setBold</span>(checked);</span><br><span class="line">    ui-&gt;plainTextEdit-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dialog::do_FontColor</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QPalette plet = ui-&gt;plainTextEdit-&gt;<span class="built_in">palette</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(ui-&gt;blackRad-&gt;<span class="built_in">isChecked</span>())</span><br><span class="line">        plet.<span class="built_in">setColor</span>(QPalette::Text,Qt::black);</span><br><span class="line">    <span class="keyword">if</span>(ui-&gt;redRad-&gt;<span class="built_in">isChecked</span>())</span><br><span class="line">        plet.<span class="built_in">setColor</span>(QPalette::Text,Qt::red);</span><br><span class="line">    <span class="keyword">if</span>(ui-&gt;blueRad-&gt;<span class="built_in">isChecked</span>())</span><br><span class="line">        plet.<span class="built_in">setColor</span>(QPalette::Text,Qt::blue);</span><br><span class="line">    ui-&gt;plainTextEdit-&gt;<span class="built_in">setPalette</span>(plet);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dialog.h</span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> DIALOG_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DIALOG_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDialog&gt;</span></span></span><br><span class="line"></span><br><span class="line">QT_BEGIN_NAMESPACE</span><br><span class="line"><span class="keyword">namespace</span> Ui &#123;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dialog</span>;</span><br><span class="line">&#125;</span><br><span class="line">QT_END_NAMESPACE</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dialog</span> : <span class="keyword">public</span> QDialog</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Dialog</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">Dialog</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_clearBtn_clicked</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_checkBox_clicked</span><span class="params">(<span class="type">bool</span> checked)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_checkBox_3_clicked</span><span class="params">(<span class="type">bool</span> checked)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_checkBox_2_clicked</span><span class="params">(<span class="type">bool</span> checked)</span></span>;</span><br><span class="line">    <span class="comment">/*首先创造一个slot函数*/</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">do_FontColor</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::Dialog *ui;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// DIALOG_H</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>小结一下：上面主要讲了通过可视化UI设计（反正就是创建项目的时候选择genarate form，就是可视化ui设计了）来进行设计qt程序。第一步是创建程序，这个不赘述，第二部是设计UI，包括导入我们自己的图标等。第三步是给完成各个功能，主要通过代码的方式，操作底层逻辑暂时都学的差不多了，但是如何操作其他的还是不清楚。</p><h3 id="代码化UI设计"><a href="#代码化UI设计" class="headerlink" title="代码化UI设计"></a>代码化UI设计</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250121225445847.png" alt="image-20250121225445847"></p><p>要求和上面的可视化UI设计一样，不同的是不勾选generate form，所以没有很多东西<br>说是更灵活，但是对我来说也更难。</p><p>cpp文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dialog.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QHBoxLayout&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QVBoxLayout&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QCheckBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QRadioButton&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPlainTextEdit&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPushButton&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dialog::do_chkBoxUnder</span><span class="params">(<span class="type">bool</span> checked)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QFont font = txtEdit-&gt;<span class="built_in">font</span>();</span><br><span class="line">    font.<span class="built_in">setUnderline</span>(checked);</span><br><span class="line">    txtEdit-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dialog::do_chkBoxItalic</span><span class="params">(<span class="type">bool</span> checked)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QFont font = txtEdit-&gt;<span class="built_in">font</span>();</span><br><span class="line">    font.<span class="built_in">setItalic</span>(checked);</span><br><span class="line">    txtEdit-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dialog::do_chkBoxBold</span><span class="params">(<span class="type">bool</span> checked)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QFont font = txtEdit-&gt;<span class="built_in">font</span>();</span><br><span class="line">    font.<span class="built_in">setBold</span>(checked);</span><br><span class="line">    txtEdit-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dialog::do_setFontColor</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QPalette plet=txtEdit-&gt;<span class="built_in">palette</span>();</span><br><span class="line">    <span class="keyword">if</span>(radioBlack-&gt;<span class="built_in">isChecked</span>())</span><br><span class="line">        plet.<span class="built_in">setColor</span>(QPalette::Text,Qt::black);</span><br><span class="line">    <span class="keyword">if</span>(radioRed-&gt;<span class="built_in">isChecked</span>())</span><br><span class="line">        plet.<span class="built_in">setColor</span>(QPalette::Text,Qt::red);</span><br><span class="line">    <span class="keyword">if</span>(radioBlue-&gt;<span class="built_in">isChecked</span>())</span><br><span class="line">        plet.<span class="built_in">setColor</span>(QPalette::Text,Qt::blue);</span><br><span class="line">    txtEdit-&gt;<span class="built_in">setPalette</span>(plet);  <span class="comment">// 应用新的调色板</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dialog::<span class="built_in">Dialog</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QDialog</span>(parent)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*先创建三个组件*/</span></span><br><span class="line">    chkBoxUnder =  <span class="keyword">new</span> <span class="built_in">QCheckBox</span>(<span class="string">&quot;下划线&quot;</span>);</span><br><span class="line">    chkBoxBold =  <span class="keyword">new</span> <span class="built_in">QCheckBox</span>(<span class="string">&quot;加粗&quot;</span>);</span><br><span class="line">    chkBoxItalic =  <span class="keyword">new</span> <span class="built_in">QCheckBox</span>(<span class="string">&quot;斜体&quot;</span>);</span><br><span class="line">    <span class="comment">/*创建一个水平布局容器*/</span></span><br><span class="line">    QHBoxLayout *HLayl = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line">    <span class="comment">//在水平布局容器里面添加三个组件</span></span><br><span class="line">    HLayl-&gt;<span class="built_in">addWidget</span>(chkBoxUnder);</span><br><span class="line">    HLayl-&gt;<span class="built_in">addWidget</span>(chkBoxItalic);</span><br><span class="line">    HLayl-&gt;<span class="built_in">addWidget</span>(chkBoxBold);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建三个新的组件</span></span><br><span class="line">    radioBlack = <span class="keyword">new</span> <span class="built_in">QRadioButton</span>(<span class="string">&quot;黑色&quot;</span>);</span><br><span class="line">    radioRed = <span class="keyword">new</span> <span class="built_in">QRadioButton</span>(<span class="string">&quot;红色&quot;</span>);</span><br><span class="line">    radioBlue = <span class="keyword">new</span> <span class="built_in">QRadioButton</span>(<span class="string">&quot;蓝色&quot;</span>);</span><br><span class="line">    QHBoxLayout *HLayl2 = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line">    <span class="comment">/*QHB是水平布局 让上面三个组件在同一列*/</span></span><br><span class="line">    HLayl2-&gt;<span class="built_in">addWidget</span>(radioBlack);</span><br><span class="line">    HLayl2-&gt;<span class="built_in">addWidget</span>(radioRed);</span><br><span class="line">    HLayl2-&gt;<span class="built_in">addWidget</span>(radioBlue);</span><br><span class="line">    <span class="comment">/*在水平布局容器里面添加三个组件*/</span></span><br><span class="line">    <span class="comment">/*创建一个垂直布局容器*/</span></span><br><span class="line">    QVBoxLayout *Vlayl = <span class="keyword">new</span> <span class="built_in">QVBoxLayout</span>();<span class="comment">/*QVB垂直布局 让上面两个组件在不同列*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*文本框*/</span></span><br><span class="line">    txtEdit = <span class="keyword">new</span> QPlainTextEdit;</span><br><span class="line">    txtEdit -&gt;<span class="built_in">setPlainText</span>(<span class="string">&quot;hello world \n 手工创建！&quot;</span>);</span><br><span class="line">    QFont font = txtEdit-&gt;<span class="built_in">font</span>();</span><br><span class="line">    font.<span class="built_in">setPointSize</span>(<span class="number">20</span>);</span><br><span class="line">    txtEdit-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//按钮</span></span><br><span class="line">    btn0k = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;确定&quot;</span>);</span><br><span class="line">    btnCancel = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;取消&quot;</span>);</span><br><span class="line">    btnClose = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;退出&quot;</span>);</span><br><span class="line">    QHBoxLayout *HLayl3 = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line">    HLayl3-&gt;<span class="built_in">addStretch</span>();</span><br><span class="line">    HLayl3 -&gt;<span class="built_in">addWidget</span>(btn0k);</span><br><span class="line">    HLayl3-&gt;<span class="built_in">addStretch</span>();</span><br><span class="line">    HLayl3 -&gt;<span class="built_in">addWidget</span>(btnCancel);</span><br><span class="line">    HLayl3-&gt;<span class="built_in">addStretch</span>();</span><br><span class="line">    HLayl3 -&gt;<span class="built_in">addWidget</span>(btnClose);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*在垂直布局容器里面添加组件*/</span></span><br><span class="line">    Vlayl-&gt;<span class="built_in">addLayout</span>(HLayl);</span><br><span class="line">    Vlayl-&gt;<span class="built_in">addLayout</span>(HLayl2);</span><br><span class="line">    Vlayl-&gt;<span class="built_in">addWidget</span>(txtEdit);</span><br><span class="line">    Vlayl-&gt;<span class="built_in">addLayout</span>(HLayl3);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">setLayout</span>(Vlayl);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*连接*/</span></span><br><span class="line">    <span class="built_in">connect</span>(chkBoxUnder,<span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>(<span class="type">bool</span>)),<span class="keyword">this</span>,<span class="built_in">SLOT</span>(<span class="built_in">do_chkBoxUnder</span>(<span class="type">bool</span>)));</span><br><span class="line">    <span class="built_in">connect</span>(chkBoxItalic,<span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>(<span class="type">bool</span>)),<span class="keyword">this</span>,<span class="built_in">SLOT</span>(<span class="built_in">do_chkBoxItalic</span>(<span class="type">bool</span>)));</span><br><span class="line">    <span class="built_in">connect</span>(chkBoxBold,<span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>(<span class="type">bool</span>)),<span class="keyword">this</span>,<span class="built_in">SLOT</span>(<span class="built_in">do_chkBoxBold</span>(<span class="type">bool</span>)));</span><br><span class="line">    <span class="comment">/*颜色*/</span></span><br><span class="line">    <span class="built_in">connect</span>(radioBlack,<span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>(<span class="type">bool</span>)),<span class="keyword">this</span>,<span class="built_in">SLOT</span>(<span class="built_in">do_setFontColor</span>()));</span><br><span class="line">    <span class="built_in">connect</span>(radioBlue,<span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>(<span class="type">bool</span>)),<span class="keyword">this</span>,<span class="built_in">SLOT</span>(<span class="built_in">do_setFontColor</span>()));</span><br><span class="line">    <span class="built_in">connect</span>(radioRed,<span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>(<span class="type">bool</span>)),<span class="keyword">this</span>,<span class="built_in">SLOT</span>(<span class="built_in">do_setFontColor</span>()));</span><br><span class="line">    <span class="comment">/*按钮*/</span></span><br><span class="line">    <span class="built_in">connect</span>(btn0k,<span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>()),<span class="keyword">this</span>,<span class="built_in">SLOT</span>(<span class="built_in">accept</span>()));</span><br><span class="line">    <span class="built_in">connect</span>(btnCancel,<span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>()),<span class="keyword">this</span>,<span class="built_in">SLOT</span>(<span class="built_in">reject</span>()));</span><br><span class="line">    <span class="built_in">connect</span>(btnClose,<span class="built_in">SIGNAL</span>(<span class="built_in">clicked</span>()),<span class="keyword">this</span>,<span class="built_in">SLOT</span>(<span class="built_in">close</span>()));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">setWindowTitle</span>(<span class="string">&quot;手工打造UI&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Dialog::~<span class="built_in">Dialog</span>() &#123;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>头文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> DIALOG_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DIALOG_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDialog&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QCheckBox</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QRadioButton</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QPlainTextEdit</span>;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QPushButton</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dialog</span> : <span class="keyword">public</span> QDialog</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QCheckBox *chkBoxUnder;</span><br><span class="line">    QCheckBox *chkBoxItalic;</span><br><span class="line">    QCheckBox *chkBoxBold;</span><br><span class="line"></span><br><span class="line">    QRadioButton *radioBlack;</span><br><span class="line">    QRadioButton *radioRed;</span><br><span class="line">    QRadioButton *radioBlue;</span><br><span class="line"></span><br><span class="line">    QPlainTextEdit *txtEdit;</span><br><span class="line"></span><br><span class="line">    QPushButton *btn0k;</span><br><span class="line">    QPushButton *btnCancel;</span><br><span class="line">    QPushButton *btnClose;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">do_chkBoxUnder</span><span class="params">(<span class="type">bool</span> checked)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">do_chkBoxItalic</span><span class="params">(<span class="type">bool</span> checked)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">do_chkBoxBold</span><span class="params">(<span class="type">bool</span> checked)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">do_setFontColor</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Dialog</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">Dialog</span>();</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// DIALOG_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="使用cmake构建系统"><a href="#使用cmake构建系统" class="headerlink" title="使用cmake构建系统"></a>使用cmake构建系统</h3><p>使用cmake构建系统（其他所有示例都使用qmake构建系统）<br>cmake是一个功能强大的跨平台的构建工具，它通过与平台和编译器无关的配置文件控制软件的构建过程(在不同的平台上使用不同的编译器），生成本地化的makefile文件或者IDE项目。很多大型的开源软件都使用cmake构建系统，qt6本身就是用cmake构建的。</p><p>本章节任务就是使用cmake实现上节课实现的。cmake项目是用cmake语言写的一些文件，项目的主文件是cmakeLists.txt</p><p>新建项目，这部分不赘述，容易错的点就是要选dialog</p><p>构建完了之后找到之间建立的qmake项目，把项目中的这四个部分覆盖到现在新建的cmake项目。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250206144557275.png" alt="image-20250206144557275"></p><p>然后修改一下ui的文字，重新保存，修改一下头文件，重新保存。（如果不修改，编译器不会判定为文件改变，不会保存也不会重新编译。）</p><p>然后在配置文件里面加上下面一行。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250206144725274.png" alt="image-20250206144725274"></p><p>然后重新保存，ui图标和功能就全部正常了</p><p>下面的部分是使用cmakeGUI生成VS工程，我认为用不到就先不学了，如果要用再回来学。</p><h2 id="学习路线2"><a href="#学习路线2" class="headerlink" title="学习路线2"></a>学习路线2</h2><h3 id="从按钮入手认识QT和样式"><a href="#从按钮入手认识QT和样式" class="headerlink" title="从按钮入手认识QT和样式"></a>从按钮入手认识QT和样式</h3><p>创建文件的过程不赘述，以下是按钮的mainwindow.cpp文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPushButton&gt;</span></span></span><br><span class="line"><span class="comment">/*按钮的头文件 只有包含了头文件</span></span><br><span class="line"><span class="comment"> 后续的代码才可以使用按钮类型的对象*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*这个文件主要处理主窗口和图像方面的部分*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">MainWindow::<span class="built_in">MainWindow</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line"><span class="comment">/*在堆上创建了一个这个类型的对象</span></span><br><span class="line"><span class="comment"> 然后用指针Ui指向它*/</span></span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">/*ui指针指向函数</span></span><br><span class="line"><span class="comment">     实际上的作用就是初始化控件*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*创建一个按钮*/</span></span><br><span class="line">    QPushButton * button = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;01&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">/*创建了一个QPB类型的指针，在堆上实例化了一个新对象*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*设置按钮的大小和位置*/</span></span><br><span class="line">    button-&gt;<span class="built_in">setGeometry</span>(<span class="number">50</span>,<span class="number">50</span>,<span class="number">150</span>,<span class="number">100</span>);</span><br><span class="line">    <span class="comment">/*前两个参数是按钮的位置xy坐标 后面的参数是宽和高。*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*设置按钮中字体的颜色*/</span></span><br><span class="line">    <span class="comment">/*调用一个sSS方法 本质上是通过字符串传递一组css样式*/</span></span><br><span class="line">    button-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;color:red;&quot;</span></span><br><span class="line">    <span class="comment">/*设置按钮背景颜色*/</span>  <span class="string">&quot;background-color:lightblue;&quot;</span></span><br><span class="line">    <span class="comment">/*把字调大一点*/</span>     <span class="string">&quot;font-size:30px;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*下面主要是一些调整按钮样式的css*/</span></span><br><span class="line">    <span class="comment">/*设置扁平化一些(隐藏式按钮*/</span></span><br><span class="line">    button-&gt;<span class="built_in">setFlat</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="comment">/*为了方便观察和调整 我们先改成false*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*设置按钮可见*/</span></span><br><span class="line">    button-&gt;<span class="built_in">setVisible</span>(<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">/*如果写成false就不可以见了*/</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MainWindow::~<span class="built_in">MainWindow</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*析构*/</span></span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="槽函数和lambda表达式"><a href="#槽函数和lambda表达式" class="headerlink" title="槽函数和lambda表达式"></a>槽函数和lambda表达式</h3><p>在上节课中我们已经建立了按钮，但是这个按钮并没有任何的功能，这节课通过槽函数我们就要给这个按钮赋予功能。<br>现在我们要给按钮赋予功能，现在以点击弹出提示框为例。</p><p>槽函数是 Qt 框架中用于处理信号（signal）和响应（响应事件）的核心机制之一。它是 Qt 中事件驱动编程的一部分，用于处理控件或其他对象触发的事件。</p><p><strong>什么是槽函数？</strong></p><p>槽函数是普通的成员函数或独立的函数，当某个信号发出时，槽函数会被调用。它们与 Qt 的信号-槽机制紧密结合，负责响应来自对象（如按钮、窗口等）发出的信号。</p><p><strong>作用：</strong></p><p>槽函数的主要作用是响应信号。它们使得 Qt 的对象可以根据特定事件或操作触发后执行某些操作。信号和槽提供了一种松耦合的机制，可以轻松实现不同对象之间的通信，而不需要彼此直接依赖。</p><p><strong>Lambda 表达式</strong>（也称为匿名函数）是一种在 C++11 引入的语法，用于创建没有名字的内联函数。它允许你在代码的某个地方定义一个函数，并将其传递或直接使用，而无需先声明或定义一个完整的函数。</p><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPushButton&gt;</span></span></span><br><span class="line"><span class="comment">/*按钮的头文件 只有包含了头文件</span></span><br><span class="line"><span class="comment"> 后续的代码才可以使用按钮类型的对象*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*这个文件主要处理主窗口和图像方面的部分*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*槽函数 响应特定的信号事件。*/</span></span><br><span class="line"><span class="comment">// void onButtonClicked()&#123;</span></span><br><span class="line"><span class="comment">//     /*一个弹出信息类型的对话框，后面的语法是</span></span><br><span class="line"><span class="comment">//      QMessageBox::information(parent, title, message, buttons, defaultButton);*/</span></span><br><span class="line"><span class="comment">//     QMessageBox::information(nullptr,&quot;提示&quot;,&quot;你点击了按钮&quot;);</span></span><br><span class="line"><span class="comment">//     /*nullptr表示没有父窗口 但是这个参数不能省略。</span></span><br><span class="line"><span class="comment">//     第二个参数是提示框的标题</span></span><br><span class="line"><span class="comment">//     接下来就是文本 正文内容*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//     /*上面的就是正常的槽函数，然后就要吧槽函数连接到按钮里面</span></span><br><span class="line"><span class="comment">//      在下面通过connect连接*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line">MainWindow::<span class="built_in">MainWindow</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line"><span class="comment">/*在堆上创建了一个这个类型的对象</span></span><br><span class="line"><span class="comment"> 然后用指针Ui指向它*/</span></span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">/*ui指针指向函数</span></span><br><span class="line"><span class="comment">     实际上的作用就是初始化控件*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*创建一个按钮*/</span></span><br><span class="line">    QPushButton * button = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;01&quot;</span>,<span class="keyword">this</span>);<span class="comment">/*前面是文本，后面是对象*/</span></span><br><span class="line">    <span class="comment">/*创建了一个QPB类型的指针，在堆上实例化了一个新对象*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*设置按钮的大小和位置*/</span></span><br><span class="line">    button-&gt;<span class="built_in">setGeometry</span>(<span class="number">50</span>,<span class="number">50</span>,<span class="number">150</span>,<span class="number">100</span>);</span><br><span class="line">    <span class="comment">/*前两个参数是按钮的位置xy坐标 后面的参数是宽和高。*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*设置按钮中字体的颜色*/</span></span><br><span class="line">    <span class="comment">/*调用一个sSS方法 本质上是通过字符串传递一组css样式*/</span></span><br><span class="line">    button-&gt;<span class="built_in">setStyleSheet</span>(<span class="string">&quot;color:red;&quot;</span></span><br><span class="line">    <span class="comment">/*设置按钮背景颜色*/</span>  <span class="string">&quot;background-color:lightblue;&quot;</span></span><br><span class="line">    <span class="comment">/*把字调大一点*/</span>     <span class="string">&quot;font-size:30px;&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*下面主要是一些调整按钮样式的css*/</span></span><br><span class="line">    <span class="comment">/*设置扁平化一些(隐藏式按钮*/</span></span><br><span class="line">    button-&gt;<span class="built_in">setFlat</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="comment">/*为了方便观察和调整 我们先改成false*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*设置按钮可见*/</span></span><br><span class="line">    button-&gt;<span class="built_in">setVisible</span>(<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">/*如果写成false就不可以见了*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//connect(button,&amp;QPushButton::clicked,onButtonClicked);</span></span><br><span class="line">    <span class="comment">/*第二种方法 lambda表达式*/</span></span><br><span class="line">    <span class="built_in">connect</span>(button,&amp;QPushButton::clicked,[]&#123;</span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="literal">nullptr</span>,<span class="string">&quot;提示&quot;</span>,<span class="string">&quot;你点击了按钮&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">/*lambda中的中括号是捕获列表，这里是空的说明不捕获外部变量,只使用了自己内部定义的</span></span><br><span class="line"><span class="comment">     代码逻辑和参数*/</span></span><br><span class="line">    <span class="comment">/*&#123;&#125;中的内容是函数体 就是函数要实际执行的内容</span></span><br><span class="line"><span class="comment">     用lambda表达式相当于一个临时匿名的槽函数 */</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MainWindow::~<span class="built_in">MainWindow</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*析构*/</span></span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="垂直布局和水平布局"><a href="#垂直布局和水平布局" class="headerlink" title="垂直布局和水平布局"></a>垂直布局和水平布局</h3><p><strong>为什么需要一个中心部件？</strong></p><p><code>QMainWindow</code> 是 Qt 中用于构建主窗口的类，它具有许多预定义的区域（例如，菜单栏、工具栏、状态栏等），但是它没有一个默认的区域来放置你自己的控件。因此，你需要设置一个“中心部件”（central widget），作为显示控件的容器。</p><p><strong>具体的原因</strong></p><ol><li><strong>QMainWindow 的布局限制：</strong><br> <code>QMainWindow</code> 自带了许多特殊的区域（例如菜单、工具栏、状态栏等），但是它本身没有提供直接用于添加控件的区域。你必须设置一个“中心部件”来填充主窗口的中央区域。</li><li><strong>中心部件的作用：</strong><br> 中心部件可以是任何 <code>QWidget</code> 类型的控件，布局管理器（如 <code>QVBoxLayout</code> 或 <code>QHBoxLayout</code>）会被应用到这个中心部件上，这样布局管理器中的控件就会显示在主窗口的中央区域。</li></ol><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*布局 垂直布局和水平布局*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPushButton&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;QVBoxLayout&gt;</span><span class="comment">/*垂直布局 vertical*/</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;QHBoxLayout&gt;</span><span class="comment">/*水平布局 horizontal*/</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MainWindow::<span class="built_in">MainWindow</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">/*创建一个对象作为中心部件*/</span></span><br><span class="line">    QWidget * centralWidget01 = <span class="keyword">new</span> <span class="built_in">QWidget</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">/*设置成中心部件*/</span></span><br><span class="line">    <span class="built_in">setCentralWidget</span>(centralWidget01);</span><br><span class="line">    <span class="comment">/*创建一个新的垂直布局的对象作为容器 */</span></span><br><span class="line"><span class="comment">//    QVBoxLayout * vBoxLayout01 = new QVBoxLayout();</span></span><br><span class="line">    <span class="comment">/*进阶 改成水平的*/</span></span><br><span class="line">    QHBoxLayout * hBoxLayout01 = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line"></span><br><span class="line">    QPushButton * button01 = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;按钮1&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line">    QPushButton * button02 = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;按钮2&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line">    QPushButton * button03 = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;按钮3&quot;</span>,<span class="keyword">this</span>);</span><br><span class="line">    <span class="comment">/*放大一下按钮*/</span></span><br><span class="line">    button01-&gt;<span class="built_in">setFixedSize</span>(<span class="number">100</span>,<span class="number">50</span>);</span><br><span class="line">    button02-&gt;<span class="built_in">setFixedSize</span>(<span class="number">100</span>,<span class="number">50</span>);</span><br><span class="line">    button03-&gt;<span class="built_in">setFixedSize</span>(<span class="number">100</span>,<span class="number">50</span>);</span><br><span class="line">    <span class="comment">/*然后把按钮添加到容器里*/</span></span><br><span class="line">    <span class="comment">// vBoxLayout01-&gt;addWidget(button01);</span></span><br><span class="line">    <span class="comment">// vBoxLayout01-&gt;addWidget(button02);</span></span><br><span class="line">    <span class="comment">// vBoxLayout01-&gt;addWidget(button03);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*改水平*/</span></span><br><span class="line">    hBoxLayout01-&gt;<span class="built_in">addWidget</span>(button01);</span><br><span class="line">    hBoxLayout01-&gt;<span class="built_in">addWidget</span>(button02);</span><br><span class="line">    hBoxLayout01-&gt;<span class="built_in">addWidget</span>(button03);</span><br><span class="line">    <span class="comment">/*这里的语法</span></span><br><span class="line"><span class="comment">     容器-&gt; 添加组件（添加的元素）*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*然后把这个容器放到中心部件里面 让这编译器知道这个容器是在中心位置*/</span></span><br><span class="line"> <span class="comment">//   centralWidget01-&gt;setLayout(vBoxLayout01);</span></span><br><span class="line">    centralWidget01-&gt;<span class="built_in">setLayout</span>(hBoxLayout01);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MainWindow::~<span class="built_in">MainWindow</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="微调框"><a href="#微调框" class="headerlink" title="微调框"></a>微调框</h3><h4 id="QSpinBox"><a href="#QSpinBox" class="headerlink" title="QSpinBox"></a><strong>QSpinBox</strong></h4><p>QSpinBox是QT框架中用于输入整数的微调框控件。用于可以通过点击微调框旁边的上下箭头来增加或者减少整数值，也可以直接在输入框中输入整数。它提供了设置了最小、最大值和步长的功能。</p><h4 id="QDoubleSpinBox"><a href="#QDoubleSpinBox" class="headerlink" title="QDoubleSpinBox"></a><strong>QDoubleSpinBox</strong></h4><p>和上面的类似，但他用于输入浮点数。用户可以通过上下箭头或者直接输入来改变值，再上述功能的基础上还提供了小数位数的功能。</p><h4 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h4><p><strong>QSpinBox</strong><br>setMinimum(int min):设置微调框的最小值。<br>setMaxIum(int max):设置最大值<br>setSingleStep(int step):设置每次点击上下箭头时数值的变化量<br>setValue（int value):设置微调框的当前值。<br>value():获取微调框的当前值。<br><strong>QDoubleSpinBox</strong><br>setMinimum(double min):设置微调框的最小值。<br>setMaxIum(double max):设置最大值<br>setSingleStep(double step):设置每次点击上下箭头时数值的变化量<br>setValue（double value):设置微调框的当前值。<br>value():获取微调框的当前值。<br>setDecimals(int prec):设置小数位数</p><p><strong>在头文件中声明私有成员变量的好处：</strong></p><ul><li>可以使得类的接口完整，类的使用者能够直接访问类中的控件和布局。</li><li>遵循封装原则，类的实现细节可以隐藏在 <code>.cpp</code> 文件中，提供清晰的接口。</li><li>可以方便其他类、模块和源文件与 <code>MainWindow</code> 类交互和调用这些成员。</li></ul><h2 id="配置OpenCV的方法！！！"><a href="#配置OpenCV的方法！！！" class="headerlink" title="配置OpenCV的方法！！！"></a>配置OpenCV的方法！！！</h2><p>自用版</p><p>因为跑起来问题非常的多，而且复杂，但是通过种种原因终于是成功引用了。</p><p>首先对于一个项目<img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250523214740333.png" alt="image-20250523214740333"></p><p>点击这里添加库</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250523214752931.png" alt="image-20250523214752931"></p><p>选择外部库</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250523214816999.png" alt="image-20250523214816999"></p><p>选择这个</p><p>然后下面这个选项选择这个build</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250523214837032.png" alt="image-20250523214837032"></p><p>导入成功之后会有这样的两段话</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20250523214855535.png" alt="image-20250523214855535"></p><p>把上面的换成绝对路径，把下面的换成加上include就行了</p><h2 id="大作业开发"><a href="#大作业开发" class="headerlink" title="大作业开发"></a>大作业开发</h2><h3 id="软件设计报告"><a href="#软件设计报告" class="headerlink" title="软件设计报告"></a>软件设计报告</h3><hr><h4 id="一、软件设计任务概述"><a href="#一、软件设计任务概述" class="headerlink" title="一、软件设计任务概述"></a>一、软件设计任务概述</h4><p><strong>应用背景</strong><br> 随着计算机视觉和人工智能技术的快速发展，图像与视频处理软件在各个领域得到了广泛应用。例如，在医学影像分析、安防监控、工业检测以及娱乐应用中，图像与视频处理技术发挥着重要作用。本项目旨在开发一款功能全面、界面友好的图像与视频处理软件，支持基本的图像处理操作、视频处理功能以及基于深度学习的智能视觉分析。</p><p><strong>任务目标</strong></p><ol><li>实现基本的图像处理功能，包括灰度化、二值化、均值模糊、伽马校正和边缘检测。</li><li>支持视频处理功能，包括视频播放、暂停、快进、快退以及马赛克处理。</li><li>集成基于YOLO的物体检测功能，实现对图像和视频中的目标检测。</li><li>实现人脸检测功能，增强软件的智能性。</li><li>提供友好的用户界面，使用户能够方便地操作和配置各项功能。</li></ol><p><strong>开发环境搭建</strong></p><ul><li><strong>操作系统</strong>：Windows 10 或更高版本。</li><li><strong>开发工具</strong>：Qt Creator 6.0 或更高版本。</li><li><strong>第三方库</strong>：OpenCV 4.5.0 或更高版本，用于图像和视频处理；<br>dnn模块用于YOLO模型的加载与推理。</li><li><strong>其他依赖</strong>：C++编译环境（如MSVC）。</li></ul><hr><h4 id="二、可行性研究、需求分析及进度规划"><a href="#二、可行性研究、需求分析及进度规划" class="headerlink" title="二、可行性研究、需求分析及进度规划"></a>二、可行性研究、需求分析及进度规划</h4><p><strong>可行性研究</strong></p><ol><li><strong>技术可行性</strong>：<ul><li>OpenCV和Qt提供了强大的图像和视频处理功能，能够满足项目需求。</li><li>YOLO模型在目标检测领域性能优越，且推理速度快，适合集成到实时处理中。</li><li>人脸检测可以通过OpenCV自带的.CascadeClassifier实现，技术成熟。</li></ul></li><li><strong>经济可行性</strong>：<ul><li>项目主要依赖开源库，无需额外购买许可证或付费服务，开发成本较低。</li><li>仅需基本的硬件设备（如普通PC），无需高端服务器或专用设备。</li></ul></li><li><strong>操作可行性</strong>：<ul><li>软件界面设计直观，用户无需专业培训即可上手。</li><li>功能模块化设计，用户可以根据需求选择性使用功能。</li></ul></li></ol><p><strong>需求分析</strong></p><ul><li><p>用户需求</p><p>：</p><ul><li>专业用户（如研究人员、开发者）需要强大的图像处理和分析功能。</li><li>普通用户（如摄影师、爱好者）需要简单易用的图像编辑工具。</li></ul></li><li><p>功能需求</p><p>：</p><ul><li>基本图像处理功能（灰度化、二值化等）。</li><li>视频播放与处理功能。</li><li>智能视觉分析功能（目标检测、人脸检测）。</li></ul></li></ul><p><strong>进度规划</strong></p><div class="table-container"><table><thead><tr><th>阶段</th><th>时间</th><th>描述</th></tr></thead><tbody><tr><td>需求分析与设计</td><td>1周</td><td>确定功能需求，设计软件架构，完成UI设计。</td></tr><tr><td>开发阶段</td><td>3周</td><td>实现图像处理功能，集成OpenCV和YOLO模块，开发视频处理功能。</td></tr><tr><td>测试与优化</td><td>1周</td><td>测试各功能模块，修复bug，优化性能。</td></tr><tr><td>文档撰写与总结</td><td>1周</td><td>撰写软件设计报告，整理测试记录与开发心得。</td></tr></tbody></table></div><hr><h4 id="三、软件设计的基本原理和采用的主要方法与技术"><a href="#三、软件设计的基本原理和采用的主要方法与技术" class="headerlink" title="三、软件设计的基本原理和采用的主要方法与技术"></a>三、软件设计的基本原理和采用的主要方法与技术</h4><p><strong>基本原理</strong></p><ol><li><strong>图像处理</strong>：<ul><li>基于OpenCV库实现图像的读取、显示和处理。</li><li>使用滑块控件（QSlider）实现参数调节（如亮度、对比度）。</li></ul></li><li><strong>视频处理</strong>：<ul><li>使用OpenCV的VideoCapture类实现视频的读取与播放。</li><li>通过QTimer实现视频的实时显示与处理。</li></ul></li><li><strong>AI智能视觉</strong>：<ul><li>使用YOLO目标检测模型实现图像和视频中的目标检测。</li><li>通过dnn模块加载预训练模型，进行实时推理。</li></ul></li><li><strong>人脸检测</strong>：<ul><li>使用OpenCV的.CascadeClassifier实现人脸检测。</li><li>通过滑块控件调节检测灵敏度。</li></ul></li></ol><p><strong>主要方法与技术</strong></p><ol><li><strong>模块化设计</strong>：<ul><li>将功能模块化，如图像处理、视频处理、AI检测等，便于管理和维护。</li></ul></li><li><strong>MVC模式</strong>：<ul><li>模型（Model）：数据存储与处理。</li><li>视图（View）：用户界面展示。</li><li>控制器（Controller）：处理用户输入与功能调用。</li></ul></li><li><strong>异步处理</strong>：<ul><li>使用QTimer和信号槽实现视频的实时处理，避免主线程阻塞。</li></ul></li></ol><hr><h4 id="四、实现的过程与步骤"><a href="#四、实现的过程与步骤" class="headerlink" title="四、实现的过程与步骤"></a>四、实现的过程与步骤</h4><p><strong>实现流程</strong></p><ol><li><strong>需求分析与设计</strong><ul><li>确定功能模块，设计软件架构。</li><li>完成UI设计，使用Qt Designer绘制界面。</li></ul></li><li><strong>开发阶段</strong><ul><li>实现图像处理功能（灰度化、二值化等）。</li><li>集成OpenCV和dnn模块，实现YOLO目标检测。</li><li>开发视频处理功能，包括播放、暂停、快进、快退。</li></ul></li><li><strong>测试与优化</strong><ul><li>测试各功能模块，修复bug。</li><li>优化性能，提升处理速度。</li></ul></li></ol><p><strong>框图</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">+-------------------+       +-------------------+</span><br><span class="line">|                   |       |                   |</span><br><span class="line">|    用户界面        |&lt;-----&gt;|    控制器         |</span><br><span class="line">|                   |       |                   |</span><br><span class="line">+-------------------+       +-------------------+</span><br><span class="line">           |                            |</span><br><span class="line">           |                            |</span><br><span class="line">           v                            v</span><br><span class="line">+-------------------+       +-------------------+</span><br><span class="line">|                   |       |                   |</span><br><span class="line">|    模型（数据）    |       |    视图（展示）    |</span><br><span class="line">|                   |       |                   |</span><br><span class="line">+-------------------+       +-------------------+</span><br></pre></td></tr></table></figure><hr><h3 id="功能模块流程图"><a href="#功能模块流程图" class="headerlink" title="功能模块流程图"></a>功能模块流程图</h3><h4 id="图像处理流程"><a href="#图像处理流程" class="headerlink" title="图像处理流程"></a>图像处理流程</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">用户点击“打开图片”按钮</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">读取并加载图片</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">显示原始图片</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">用户选择滤镜（如灰度化、二值化等）</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">应用滤镜并处理图片</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">更新并显示处理后的图片</span><br></pre></td></tr></table></figure><h4 id="视频处理流程"><a href="#视频处理流程" class="headerlink" title="视频处理流程"></a>视频处理流程</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">用户点击“打开视频”按钮</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">加载视频文件或摄像头流</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">显示视频第一帧</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">用户点击“播放”按钮</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">启动视频播放定时器</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">循环处理并显示视频帧</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">用户点击“暂停”或“停止”按钮</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">停止视频播放并更新界面状态</span><br></pre></td></tr></table></figure><h4 id="AI检测流程"><a href="#AI检测流程" class="headerlink" title="AI检测流程"></a>AI检测流程</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">用户点击“初始化YOLO”按钮</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">加载YOLO模型和分类名称</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">用户点击“开始检测”按钮</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">循环处理视频或图像帧</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">应用YOLO检测并标记目标</span><br><span class="line">|</span><br><span class="line">v</span><br><span class="line">更新并显示检测结果</span><br></pre></td></tr></table></figure><hr><h3 id="整体流程图"><a href="#整体流程图" class="headerlink" title="整体流程图"></a>整体流程图</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">+-------------------+       +-------------------+</span><br><span class="line">|                   |       |                   |</span><br><span class="line">|    用户界面        |&lt;-----&gt;|    控制器         |</span><br><span class="line">|                   |       |                   |</span><br><span class="line">+-------------------+       +-------------------+</span><br><span class="line">           |                            |</span><br><span class="line">           |                            |</span><br><span class="line">           v                            v</span><br><span class="line">+-------------------+       +-------------------+</span><br><span class="line">|                   |       |                   |</span><br><span class="line">|    模型（数据）    |       |    视图（展示）    |</span><br><span class="line">|                   |       |                   |</span><br><span class="line">+-------------------+       +-------------------+</span><br></pre></td></tr></table></figure><hr><h3 id="详细步骤说明"><a href="#详细步骤说明" class="headerlink" title="详细步骤说明"></a>详细步骤说明</h3><ol><li><strong>用户交互</strong><ul><li>用户通过界面按钮或控件触发功能请求。</li></ul></li><li><strong>数据加载</strong><ul><li>根据用户选择，加载图片或视频文件，或开启摄像头流。</li></ul></li><li><strong>功能处理</strong><ul><li>根据选择的功能模块，调用相应的处理函数（如图像滤镜、视频播放、目标检测）。</li></ul></li><li><strong>数据处理</strong><ul><li>对加载的数据进行处理，如应用滤镜、检测目标、调整参数等。</li></ul></li><li><strong>结果展示</strong><ul><li>将处理后的数据展示在界面上，供用户查看。</li></ul></li><li><strong>状态反馈</strong><ul><li>更新界面状态，如按钮启用/禁用、处理进度等。</li></ul></li></ol><h4 id="五、遇到的困难与获得的主要成果"><a href="#五、遇到的困难与获得的主要成果" class="headerlink" title="五、遇到的困难与获得的主要成果"></a>五、遇到的困难与获得的主要成果</h4><p><strong>遇到的困难</strong></p><ol><li><strong>技术难点</strong><ul><li>YOLO模型的加载与推理速度优化。</li><li>实时视频处理中多线程的协调与同步。</li></ul></li><li><strong>时间压力</strong><ul><li>项目时间紧张，需要在短时间内完成多个功能模块的开发与测试。</li></ul></li><li><strong>资源限制</strong><ul><li>由于硬件性能限制，YOLO模型的推理速度较慢，影响了用户体验。</li></ul></li></ol><p><strong>获得的主要成果</strong></p><ol><li>成功实现了基本的图像处理功能，包括灰度化、二值化、均值模糊等。</li><li>集成并优化了YOLO目标检测功能，实现了对图像和视频的实时检测。</li><li>实现了视频的播放与处理功能，用户可以自由控制视频的播放速度与方向。</li><li>成功实现了人脸检测功能，增强了软件的智能性。</li></ol><hr><h4 id="六、测试与运行记录"><a href="#六、测试与运行记录" class="headerlink" title="六、测试与运行记录"></a>六、测试与运行记录</h4><p><strong>测试环境</strong></p><ul><li><strong>操作系统</strong>：Windows 10</li><li><strong>硬件配置</strong>：Intel i7处理器，16GB内存，NVIDIA GeForce GTX 1060</li><li><strong>软件版本</strong>：Qt 6.0，OpenCV 4.5.0</li></ul><p><strong>测试用例</strong></p><ol><li><strong>图像处理功能</strong><ul><li>打开一张图片，应用灰度化、二值化等滤镜，检查处理效果。</li><li>使用滑块调节亮度和对比度，观察图像变化。</li></ul></li><li><strong>视频处理功能</strong><ul><li>打开一段视频，播放、暂停、快进、快退，检查控制是否正常。</li><li>应用马赛克处理，检查视频画质是否受到影响。</li></ul></li><li><strong>AI检测功能</strong><ul><li>打开一张图片，应用YOLO目标检测，检查检测结果。</li><li>打开一段视频，应用YOLO目标检测，检查实时检测效果。</li></ul></li></ol><p><strong>测试结果</strong></p><ul><li><strong>图像处理功能</strong>：运行正常，处理效果符合预期。</li><li><strong>视频处理功能</strong>：运行流畅，控制响应灵敏。</li><li><strong>AI检测功能</strong>：检测准确率较高，但在复杂场景下可能误检。</li></ul><p><strong>测试截图</strong><br> （以下为部分测试截图，展示了图像处理和目标检测的效果。）</p><p><img src="https://via.placeholder.com/300x200.png?text=Gray+Image" alt="Image Processing 1"><br> <em>图1：灰度化处理效果</em></p><p><img src="https://via.placeholder.com/300x200.png?text=Binary+Image" alt="Image Processing 2"><br> <em>图2：二值化处理效果</em></p><p><img src="https://via.placeholder.com/300x200.png?text=YOLO+Detection" alt="Object Detection"><br> <em>图3：YOLO目标检测效果</em></p><hr><h4 id="七、结果分析"><a href="#七、结果分析" class="headerlink" title="七、结果分析"></a>七、结果分析</h4><p><strong>功能实现</strong></p><ul><li>软件成功实现了所有预设功能，包括图像处理、视频处理和AI检测。</li><li>用户界面设计直观，操作简便，适合各类用户使用。</li></ul><p><strong>性能优化</strong></p><ul><li>通过多线程和异步处理，提升了视频处理的流畅度。</li><li>YOLO模型的推理速度在硬件性能允许的范围内得到了优化。</li></ul><p><strong>用户体验</strong></p><ul><li>软件运行稳定，功能切换流畅，用户反馈良好。</li><li>AI检测功能增强了软件的智能化，提升了用户体验。</li></ul><p><strong>不足与改进</strong></p><ul><li>在复杂场景下，YOLO的检测精度可能不足，需要优化模型或使用更先进的算法。</li><li>视频处理功能在低配置硬件上运行较慢，需要进一步优化代码性能。</li></ul><hr><h4 id="八、软件开发心得"><a href="#八、软件开发心得" class="headerlink" title="八、软件开发心得"></a>八、软件开发心得</h4><p>回顾整个开发过程，我深刻体会到软件开发的不易。从最初的代码敲击到功能的逐步完善，每一个环节都充满了挑战。尤其是在集成YOLO模型和优化视频处理性能的过程中，我经历了无数次的调试和优化，甚至在深夜里仍然在思考如何解决技术难题。</p><p>尽管开发过程中充满了困难，但最终的成功让我感到无比的成就感。通过这个项目，我不仅提升了自己的技术水平，还学会了如何在有限的时间内高效地解决问题。软件开发不仅仅是代码的堆砌，更是一种艺术，需要耐心、毅力和创造力。</p><p>这次开发经历让我明白，每一个功能的实现都离不开细致的思考和反复的测试。未来的开发中，我将继续保持这种严谨的态度，不断提升自己的技术水平，为用户带来更好的使用体验。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/8d9a38ac18c35206c97fad90233d484.png" alt="8d9a38ac18c35206c97fad90233d484"></p><p>QT学习止步于此 再见了 的所有 QT福音战士</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="关于bmp文件"><a href="#关于bmp文件" class="headerlink" title="关于bmp文件"></a>关于bmp文件</h3><p>看到视频教程里面用了很多的bmp文件，很多插入的文件也是bmp<br>但是因为没有花钱买原课程，只能蹭蹭免费的，所以这个问题需要我自己解决。<br>首先我找了阿里的图标库<br><a href="https://www.iconfont.cn/?spm=a313x.collections_index.i3.d4d0a486a.31a73a81rETxmJ">iconfont-阿里巴巴矢量图标库</a><br>然后在里面找了几套适合的下载jpeg或者jpg格式，然后通过在线工具进行转换，得到了一套可以用的bmp格式的图标文件。<br>注意导入的时候需要在项目文件内部建一个文件夹，然后再在文件夹内放入图片，选择项目外部的文件夹进行导入报错了。</p><p><strong><u>如何导入？</u></strong><br>两种方法进行导入 第一种方法通过代码，修改pro文件，加入，这种方法不知道为什么失败了。<br>第二种方法 直接查看目录中的《加入qrc文件》部分即可</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C++学习笔记</title>
      <link href="/posts/ad4f1e09.html"/>
      <url>/posts/ad4f1e09.html</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>由于我也是第一次学习C++，很多概念我自己也不清楚，所以此处基本上用来记录我学习过程中写的代码<br>各类概念和知识点理论，则是想到多少学到多少记多少。</p><h1 id="C-基础部分"><a href="#C-基础部分" class="headerlink" title="C++基础部分"></a>C++基础部分</h1><h2 id="输出helloworld代码"><a href="#输出helloworld代码" class="headerlink" title="输出helloworld代码"></a>输出helloworld代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第六行cout语句实现了输出的功能，除去第六行的语句，整体就是C++代码的基本框架<br>类似java中的类体+方法体</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>C++的注释有以下几种</p><h3 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h3><p>//</p><h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h3><p>/**/<br>同样的，编译器编译代码的时候，会忽略注释的内容。</p><h2 id="C-基本-语法"><a href="#C-基本-语法" class="headerlink" title="C++基本 语法"></a>C++基本 语法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">///*这个include相当于import的意思</span></span><br><span class="line"><span class="comment">//相当于是导入了iostream这个包</span></span><br><span class="line"><span class="comment">//然后这个iostream是c++中进行输入输出操作的标准库</span></span><br><span class="line"><span class="comment">//*/</span></span><br><span class="line"><span class="comment">//using namespace std;</span></span><br><span class="line"><span class="comment">///*这条指令是告诉编译器 程序要使用std中的所有内容</span></span><br><span class="line"><span class="comment">//* 相当于是java lang类 如果不导入</span></span><br><span class="line"><span class="comment">//* 每次输入输出都要加上std 代码会变得很冗长</span></span><br><span class="line"><span class="comment">//* 所以这里导入std</span></span><br><span class="line"><span class="comment">//*/</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//int main() &#123;</span></span><br><span class="line"><span class="comment">///*这里就是普通的定义了一个main方法</span></span><br><span class="line"><span class="comment">//和Java类似 但是没有public static那一套</span></span><br><span class="line"><span class="comment">//然后这里下面的return 0 表示了程序正常结束</span></span><br><span class="line"><span class="comment">//在C++中程序正常结束就是返回0*/</span></span><br><span class="line"><span class="comment">//    cout &lt;&lt; &quot;爷回来辣&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    system(&quot;pause&quot;);</span></span><br><span class="line"><span class="comment">//    /*system() 是 C 标准库中的一个函数</span></span><br><span class="line"><span class="comment">//    它的参数是一个字符串，表示要执行的命令。</span></span><br><span class="line"><span class="comment">//    用来暂停程序的执行并显示提示信息</span></span><br><span class="line"><span class="comment">//    这个命令的作用是让用户有时间查看程序输出的内容</span></span><br><span class="line"><span class="comment">//    而不会让控制台窗口在程序结束后立刻关闭*/</span></span><br><span class="line"><span class="comment">//    return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="变量和常量"><a href="#变量和常量" class="headerlink" title="变量和常量"></a>变量和常量</h2><h3 id="变量基本介绍"><a href="#变量基本介绍" class="headerlink" title="变量基本介绍"></a>变量基本介绍</h3><p>变量存在的意义： 管理内存空间<br>变量创建语法：数据类型 变量名 =  变量初始值；</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">10</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*cout的意思就是把对象输出到控制台</span></span><br><span class="line"><span class="comment">&lt;&lt;就是把右侧的内容插入到左边*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"> <span class="comment">//这里system(&quot;pause&quot;)的作用是运行完了之后暂停窗口</span></span><br><span class="line"> <span class="comment">//方便你查看 结果 就不会直接结束程序</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>c++中和java中不一样 还存在常量，常量就是定义之后不可以发生改变的数据<br>可以看成java中用final修饰的变量<br>定义的两种方法<br>1、用#define定义在文件的上方 作为宏常量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define 常量名 常量值</span><br></pre></td></tr></table></figure><p>2、用const修饰一个变量<br>const 数据类型 数据名 = 数据值<br>两种方法定义的常量都不可以发生改变 如果尝试在代码中改变就会报错</p><p>关于const：我认为的const本质：限定修改</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//#define day 7;</span></span><br><span class="line"><span class="comment">/*上方代码报错</span></span><br><span class="line"><span class="comment">为什么 因为用#defin 定义常量 不需要使用分号结尾 </span></span><br><span class="line"><span class="comment">按下面的方式定义就正确了*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> day 7</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//day = 14;</span></span><br><span class="line"><span class="comment">/*上面的代码会报错 因为常量不能被改变*/</span></span><br><span class="line"><span class="comment">/*const 修饰的变量*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> month = <span class="number">12</span>;</span><br><span class="line"><span class="comment">//month = 24;</span></span><br><span class="line"><span class="comment">/*同样报错 用const修饰的变量也会变成常量*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a year have &quot;</span> &lt;&lt; month &lt;&lt; <span class="string">&quot; months&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a week have &quot;</span> &lt;&lt; day &lt;&lt; <span class="string">&quot; days&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="comment">/*可以理解为导入string 的包</span></span><br><span class="line"><span class="comment">* 再用C++风格的字符串的时候 要包含这个头文件</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*C++的数据类型*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 整型</span></span><br><span class="line"><span class="comment">C++的整型分成 </span></span><br><span class="line"><span class="comment">短整型 short 最小的表述范围都特别大 +-3w多</span></span><br><span class="line"><span class="comment">整型 int </span></span><br><span class="line"><span class="comment">长整型 long </span></span><br><span class="line"><span class="comment">长长整型 longlong*/</span></span><br><span class="line"><span class="type">short</span> num1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> num2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> num3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> num4 = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num3 = &quot;</span> &lt;&lt; num3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num4 = &quot;</span> &lt;&lt; num4 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*size of 关键字</span></span><br><span class="line"><span class="comment">通过这个关键字可以求出数据类型的所占的内存大小*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num4 的大小: &quot;</span> &lt;&lt;<span class="built_in">sizeof</span>(num4) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;short 的大小: &quot;</span> &lt;&lt;<span class="built_in">sizeof</span>(<span class="type">short</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*实型（浮点型</span></span><br><span class="line"><span class="comment">作用：表示小数</span></span><br><span class="line"><span class="comment">C++中有两种浮点型</span></span><br><span class="line"><span class="comment">单精度 float</span></span><br><span class="line"><span class="comment">双进度 double</span></span><br><span class="line"><span class="comment">双精度的有效范围更大*/</span></span><br><span class="line"><span class="comment">/*float的定义*/</span></span><br><span class="line"><span class="type">float</span> f1 = <span class="number">3.14f</span>;</span><br><span class="line"><span class="comment">/*为什么这里用3.14f而不用3.14</span></span><br><span class="line"><span class="comment">因为程序运行的逻辑是先创建了3.14 再通过指针</span></span><br><span class="line"><span class="comment">把f1指向这个3.14的位置 然后在程序创建3.14的时候会默认创建为一个double</span></span><br><span class="line"><span class="comment">的数据 所以要在后面先加上f 让他在创建的时候就创建为float的</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">上面的理解是全部错误的</span></span><br><span class="line"><span class="comment">cpp中将没有后缀的浮点数全部默认解释为double 因为double有更高的精度和更大的表数范围*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f1 = &quot;</span> &lt;&lt; f1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f1 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f1) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;d1 = &quot;</span> &lt;&lt; f1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;d1 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(d1) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*科学计数法*/</span></span><br><span class="line"><span class="type">float</span> f2 = <span class="number">3e2</span>;</span><br><span class="line"><span class="comment">/*3*10^2  </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f2 = &quot;</span> &lt;&lt; f2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f2 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f2) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f3 = <span class="number">3e-2</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f3 = &quot;</span> &lt;&lt; f3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f3 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f3) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*字符型*/</span></span><br><span class="line"><span class="comment">/*字符型就是表示单个字符的数据类型</span></span><br><span class="line"><span class="comment">下面依次 写  </span></span><br><span class="line"><span class="comment">字符型变量的创建方式</span></span><br><span class="line"><span class="comment">所占的内存大小</span></span><br><span class="line"><span class="comment">常见错误</span></span><br><span class="line"><span class="comment">对应的ASCII编码</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">char</span> ch1 = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ch1 = &quot;</span> &lt;&lt; ch1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ch1 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(ch1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ch1 &quot;</span> &lt;&lt; ch1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*加入字符的时候用单引号应用</span></span><br><span class="line"><span class="comment">这点在java里面其实也是 一样 的 </span></span><br><span class="line"><span class="comment">java中的双引号是用来引入字符串string的 </span></span><br><span class="line"><span class="comment">string和char有本质的区别 所以确实不同</span></span><br><span class="line"><span class="comment">字符型只占用一个字节</span></span><br><span class="line"><span class="comment">字符型变量并不是把字符本身放到内存 中存储</span></span><br><span class="line"><span class="comment">而是讲ASCII编码放到存储单元中 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*转义字符 </span></span><br><span class="line"><span class="comment">作用 用于表示一些不能显示出来的ASCII字符</span></span><br><span class="line"><span class="comment">现阶段我们常用的转义字符 有 \n \\ \t</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;转义字符\\ n &quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;hello\n world  &quot;</span>  &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;转义字符\\ t &quot;</span> &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;转义字符\\ \ &quot;</span> &lt;&lt; <span class="string">&quot;\\&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*在c中没有endl  结束语句也是通过\n*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;hello world \n&quot;</span>;</span><br><span class="line"><span class="comment">/*上面的代码可以执行*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*水平制表符\t</span></span><br><span class="line"><span class="comment">水平制表符具体输出 几个空格并不确定</span></span><br><span class="line"><span class="comment">取决于一种叫制表位的概念</span></span><br><span class="line"><span class="comment">一般来说是八个字符占一个制表位置 </span></span><br><span class="line"><span class="comment">所以输出 的时候 就是输出到最开始的八个字符 之后</span></span><br><span class="line"><span class="comment">如果已经输出了 3个字符 那么他就会输出到五个字符 的后面*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaaaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*字符串类型</span></span><br><span class="line"><span class="comment">字符串类型分为两种 C类型和C++类型</span></span><br><span class="line"><span class="comment">C类型的本质我认为就是一个字符的数组</span></span><br><span class="line"><span class="comment">C风格 char 变量名[] = &quot;字符串值&quot;</span></span><br><span class="line"><span class="comment">C++ 风格字符串 string 变量名 = &quot;字符串值&quot;*/</span></span><br><span class="line"><span class="type">char</span> str1[] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;str1:&quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*注意事项1、一定要加[]表示数组</span></span><br><span class="line"><span class="comment">2、一定要用 双引号 因为是多个字符 */</span></span><br><span class="line"></span><br><span class="line">string str2 = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;str2:&quot;</span> &lt;&lt; str2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*注意事项1、 C++中的string 是小写S开头</span></span><br><span class="line"><span class="comment">java中是大写s开头</span></span><br><span class="line"><span class="comment">2、一定要导入include string*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*布尔数据类型</span></span><br><span class="line"><span class="comment">只有真假 true false</span></span><br><span class="line"><span class="comment">本质就是0 和1  所以只占1字节 </span></span><br><span class="line"><span class="comment">创建布尔类型数据</span></span><br><span class="line"><span class="comment">查看所占用的空间</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> bl1 = <span class="literal">true</span>;;</span><br><span class="line"><span class="type">bool</span> bl2 = <span class="literal">false</span>;;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;bl1 = &quot;</span> &lt;&lt; bl1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;所占字节： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(bl1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;bl1 = &quot;</span> &lt;&lt; bl2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;所占字节 &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(bl1) &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*本质上1代表真 0带代表假*/</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*关于c++的命名规则</span></span><br><span class="line"><span class="comment">1、不能是关键字</span></span><br><span class="line"><span class="comment">2、字母、数字、下划线组成</span></span><br><span class="line"><span class="comment">3、第一个字符不能是数字</span></span><br><span class="line"><span class="comment">4、区分大小写</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">和java的主要区别</span></span><br><span class="line"><span class="comment">1、java中可以使用美元符号，且可以用$作为开头*/</span></span><br></pre></td></tr></table></figure><h3 id="数据的输入"><a href="#数据的输入" class="headerlink" title="数据的输入"></a>数据的输入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*数据的输入</span></span><br><span class="line"><span class="comment">使用关键字 cin</span></span><br><span class="line"><span class="comment">使用语法 cin &gt;&gt; 变量;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*依次输入整型浮点型字符型字符串布尔型等*/</span></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给整型变量a1赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a的值：&quot;</span> &lt;&lt; a1&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> a2 = <span class="number">0.0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给浮点型a2赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a2的值：&quot;</span> &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> a3 = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给字符型a3赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a3的值：&quot;</span> &lt;&lt; a3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">string a4 = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给字符串型a4赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a4;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a4的值：&quot;</span> &lt;&lt; a4 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> a5 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给布尔型a5赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a5;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a5的值：&quot;</span> &lt;&lt; a5 &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="comment">/*布尔类型的值赋值 只要是非0的值 都代表真*/</span></span><br><span class="line"></span><br><span class="line">+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基本运算符"><a href="#基本运算符" class="headerlink" title="基本运算符"></a>基本运算符</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*基本运算符</span></span><br><span class="line"><span class="comment">+- * /%</span></span><br><span class="line"><span class="comment">++ --  */</span></span><br><span class="line"><span class="type">int</span> n1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> n2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;给 整型数据 n1赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; n1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;给 整型数据 n2赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; n2;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n3 = n1;</span><br><span class="line"><span class="type">int</span> n4 = n2;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;加:&quot;</span> &lt;&lt; n1 + n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;减:&quot;</span> &lt;&lt; n1 - n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;乘:&quot;</span> &lt;&lt; n1 * n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;除:&quot;</span> &lt;&lt; n1 / n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;取余:&quot;</span> &lt;&lt; n1 % n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">n1 = ++n2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = ++n2 &quot;</span> &lt;&lt;<span class="string">&quot;n1:&quot;</span>&lt;&lt;n1&lt;&lt;<span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*等号右边的代码从左往右运行 首先先自增++ n2 = n2+1</span></span><br><span class="line"><span class="comment">n2本来是15 现在是16 然后赋值给n1 所以n1 = n2  = 16*/</span></span><br><span class="line"></span><br><span class="line">n1 = n3;</span><br><span class="line">n2 = n4;</span><br><span class="line">n1 = n2++;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 =n2++ &quot;</span> &lt;&lt; <span class="string">&quot;n1:&quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*这里就是先赋值再加减 先是n1 = n2 = 15 然后n2 + 1 = 16</span></span><br><span class="line"><span class="comment">下面的减法代码也是同理*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n1 = n3;</span><br><span class="line">n2 = n4;</span><br><span class="line">n1 = --n2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = --n2 &quot;</span> &lt;&lt; <span class="string">&quot;n1:&quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">n1 = n3;</span><br><span class="line">n2 = n4;</span><br><span class="line">n1 = n2--;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = n2-- &quot;</span> &lt;&lt; <span class="string">&quot;n1:&quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">float</span> m2 = <span class="number">3.14</span>;</span><br><span class="line"><span class="type">float</span> m3 = <span class="number">3.1415926535f</span>;</span><br><span class="line"><span class="type">double</span> m4 = <span class="number">3.1415926535</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; m1 / m2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; m3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; m4 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*关于除法</span></span><br><span class="line"><span class="comment">1、除数不能为0</span></span><br><span class="line"><span class="comment">2、不能对0取余*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*赋值运算符*/</span></span><br><span class="line"><span class="type">int</span> z1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> z2 = z1 += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;z1+=1:&quot;</span> &lt;&lt; z2 &lt;&lt; endl;</span><br><span class="line">z2 = z1 -= <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;z1-=1:&quot;</span> &lt;&lt; z2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*这里把加号换成- * / % 都是同理</span></span><br><span class="line"><span class="comment">所以就不逐个演示了</span></span><br><span class="line"><span class="comment">下面讲一讲与或非</span></span><br><span class="line"><span class="comment">符号分别是！非</span></span><br><span class="line"><span class="comment">&amp;&amp;  与</span></span><br><span class="line"><span class="comment">||  或 */</span></span><br><span class="line"></span><br><span class="line">n1 = <span class="number">0</span>;</span><br><span class="line">n2 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = &quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;/n&quot;</span> &lt;&lt; <span class="string">&quot;n2 = &quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> z3 = (n1 &amp;&amp; n2);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 &amp;&amp; n2:&quot;</span> &lt;&lt; z3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">z3 = (n1 || n2);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 || n2:&quot;</span> &lt;&lt; z3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环结构和分支结构"><a href="#循环结构和分支结构" class="headerlink" title="循环结构和分支结构"></a>循环结构和分支结构</h2><h3 id="if分支"><a href="#if分支" class="headerlink" title="if分支"></a>if分支</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*程序执行的三种结构</span></span><br><span class="line"><span class="comment">顺序结构 就是直接按照顺序执行代码</span></span><br><span class="line"><span class="comment">选择结构 就是执行满足条件 的代码</span></span><br><span class="line"><span class="comment">循环结构 满足条件时重复执行代码 直到不满足条件为止*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*if 语句 </span></span><br><span class="line"><span class="comment">输入分数  大于100 则打印考上了*/</span></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*在Cpp中变量不会默认初始化，所以你定义完了一个数字之后必须要赋值一个值</span></span><br><span class="line"><span class="comment">这点和java不同*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;please enter a score&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you score is:&quot;</span> &lt;&lt;score&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">100</span>)</span><br><span class="line">&#123; </span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you can go to the college!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">60</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Maybe next time&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;stupid&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="if循环练习"><a href="#if循环练习" class="headerlink" title="if循环练习"></a>if循环练习</h3><p>三只小猪称体重，找出最大的那一只</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*一个小程序 三只小猪比体重*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> p1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> p2 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> p3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第一只小猪的体重 \n &quot;</span>;</span><br><span class="line">cin &gt;&gt; p1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第一只小猪的体重是：&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第二只小猪的体重 \n &quot;</span>;</span><br><span class="line">cin &gt;&gt; p2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第二只小猪的体重是：&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第三只小猪的体重 \n &quot;</span>;</span><br><span class="line">cin &gt;&gt; p3;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第三 只小猪的体重是：&quot;</span> &lt;&lt; p3&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (p1 &gt; p2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p1 &gt; p3) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第一只小猪,重量为：&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第三只小猪,重量为：&quot;</span> &lt;&lt; p3 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p2 &gt; p3)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第二只小猪,重量为：&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第三只小猪,重量为：&quot;</span> &lt;&lt; p3 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*三目运算符</span></span><br><span class="line"><span class="comment">表达式一 ？ 表达式二 ： 表达式3</span></span><br><span class="line"><span class="comment">对表达式1判断 真执行2假执行3*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*三目运算符</span></span><br><span class="line"><span class="comment">创建abc变量</span></span><br><span class="line"><span class="comment">ab比较 大的赋值c*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">c= (a &gt; b ? a : b);</span><br><span class="line">cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*在cpp中 三目运算符返回的是变量，可以继续赋值*/</span></span><br><span class="line">(a &gt; b ? a : b) = <span class="number">100</span>;</span><br><span class="line"><span class="comment">/*返回 的值是b </span></span><br><span class="line"><span class="comment">这里是把返回的b重新赋值了*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt;<span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;b:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="switch和do-while基本语法"><a href="#switch和do-while基本语法" class="headerlink" title="switch和do while基本语法"></a>switch和do while基本语法</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="comment">/*time系统时间头文件包含*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*switch 语句</span></span><br><span class="line"><span class="comment">switch基本语法</span></span><br><span class="line"><span class="comment">switch（ 表达式）&#123;</span></span><br><span class="line"><span class="comment">case 结果1： 执行语句 ；break；</span></span><br><span class="line"><span class="comment">default：执行语句；break；</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">根据表达式产生的结果不同</span></span><br><span class="line"><span class="comment">执行 不同 的 语句，</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*给电影进行打分</span></span><br><span class="line"><span class="comment">10-9 经典</span></span><br><span class="line"><span class="comment">8-7 非常好</span></span><br><span class="line"><span class="comment">6-5 一般</span></span><br><span class="line"><span class="comment">5以下 烂片*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">short</span> <span class="type">int</span> a1 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;please enter  your score:&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//cin &gt;&gt; a1;</span></span><br><span class="line">a1 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//switch (a1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//case 10:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;经典&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 9 :</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;经典&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 8:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;非常好&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 7:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;非常好&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 6:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;一般&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 5:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;一般&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//default:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;不行&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (a1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;经典&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;非常好&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一般&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;不行&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*循环 结构</span></span><br><span class="line"><span class="comment">while循环</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (n1 &lt; <span class="number">10</span>) &#123;</span><br><span class="line">cout &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">n1++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line"><span class="comment">/*猜数字游戏*/</span></span><br><span class="line"><span class="type">int</span> a2 = (<span class="built_in">rand</span>() % <span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> b1 = (<span class="built_in">rand</span>() % <span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; b1 &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> b2 = (<span class="built_in">rand</span>() % <span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; b2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*这个函数可以随机生成 一个不小于后面数字的 数</span></span><br><span class="line"><span class="comment">这里 就是随机生成了一个 0-99之间 的 数*/</span></span><br><span class="line"><span class="comment">/*然后发现这个随机数不是真的随机数 每次生成的都是一样 </span></span><br><span class="line"><span class="comment">重复生成的数字也是固定的</span></span><br><span class="line"><span class="comment">然后看到网上说要添加随机数的种子，才能防止每次生成的都一样</span></span><br><span class="line"><span class="comment">可以根据系统时间生成随机数*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;enter  your guess:&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line"><span class="type">int</span> a4 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (a3 &gt; a2)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2 is smaller&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line">a4++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a3 &lt; a2) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2 is bigger&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line">a4++;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you god damn right&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you guess &quot;</span> &lt;&lt; a4 &lt;&lt; <span class="string">&quot; times&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*do while 循环语句</span></span><br><span class="line"><span class="comment">dowhile先 执行一次 循环语句</span></span><br><span class="line"><span class="comment">再判断 循环条件</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> n2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">cout &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line">n2++;</span><br><span class="line">&#125; <span class="keyword">while</span> (n2 &lt; <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="水仙花数练习"><a href="#水仙花数练习" class="headerlink" title="水仙花数练习"></a>水仙花数练习</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*水仙花数练习</span></span><br><span class="line"><span class="comment">解题思路 </span></span><br><span class="line"><span class="comment">1、输出所有三位数 （100-999）</span></span><br><span class="line"><span class="comment">2、找到水仙花数字</span></span><br><span class="line"><span class="comment">3、取模取各个位 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">判断 个位^3+十位^3+百位^3 = 本身</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印三位数*/</span></span><br><span class="line"><span class="type">int</span> num = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="comment">/*添加判断条件 如果是水仙花数才打印*/</span></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> a3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">a1 = num % <span class="number">10</span>;</span><br><span class="line">a2 = (num/<span class="number">10</span>)%<span class="number">10</span>;</span><br><span class="line">a3 = num/<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> b1 = a1 * a1 * a1;</span><br><span class="line"><span class="type">int</span> b2 = a2 * a2 * a2;</span><br><span class="line"><span class="type">int</span> b3 = a3 * a3 * a3;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> c1 = b1 + b2 + b3;</span><br><span class="line"><span class="keyword">if</span> ( c1 == num )</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (num &lt; <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*for 循环</span></span><br><span class="line"><span class="comment">满足循环条件时</span></span><br><span class="line"><span class="comment">执行循环语句</span></span><br><span class="line"><span class="comment">语法</span></span><br><span class="line"><span class="comment">for(起始表达式;条件表达式；末尾循环体)&#123;</span></span><br><span class="line"><span class="comment">循环语句 &#125;</span></span><br><span class="line"><span class="comment">起始表达式不参与循环，</span></span><br><span class="line"><span class="comment">条件表达式就是循环执行的条件</span></span><br><span class="line"><span class="comment">末尾循环体在循环每次结束之后运行</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*用for循环从数字0打印到9*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;<span class="comment">/*需要声明变量的类型</span></span><br><span class="line"><span class="comment"> java和c++中都需要声明*/</span></span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; a &lt; <span class="number">10</span>; a++)</span><br><span class="line">&#123;<span class="comment">/*声明也可以写外面</span></span><br><span class="line"><span class="comment"> 但是声明如果写在外面，不管写不写起始表达式都要加一个分号*/</span></span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for循环练习案例"><a href="#for循环练习案例" class="headerlink" title="for循环练习案例"></a>for循环练习案例</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*练习案例 敲桌子 </span></span><br><span class="line"><span class="comment">从数字1数到100 如果数字个位</span></span><br><span class="line"><span class="comment">十位 含有7或者是7的倍数 我们打印敲桌子</span></span><br><span class="line"><span class="comment">其他数字直接打印*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line"><span class="type">int</span> a = (i % <span class="number">10</span>);</span><br><span class="line"><span class="type">int</span> b = i / <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">7</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;flap desk&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(b == <span class="number">7</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;flap desk&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i % <span class="number">7</span> ==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;flap desk&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="嵌套循环练习"><a href="#嵌套循环练习" class="headerlink" title="嵌套循环练习"></a>嵌套循环练习</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*嵌套循环*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*练习1 打印10x10图*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j&lt;<span class="number">11</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *&quot;</span> ;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>打印乘法口诀表</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印乘法口诀表*/</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; <span class="string">&quot;x&quot;</span> &lt;&lt; j &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; i * j &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="跳转语句"><a href="#跳转语句" class="headerlink" title="跳转语句"></a>跳转语句</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*跳转语句</span></span><br><span class="line"><span class="comment">1、出现在switch语句中 跳出循环</span></span><br><span class="line"><span class="comment">2、出现在循环中，作用是跳出当前的循环</span></span><br><span class="line"><span class="comment">3、出现在嵌套循环中，跳出内层的循环*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;please choice level&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1、easy&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2、normal&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;3、difficult&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (select)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you choice easy mode&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you choice normal mode&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you choice difficult mode&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*出现在for循环中*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*嵌套循环*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">11</span>;j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (j==<span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><p>一维数组定义的三种方法</p><p>数据类型 数据名 [数组长度];<br>数据类型 数据名 [数组长度] = {值1，值2};<br>数据类型 数据名 [] = {值1，值2};</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*数组</span></span><br><span class="line"><span class="comment">数组就是一个集合 里面装了相同类型的数据元素</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">特点1 数组中的每个数据元素都是相同的数据类型</span></span><br><span class="line"><span class="comment">特点2 数组是由连续的内存位置组成的*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*一维数组的三种定义方式</span></span><br><span class="line"><span class="comment">2、数据类型 数据名 [数组长度];</span></span><br><span class="line"><span class="comment">首先根据特点1 数组里面所有元素都需要是相同的数据类型</span></span><br><span class="line"><span class="comment">所以声明数据类型特别重要 </span></span><br><span class="line"><span class="comment">数据名就是数组的总体名称</span></span><br><span class="line"><span class="comment">最后因为数组是一个定长 同时内存位置连续</span></span><br><span class="line"><span class="comment">所以需要声明数组长度 提前规划数组内存位置</span></span><br><span class="line"><span class="comment">2、数据类型 数据名 [数组长度] = &#123;值1，值2&#125;;</span></span><br><span class="line"><span class="comment">3、数据类型 数据名 [] = &#123;值1，值2&#125;;</span></span><br><span class="line"><span class="comment">第三种方法是你直接 把值写入进去 然后不人为定义的数组长度</span></span><br><span class="line"><span class="comment">那么他会根据你写入的值默认定义数组的长度</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">数组自动生成下标 我们可以通过下标来访问数组中的元素</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*第一种方法 */</span></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">5</span>];</span><br><span class="line"><span class="comment">/*给数组中的元素进行赋值</span></span><br><span class="line"><span class="comment">数组下标从0开始*/</span></span><br><span class="line">arr1[<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line">arr1[<span class="number">1</span>] = <span class="number">20</span>;</span><br><span class="line">arr1[<span class="number">2</span>] = <span class="number">30</span>;</span><br><span class="line">arr1[<span class="number">3</span>] = <span class="number">40</span>;</span><br><span class="line">arr1[<span class="number">4</span>] = <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*访问数据元素*/</span></span><br><span class="line">cout &lt;&lt; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*第二种*/</span></span><br><span class="line"><span class="type">int</span> arr2[<span class="number">5</span>] = &#123; <span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span> &#125;;</span><br><span class="line"><span class="comment">//cout &lt;&lt; arr2[0] &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用循环的方式输出*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr2[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr3[<span class="number">5</span>] = &#123; <span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>&#125;;</span><br><span class="line">cout &lt;&lt; arr3[<span class="number">4</span>] &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*如果在初始化的时候没有填写完全部的数据</span></span><br><span class="line"><span class="comment">，剩下的数据会用0来填补*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义数组的时候必须有数组初始长度*/</span></span><br><span class="line"><span class="type">int</span> arr4[] = &#123; <span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr4[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一维数名的用途"><a href="#一维数名的用途" class="headerlink" title="一维数名的用途"></a>一维数名的用途</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*一维数组数组名的用途</span></span><br><span class="line"><span class="comment">1、统计整个数组在内存中的长途*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">5</span>] = &#123; <span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span> &#125;;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(arr1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(arr1)/ <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*输出数组名称查看首地址*/</span></span><br><span class="line">cout &lt;&lt; arr1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; &amp;arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>)arr1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>) &amp; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>) &amp; arr1[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">arr1[<span class="number">0</span>] = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一维数组练习"><a href="#一维数组练习" class="headerlink" title="一维数组练习"></a>一维数组练习</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*五只小猪称重</span></span><br><span class="line"><span class="comment">一个数组中记录了五只小猪的体重</span></span><br><span class="line"><span class="comment">从中选出最重的*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> pig[<span class="number">5</span>] = &#123; <span class="number">100</span>,<span class="number">300</span>,<span class="number">500</span>,<span class="number">200</span>,<span class="number">400</span> &#125;;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (pig[i] &gt; j)</span><br><span class="line">&#123;</span><br><span class="line">j = pig[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; j &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*冒泡排序*/</span></span><br><span class="line"><span class="comment">/*最常用的排序算法</span></span><br><span class="line"><span class="comment">对数组内的元素进行排序</span></span><br><span class="line"><span class="comment">比较相邻的元素，如果第一个比第二个大，就交换</span></span><br><span class="line"><span class="comment">对比每一对相邻元素做同样的工作，执行完毕后，找到第一个最大值</span></span><br><span class="line"><span class="comment">重复以上的步骤，每次比较次数-1直到不需要比较</span></span><br><span class="line"><span class="comment">总的比较次数 = 数组长度 - 1</span></span><br><span class="line"><span class="comment">数组长度 用size of可以计算</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//void swapValues(int&amp; a, int&amp; b) &#123;</span></span><br><span class="line"><span class="comment">//int temp = a;  // 使用临时变量来交换</span></span><br><span class="line"><span class="comment">//a = b;</span></span><br><span class="line"><span class="comment">//b = temp;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[] = &#123; <span class="number">4</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*计算数组长度*/</span></span><br><span class="line"><span class="type">int</span> length = <span class="built_in">sizeof</span>(arr1) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组长度&quot;</span> &lt;&lt; length &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> times = length - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tempo = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*排序总轮数 = 元素个数 -1</span></span><br><span class="line"><span class="comment">每轮对比的次数 = 元素个数 - 排序轮数*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//总排序轮数 times</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; times; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; times  - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arr1[j] &gt; arr1[j<span class="number">+1</span>])</span><br><span class="line">&#123;</span><br><span class="line">tempo = arr1[j];</span><br><span class="line">arr1[j] = arr1[j + <span class="number">1</span>];</span><br><span class="line">arr1[j + <span class="number">1</span>] = tempo;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;冒泡排序 排序后&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr1[i];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*调用函数实现*/</span></span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; times; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//for (int j = 0; j &lt; times - i; j++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (arr5[j]&gt;arr5[j+1])</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//swapValues(arr5[j], arr5[j+1]);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><p>二维数组的四种定义方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据类型 数据名[行数][列数];</span><br><span class="line">数据类型 数据名[行数][列数]=&#123;&#123;数据1,数据2&#125;,&#123;数据3,数据4&#125;&#125;;</span><br><span class="line">数据类型 数据名[行数][列数]=&#123;数据1，数据2，数据3，数据4&#125;;</span><br><span class="line">数据类型 数据名[][列数]=&#123;数据1,数据2,数据3,数据4&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*二维数组</span></span><br><span class="line"><span class="comment">二维数组就是在一维数组基础上个多加了一个维度</span></span><br><span class="line"><span class="comment">二维数组定义有四种方式</span></span><br><span class="line"><span class="comment">数据类型 数据名[行数][列数];</span></span><br><span class="line"><span class="comment">数据类型 数据名[行数][列数]=&#123;&#123;数据1,数据2&#125;,&#123;数据3,数据4&#125;&#125;;</span></span><br><span class="line"><span class="comment">数据类型 数据名[行数][列数]=&#123;数据1，数据2，数据3，数据4&#125;;</span></span><br><span class="line"><span class="comment">数据类型 数据名[][列数]=&#123;数据1,数据2,数据3,数据4&#125;*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*第一种二维数组的定义方式*/</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">4</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">5</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr2[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr2[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr3[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr3[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;<span class="comment">/*默认情况下他先按照行输入，满了之后换下一行*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr4[][<span class="number">3</span>] =</span><br><span class="line">&#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr3[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二维数组名的用途"><a href="#二维数组名的用途" class="headerlink" title="二维数组名的用途"></a>二维数组名的用途</h3><p>查看二维数组所占内存空间<br>获取二维数组首地址</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组所占内存空间：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一行所占内存 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一个元素所占内存 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组有多少行 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1)/ <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组有多少列 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*可以查看二维数组首地址*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组的首地址&quot;</span> &lt;&lt; (<span class="type">int</span>)arr1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一行的首地址&quot;</span> &lt;&lt; (<span class="type">int</span>)arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第二行的首地址&quot;</span> &lt;&lt; (<span class="type">int</span>)arr1[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二维数组应用案例"><a href="#二维数组应用案例" class="headerlink" title="二维数组应用案例"></a>二维数组应用案例</h3><p>在一次考试中成绩分别如下表，请分别输出三名同学的总成绩</p><div class="table-container"><table><thead><tr><th></th><th>语文</th><th>数学</th><th>英语</th></tr></thead><tbody><tr><td>张三</td><td>100</td><td>100</td><td>100</td></tr><tr><td>李四</td><td>90</td><td>50</td><td>100</td></tr><tr><td>王五</td><td>60</td><td>70</td><td>80</td></tr></tbody></table></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*二维数组应用案例</span></span><br><span class="line"><span class="comment">案例描述：有三名同学（张三李四王五）</span></span><br><span class="line"><span class="comment">在一次考试中成绩分别如下表，请分别输出三名同学的总成绩</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*自己写的*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;========自己写的==========&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score[<span class="number">3</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">90</span>,<span class="number">50</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">string name = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">sum += score[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> (i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">name = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">name = <span class="string">&quot;王五&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; name &lt;&lt; <span class="string">&quot;的总成绩：&quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;========视频写的==========&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> score2[<span class="number">3</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">90</span>,<span class="number">50</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line">string name1[<span class="number">3</span>] = &#123; <span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span> &#125;; </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;<span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sum2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">sum2 += score2[i][j];</span><br><span class="line">cout &lt;&lt; score[i][j]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cout &lt;&lt;&quot;\n&quot; &lt;&lt; &quot;第&quot; &lt;&lt; i + 1 &lt;&lt; &quot;个人的总分为:&quot; &lt;&lt; sum2 &lt;&lt; endl;</span></span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\n&quot;</span> &lt;&lt; name1[i] &lt;&lt; <span class="string">&quot;的总分为:&quot;</span> &lt;&lt; sum2 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>作用：将一段经常使用的代码封装起来，减少重复代码<br>一个较大的程序，一半分为若干个程序块，每个模块时下按特定的功能</p><h3 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h3><p>函数的定义一般主要有五个步骤<br>1、返回值类型<br>2、函数名<br>3、参数列表<br>4、函数体语句<br>5、return表达式<br><strong>语法</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">返回值类型 函数名 （参数列表）</span><br><span class="line">&#123;</span><br><span class="line">函数体</span><br><span class="line">return语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义一个加法函数，传入两个参数，相加</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*1、返回值类型</span></span><br><span class="line"><span class="comment">2、函数名</span></span><br><span class="line"><span class="comment">3、参数列表</span></span><br><span class="line"><span class="comment">4、函数体语句</span></span><br><span class="line"><span class="comment">5、return表达式*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*实现一个加法函数，功能是，传入两个整型数据</span></span><br><span class="line"><span class="comment">计算数据相加的结果，并且返回*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">( <span class="type">int</span> num1,<span class="type">int</span> num2 )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a3 = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> a4 = <span class="built_in">add</span>(a2, a3);</span><br><span class="line"><span class="type">int</span> a5 = <span class="built_in">add</span>(a1, a2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">2</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1:&quot;</span>&lt;&lt;a1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a4:&quot;</span>&lt;&lt;a4 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a5:&quot;</span>&lt;&lt;a5 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数调用，形参和实参"><a href="#函数调用，形参和实参" class="headerlink" title="函数调用，形参和实参"></a>函数调用，形参和实参</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数调用*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*函数调用语法: 函数名(参数)*/</span></span><br><span class="line"><span class="comment">/*a和b称为 实际参数 实际上是有值的 </span></span><br><span class="line"><span class="comment">实参 传入的参数</span></span><br><span class="line"><span class="comment">再看函数在定义的时候 num1 和 num2</span></span><br><span class="line"><span class="comment">并没有实际的值 所以是形式参数 也就是形参*/</span></span><br><span class="line"><span class="type">int</span> c = <span class="built_in">add</span>(a, b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h3><p>所谓值传递，就是函数调用时实参将数值传入给形参<br>值传递时，如果<strong>形参发生改变，并不会影响实参</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义函数 实现两个数字进行交换*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> n1, <span class="type">int</span> n2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;before&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1=&quot;</span>&lt;&lt; n1&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n2=&quot;</span>&lt;&lt; n2&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n3 = n1;</span><br><span class="line">n1 = n2;</span><br><span class="line">n2 = n3;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;after&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1=&quot;</span> &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n2=&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//return; 返回值不需要的时候 可以不写return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap</span>(a1, a2);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1=&quot;</span> &lt;&lt; a1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2=&quot;</span> &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*输出了之后发现a1 a2的值没变</span></span><br><span class="line"><span class="comment">说明交换只在函数内有效*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*用专业的语句来说 就是我们做值传递的时候</span></span><br><span class="line"><span class="comment">函数的形参发生改变，并不会影响实参数</span></span><br><span class="line"><span class="comment">现在根据我的理解，值传递就是赋值</span></span><br><span class="line"><span class="comment">就是调用函数的时候把实际的两个变量 传递进函数的两个变量</span></span><br><span class="line"><span class="comment">也就是传递进函数的两个实参的值，传递给函数内的形参</span></span><br><span class="line"><span class="comment">到上面为止的所有方法都是值传递</span></span><br><span class="line"><span class="comment">值传递的时候形参发生的任何改变都不会影响实参*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>( <span class="string">&quot;pause&quot;</span> );</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：值传递时，形参改变（修饰）不了实参</p><h3 id="函数的常见样式"><a href="#函数的常见样式" class="headerlink" title="函数的常见样式"></a>函数的常见样式</h3><p>常见的函数样式有四种<br>1、无参无返<br>2、有参无返<br>3、无参有返<br>4、有参有返</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*四种常见的函数*/</span></span><br><span class="line"><span class="comment">/*无参无返*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test01&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*有参无返*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;int a is :&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*无参有返*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test03&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test04</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test04&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*无参无返的函数调用*/</span></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="comment">/*有参无返的函数调用*/</span></span><br><span class="line"><span class="built_in">test02</span>(<span class="number">2</span>);</span><br><span class="line"><span class="comment">/*无参有返的函数调用*/</span></span><br><span class="line"><span class="type">int</span> a1 = <span class="built_in">test03</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1=&quot;</span> &lt;&lt; a1 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*有参有返的函数调用*/</span></span><br><span class="line"><span class="type">int</span> a2 = <span class="built_in">test04</span>(<span class="number">10000</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2=&quot;</span> &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数的声明"><a href="#函数的声明" class="headerlink" title="函数的声明"></a>函数的声明</h3><p><strong>作用</strong>：告诉编译器函数名称一集如何调用函数。函数的实际主体可以单独定义。<br>函数的什么可以多次，但是函数的定义只能有一次</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数的声明*/</span></span><br><span class="line"><span class="comment">/*比较函数，实现两个整形的数字进行比较</span></span><br><span class="line"><span class="comment">返回较大的值*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*提前告诉编译器函数存在 可以利用函数的声明*/</span></span><br><span class="line"><span class="comment">/*函数的声明*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="comment">/*声明可以写多次，但是定义只能有一次*/</span></span><br><span class="line"><span class="comment">/*个人看法 就是把函数体中的部分去掉*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">max</span>(a1, a2) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义函数*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数的分文件编写"><a href="#函数的分文件编写" class="headerlink" title="函数的分文件编写"></a>函数的分文件编写</h3><p><strong>作用</strong>：让代码结构更加清晰<br>函数分文件编写一般有4个步骤<br>1、创建后缀名为.h的头文件<br>2、创建后缀名为.cpp的源文件<br>3、再头文件中写函数的声明<br>4、在源文件中写函数的定义</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">swap.h</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数的声明*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line">swap.cpp</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = a;</span><br><span class="line">a = b;</span><br><span class="line">b = tempo;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">test<span class="number">035.</span>cpp</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*函数的分文件编写*/</span></span><br><span class="line"><span class="comment">/*实现两个数字*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap</span>(a1, a2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><h3 id="指针的基本概念"><a href="#指针的基本概念" class="headerlink" title="指针的基本概念"></a>指针的基本概念</h3><p>作用：通过指针间接访问内存</p><p>内存编号是从0开始记录的，一般用十六进制表示<br>可以利用指针变量保存地址</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241220203516452.png" alt="image-20241220203516452"></p><h3 id="指针变量的定义和使用"><a href="#指针变量的定义和使用" class="headerlink" title="指针变量的定义和使用"></a>指针变量的定义和使用</h3><p>指针变量定义语法：数据类型 *变量名;</p><p>为什么要写数据类型：定义指针时需要指定数据类型，是为了保证指针的正确行为，包括内存访问、数据解释以及指针算术操作。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*定义指针*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*指针定义的语法： 数据类型 * 指针变量名;*/</span></span><br><span class="line"><span class="type">int</span> * p;</span><br><span class="line"><span class="comment">/*p代表point point 代表的就是指针的意思</span></span><br><span class="line"><span class="comment">指向性 指针</span></span><br><span class="line"><span class="comment">不同的数据类型在内存中占用不同大小</span></span><br><span class="line"><span class="comment">不同指针*/</span></span><br><span class="line"><span class="comment">/*&amp;a 获得a的地址</span></span><br><span class="line"><span class="comment">后面引用传递的时候也会记载*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*让指针记录变量a的地址*/</span></span><br><span class="line">p = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a的地址&quot;</span> &lt;&lt; &amp;a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;指针p为&quot;</span> &lt;&lt; p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用指针*/</span></span><br><span class="line"><span class="comment">/*可以通过解引用的方式来找到指针指向的内存*/</span></span><br><span class="line"><span class="comment">/*指针前加一个*就是解引用，找到指针指向的内存中的数据*/</span></span><br><span class="line">*p = <span class="number">1000</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a的现在为&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p现在为&quot;</span> &lt;&lt; p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p现在为&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*个人理解：首先我们定义了一个int变量a 他的地址可能是0x00</span></span><br><span class="line"><span class="comment">* 然后内存中 0x00 的位置的变量就是a 假设为0</span></span><br><span class="line"><span class="comment">* 然后我们定义了一个 int 指针 p</span></span><br><span class="line"><span class="comment">* 然后让这个指针指向 a 就是说 p = 0x00</span></span><br><span class="line"><span class="comment">* 然后解引用就是找到这个地址中的数据 比如说找到0x00</span></span><br><span class="line"><span class="comment">* 然后看一下这个位置4个字节长度的数据是0000 那就是0 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解引用<br>*p 表示 解引用操作，也就是通过指针 p 获取它所指向的地址，并操作该地址中的数据。<br>然后指针的定义中 </p><ul><li><strong>功能上</strong>，<code>int *p;</code>、<code>int * p;</code> 和 <code>int* p;</code> 是等价的，指向 <code>int</code> 类型的指针。</li><li><strong>空格的使用</strong> 完全是风格问题，取决于个人或团队的编码习惯。</li></ul><h3 id="指针所占内存空间"><a href="#指针所占内存空间" class="headerlink" title="指针所占内存空间"></a>指针所占内存空间</h3><p>指针也是种数据类型，那么这种数据类型占用多少内存空间？</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*指针所占内存空间*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//int* p;</span></span><br><span class="line"><span class="comment">//p = &amp;a;</span></span><br><span class="line"><span class="comment">/*更加简洁的写法*/</span></span><br><span class="line"><span class="type">int</span> * p = &amp;a;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of (int *)&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">int</span> * ) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of (double *)&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">double</span> * ) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of (p)&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(p) &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*在32位操作系统下 所有指针都占4个字节</span></span><br><span class="line"><span class="comment">在64位操作系统下，所有指针都占8个字节</span></span><br><span class="line"><span class="comment">我是64位系统，所以这里都是显示占8字节*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="空指针和野指针"><a href="#空指针和野指针" class="headerlink" title="空指针和野指针"></a>空指针和野指针</h3><p><strong>空指针</strong>：指针变量指向内存中编号为0的空间<br><strong>用途</strong>：初始化指针变量<br><strong>注意</strong>：空指针指向的内存是不可以访问的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span>  <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*空指针*/</span></span><br><span class="line"><span class="comment">/*空指针用于初始化*/</span></span><br><span class="line"><span class="type">int</span> *p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*空指针是不可以访问 的</span></span><br><span class="line"><span class="comment">下面 尝试解引用，然后 就失败了*/</span></span><br><span class="line"><span class="comment">//*p = 100;</span></span><br><span class="line"><span class="comment">//0-255之间的内存编号是系统占用的，因此不可以访问</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>野指针</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*野指针*/</span></span><br><span class="line"><span class="comment">/*在程序中尽量避免出现野指针</span></span><br><span class="line"><span class="comment">野指针就是直接赋值了一块地址</span></span><br><span class="line"><span class="comment">但是这块地址实际上是没有权限去操作的</span></span><br><span class="line"><span class="comment">因为正常可以操作的地址是通过正常定义申请得来的*/</span></span><br><span class="line"><span class="type">int</span>* p = (<span class="type">int</span>*)<span class="number">0x1100</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><u>空指针和野指针都不是我们申请的空间，因此不要访问。</u></p><h3 id="const修饰指针"><a href="#const修饰指针" class="headerlink" title="const修饰指针"></a>const修饰指针</h3><p>const 修饰指针有三种情况<br>const修饰指针 常量指针<br>const修饰常量 指针常量<br>const既修饰指针 又修饰常量</p><h4 id="常量指针"><a href="#常量指针" class="headerlink" title="常量指针"></a>常量指针</h4><p>特点：指针的指向可以修改，但是指针指向的值不可以改。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241220221523804.png" alt="image-20241220221523804"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*常量指针 </span></span><br><span class="line"><span class="comment">常量指针 首先是指针， 然后是const修饰的指针</span></span><br><span class="line"><span class="comment">const导致这个指针变成了一个常量*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">20</span>;</span><br><span class="line"><span class="comment">/*常量指针*/</span></span><br><span class="line"><span class="type">int</span> * p1 = &amp;a;</span><br><span class="line"><span class="comment">/*上面就是定义一个指针的正常语</span></span><br><span class="line"><span class="comment">然后如果要定义一个常量指针 首先他是一个指针</span></span><br><span class="line"><span class="comment">其次用常量修饰 所以应该用const修饰这个指针的定义*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* p2 = &amp;a;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p2 = &quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*指针的指向可以修改，</span></span><br><span class="line"><span class="comment">但是指针指向的值不可以改</span></span><br><span class="line"><span class="comment">首先如果我定义一个指针</span></span><br><span class="line"><span class="comment">比如在这里，我能*/</span></span><br><span class="line">p2 = &amp;b;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p2 = &quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*为什么这里用p1 = &amp;b;而不是*p1 = &amp;b;</span></span><br><span class="line"><span class="comment">因为p1 = &amp;b;的意思是把p1的指向从a改成b</span></span><br><span class="line"><span class="comment">而*p1 = &amp;b;的意思是把p1指向的内容 ，也就是a指向的内存所占的空间中的数据改成b</span></span><br><span class="line"><span class="comment">这肯定是不行的，因为a是一个int 所以只能存储数字，b在这里只是一个字母*/</span></span><br><span class="line"></span><br><span class="line">p2 = &amp;c;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p2 = &quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*从这里我们可以知道 首先这个所谓的常量指针</span></span><br><span class="line"><span class="comment">说白了就是不可以解引用然后修改内存地址中存储的数字，</span></span><br><span class="line"><span class="comment">但是实际上还是可以指向不同的数的 这里可以指向代表20的c</span></span><br><span class="line"><span class="comment">也可以指向代表10的b 说明就是缺少了解引用的功能</span></span><br><span class="line"><span class="comment">我的猜测是可能可以用来防止修改已有的变量吧*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="指针常量"><a href="#指针常量" class="headerlink" title="指针常量"></a>指针常量</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*指针常量*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*正常指针*/</span></span><br><span class="line"><span class="type">int</span>* p2 = &amp;a;</span><br><span class="line"><span class="comment">/*指针常量*/</span></span><br><span class="line"><span class="type">int</span>* <span class="type">const</span> p1 = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">*p1 = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p1 = &quot;</span> &lt;&lt; *p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*这里可以看到 p1的地址没有发生改变</span></span><br><span class="line"><span class="comment">也就是说p1一直是指向那一块内存空间的</span></span><br><span class="line"><span class="comment">但是p1的值*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>const既修饰指针，又修饰常量</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*const 既修饰指针 也修饰常量*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p1 = &amp;a;</span><br><span class="line"><span class="type">int</span> <span class="type">const</span> * <span class="type">const</span> p2 = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p2=&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p1=&quot;</span> &lt;&lt; *p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p2=&quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*指针的指向和指针的值都不可以修改*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>理解看法和总结</strong>：</p><p>说一下这一块我整体的看法和总结，首先先来看指针的定义<br>指针定义过程中的int <em> p = &xxx; 其中 </em>代表他是一个指针，然后p实际上就是一个数字，用来存储内存地址<br>常量指针，常量作为一个形容词修饰指针，所以const 肯定在 <em>的前面（无所谓在int前后）<br>所以他作为指针常量，只是指针的 </em> 部分被限制住了，<em>在解引用的时候要用到，所以就没办法用了<br>说人话就是没办法用 </em>p = 10;这种语句来修改内存地址中的数据了。这是常量指针 指针的部分被常量限制了。<br>然后是指针常量，指针常量在前面，首先是指针 然后才是常量 所以定义的方式是 int <em> const p = &a;这样，然后p的部分本来存储的就是内存地址，被const修饰之后 内存地址就没办法更改了，但是 </em>的部分功能还是正常的，也就是说我们可以解引用修改内存地址中的数据 但是没办法修改引用的内存地址了。 这 p永远都只能指向a<br>最后是第三种  const int * const p  = &amp;a 这种 情况下 既没办法修改地址 也没办法解引用修改值。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*const 既修饰指针 也修饰常量*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p1 = &amp;a;</span><br><span class="line"><span class="type">int</span> <span class="type">const</span> * <span class="type">const</span> p2 = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p2=&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p1=&quot;</span> &lt;&lt; *p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p2=&quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*指针的指向和指针的值都不可以修改*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*1\ const修饰指针*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* p3 = &amp;a;</span><br><span class="line">p3 = &amp;b;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p3:&quot;</span> &lt;&lt; p3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p3:&quot;</span> &lt;&lt; *p3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2\ const修饰常量*/</span></span><br><span class="line"><span class="type">int</span>* <span class="type">const</span> p4 = &amp;a;</span><br><span class="line">*p4 = <span class="number">30</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p4&quot;</span>&lt;&lt;p4&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p4&quot;</span> &lt;&lt; *p4&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*3 const修饰指针和常量*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p5 = &amp;a;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p5&quot;</span> &lt;&lt; p5 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p5&quot;</span> &lt;&lt; *p5 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="指针和数组"><a href="#指针和数组" class="headerlink" title="指针和数组"></a>指针和数组</h3><p><strong>作用</strong>：利用指针访问数组中元素</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*指针和数组</span></span><br><span class="line"><span class="comment">利用指针访问数组中的元素*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第一个元素&quot;</span> &lt;&lt; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*数组是整形的 所以我们创建指针的时候也要创建整形的指针*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* p = arr1;</span><br><span class="line"><span class="comment">/*arr就是数组首地址*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;利用指针访问第一个元素:&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">p++;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;P++元素:&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*p++之后访问的就是数组中的第二个元素了*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;利用指针遍历数组&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span>* p2 = arr1;</span><br><span class="line"><span class="type">int</span> length = <span class="built_in">sizeof</span>(arr1) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*不用指针*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;个数是&quot;</span> &lt;&lt; arr1[i] &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*用指针*/</span></span><br><span class="line">cout &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line">p2++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针和函数"><a href="#指针和函数" class="headerlink" title="指针和函数"></a>指针和函数</h3><p>作用：利用指针做函数参数，可以改变实际参数的值<br>（引用传递）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*写一个函数实现两个数字进行交换*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap01</span><span class="params">(<span class="type">int</span> n1, <span class="type">int</span> n2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;交换前&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n1:&quot;</span> &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> tempo = n1;</span><br><span class="line">n1 = n2;</span><br><span class="line">n2 = tempo;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;交换后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n1:&quot;</span> &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*值传递 要来力*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap02</span><span class="params">(<span class="type">int</span> *p1 , <span class="type">int</span> *p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = *p1;</span><br><span class="line">*p1 = *p2;</span><br><span class="line">*p2 = tempo;</span><br><span class="line"><span class="comment">/* *p是解引用的意思 这里是引用了a和b</span></span><br><span class="line"><span class="comment">然后传入了两个内存地址的解引用</span></span><br><span class="line"><span class="comment">然后用解引用重新赋值*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*指针和函数*/</span></span><br><span class="line"><span class="comment">/*值传递*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap01</span>(a, b);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中b:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*地址传递*/</span></span><br><span class="line"><span class="built_in">swap02</span>(&amp;a, &amp;b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;地址传递后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中b:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针、数组、函数"><a href="#指针、数组、函数" class="headerlink" title="指针、数组、函数"></a>指针、数组、函数</h3><p>封装一个函数，利用冒泡排序，实现对整整形数组的升序排序<br>举例 int arr1[10]= {4,3,6,9,5,8,2,1,7,5} ;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*参数1 数组的首地址 参数二 数组长度*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="type">int</span>* p, <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p[j]&gt;p[j<span class="number">+1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> tempo = p[j];</span><br><span class="line">p[j] = p[j + <span class="number">1</span>];</span><br><span class="line">p[j + <span class="number">1</span>] = tempo;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*问 为什么这里可以用p[j]访问数组元素*/</span></span><br><span class="line"><span class="comment">/*在 C++ 中，指针和数组是密切相关的。</span></span><br><span class="line"><span class="comment">实际上，数组名本质上是一个指针，指向数组的第一个元素。</span></span><br><span class="line"><span class="comment">arr[j] 实际上是对指针 arr 的解引用操作（即 *(arr + j)）。</span></span><br><span class="line"><span class="comment">它等价于指针的偏移。</span></span><br><span class="line"><span class="comment">你可以通过 arr + j 来访问数组的第 j 个元素，</span></span><br><span class="line"><span class="comment">因为 arr 是一个指向数组首元素的指针，arr + j 就是指向数组第 j 个元素的指针。*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*写一个 打印数组的函数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printArray</span><span class="params">(<span class="type">int</span>* p, <span class="type">int</span>  len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; p[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">10</span>] = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">5</span> &#125;;</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(arr1) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; len; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; arr1[i];</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printArray</span>(arr1,len);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; <span class="string">&quot;排序前如上&quot;</span> &lt;&lt;<span class="string">&quot;\n&quot;</span>&lt;&lt;<span class="string">&quot;排序后如下&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">bubbleSort</span>(arr1, len);</span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; len; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; arr1[i] ;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printArray</span>(arr1, len);</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结构体（）"><a href="#结构体（）" class="headerlink" title="结构体（）"></a>结构体（）</h2><h3 id="结构体的基本概念"><a href="#结构体的基本概念" class="headerlink" title="结构体的基本概念"></a>结构体的基本概念</h3><p>结构体属于用户自定义的数据类型，允许用户存储不同的数据类型<br>我的感觉就是java中自定义的类，但是好像又不一样</p><h3 id="结构体定义和使用"><a href="#结构体定义和使用" class="headerlink" title="结构体定义和使用"></a>结构体定义和使用</h3><p>语法：struct 结构体名{结构体成员列表};<br>通过结构体创建变量的方式有三种：<br>struct 结构体名 变量名<br>struct 结构体名 变量名 = {成员值1,成员值2…}<br>定义结构体时顺便创造变量</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建学生数据类型</span></span><br><span class="line"><span class="comment">学生包括 姓名 年龄  分数*/</span></span><br><span class="line"><span class="comment">/*语法 struct 类型名称&#123;成员列表&#125;*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*成员列表*/</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">/*姓名 年龄  分数*/</span></span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;s3;</span><br><span class="line"><span class="comment">/*在这里可以顺便创建一个结构体变量</span></span><br><span class="line"><span class="comment">但是我感觉不会有人这么写*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*为了偷懒我这里写了一个函数打印学生信息*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student p1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p<span class="number">1.</span>name &lt;&lt; <span class="string">&quot;  age:&quot;</span> &lt;&lt; p<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过学生类创建具体学生*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*三种方法创建*/</span></span><br><span class="line"><span class="comment">//struct Student s1; struct 可以省略</span></span><br><span class="line">Student s1;</span><br><span class="line">s<span class="number">1.</span>age = <span class="number">18</span>;</span><br><span class="line">s<span class="number">1.</span>name = <span class="string">&quot;jack&quot;</span>;</span><br><span class="line">s<span class="number">1.</span>score = <span class="number">90</span>;</span><br><span class="line"><span class="built_in">printStudent</span>(s1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span> s2 = &#123; <span class="string">&quot;mike&quot;</span>,<span class="number">20</span>,<span class="number">90</span> &#125;;</span><br><span class="line"><span class="comment">/*这里和java又不一样 java是括号 这里是 花括号*/</span></span><br><span class="line"><span class="built_in">printStudent</span>(s2);</span><br><span class="line"></span><br><span class="line">s<span class="number">3.</span>age = <span class="number">20</span>;</span><br><span class="line">s<span class="number">3.</span>name = <span class="string">&quot;fiona&quot;</span>;</span><br><span class="line">s<span class="number">3.</span>score = <span class="number">95</span>;</span><br><span class="line"><span class="built_in">printStudent</span>(s3);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结<br>1、定义结构体的关键字是 struct 类似java中的class 不可省略<br>2、创建结构体变量的时候，关键字stcuct可以省略<br>3、结构体利用操作符”.”访问成员</p><h3 id="结构体数组"><a href="#结构体数组" class="headerlink" title="结构体数组"></a>结构体数组</h3><p><strong>作用</strong>：将自定义的结构体放入数组中方便维护<br>我认为可能跟用java做 管理系统需要把自定义的类放入到arraylist差不多<br>语法： struct 结构体名 数组名[元素个数 ] = { {}，{}…{} }</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student p1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p<span class="number">1.</span>name &lt;&lt; <span class="string">&quot;  age:&quot;</span> &lt;&lt; p<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*结构体数组*/</span></span><br><span class="line"><span class="comment">/*1 定义结构体</span></span><br><span class="line"><span class="comment">2 创建结构体数组</span></span><br><span class="line"><span class="comment">3 给结构体数组中的元素赋值*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span> stuArr[<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">&quot;mike&quot;</span>,<span class="number">17</span>,<span class="number">70</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;alice&quot;</span>,<span class="number">18</span>,<span class="number">80</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;john&quot;</span>,<span class="number">19</span>,<span class="number">90</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*如果要修改*/</span></span><br><span class="line">stuArr[<span class="number">2</span>].name = <span class="string">&quot;jack&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*尝试一下遍历输出*/</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(stuArr) / <span class="built_in">sizeof</span>(stuArr[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printStudent</span>(stuArr[i]);</span><br><span class="line">&#125;<span class="comment">/*成功*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h3><p>作用：通过指针访问结构体中的成员</p><p>利用操作符 - &gt;可以通过结构体指针访问 结构体属性</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student *p1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p1-&gt;name &lt;&lt; <span class="string">&quot;  age:&quot;</span> &lt;&lt; p1-&gt;age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p1-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建学生结构体 变量</span></span><br><span class="line"><span class="comment">通过指针指向结构体变量</span></span><br><span class="line"><span class="comment">通过指针访问结构体变量中的数据*/</span></span><br><span class="line"></span><br><span class="line">Student s1 = &#123; <span class="string">&quot;jack&quot;</span>,<span class="number">18</span>,<span class="number">90</span> &#125;;</span><br><span class="line">Student * p = &amp;s1;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent</span>(p);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体嵌套结构体"><a href="#结构体嵌套结构体" class="headerlink" title="结构体嵌套结构体"></a>结构体嵌套结构体</h3><p><strong>作用</strong>：结构体中的成员可以是另一个结构体<br><strong>例如</strong>：每个老师辅导一个学员，一个老师的结构体中，记录一个学生的结构体</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Teacher</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">Student stu;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printTeacherInfo</span><span class="params">(<span class="type">const</span> Teacher&amp; t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 输出教师信息</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Teacher ID: &quot;</span> &lt;&lt; t.id &lt;&lt; <span class="string">&quot;Teacher Name: &quot;</span> </span><br><span class="line">&lt;&lt; t.name&lt;&lt; <span class="string">&quot;Teacher Age: &quot;</span> &lt;&lt; t.age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出学生信息</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Student Name: &quot;</span> &lt;&lt; t.stu.name </span><br><span class="line">&lt;&lt; <span class="string">&quot;Student Age: &quot;</span> &lt;&lt; t.stu.age </span><br><span class="line">&lt;&lt; <span class="string">&quot;Student Score: &quot;</span> &lt;&lt; t.stu.score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Student s1 = &#123;<span class="string">&quot;jack&quot;</span>,<span class="number">18</span>,<span class="number">70</span>&#125;;</span><br><span class="line">Student s2 = &#123;<span class="string">&quot;mike&quot;</span>,<span class="number">19</span>,<span class="number">80</span>&#125;;</span><br><span class="line">Student s3 = &#123;<span class="string">&quot;lisa&quot;</span>,<span class="number">20</span>,<span class="number">90</span>&#125;;</span><br><span class="line"></span><br><span class="line">Teacher t1 = &#123;<span class="number">1</span>,<span class="string">&quot;white&quot;</span>,<span class="number">40</span>,s1&#125;;</span><br><span class="line">Teacher t2 = &#123;<span class="number">2</span>,<span class="string">&quot;greffin&quot;</span>,<span class="number">46</span>,s2&#125;;</span><br><span class="line">Teacher t3 = &#123;<span class="number">3</span>,<span class="string">&quot;park&quot;</span>,<span class="number">38</span>,s3&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printTeacherInfo</span>(t1);</span><br><span class="line"><span class="built_in">printTeacherInfo</span>(t2);</span><br><span class="line"><span class="built_in">printTeacherInfo</span>(t3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结构体做函数参数"><a href="#结构体做函数参数" class="headerlink" title="结构体做函数参数"></a>结构体做函数参数</h3><p><strong>作用</strong>：将结构体作为参数 向函数中传递<br>传递的方式有两种<br>值传递<br>地址传递</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*学生类*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印学生 信息的函数*/</span></span><br><span class="line"><span class="comment">/*值传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent01</span><span class="params">(Student s1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;值传递函数内&quot;</span> &lt;&lt; endl;</span><br><span class="line">s<span class="number">1.</span>age = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*地址传递 引用传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent02</span><span class="params">(Student *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;引用传递函数内&quot;</span> &lt;&lt; endl;</span><br><span class="line">p-&gt;age = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Student s1 = &#123; <span class="string">&quot;jack&quot;</span>,<span class="number">18</span>,<span class="number">70</span> &#125;;</span><br><span class="line">Student s2 = &#123; <span class="string">&quot;mike&quot;</span>,<span class="number">19</span>,<span class="number">80</span> &#125;;</span><br><span class="line">Student s3 = &#123; <span class="string">&quot;alice&quot;</span>,<span class="number">20</span>,<span class="number">90</span> &#125;;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line"><span class="built_in">printStudent01</span>(s1);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;值传递修改后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent02</span>(&amp;s1);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;地址传递修改后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结构体中const使用场景"><a href="#结构体中const使用场景" class="headerlink" title="结构体中const使用场景"></a>结构体中const使用场景</h3><p><strong>作用</strong>：用const防止误操作 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s.name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s.age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s.score &lt;&lt; endl;</span><br><span class="line">&#125;<span class="comment">/*这就是标准的值传递  值传递会拷贝出非常多的多余数据 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*尝试用引用 传递*/</span></span><br><span class="line"><span class="comment">/*为什么用指针 因为上面的代码相当会把Student中</span></span><br><span class="line"><span class="comment">所有的数据都复制出来一份，在实际情况中，student的人数会很多</span></span><br><span class="line"><span class="comment">student的信息也会很多 ，数据量就会按照指数级增长</span></span><br><span class="line"><span class="comment">所以用指针可以很好的解决这个问题，一个指针只占4个字节（64位系统是八个）*/</span></span><br><span class="line"><span class="comment">/*一句话概括 用指针 可以减少内存空间 同时不会复制新的副本*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent02</span><span class="params">(<span class="type">const</span> Student* s)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*这节课的重点 就是上面在函数定义的时候在形参前面加一个const 这样的话 就无法修改</span></span><br><span class="line"><span class="comment"> 引用的指针，就是所谓的 常量指针 可以修改引用不同的指针 传入不同的student类的数据</span></span><br><span class="line"><span class="comment"> 都可以读数据 但是都无法更改 student中的内容*/</span></span><br><span class="line"><span class="comment">//s-&gt;name = &quot;mike&quot; 加入const之后这里就会报错 不能进行修改 </span></span><br><span class="line"><span class="comment">/*这样就可以保证不修改原始数据了*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s-&gt;name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s-&gt;age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Student s1 = &#123; <span class="string">&quot;jack&quot;</span>,<span class="number">17</span>,<span class="number">70</span> &#125;;</span><br><span class="line"><span class="built_in">printStudent</span>(s1);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent02</span>(&amp;s1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体案例"><a href="#结构体案例" class="headerlink" title="结构体案例"></a>结构体案例</h3><h4 id="案例1"><a href="#案例1" class="headerlink" title="案例1"></a>案例1</h4><p>案例描述：<br>学校正在做毕设项目，每名老师带领5个学生，总共有3名老师，<br>需求如下<br>设计学生和老师的结构体，其中在老师的结构体中，有老师姓名和一个存放5名学生的数组作为成员学生的成员有姓名、考试分数，创建数组存放3名老师，通过函数给每个老师及所带的学生赋值最终打印出老师数据以及老师所带的学生数据。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string sname;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Teacher</span></span><br><span class="line">&#123;</span><br><span class="line">string tname;</span><br><span class="line">Student stuArr[<span class="number">5</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*给老师和学生赋值的函数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">allocatSpace</span><span class="params">(Teacher tArr[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string nameSeed = <span class="string">&quot;ABCDE&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*给老师的姓名赋值*/</span></span><br><span class="line">tArr[i].tname = <span class="string">&quot;Teacher_&quot;</span>;</span><br><span class="line">tArr[i].tname += nameSeed[i];</span><br><span class="line"><span class="comment">/*给老师的学生赋值 通过循环*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">tArr[i].stuArr[j].sname = <span class="string">&quot;student_&quot;</span>;</span><br><span class="line">tArr[i].stuArr[j].sname += nameSeed[j];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*给成绩赋值*/</span></span><br><span class="line"><span class="type">int</span> random = <span class="built_in">rand</span>() % <span class="number">61</span> + <span class="number">40</span>;</span><br><span class="line">tArr[i].stuArr[j].score = random;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printInfo</span><span class="params">(Teacher tArr[],<span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;teacher name:&quot;</span> &lt;&lt; tArr[i].tname &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;<span class="comment">/* 打印学生姓名和成绩*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t student name:&quot;</span> &lt;&lt; tArr[i].stuArr[j].sname</span><br><span class="line">&lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; tArr[i].stuArr[j].score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*随机数种子*/</span></span><br><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line"><span class="comment">/*创建三名老师的数组*/</span></span><br><span class="line">Teacher tArr[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过函数赋值*/</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(tArr) / <span class="built_in">sizeof</span>(tArr[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">allocatSpace</span>(tArr, len);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印信息*/</span></span><br><span class="line"><span class="built_in">printInfo</span>(tArr, len);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="案例2"><a href="#案例2" class="headerlink" title="案例2"></a>案例2</h4><p>设计一个英雄的结构体，包括成员姓名，年龄，性别;创建结构体数组，数组中存放5名英雄。<br>通过冒泡排序的算法，将数组中的英雄按照年龄进行升序排序，最终打印排序后的结果。</p><p>五名英雄信息如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*英雄结构体*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">hero</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">string gender;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*排序算法*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubler</span><span class="params">(hero *p,<span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len <span class="number">-1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p[j].age &gt; p[j + <span class="number">1</span>].age)</span><br><span class="line">&#123;</span><br><span class="line">hero tempo = p[j];</span><br><span class="line">p[j] = p[j + <span class="number">1</span>];</span><br><span class="line">p[j + <span class="number">1</span>] = tempo;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">(hero* p, <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p[i].name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; p[i].age &lt;&lt; <span class="string">&quot; gender:&quot;</span> &lt;&lt; p[i].gender &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">hero HeroList[<span class="number">5</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(HeroList) / <span class="built_in">sizeof</span>(HeroList[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">bubler</span>(HeroList, len);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*输出*/</span></span><br><span class="line"><span class="built_in">show</span>(HeroList, len);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第一大项目"><a href="#第一大项目" class="headerlink" title="第一大项目"></a>第一大项目</h2><h3 id="尝试做通讯录管理系统"><a href="#尝试做通讯录管理系统" class="headerlink" title="尝试做通讯录管理系统"></a>尝试做通讯录管理系统</h3><h3 id="系统需求"><a href="#系统需求" class="headerlink" title="系统需求"></a>系统需求</h3><p>通讯录是一个可以记录亲人、好友信息的工具。<br>本教程主要利用C++来实现一个通讯录管理系统系统中需要实现的功能如下:<br>添加联系人:向通讯录中添加新人，信息包括(姓名、性别、年龄、联系电话、家庭住址)最多记录1000人<br>显示联系人:显示通讯录中所有联系人信息<br>删除联系人:按照姓名进行删除指定联系人<br>查找联系人:按照姓名查看指定联系人信息<br>修改联系人:按照姓名重新修改指定联系人<br>清空联系人:清空通讯录中所有信息<br>退出通讯录:退出当前使用的通讯录</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max 1000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*封装函数显示该界面 如void showMenu()</span></span><br><span class="line"><span class="comment">在main 函数中调用封装好的函数 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*联系人结构体*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line">string m_name;</span><br><span class="line"><span class="type">int</span> m_sex;</span><br><span class="line"><span class="type">int</span> m_age;</span><br><span class="line">string m_phone;</span><br><span class="line">string m_addr;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">AddressBooks</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Person</span> PersonArray[max];</span><br><span class="line"><span class="type">int</span> m_size;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*菜单界面*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showMenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 1. 添加联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 2. 显示联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 3. 删除联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 4. 查找联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 5. 修改联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 6. 清空联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 0. 退出通讯录 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">addPerson</span><span class="params">(AddressBooks * abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*判断通讯录是否已满，如果满了就不再添加*/</span></span><br><span class="line"><span class="keyword">if</span> (abs-&gt;m_size ==max)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通讯录已满，无法继续添加！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="comment">/*添加具体联系人*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入姓名&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">abs-&gt;PersonArray[abs-&gt;m_size].m_name = name;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> gender = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入性别&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1--男，2--女&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;<span class="comment">/*如果输入的是一或者2 可以退出循环</span></span><br><span class="line"><span class="comment"> 因为输入的是正确值 如果输入有误，重新输入*/</span></span><br><span class="line">cin &gt;&gt; gender;</span><br><span class="line"><span class="keyword">if</span> (gender == <span class="number">1</span> || gender == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">abs-&gt;PersonArray[abs-&gt;m_size].m_sex = gender;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*年龄*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入年龄：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> age = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; age;</span><br><span class="line">abs-&gt;PersonArray[abs-&gt;m_size].m_age = age;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入联系电话：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string phone = <span class="string">&quot;&quot;</span>;</span><br><span class="line">cin &gt;&gt; phone;</span><br><span class="line">abs-&gt;PersonArray[abs-&gt;m_size].m_phone = phone;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入住址：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string address = <span class="string">&quot;&quot;</span>;</span><br><span class="line">cin &gt;&gt; address;</span><br><span class="line">abs-&gt;PersonArray[abs-&gt;m_size].m_addr = address;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*更新通讯录人数*/</span></span><br><span class="line">abs-&gt;m_size++;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;添加成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*显示联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showPerson</span><span class="params">(AddressBooks* abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*判断通讯录中的人数*/</span></span><br><span class="line"><span class="comment">/*如果不为0 显示记录的联系人的信息*/</span></span><br><span class="line"><span class="keyword">if</span> (abs-&gt;m_size == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;当前记录为空&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; abs-&gt;m_size; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名:&quot;</span> &lt;&lt; abs-&gt;PersonArray[i].m_name &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;性别:&quot;</span> &lt;&lt; (abs-&gt;PersonArray[i].m_sex==<span class="number">1</span>?<span class="string">&quot;男&quot;</span>:<span class="string">&quot;女&quot;</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;年龄:&quot;</span> &lt;&lt; abs-&gt;PersonArray[i].m_age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;电话:&quot;</span> &lt;&lt; abs-&gt;PersonArray[i].m_phone &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;住址:&quot;</span> &lt;&lt; abs-&gt;PersonArray[i].m_addr &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除功能 */</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">isExist</span><span class="params">(AddressBooks* abs, string name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; abs-&gt;m_size; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (abs-&gt;PersonArray[i].m_name == name)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*找到用户*/</span></span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除指定的联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deletePerson</span><span class="params">(AddressBooks *abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入你要删除的联系人&quot;</span> &lt;&lt; endl;</span><br><span class="line">string name;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*查找到这个人 删除</span></span><br><span class="line"><span class="comment">要删除 一个数据 将后面的数据向前移动</span></span><br><span class="line"><span class="comment">并且让通讯录中记录的人员数量做-1的操作即可*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = ret; i &lt; abs-&gt;m_size; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*数据前移*/</span></span><br><span class="line">abs-&gt;PersonArray[i] = abs-&gt;PersonArray[i + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">abs-&gt;m_size--;<span class="comment">/*更新一下通讯录中的人员数*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;delete complete!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;404 not found&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查找联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">findPerson</span><span class="params">(AddressBooks * abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您要查找的联系人&quot;</span> &lt;&lt; endl;</span><br><span class="line">string name;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*判断指定的姓名是否存在 */</span></span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名:&quot;</span> &lt;&lt; abs-&gt;PersonArray[ret].m_name &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;性别:&quot;</span> &lt;&lt; (abs-&gt;PersonArray[ret].m_sex == <span class="number">1</span> ? <span class="string">&quot;男&quot;</span> : <span class="string">&quot;女&quot;</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;年龄:&quot;</span> &lt;&lt; abs-&gt;PersonArray[ret].m_age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;电话:&quot;</span> &lt;&lt; abs-&gt;PersonArray[ret].m_phone &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;住址:&quot;</span> &lt;&lt; abs-&gt;PersonArray[ret].m_addr &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查无此人&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*修改联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modifyPerson</span><span class="params">(AddressBooks *abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您要修改的联系人&quot;</span> &lt;&lt; endl;</span><br><span class="line">string name;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"><span class="comment">/*判断指定的姓名是否存在 */</span></span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="comment">/*添加具体联系人*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入姓名&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">abs-&gt;PersonArray[ret].m_name = name;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> gender = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入性别&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1--男，2--女&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;<span class="comment">/*如果输入的是一或者2 可以退出循环</span></span><br><span class="line"><span class="comment"> 因为输入的是正确值 如果输入有误，重新输入*/</span></span><br><span class="line">cin &gt;&gt; gender;</span><br><span class="line"><span class="keyword">if</span> (gender == <span class="number">1</span> || gender == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">abs-&gt;PersonArray[ret].m_sex = gender;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*年龄*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入年龄：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> age = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; age;</span><br><span class="line">abs-&gt;PersonArray[ret].m_age = age;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入联系电话：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string phone = <span class="string">&quot;&quot;</span>;</span><br><span class="line">cin &gt;&gt; phone;</span><br><span class="line">abs-&gt;PersonArray[ret].m_phone = phone;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入住址：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string address = <span class="string">&quot;&quot;</span>;</span><br><span class="line">cin &gt;&gt; address;</span><br><span class="line">abs-&gt;PersonArray[ret].m_addr = address;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;修改成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查无此人&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*清空联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span>  <span class="title">claenPerson</span><span class="params">(AddressBooks* abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">abs-&gt;m_size = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;已清空&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*创建通讯录结构体变量*/</span></span><br><span class="line">AddressBooks abs;</span><br><span class="line"><span class="comment">/*初始化通讯录中当前人员个数*/</span></span><br><span class="line">abs.m_size = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123; </span><br><span class="line"><span class="built_in">showMenu</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建用户选择输入的变量*/</span></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (select)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="comment">/*添加联系人*/</span></span><br><span class="line"><span class="built_in">addPerson</span>(&amp;abs);</span><br><span class="line"><span class="comment">/*利用地址传递可以修饰实参*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="comment">/*显示联系人*/</span></span><br><span class="line"><span class="built_in">showPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="comment">//&#123;/*删除联系人*/</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;请输入删除联系人的姓名&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//string name = &quot;&quot;;</span></span><br><span class="line"><span class="comment">//cin &gt;&gt; name;</span></span><br><span class="line"><span class="comment">//if (isExist(&amp;abs, name) == -1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;404 not found&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;got you&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="built_in">deletePerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="comment">/*查找联系人*/</span></span><br><span class="line"><span class="built_in">findPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="comment">/*修改联系人*/</span></span><br><span class="line"><span class="built_in">modifyPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="comment">/*清空联系人*/</span></span><br><span class="line"><span class="built_in">claenPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="comment">/*退出通讯录*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;byebye~&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>中途还是有很多问题 但是至此 通讯录管理系统完成</p><h1 id="▲C-核心编程"><a href="#▲C-核心编程" class="headerlink" title="▲C++核心编程"></a>▲C++核心编程</h1><p>主要是面向对象 技术的详解</p><h2 id="内存的分区模型"><a href="#内存的分区模型" class="headerlink" title="内存的分区模型"></a>内存的分区模型</h2><p>C++程序在执行时，将内存大方向划分为四个区域<br>代码区：存放函数体的二进制代码，由操作系统进行管理（cout ，字符）<br>全局区：存放全局变量和静态变量以及常量<br>栈区：由编译器自动分配释放，存放函数的参数值，局部变量等<br>堆区：由程序员分配和释放，若程序员不释放，程序结束时由操作系统回收</p><p>内存四区的意义：不同区域存放 的数据，赋予不同的生命周期，给我们更大的灵活编程。</p><h3 id="程序运行前"><a href="#程序运行前" class="headerlink" title="程序运行前"></a>程序运行前</h3><p>在程序编译后，生成了exe可执行程序，未执行该程序前分为两个区域<br><strong>代码区</strong>：<br>    存放cpu执行的机器指令<br>    代码区是共享的，共享的目的是对于频繁被执行的程序，只需要在 内存中有一份 代码即可<br>    代码区是只读的，使其只读的原因是防止程序意外地修改了它的指令<br><strong>全局区</strong>：<br>    全局变量和静态变量存放于此<br>    全局区还包含了常量区，字符串常量和其他常量也存放在此<br>    该区域的数据在程序结束后由操作系统释放。</p><h3 id="程序运行后"><a href="#程序运行后" class="headerlink" title="程序运行后"></a>程序运行后</h3><p><strong>栈区</strong>：<br>    由编译器自动分配释放，存放函数的参数值，局部变量等<br>    注意事项：不要反悔局部变量的地址，栈区开辟的数据由于编译器自动释放<br><strong>堆区</strong>：<br>    由于程序员分配释放，若程序员不释放，程序结束时由操作系统回收<br>    在C++中主要利用new在堆区开辟内存</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*全局变量*/</span></span><br><span class="line"><span class="type">int</span> g_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> g_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*const修饰的全局变量*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> cga = <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> cgb = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> * <span class="title">func</span><span class="params">(<span class="type">int</span> b)</span><span class="comment">/*返回一个int类型的指针*/</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*形参数据也会放在栈区*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;<span class="comment">/*存放在栈区 栈区的数据在函数执行完之后自动释放*/</span></span><br><span class="line"><span class="keyword">return</span> &amp;a;</span><br><span class="line"><span class="comment">/*这里就是在返回局部变量的地址*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> * <span class="title">func1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*利用new关键字 可以将数据开辟 到 堆区*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*指针本质上给是一个局部变量 也是放在栈上</span></span><br><span class="line"><span class="comment">指针保存的数据 放在堆区*/</span></span><br><span class="line"><span class="type">int</span> * p = <span class="keyword">new</span> <span class="built_in">int</span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*全局区*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*全局变量 静态变量 常量*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建一个普通的局部变量*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*只要写在函数体内的变量</span></span><br><span class="line"><span class="comment">都叫 局部变量*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部变量a的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部变量b的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局变量g_a的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;g_a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局变量g_b的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;g_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*静态变量*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> s_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> s_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;静态变量s_a的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;s_a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;静态变量s_b的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;s_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*常量 字符串常量和const 修饰的变量*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;字符串常量的地址&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;<span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*const 修饰的全局变量和局部变量*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局常量cga的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;cga &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局常量cgb的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;cgb &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> cla = <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> clb = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部常量cla的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;cla &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部常量clb的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;clb &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*局部在代码区域 全局在全局区*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*栈区数据的注意事项</span></span><br><span class="line"><span class="comment">不要返回局部变量的地址</span></span><br><span class="line"><span class="comment">栈区的数据由编译器管理开辟和释放*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//int* p1 = func();</span></span><br><span class="line"><span class="comment">///*接受func函数的返回值*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; *p1 &lt;&lt; endl;/*第一次可以 打印正确的数字是因为编译器做了保留*/</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; *p1 &lt;&lt; endl;/*这里理论上应该输出乱码*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*在堆区开辟数据*/</span></span><br><span class="line"><span class="type">int</span>* p = <span class="built_in">func1</span>();</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="new操作符（重点）"><a href="#new操作符（重点）" class="headerlink" title="new操作符（重点）"></a>new操作符（重点）</h3><p>C++中利用new操作符在堆区开辟数据<br>堆区开辟的数据，由程序员手动开辟，手动释放 ，释放利用操作符delete<br>语法：new 数据类型<br>利用new创建的数据，会返回该数据对应的类型的指针</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*new基本语法*/</span></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*在堆区创建整形数据*/</span></span><br><span class="line"><span class="comment">/*new返回的是一个该数据类型的指针*/</span></span><br><span class="line"><span class="type">int</span> * p  =<span class="keyword">new</span> <span class="built_in">int</span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span>* p = <span class="built_in">func</span>();</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*堆区的数据有程序员管理</span></span><br><span class="line"><span class="comment">如果想释放 用delete*/</span></span><br><span class="line"><span class="keyword">delete</span> p;</span><br><span class="line"><span class="comment">//cout &lt;&lt; *p &lt;&lt; endl;报错</span></span><br><span class="line"><span class="comment">/*内存已经被释放 再次访问就是非法操作*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*创建10整形数据的数组，在堆区*/</span></span><br><span class="line"><span class="type">int</span> * arr = <span class="keyword">new</span> <span class="type">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="comment">/*10代表数组元素个数*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">arr[i] = i + <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><h3 id="引用的基本使用"><a href="#引用的基本使用" class="headerlink" title="引用的基本使用"></a>引用的基本使用</h3><p><strong>作用</strong>：给变量起别名<br><strong>语法</strong>: 数据类型 &amp; 别名 = 原名 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*引用基本语法*/</span></span><br><span class="line"><span class="comment">/*数据类型 &amp;别名 = 原名*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span>&amp; b = a;</span><br><span class="line"><span class="comment">/*这样这块地址又叫a 又叫b*/</span></span><br><span class="line">b = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*a 也变成了20*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="引用的注意事项"><a href="#引用的注意事项" class="headerlink" title="引用的注意事项"></a>引用的注意事项</h3><p>引用必须初始化<br>引用初始化之后就不可以改变</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">20</span>;</span><br><span class="line"><span class="comment">//int&amp; b;报错</span></span><br><span class="line"><span class="type">int</span>&amp; b = a;</span><br><span class="line"><span class="comment">/*初始化之后不可以赋值*/</span></span><br><span class="line">b = c; </span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt;endl;</span><br><span class="line"><span class="comment">/*这里a原本是数据丢失*/</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="引用作函数参数"><a href="#引用作函数参数" class="headerlink" title="引用作函数参数"></a>引用作函数参数</h3><p><strong>作用</strong>：函数传参时，可以利用引用的技术让形参修饰实参<br><strong>优点</strong>:可以简化指针修改实参</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*交换函数</span></span><br><span class="line"><span class="comment">值传递 地址传递 引用传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myswap01</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = a;</span><br><span class="line">a = b;</span><br><span class="line">b = tempo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*地址传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myswap02</span><span class="params">(<span class="type">int</span> * a,<span class="type">int</span> * b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = *a;</span><br><span class="line">*a = *b;</span><br><span class="line">*b = tempo;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*引用传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mySwap03</span><span class="params">(<span class="type">int</span>&amp; a, <span class="type">int</span>&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = a;</span><br><span class="line">a = b;</span><br><span class="line">b = tempo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">myswap01</span>(a, b);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a after myswap01:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b after myswap01:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">myswap02</span>(&amp;a, &amp;b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a after myswap02:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b after myswap02:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>; b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">mySwap03</span>(a, b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a after myswap03:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b after myswap03:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>总结：通过引用参数产生的效果和地址传递是一样的。引用的语法更加简单清楚</p><h3 id="▲引用做函数返回值"><a href="#▲引用做函数返回值" class="headerlink" title="▲引用做函数返回值"></a>▲引用做函数返回值</h3><p>作用：引用是可以作为函数返回值存在的<br>注意：不要返回局部变量引用<br>用法：函数调用作为左值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*引用作函数的返回值</span></span><br><span class="line"><span class="comment">不要返回局部变量的引用 */</span></span><br><span class="line"><span class="function"><span class="type">int</span> &amp; <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*局部变量存放在内存四区中的栈区</span></span><br><span class="line"><span class="comment">调用函数结束之后就释放内存了*/</span></span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数的调用可以作为左值存在*/</span></span><br><span class="line"><span class="function"><span class="type">int</span>&amp; <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*静态变量 存放在全局区*/</span></span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> &amp; ref = <span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref =&quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line"><span class="comment">/* 变成了空的内存地址*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>&amp; ref2 = <span class="built_in">test02</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref2 =&quot;</span> &lt;&lt; ref2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*正常输出*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test02</span>() = <span class="number">1000</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref2 =&quot;</span> &lt;&lt; ref2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="▲引用的本质"><a href="#▲引用的本质" class="headerlink" title="▲引用的本质"></a>▲引用的本质</h3><p><strong>本质：引用的本质在C++内部实现是一个指针常量</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*发现是引用  转换未int * const ref = &amp;a */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span>&amp; ref)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ref = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*自动转换int * const ref  = &amp;a ;</span></span><br><span class="line"><span class="comment">本质上是一个个指针常量，也说明了为什么引用不可更改 */</span></span><br><span class="line"><span class="type">int</span>&amp; ref = a;</span><br><span class="line">ref = <span class="number">20</span>;</span><br><span class="line"><span class="comment">/*颞部发现ref是引用 会自动帮我们转换成*ref = 20</span></span><br><span class="line"><span class="comment">* 说人话就是会自动解引用</span></span><br><span class="line"><span class="comment">所有为什么说引用简单 因为涉及到了大量的自动转换</span></span><br><span class="line"><span class="comment">在前面自己写代码的过程中我就 隐隐约约感觉到了</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref:&quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">func</span>(a);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结论：c++推荐用引用技术，因为语法方便，引用本质是指针常量，但是所有的指针操作编译器都帮我们做了<br>后记：妈的，那老子学那么久的指针是为了什么，牛魔酬宾，把我的时间还给我！</p><h3 id="常量引用"><a href="#常量引用" class="headerlink" title="常量引用"></a>常量引用</h3><p><strong>作用</strong>：常量引用主要用来修饰形参，防止误操作<br>在函数形象 列表中,可以加const修饰形参,防止形参改变实参</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showValue</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;val)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*用const修饰之后变成只读 下面就不能再修改*/</span></span><br><span class="line"><span class="comment">//val = 1000;</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;val=&quot;</span> &lt;&lt; val &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*常量引用*/</span></span><br><span class="line"><span class="comment">/*使用场景，用来修饰形式参 防止误操作*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span>&amp; ref = a;</span><br><span class="line"><span class="comment">//int&amp; ref1 = 10;</span></span><br><span class="line"><span class="comment">/*必须引用合法内存空间</span></span><br><span class="line"><span class="comment">10不具有合法内存空间*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>&amp; ref1 = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*这样就正确了</span></span><br><span class="line"><span class="comment">加上const之后 编译器将代码修改</span></span><br><span class="line"><span class="comment">int temp = 10;</span></span><br><span class="line"><span class="comment">const int &amp; ref = temp</span></span><br><span class="line"><span class="comment">相当于把代码改成这样的形式了*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">showValue</span>(a1);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1=&quot;</span> &lt;&lt; a1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数提高（重要）"><a href="#函数提高（重要）" class="headerlink" title="函数提高（重要）"></a>函数提高（重要）</h2><h3 id="函数默认参数（重要）"><a href="#函数默认参数（重要）" class="headerlink" title="函数默认参数（重要）"></a>函数默认参数（重要）</h3><p>在C++中，函数的形参列表中的形参是可以有默认值的<br>语法：返回值类型 函数名 （参数 = 默认值）{}</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数默认参数*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b = <span class="number">20</span>, <span class="type">int</span> c=<span class="number">30</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*如果自己传入的数据 就优先用传入的</span></span><br><span class="line"><span class="comment">默认数据在没有传入数据的时候才会不得已被调用*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*下面这个是重要考点*/</span></span><br><span class="line"><span class="comment">/*1、如果某个位置已经有了默认参数，</span></span><br><span class="line"><span class="comment">那么这个位置往后，从左往右都必须有默认值 */</span></span><br><span class="line"><span class="comment">//int func2(int a,int b = 10,int c,int d )</span></span><br><span class="line"><span class="comment">//&#123;/*如果这里b有参数 那么后面的c  d 都必须有参数</span></span><br><span class="line"><span class="comment">// 不然就报错*/</span></span><br><span class="line"><span class="comment">//return a + b + c;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*2、如果函数声明有默认参数，函数实现就不能有默认参数</span></span><br><span class="line"><span class="comment">声明和定义只能有一个有默认参数*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func3</span><span class="params">(<span class="type">int</span> a = <span class="number">11</span>, <span class="type">int</span> b =<span class="number">10</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func3</span><span class="params">(<span class="type">int</span> a =<span class="number">10</span>, <span class="type">int</span> b = <span class="number">20</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*这里有可能出现如上的情况 不知道</span></span><br><span class="line"><span class="comment"> 两边的默认函数不同 不知道按哪一边的默认参数来</span></span><br><span class="line"><span class="comment"> 所以只能有一边有默认参数</span></span><br><span class="line"><span class="comment"> 只要删除一个地方都能正常运行*/</span></span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*报错 重定义默认参数 */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="built_in">func</span>(<span class="number">10</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">func</span>(<span class="number">10</span>, <span class="number">30</span>, <span class="number">30</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*cout &lt;&lt; func3(10) &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">调用时报错*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数占位参数"><a href="#函数占位参数" class="headerlink" title="函数占位参数"></a>函数占位参数</h3><p>C++中的函数形参列表里可以有占位参数，用来做占位，调用函数时必须填补该位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">语法： 返回值类型 函数名 （数据类型）&#123;&#125;</span><br></pre></td></tr></table></figure><p>现阶段函数的占位参数意义不大，但是据说后面会用到。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="comment">/*函数 占位参数*/</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*目前阶段占位参数 还用不到 后面课程可能会用到*/</span></span><br><span class="line"><span class="comment">/*占位参数还可以有默认参数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span>=<span class="number">10</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is func&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">func</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数重载（重要）"><a href="#函数重载（重要）" class="headerlink" title="函数重载（重要）"></a>函数重载（重要）</h3><h4 id="函数重载-概述"><a href="#函数重载-概述" class="headerlink" title="函数重载 概述"></a>函数重载 概述</h4><p><strong>作用</strong>：函数名可以相同，提高服用性<br><strong>函数重载满足条件</strong>：<br>同一个作用域下<br>函数名称相同<br>函数的参数 类型不同或个数不同或顺序不同</p><p><strong>注意</strong>：<strong><u>函数的返回值不可以作为函数重载的条件</u></strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="comment">/*函数重载*/</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数 重载 的满足条件</span></span><br><span class="line"><span class="comment">1、同一个作用域下</span></span><br><span class="line"><span class="comment">2、函数名称相同</span></span><br><span class="line"><span class="comment">3、函数的参数类型个数或者顺序不同*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">int</span> a )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(int a )的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">double</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(double a )的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">int</span> a,<span class="type">double</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(int,double)的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">double</span> b, <span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(double,int)的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*注意事项</span></span><br><span class="line"><span class="comment">函数的返回值不可以作为重载的条件*/</span></span><br><span class="line"><span class="comment">//int func01()</span></span><br><span class="line"><span class="comment">//&#123; 这种情况就是错误的</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;func的调用&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">func01</span>();</span><br><span class="line"><span class="built_in">func01</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">func01</span>(<span class="number">1.0</span>);</span><br><span class="line"><span class="built_in">func01</span>(<span class="number">1</span>,<span class="number">1.0</span>);</span><br><span class="line"><span class="built_in">func01</span>(<span class="number">1.0</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数重载注意事项"><a href="#函数重载注意事项" class="headerlink" title="函数重载注意事项"></a>函数重载注意事项</h3><p>引用作为重载条件<br>函数重载碰到函数默认参数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*函数重载的注意事项*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*引用作为重载的条件*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func01(int a ,int b)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">/*int &amp; a = 10 不合法的*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func01(int &amp;a)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*const int &amp;a = 10*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func01(const int a)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数重载碰到默认参数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func2（int a）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func2（int a,int b）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//void func2(int a=10)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;func2（int a=10）&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">func01</span>(a);<span class="comment">//调用的是int &amp;a</span></span><br><span class="line"><span class="built_in">func01</span>(<span class="number">10</span>);</span><br><span class="line"><span class="comment">/*上面调用的是int &amp;a </span></span><br><span class="line"><span class="comment">下面调用的是const*/</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* a默认情况下是一个变量，</span></span><br><span class="line"><span class="comment">所以我用func01(a);的时候默认的情况下他选择了 </span></span><br><span class="line"><span class="comment">可读可写的int &amp;a版本</span></span><br><span class="line"><span class="comment">而10本身就作为一个常量 是不可以被更改的 </span></span><br><span class="line"><span class="comment">所以默认他就选择了void func01(const int &amp;a)*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">func2</span>(a);</span><br><span class="line"><span class="comment">//func2();</span></span><br><span class="line"><span class="comment">/*当函数重载遇到默认参数 会出现二义性</span></span><br><span class="line"><span class="comment">尽量避免这种情况</span></span><br><span class="line"><span class="comment">如果要重载就不要写默认参数*/</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><p>C++面向对象的三大特性为：封装、继承、多态<br>C++认为完事<strong>万物皆对象</strong>，对下昂 上有其属性和行为</p><p>例如：<br>        人可以作为对象，属性有姓名、年龄、身高、体重…行为有走、跑、跳、吃饭、唱歌<br>        车也可以作为对象，属性有轮胎、方向盘、车灯.,行为有载人、放音乐、放空调…<br>        具有相同性质的对象，我们可以抽象称为类，人属于人类，车属于车类，都可以作为地球上的东西一类</p><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><h4 id="封装的意义（重点）"><a href="#封装的意义（重点）" class="headerlink" title="封装的意义（重点）"></a>封装的意义（重点）</h4><p>封装是C++面向对象三大特性之一<br>封装的意义：<br>        将属性和行为作为一个个整体，表现生活中的事物<br>        讲过属性和行为加以权限控制</p><h5 id="封装的意义一："><a href="#封装的意义一：" class="headerlink" title="封装的意义一："></a><strong>封装的意义一</strong>：</h5><p>​        在设计类的时候，属性和行为写在一起，表现事物<br><strong>语法</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class 类名 &#123;访问权限：属性/行为&#125;；</span><br></pre></td></tr></table></figure><p>示例1：设计一个圆类，球圆的周长</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">double</span> pi = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*设计一个圆类 求圆周长</span></span><br><span class="line"><span class="comment">袁求周长的公式 2*PI * 半径*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:<span class="comment">/*公共权限*/</span></span><br><span class="line"><span class="comment">/*属性 半径*/</span></span><br><span class="line"><span class="type">int</span> r;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*行为 获取圆的周长*/</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">length</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span> * pi * r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*r是类的成员变量</span></span><br><span class="line"><span class="comment">对于每一个circle 都有一个r</span></span><br><span class="line"><span class="comment">length（）是成员函数</span></span><br><span class="line"><span class="comment">因为 r 是类的 成员，</span></span><br><span class="line"><span class="comment">对于类的每个实例（对象）来说，</span></span><br><span class="line"><span class="comment">r 是属于该实例的</span></span><br><span class="line"><span class="comment">在成员函数中，你可以直接访问类的 成员变量，不需要额外传参。</span></span><br><span class="line"><span class="comment">所以这里不需要传参就可以直接访问*/</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过圆类床关键具体的圆*/</span></span><br><span class="line">Circle c1;</span><br><span class="line"><span class="comment">/*给圆对象的属性进行赋值*/</span></span><br><span class="line">c<span class="number">1.</span>r = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;圆的周长为：&quot;</span> &lt;&lt; c<span class="number">1.l</span>ength() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 示例2：设计一个学生类，属性有姓名和学号，可以给姓名和学号赋值，可以显示学生的姓名和学号</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*学生类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:<span class="comment">/*控制权限写在类里面*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*类中的属性和行为，我们统一称为成员</span></span><br><span class="line"><span class="comment">属性 成员属性 成员变量</span></span><br><span class="line"><span class="comment">行为 成员函数 成员方法*/</span></span><br><span class="line"></span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot; id:&quot;</span> &lt;&lt; id &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setName</span><span class="params">(string sname)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">name = sname;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setId</span><span class="params">(<span class="type">int</span> nid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">id = nid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;<span class="comment">/*class 后面要加分号*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Student s1;</span><br><span class="line">s<span class="number">1.</span>name = <span class="string">&quot;jack&quot;</span>;</span><br><span class="line">s<span class="number">1.</span>id = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">Student s2;</span><br><span class="line">s<span class="number">2.</span>name = <span class="string">&quot;fiona&quot;</span>;</span><br><span class="line">s<span class="number">2.</span>id = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">s<span class="number">1.</span><span class="built_in">show</span>();</span><br><span class="line">s<span class="number">2.</span><span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line">s<span class="number">1.</span><span class="built_in">setName</span>(<span class="string">&quot;mike&quot;</span>);</span><br><span class="line">s<span class="number">1.</span><span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line">s<span class="number">2.</span><span class="built_in">setId</span>(<span class="number">3</span>);</span><br><span class="line">s<span class="number">2.</span><span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="封装的意义二（重点）："><a href="#封装的意义二（重点）：" class="headerlink" title="封装的意义二（重点）："></a><strong>封装的意义二</strong>（重点）：</h5><p>类在设计时，可以把属性和行为放在不同的权限下，加以控制</p><p>访问权限有三种：<br>1、public 公共权限<br>2、protected 保护权限<br>3、private 私有权限</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*访问权限</span></span><br><span class="line"><span class="comment">三种</span></span><br><span class="line"><span class="comment">公共权限 public 成员类内外都可以访问</span></span><br><span class="line"><span class="comment">保护权限 protected 类内可以访问 子类可以访问</span></span><br><span class="line"><span class="comment">私有权限 private  类内可以访问 子类不能访问</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">保护和私有的关系主要在继承</span></span><br><span class="line"><span class="comment">父类的保护权限子类可以访问</span></span><br><span class="line"><span class="comment">私有权限就不可以*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string pname;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">string pcar;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string password;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setFunc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">pname = <span class="string">&quot;jack&quot;</span>;</span><br><span class="line">pcar = <span class="string">&quot;BMW&quot;</span>;</span><br><span class="line">password = <span class="string">&quot;123321&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*这里在类内访问都是正常的，没有问题</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*实例化一个具体的对象进行操作*/</span></span><br><span class="line">Person p1;</span><br><span class="line"></span><br><span class="line">p<span class="number">1.</span>pname = <span class="string">&quot;mike&quot;</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">p1.pcar = &quot;benz&quot;;</span></span><br><span class="line"><span class="comment">p1.password = &quot;123123&quot;;</span></span><br><span class="line"><span class="comment">报错 说明类外不可以访问</span></span><br><span class="line"><span class="comment">protected和private权限</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="struct和class区别"><a href="#struct和class区别" class="headerlink" title="struct和class区别"></a>struct和class区别</h3><p>在c++中 struct和class <strong>唯一的区别</strong>就是<strong><u>默认的访问权限不同</u></strong></p><p><strong>区别</strong>：<br>struct默认权限为公共<br>class 默认权限为私有</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a1;</span><br><span class="line"><span class="comment">/*默认权限是私有*/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">C2</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a2;</span><br><span class="line"><span class="comment">/*默认是公共权限*/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*struct和class 区别</span></span><br><span class="line"><span class="comment">struct 默认权限是公共</span></span><br><span class="line"><span class="comment">class 默认权限是私有*/</span></span><br><span class="line">C1 obj1;</span><br><span class="line">C2 obj2;</span><br><span class="line"></span><br><span class="line">obj<span class="number">1.</span>a1 = <span class="number">1</span>;</span><br><span class="line"><span class="comment">/*这里不可以访问</span></span><br><span class="line"><span class="comment">因为对于class来说</span></span><br><span class="line"><span class="comment">a1默认是私有的*/</span></span><br><span class="line">obj<span class="number">2.</span>a2 = <span class="number">2</span>;</span><br><span class="line"><span class="comment">/*这里可以访问</span></span><br><span class="line"><span class="comment">因为对于struct来说</span></span><br><span class="line"><span class="comment">a2默认是公共的*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="成员属性设置为私有"><a href="#成员属性设置为私有" class="headerlink" title="成员属性设置为私有"></a>成员属性设置为私有</h3><p><strong>优点</strong>1：将所有成员属性设置为私有，可以自己控制读写权限<br><strong>优点</strong>2：对于写权限，我们可以检测数据的有效性</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*成员属性设置私有</span></span><br><span class="line"><span class="comment">可以自己控制读写权限</span></span><br><span class="line"><span class="comment">对于写权限可以检测数据有效性</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string pname;<span class="comment">//姓名 可读写</span></span><br><span class="line"><span class="type">int</span> page = <span class="number">18</span>;<span class="comment">//年龄 只读</span></span><br><span class="line">string idol;<span class="comment">//偶像 只写</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//设置姓名</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setName</span><span class="params">(string name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">pname = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取姓名</span></span><br><span class="line"><span class="function">string <span class="title">getName</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> pname;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*获取年龄*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getAge</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> page;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*设置偶像*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setIdol</span><span class="params">(string name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">idol = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加设置年龄的公共函数</span></span><br><span class="line"><span class="comment">然后添加一个验证</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setAge</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a&lt;<span class="number">0</span> || a&gt;<span class="number">150</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;不合法字符&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">page = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Person p1;</span><br><span class="line"><span class="comment">/*设置姓名*/</span></span><br><span class="line"><span class="comment">//p.pname = &quot;jack&quot;;</span></span><br><span class="line"><span class="comment">//访问不到 报错</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;name:&quot; &lt;&lt; p1.pname &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//上面的语句同样报错</span></span><br><span class="line">p<span class="number">1.</span><span class="built_in">setName</span>(<span class="string">&quot;john&quot;</span>);</span><br><span class="line">cout &lt;&lt; p<span class="number">1.</span><span class="built_in">getName</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*对于年龄</span></span><br><span class="line"><span class="comment">我们只写了获取的方法</span></span><br><span class="line"><span class="comment">所有理论上没有任何办法可以修改年龄</span></span><br><span class="line"><span class="comment">p1.setAge(20);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">p<span class="number">1.</span><span class="built_in">getAge</span>();</span><br><span class="line">cout &lt;&lt; p<span class="number">1.</span><span class="built_in">getAge</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">p<span class="number">1.</span><span class="built_in">setIdol</span>(<span class="string">&quot;jackson&quot;</span>);</span><br><span class="line"><span class="comment">/*用get会报错 这里就不演示了*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*一句话形容</span></span><br><span class="line"><span class="comment">就是通过公共的set方法来写</span></span><br><span class="line"><span class="comment">通过get方法来读</span></span><br><span class="line"><span class="comment">通过公共的 set和get方法 我们自己就能控制读和写*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加验证 可以写 但是年龄必须在0-150之间*/</span></span><br><span class="line">p<span class="number">1.</span><span class="built_in">setAge</span>(<span class="number">160</span>);</span><br><span class="line">cout &lt;&lt; p<span class="number">1.</span><span class="built_in">getAge</span>() &lt;&lt; endl;</span><br><span class="line">p<span class="number">1.</span><span class="built_in">setAge</span>(<span class="number">70</span>);</span><br><span class="line">cout &lt;&lt; p<span class="number">1.</span><span class="built_in">getAge</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="练习案例："><a href="#练习案例：" class="headerlink" title="练习案例："></a>练习案例：</h3><h4 id="设计立方体类"><a href="#设计立方体类" class="headerlink" title="设计立方体类"></a>设计立方体类</h4><p>设计立方体类（Cube）<br>求出立方体的面积和体积<br>分别用全局函数和成员函数判断两个立方体是否相等</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*立方体类设计</span></span><br><span class="line"><span class="comment">1、创建立方体类</span></span><br><span class="line"><span class="comment">2、设计属性和行为</span></span><br><span class="line"><span class="comment">3、获取立方体的面积和体积</span></span><br><span class="line"><span class="comment">4、分别利用全局函数和成员函数</span></span><br><span class="line"><span class="comment">判断两个立方体是否相等*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cube</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">/*定义私有属性长宽高*/</span></span><br><span class="line"><span class="type">int</span> length;</span><br><span class="line"><span class="type">int</span> wideth;</span><br><span class="line"><span class="type">int</span> height;</span><br><span class="line"><span class="comment">/*行为*/</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*这里放getset*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getLen</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setLen</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">length = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getwide</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> wideth;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setwide</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">wideth = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getHeig</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> height;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setHeig</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">height = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*计算面积*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">SurF</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> surface = (length * height + length * wideth + height * wideth) * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> surface;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*计算体积*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">volume</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> volume = length * height *wideth;</span><br><span class="line"><span class="keyword">return</span> volume;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用成员函数判断两个立方体是否相等*/</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">JudgeInClass</span><span class="params">(Cube&amp; a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (height == a.<span class="built_in">getHeig</span>() &amp;&amp; wideth == a.<span class="built_in">getwide</span>() &amp;&amp; length == a.<span class="built_in">getLen</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用全局函数判断两个立方体是否相等*/</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Judge</span><span class="params">(Cube&amp; c1, Cube&amp; c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (c<span class="number">1.</span><span class="built_in">getHeig</span>() == c<span class="number">2.</span><span class="built_in">getHeig</span>() &amp;&amp; c<span class="number">1.</span><span class="built_in">getwide</span>() == c<span class="number">2.</span><span class="built_in">getwide</span>() &amp;&amp; c<span class="number">1.</span><span class="built_in">getLen</span>() == c<span class="number">2.</span><span class="built_in">getLen</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Cube c1;</span><br><span class="line">c<span class="number">1.</span><span class="built_in">setLen</span>(<span class="number">7</span>);</span><br><span class="line">c<span class="number">1.</span><span class="built_in">setwide</span>(<span class="number">8</span>);</span><br><span class="line">c<span class="number">1.</span><span class="built_in">setHeig</span>(<span class="number">9</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 s surface is: &quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">SurF</span>() &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 s volume is: &quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">volume</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">Cube c2;</span><br><span class="line">c<span class="number">2.</span><span class="built_in">setLen</span>(<span class="number">7</span>);</span><br><span class="line">c<span class="number">2.</span><span class="built_in">setwide</span>(<span class="number">8</span>);</span><br><span class="line">c<span class="number">2.</span><span class="built_in">setHeig</span>(<span class="number">9</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c2 s surface is: &quot;</span> &lt;&lt; c<span class="number">2.</span><span class="built_in">SurF</span>() &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c2 s volume is: &quot;</span> &lt;&lt; c<span class="number">2.</span><span class="built_in">volume</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用全局函数判断*/</span></span><br><span class="line"><span class="type">bool</span> ret = <span class="built_in">Judge</span>(c1, c2);</span><br><span class="line"><span class="keyword">if</span> (ret)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 and c2 is same&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 and c2 is not same&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*利用成员函数判断*/</span></span><br><span class="line"><span class="type">bool</span> ret1 = c<span class="number">1.</span><span class="built_in">JudgeInClass</span>(c2);</span><br><span class="line"><span class="keyword">if</span> (ret1)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 and c2 is same&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 and c2 is not same&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="点和圆的关系"><a href="#点和圆的关系" class="headerlink" title="点和圆的关系"></a>点和圆的关系</h4><p>设计一个圆形类（Circle)和一个点类（Point)计算点和圆的关系</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/*点和圆的关系案例</span></span><br><span class="line"><span class="comment"> * 点*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> p_x;</span><br><span class="line"><span class="type">int</span> p_y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*xy坐标的get and set*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setX</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p_x = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setY</span><span class="params">(<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p_y = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getX</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> p_x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getY</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> p_y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/*圆类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> c_r;</span><br><span class="line">Point c_Center;</span><br><span class="line"><span class="comment">/*在类中可以让给另一个类作为本类的成员*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*设置和获取半径*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setR</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">c_r = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getR</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> c_r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*设置和获取圆心*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setCenter</span><span class="params">(Point center)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">c_Center = center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Point <span class="title">getCenter</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> c_Center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">isInCircle</span><span class="params">(Circle&amp; c, Point&amp; p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*计算两点之间距离的平方*/</span></span><br><span class="line"><span class="type">int</span> distance =</span><br><span class="line">(c.<span class="built_in">getCenter</span>().<span class="built_in">getX</span>() - p.<span class="built_in">getX</span>()) * (c.<span class="built_in">getCenter</span>().<span class="built_in">getX</span>() - p.<span class="built_in">getX</span>()) +</span><br><span class="line">(c.<span class="built_in">getCenter</span>().<span class="built_in">getY</span>() - p.<span class="built_in">getY</span>()) * (c.<span class="built_in">getCenter</span>().<span class="built_in">getY</span>() - p.<span class="built_in">getY</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">/*计算半径的平方*/</span></span><br><span class="line"><span class="type">int</span> rad2 = c.<span class="built_in">getR</span>()* c.<span class="built_in">getR</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*判断*/</span></span><br><span class="line"><span class="keyword">if</span> (distance &gt; rad2)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;point is out of circle&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (distance == rad2)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;point is on the circle&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;point is in the circle&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建圆*/</span></span><br><span class="line">Circle c1;</span><br><span class="line">c<span class="number">1.</span><span class="built_in">setR</span>(<span class="number">10</span>);</span><br><span class="line">Point center;</span><br><span class="line">center.<span class="built_in">setX</span>(<span class="number">10</span>);</span><br><span class="line">center.<span class="built_in">setY</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">c<span class="number">1.</span><span class="built_in">setCenter</span>(center);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建点*/</span></span><br><span class="line">Point p1;</span><br><span class="line">p<span class="number">1.</span><span class="built_in">setX</span>(<span class="number">10</span>);</span><br><span class="line">p<span class="number">1.</span><span class="built_in">setY</span>(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*判断  */</span></span><br><span class="line"><span class="built_in">isInCircle</span>(c1, p1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="对象的初始化和清理-重点"><a href="#对象的初始化和清理-重点" class="headerlink" title="对象的初始化和清理(重点)"></a>对象的初始化和清理(重点)</h3><p>生活中我们卖的电子产品都有出厂设置，在某一天我们不用之后也会删除一些自己的信息数据来保护隐私<br>C++中的面向对象来源于生活，每个对象也会有初始设置以及对象销毁前的清理数据的设置</p><h4 id="构造函数和析构函数-重点"><a href="#构造函数和析构函数-重点" class="headerlink" title="构造函数和析构函数(重点)"></a>构造函数和析构函数(重点)</h4><p>对象的初始化和清理也是两个非常重要的安全问题<br>    一个对象或者变量没有初始状态，对其使用后果是未知的<br>    通过杨使用完一个对象或者变量，没有及时清理，也会造成一些安全问题</p><p>C+++利用了<strong>构造函数和析构函数</strong>解决上述问题，这两个函数将会被自动编译器自动调用，完成对象初始化和清理工作。<br>对象的初始化和清理工作是编译器强制要我们做的事情，<br><strong>因此如果我们不提供构造和析构，编译器会提供的构造和析构函数是空实现</strong><br>(就是说一行代码都没有 里面是空的)</p><p>构造函数 ：主要作用在于创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无需手动调用。<br>析构函数：主要作用在于对象销毁前系统自动调用，执行一些清理工作。</p><p> 构造函数语法啊:类名(){}<br>1.构造函数没有返回值也不写void<br>2.函数名称与类名相同<br>3.构造函数可以有参数,因此可以发生重载<br>4.程序在调用对香港时候会自动调用构造,无须手动调用,而且只会调用一次</p><p>析构函数语法: ~类名(){}<br>1.析构函数,没有返回值也不写void<br>2..函数名称与类名相同,在名称前加上符号~<br>3.析构哈桉树不可以有参数因此不可以发生重载<br>4.程序在对象销毁前会自动调用析构,无需手动调用,而且只会调用一次</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*对象的初始化和清理*/</span></span><br><span class="line"><span class="comment">/*构造函数进行初始化的操作*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*构造函数*/</span></span><br><span class="line"><span class="comment">/*没有返回值 不用void</span></span><br><span class="line"><span class="comment">函数名 = 类名 可以有参数可以重载</span></span><br><span class="line"><span class="comment">创建对象的时候自动调用*/</span></span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;构造函数的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*不写的话编译器就自动生成一个无内容的*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*析构函数进行清理的操作</span></span><br><span class="line"><span class="comment">没有返回值不写void</span></span><br><span class="line"><span class="comment">函数名和类名相同 前面加~</span></span><br><span class="line"><span class="comment">析构函数不可以有参数 无法重载</span></span><br><span class="line"><span class="comment">对象销毁前自动调用析构函数 只会调用一次*/</span></span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person 的析构 函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span>  <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在进入了test01&quot;</span> &lt;&lt; endl;</span><br><span class="line">Person p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*为什么这里要通过test01执行</span></span><br><span class="line"><span class="comment">因为test01作为栈上的函数 执行完之后内部的东西全部会销毁</span></span><br><span class="line"><span class="comment">这样的话内部创建的person也会被销毁</span></span><br><span class="line"><span class="comment">所以就会调用析构函数 如果只是在main里面创建person</span></span><br><span class="line"><span class="comment">就没办法展示析构函数调用的部分*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Person p1;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="构造函数的分类以及调用（重点）"><a href="#构造函数的分类以及调用（重点）" class="headerlink" title="构造函数的分类以及调用（重点）"></a>构造函数的分类以及调用（重点）</h4><p>两种分类方式：<br>    按参数分：有参构造和无参构造<br>    按类型分：普通构造和拷贝构造</p><p>三种调用方式：<br>    括号法<br>    显示法<br>    隐式转换法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*构造函数的分类以调用</span></span><br><span class="line"><span class="comment">分类</span></span><br><span class="line"><span class="comment">按照参数分类</span></span><br><span class="line"><span class="comment">可以分为有参构造函数和无参构造函数（默认构造函数）</span></span><br><span class="line"><span class="comment">按照 类型来分 普通构造和拷贝构造*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a)</span><br><span class="line">&#123;</span><br><span class="line">age = a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person有参构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*拷贝构造函数*/</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person &amp;p)</span><br><span class="line">&#123;<span class="comment">/*传入了一个person类的数据</span></span><br><span class="line"><span class="comment"> 把传入的person类上的所有属性拷贝到这个构造的person类中</span></span><br><span class="line"><span class="comment"> 这里加上const 保证不会修改原始的要被拷贝的数据 然后通过引用的方式传入*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*将传入的人身上的所有属性拷贝到我身上*/</span></span><br><span class="line">age = p.age;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person拷贝构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person 析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*调用*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*括号法*/</span></span><br><span class="line">Person p;</span><br><span class="line"><span class="comment">/*默认构造函数调用*/</span></span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="comment">/*调用有参构造函数*/</span></span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(p2)</span></span>;</span><br><span class="line"><span class="comment">/*调用拷贝构造函数*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*注意事项</span></span><br><span class="line"><span class="comment">调用默认构造函数的时候不要加（）*/</span></span><br><span class="line"><span class="comment">//person p4();</span></span><br><span class="line"><span class="comment">/*如果写成这样 没有发生任何事</span></span><br><span class="line"><span class="comment">因为上面的代码 编译器会认为是一个函数的声明</span></span><br><span class="line"><span class="comment">所以不会认为在创建对象*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;age of p2: &quot;</span> &lt;&lt; p<span class="number">2.</span>age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;age of p3: &quot;</span> &lt;&lt; p<span class="number">3.</span>age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*显示法*/</span></span><br><span class="line">Person p5;</span><br><span class="line">Person p6 = <span class="built_in">Person</span>(<span class="number">10</span>);</span><br><span class="line">Person p7 = <span class="built_in">Person</span>(p6);</span><br><span class="line"><span class="comment">/*分别用显示法调用三种构造*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>(<span class="number">10</span>);<span class="comment">/*匿名对象</span></span><br><span class="line"><span class="comment">特点：当前行结束后，系统会立刻回收掉匿名对象*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;匿名对象的下一行&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*不要利用拷贝构造函数初始化匿名对象*/</span></span><br><span class="line"><span class="comment">/*Person(p3); 编译器会认为person（p3） === person p3;</span></span><br><span class="line"><span class="comment">* 编译器认为这是一个对象的声明</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*隐式转换法*/</span></span><br><span class="line">Person p8 = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*相当于 写了 Person p4 = Person(10);*/</span></span><br><span class="line">Person p9 = p8; <span class="comment">/*隐式的拷贝构造*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="拷贝构造函数调用时机"><a href="#拷贝构造函数调用时机" class="headerlink" title="拷贝构造函数调用时机"></a>拷贝构造函数调用时机</h4><p>C++中拷贝构造函数调用实际通常有三种情况<br>使用一个一集创建完毕的对象来初始化一个新对象<br>值传递的方式给函数参数传值<br>以值方式返回局部对象</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*拷贝构造函数调用时机*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person默认构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> tage)</span><br><span class="line">&#123;</span><br><span class="line">age = tage;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person有参构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person &amp;p)</span><br><span class="line">&#123;</span><br><span class="line">age = p.age;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person拷贝构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person 析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//1\使用一个一集创建完毕的对象来初始化一个新对象</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(p1)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2 age:&quot;</span> &lt;&lt; p<span class="number">2.</span>age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//值传递的方式给函数参数传值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">doWord</span><span class="params">(Person p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*其实这里就是在调用拷贝函数创建一个新的p*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p3;</span><br><span class="line"><span class="built_in">doWord</span>(p3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//以值方式返回局部对象</span></span><br><span class="line"><span class="function">Person <span class="title">doWork2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p1;</span><br><span class="line"><span class="comment">/*这里的p1式一个局部变量</span></span><br><span class="line"><span class="comment">生命周期只在函数 内部 没办法超过这个函数</span></span><br><span class="line"><span class="comment">所以下面return的时候 其实是调用拷贝函数拷贝出了一个新的对象*/</span></span><br><span class="line"><span class="keyword">return</span> p1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p = <span class="built_in">doWork2</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"><span class="built_in">test03</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="构造函数调用规则（重要）"><a href="#构造函数调用规则（重要）" class="headerlink" title="构造函数调用规则（重要）"></a>构造函数调用规则（重要）</h4><p>默认情况想爱爱，c++的编译器至少给一个类添加三个函数<br>1、默认构造函数 无参 函数体为空<br>2、默认析构函数 无参 函数体为空<br>3、默认拷贝构造函数 对属性值进行拷贝</p><p>构造函数调用规则如下：<br>如果用户定义有参构造函数，c++不在提供默认无参构造，但是会提供默认拷贝构造<br>如果用户定义拷贝构造函数，c++不会再提供其他构造函数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//构造函数的调用规则</span></span><br><span class="line"><span class="comment">/*创建一个类 cpp会给每个类都添加至少三个函数*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//默认构造 空实现</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//拷贝构造</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Page;</span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person 的默认函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*如果把这个无参构造函数注释掉之后再调用函数test02就会报错</span></span><br><span class="line"><span class="comment">因为生成了有参构造函数之后编译器就不会再生成有参构造函数</span></span><br><span class="line"><span class="comment">但是依然会提供拷贝构造函数</span></span><br><span class="line"><span class="comment">如果单独写了 拷贝构造函数 那么编译器就不再提供任何其他构造函数*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> age)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person的有参构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">Page = age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//拷贝函数</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person&amp; p)</span><br><span class="line">&#123;</span><br><span class="line">Page = p.Page;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person的拷贝构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*写不写拷贝构造函数 下面的Person p2(p)都可以实现</span></span><br><span class="line"><span class="comment">因为如果你不写 他会生成一个默认的 功能也是把一个改类对象的值赋给另一个对象*/</span></span><br><span class="line"></span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person 的析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">p.Page = <span class="number">18</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(p)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2的年龄为&quot;</span> &lt;&lt; p<span class="number">2.</span>Page &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*写了有参构造函数之后编译器就不会再自动提供默认构造函数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结</strong>：定义了拷贝构造函数之后编译器不会自动生成任何其他函数。<br>定义了有参构造函数之后编译器不会自动生成无参构造函数，但是仍会生成拷贝构造函数</p><h4 id="深浅拷贝"><a href="#深浅拷贝" class="headerlink" title="深浅拷贝"></a>深浅拷贝</h4><p>浅拷贝：简单的赋值拷贝操作(带来的问题 堆区重复释放 这个问题要用深拷贝解决)<br>深拷贝：在堆区重新申请空间，进行拷贝操作</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*深拷贝和浅拷贝*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span>* pheight;<span class="comment">//身高</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;调用无参构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;调用有参构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a,<span class="type">int</span> h)</span><br><span class="line">&#123;</span><br><span class="line">age = a;</span><br><span class="line">pheight = <span class="keyword">new</span> <span class="built_in">int</span>(h);</span><br><span class="line"><span class="comment">/*把数据开辟到堆区*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;调用有参构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自己实现拷贝构造函数 解决潜拷贝带来的问题</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person&amp; p)</span><br><span class="line">&#123;</span><br><span class="line">age = p.age;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;调用拷贝构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//pheight = p.pheight;</span></span><br><span class="line"><span class="comment">//编译器默认实现的就是上面这行代码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//深拷贝操作</span></span><br><span class="line">pheight = <span class="keyword">new</span> <span class="built_in">int</span>(*p.pheight);</span><br><span class="line"><span class="comment">/*这行代码确保了每个拷贝出来的person 的height</span></span><br><span class="line"><span class="comment">都可以指向一块属于自己的height的内存 而不是全部指向同一块*/</span></span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*通过析构函数释放内存*/</span></span><br><span class="line"><span class="keyword">if</span> (pheight != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> pheight;</span><br><span class="line">pheight = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">/*先把内存释放干净</span></span><br><span class="line"><span class="comment">再防止野指针出现 确保指针指向空*/</span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;调用析构函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//Person p1(18);</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;age of p1&quot; &lt;&lt; p1.age &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//Person p2(p1);</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;age of p2&quot; &lt;&lt; p2.age &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">///*如果把手动定义的拷贝构造函数删除，</span></span><br><span class="line"><span class="comment">//然后执行上面的代码，他就会默认执行一个</span></span><br><span class="line"><span class="comment">//浅拷贝的操作*/</span></span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>, <span class="number">160</span>)</span></span>;</span><br><span class="line"> cout &lt;&lt; <span class="string">&quot;age of p1&quot;</span> &lt;&lt; p<span class="number">1.</span>age &lt;&lt; <span class="string">&quot;height of p1:&quot;</span>&lt;&lt; *p<span class="number">1.</span>pheight &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"> <span class="function">Person <span class="title">p2</span><span class="params">(p1)</span></span>;</span><br><span class="line"> cout &lt;&lt; <span class="string">&quot;age of p2&quot;</span> &lt;&lt; p<span class="number">2.</span>age &lt;&lt; <span class="string">&quot;height of p2:&quot;</span> &lt;&lt; *p<span class="number">2.</span>pheight &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：如果属性有再堆区开辟，那么一定要自己提供拷贝构造函数，防止浅的拷贝带来的问题</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241224093024989.png" alt="image-20241224093024989"></p><h4 id="初始化列表"><a href="#初始化列表" class="headerlink" title="初始化列表"></a>初始化列表</h4><p><strong>作用</strong>：<br>C++提供了初始化列表语法，用来初始化属性<br><strong>语法</strong>：构造函数（）属性1{值1},属性2{值2}</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化列表</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*无参构造*/</span></span><br><span class="line"><span class="comment">//Person()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//传统初始化操作</span></span><br><span class="line"><span class="comment">/*通过构造函数赋初始值*/</span></span><br><span class="line"><span class="comment">//Person(int a1, int b1, int c1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//a = a1;</span></span><br><span class="line"><span class="comment">//b = b1;</span></span><br><span class="line"><span class="comment">//c = c1;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*初始化列表初始化属性*/</span></span><br><span class="line"><span class="built_in">Person</span>():<span class="built_in">a</span>(<span class="number">10</span>),<span class="built_in">b</span>(<span class="number">20</span>),<span class="built_in">c</span>(<span class="number">30</span>)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*上面的办法可行 但是问题是只能赋10 20 30</span></span><br><span class="line"><span class="comment">写成下面的写法可以*/</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a1,<span class="type">int</span> b1,<span class="type">int</span> c1) :<span class="built_in">a</span>(a1), <span class="built_in">b</span>(b1), <span class="built_in">c</span>(c1)</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*注意记住初始化列表的语法*/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//Person p(10, 20, 30);</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;a: &quot; &lt;&lt; p.a &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;b: &quot; &lt;&lt; p.b &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;c: &quot; &lt;&lt; p.c &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">/*通过传统方法赋值并输出*/</span></span><br><span class="line"></span><br><span class="line">Person p1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1 a: &quot;</span> &lt;&lt; p<span class="number">1.</span>a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1 b: &quot;</span> &lt;&lt; p<span class="number">1.</span>b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1 c: &quot;</span> &lt;&lt; p<span class="number">1.</span>c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">30</span>, <span class="number">20</span>, <span class="number">10</span>)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2 a: &quot;</span> &lt;&lt; p<span class="number">2.</span>a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2 b: &quot;</span> &lt;&lt; p<span class="number">2.</span>b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2 c: &quot;</span> &lt;&lt; p<span class="number">2.</span>c &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="类对象作为类的成员"><a href="#类对象作为类的成员" class="headerlink" title="类对象作为类的成员"></a>类对象作为类的成员</h4><p>C++类中的成员可以是另一个类的对象</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span></span><br><span class="line">&#123;A a1;&#125;</span><br></pre></td></tr></table></figure><p>B类中有对象A作为成员，A为对象成员<br>那么当创建B对象时，A与B的构造和析构的顺序是谁先谁后</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*类对象作为类成员*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Phone</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string brand;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Phone</span>(string name)</span><br><span class="line">&#123;</span><br><span class="line">brand = name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;phone的构造函数的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Phone</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;phone的析构函数的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*姓名 手机*/</span></span><br><span class="line">string Pname;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*隐式转换法</span></span><br><span class="line"><span class="comment">* 使用下面的初始化列表的时候</span></span><br><span class="line"><span class="comment">* 编译器自动转换成下面的代码</span></span><br><span class="line"><span class="comment">* 所以可以直接把字符串类型赋值给下面的phone对象</span></span><br><span class="line"><span class="comment">Phone m_Phone = pName*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用初始化列表调用*/</span></span><br><span class="line">Phone Pphone;</span><br><span class="line"><span class="built_in">Person</span>(string name, string phone):<span class="built_in">Pname</span>(name),<span class="built_in">Pphone</span>(phone)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person构造函数的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person 析构函数的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p</span><span class="params">(<span class="string">&quot;张三&quot;</span>, <span class="string">&quot;苹果&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; p.Pname &lt;&lt; <span class="string">&quot;拿着:&quot;</span> &lt;&lt; p.Pphone.brand &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="静态成员（非常重要）"><a href="#静态成员（非常重要）" class="headerlink" title="静态成员（非常重要）"></a>静态成员（非常重要）</h4><p>静态成员就是在成员变量和成员函数前加上关键字static 称为静态成员<br>静态成员分为：</p><p>静态成员变量<br>1 所有对象共享同一份数据<br>2 在编译阶段分配内存<br>3 <strong>类内声明，类外初始化</strong><br>静态成员函数<br>1 所有对象共享同一个函数<br>2 <strong>静态成员函数只能访问静态成员</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*静态成员变量*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> P_A;</span><br><span class="line"><span class="comment">/*加上static之后就变成静态成员了</span></span><br><span class="line"><span class="comment">对于静态成员</span></span><br><span class="line"><span class="comment">1、所有对象都共享同一份数据</span></span><br><span class="line"><span class="comment">2、编译阶段就分配了内存</span></span><br><span class="line"><span class="comment">3、在类内声明 在类外进行 初始化操作*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*静态成员变量也是有访问权限的*/</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> P_B;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Person::P_A = <span class="number">100</span>;</span><br><span class="line"><span class="comment">/*通过这种格式写</span></span><br><span class="line"><span class="comment">类名::静态变量 </span></span><br><span class="line"><span class="comment">这样就相当于在类内做了声明 在类外做了初始化</span></span><br><span class="line"><span class="comment">Person::的意思 作用域 作用域的范围是Person类内部*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Person::P_B = <span class="number">300</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">cout &lt;&lt; p.P_A &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*一开始报错 没有初始化*/</span></span><br><span class="line"></span><br><span class="line">Person p2;</span><br><span class="line">p<span class="number">2.</span>P_A = <span class="number">200</span>;</span><br><span class="line">cout &lt;&lt; p.P_A &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*这里修改的是p2 的值</span></span><br><span class="line"><span class="comment">然后访问的是原来的p 发现p的值也改变了</span></span><br><span class="line"><span class="comment">说明两个实例的P_A其实是同一个东西 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*静态成员变量  不属于某个对象上</span></span><br><span class="line"><span class="comment">所有对象都共享同一份数据</span></span><br><span class="line"><span class="comment">因此静态成员变量有两种访问方式*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;test02&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*通过对象进行访问*/</span></span><br><span class="line">Person p3;</span><br><span class="line">cout &lt;&lt; p<span class="number">3.</span>P_A &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过类名进行访问*/</span></span><br><span class="line">cout &lt;&lt; Person::P_A &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*通过类名访问的时候要用作用域的符号 而不是.*/</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; Person::P_B &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">/*无法访问 因为是private*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>静态成员函数</strong>：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*静态成员函数*/</span></span><br><span class="line"><span class="comment">/*所有对象共享同一个函数</span></span><br><span class="line"><span class="comment">静态成员函数只能访问静态成员变量 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> pa;</span><br><span class="line"><span class="type">int</span> pb;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;func 中 修改前&quot;</span> &lt;&lt; pa &lt;&lt; endl;</span><br><span class="line">pa = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func 中 修改后&quot;</span> &lt;&lt; pa &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;static void func调用&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//pb = 10;</span></span><br><span class="line"><span class="comment">/*上述代码报错</span></span><br><span class="line"><span class="comment">因为pb是非静态成员变量</span></span><br><span class="line"><span class="comment"> 这个func是一个静态成员函数</span></span><br><span class="line"><span class="comment"> 只能访问静态成员变量</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> 原理 无法区分到底是哪个对象的pb</span></span><br><span class="line"><span class="comment"> 对于pa 因为是共享的 所有对象共用 所以可以区分*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*静态成员函数也是有访问权限的*/</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;调用func2&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">func2</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Person::pa = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*有两种访问方式*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*通过对象进行访问*/</span></span><br><span class="line">Person p;</span><br><span class="line">p.<span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过类名进行访问*/</span></span><br><span class="line">Person::<span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line">p.<span class="built_in">func3</span>();</span><br><span class="line"><span class="comment">/*通过这种方式可以调用func2*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="C-对象模型和this指针"><a href="#C-对象模型和this指针" class="headerlink" title="C++对象模型和this指针"></a>C++对象模型和this指针</h3><h4 id="成员变量和成员函数分开存储"><a href="#成员变量和成员函数分开存储" class="headerlink" title="成员变量和成员函数分开存储"></a>成员变量和成员函数分开存储</h4><p>在c++中，类内的成员变量和成员函数分开存储<br><strong>只有静态成员变量才属于类的对象上</strong><br>空对象的大小是1</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*成员变量和成员函数是分开存储的*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> pa;</span><br><span class="line"><span class="type">int</span> pc;</span><br><span class="line"><span class="comment">/*非静态成员变量 属于类的对象上*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> pb;</span><br><span class="line"><span class="comment">/*静态成员变量 不属于类的对象上*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*非静态成员函数 内存还是不属于类的对象上*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*静态成员函数 内存还是不属于类的对象上*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*只有非静态成员变量属于类的对象上*/</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> Person::pb = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line"><span class="comment">/*空对象占用内存空间为*/</span></span><br><span class="line"><span class="comment">/*cpp编译器会给每个空对象也分配一个字节空间</span></span><br><span class="line"><span class="comment">是为了区分空对象占内存的位置*/</span></span><br><span class="line"><span class="comment">/*每个空对象也应该有一个独一无二的内存地址*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of p &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(p) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of p &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(p) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//test01();</span></span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="this指针概念"><a href="#this指针概念" class="headerlink" title="this指针概念"></a>this指针概念</h4><p>通过3.2.1我们知道在C++中成员变量和成员函数是分开存储的<br>每一个非静态成员函数只会诞生一份函数实例，就是说多个同类型的对象会共用一块代码<br>那么问题是:这一块代码是如何区分哪个对象调用自己的呢？</p><p>C++通过提供特殊的对象指针,this指针，解决上述问题。<strong><u>this指针指向被调用的成员函数所属的对象。</u></strong></p><p>this指针式隐含每一个非静态成员函数内的一种指针<br>this指针不需要定义，直接使用即可</p><p>this指针的用途：<br>当形参和成员变量同名的时候，可用this指针来区分<br>在类型非静态成员你函数中返回对象本身，可使用return *this</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*this 指针*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> age)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;age = age;</span><br><span class="line"><span class="comment">/*原本这里会有名称冲突*/</span></span><br><span class="line"><span class="comment">/*this 指针指向的是被调用的成员函数所属的对象*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Person&amp; <span class="title">PersonAddAge</span><span class="params">(Person &amp;p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;age += p.age;</span><br><span class="line"><span class="comment">/*this-&gt;age++;*/</span></span><br><span class="line"><span class="comment">/*this 指向p2指针 而*this 指向p2这个实例*/</span></span><br><span class="line"><span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PersonAddAge1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;age += <span class="number">1</span>;</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*解决名称冲突*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">18</span>)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1的年龄为&quot;</span> &lt;&lt; p<span class="number">1.</span>age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*返回对象本身用*this*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">p<span class="number">2.</span><span class="built_in">PersonAddAge1</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;age of p2:&quot;</span> &lt;&lt; p<span class="number">2.</span>age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">p<span class="number">2.</span><span class="built_in">PersonAddAge</span>(p3);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;age of p2:&quot;</span> &lt;&lt; p<span class="number">2.</span>age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*链式编程思想*/</span></span><br><span class="line">p<span class="number">2.</span><span class="built_in">PersonAddAge</span>(p3).<span class="built_in">PersonAddAge</span>(p3);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;age of p2:&quot;</span> &lt;&lt; p<span class="number">2.</span>age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*test01();*/</span></span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="空指针访问成员函数"><a href="#空指针访问成员函数" class="headerlink" title="空指针访问成员函数"></a>空指针访问成员函数</h4><p>C++中空指针也是可以调用成员函数的，但是也要注意有没有用到this指针</p><p>如果用到this指针，需要加以判断保证代码的健壮性</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*空指针调用*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showClassName</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is Person class&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showPersonAge</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span> == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;<span class="comment">/*提高代码健壮性</span></span><br><span class="line"><span class="comment"> 如果为空就直接返回掉</span></span><br><span class="line"><span class="comment"> 如果不为空再输出*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;age = &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;age &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*此处调用p指针时 this指针是一个空指针</span></span><br><span class="line"><span class="comment">所以无法访问里面的属性*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person* p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">p-&gt;<span class="built_in">showClassName</span>();</span><br><span class="line">p-&gt;<span class="built_in">showPersonAge</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="const-修饰成员函数"><a href="#const-修饰成员函数" class="headerlink" title="const 修饰成员函数"></a>const 修饰成员函数</h4><p><strong>常函数</strong>：<br>成员函数后加const后我们称为这个函数为<strong>常函数</strong><br>常函数内不可以修改成员变量<br>成员属性声明时加关键字mutable后，再常函数中依然可以修改</p><p><strong>常对象</strong>：<br>声明对象前加const称该对象为常对象<br>常对象只能调用常函数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*常函数*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showPerson</span><span class="params">()</span> <span class="type">const</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*this指针的本质是一个指针常量 </span></span><br><span class="line"><span class="comment">指针的指向是不可以修改的</span></span><br><span class="line"><span class="comment">Person * const this</span></span><br><span class="line"><span class="comment">如果函数加上const </span></span><br><span class="line"><span class="comment">整个指针就不能动了</span></span><br><span class="line"><span class="comment">在成员函数后面加const 修饰的是this指向</span></span><br><span class="line"><span class="comment">让指针指向的值也不可以修改*/</span></span><br><span class="line"><span class="comment">//this-&gt;a = 100;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>-&gt;b = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="keyword">mutable</span> <span class="type">int</span> b;<span class="comment">/*特殊变量 即使在常函数中也可以修改这个值*/</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">p.<span class="built_in">showPerson</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">const</span> Person p1;</span><br><span class="line"><span class="comment">//p1.a = 10;</span></span><br><span class="line"><span class="comment">/*无法跟跟更改*/</span></span><br><span class="line">p<span class="number">1.</span>b = <span class="number">20</span>;</span><br><span class="line"><span class="comment">/*mutable 修饰的成员变量是一个特殊值</span></span><br><span class="line"><span class="comment">即使在常对象下也可以修改*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*常对象只能调用常函数*/</span></span><br><span class="line">p<span class="number">1.</span><span class="built_in">showPerson</span>();</span><br><span class="line"><span class="comment">//p1.func(); 无法调用</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="友元（重要"><a href="#友元（重要" class="headerlink" title="友元（重要)"></a>友元（重要)</h3><p>生活中你的家有客厅（public），有你的卧室（private）<br>客厅所有来的客人都可以进去，但是你的卧室是私有的，也就是说只有你能进去<br>但是呢，你也可以允许你的朋友进去</p><p>在程序里，有些私有属性，也想让类外特殊的一些函数或者类访问，就需要用到友元的技术</p><p>友元的木盾就是让一个函数或者类访问另一个类中私有成员</p><p>友元的关键字为friend</p><p>友元友三种实现<br>全局做友元<br>类做友元<br>成员函数做友元</p><p>友元单向不被继承</p><h4 id="全局函数做友元"><a href="#全局函数做友元" class="headerlink" title="全局函数做友元"></a>全局函数做友元</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*全局函数做友元*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">GoodBoy</span><span class="params">(Building&amp; building)</span></span>;</span><br><span class="line"><span class="comment">/*这里就是在添加一个友元函数的声明</span></span><br><span class="line"><span class="comment">这里的意思就是Building认为 goodboy是他的好朋友</span></span><br><span class="line"><span class="comment">所以让goodboy访问builiding 的私有成员</span></span><br><span class="line"><span class="comment">注意这个声明是包含参数列表的</span></span><br><span class="line"><span class="comment">我认为是添加参数列表的目的可能是用来区分重载函数吧*/</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string LivingRoom;<span class="comment">/*客厅*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string bedroom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Building</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;LivingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;bedroom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GoodBoy</span><span class="params">(Building &amp; building)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友的全局函数 正在访问&quot;</span> &lt;&lt; building.LivingRoom &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*上面是公共的变量 都可以访问，下面是私有的变量</span></span><br><span class="line"><span class="comment">原本无法访问 然后添加一个友元函数的声明在类内*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友的全局函数 正在访问&quot;</span> &lt;&lt; building.bedroom &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*在类的开头加上friend语句只有就可以访问了*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Building b1;</span><br><span class="line"><span class="built_in">GoodBoy</span>(b1);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="类做友元"><a href="#类做友元" class="headerlink" title="类做友元"></a>类做友元</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*类做友元*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">class</span> <span class="title class_">GoodGay</span>;</span><br><span class="line"><span class="comment">/*goodgay类是本类的好朋友，可以访问本类中私有的成员*/</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string LivingRoom;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string BedRoom;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Building</span>();</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*类的声明*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GoodGay</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Building * building;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">visit</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">/*参观函数访问buidling类中的属性*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">GoodGay</span>();</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">GoodGay::<span class="built_in">GoodGay</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*创建一个建筑物对象*/</span></span><br><span class="line">building = <span class="keyword">new</span> Building;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友类正在访问&quot;</span> &lt;&lt; building-&gt;LivingRoom &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;好基友类正在访问&quot;</span> &lt;&lt; building-&gt;BedRoom &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*类外写成员函数*/</span></span><br><span class="line">Building::<span class="built_in">Building</span>()</span><br><span class="line">&#123;</span><br><span class="line">LivingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">GoodGay g1;</span><br><span class="line">g<span class="number">1.</span><span class="built_in">visit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="成员函数做友元"><a href="#成员函数做友元" class="headerlink" title="成员函数做友元"></a>成员函数做友元</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义 GoodGay 类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GoodGay</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 声明 GoodGay::visit 为友元函数</span></span><br><span class="line">    <span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    string LivingRoom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    string BedRoom;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Building</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;LivingRoom = <span class="string">&quot;客厅&quot;</span>;</span><br><span class="line">        <span class="keyword">this</span>-&gt;BedRoom = <span class="string">&quot;卧室&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义 GoodGay 类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GoodGay</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">GoodGay</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        building = <span class="keyword">new</span> Building;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Building* building;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">visit</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 访问 Building 类的私有成员 BedRoom，因为 GoodGay::visit 是友元函数</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;visit函数正在访问： &quot;</span> &lt;&lt; building-&gt;LivingRoom &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;visit函数正在访问： &quot;</span> &lt;&lt; building-&gt;BedRoom &lt;&lt; endl;  <span class="comment">// 这里可以访问 BedRoom</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">visit2</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 只能访问公共成员 LivingRoom，不能访问 private 的 BedRoom</span></span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;visit2函数正在访问： &quot;</span> &lt;&lt; building-&gt;LivingRoom &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    GoodGay g1;</span><br><span class="line">    g<span class="number">1.</span><span class="built_in">visit</span>();  <span class="comment">// 访问 LivingRoom 和 BedRoom</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>理论上可以访问 实际上代码出错 问题暂时还没有解决 下次可以问问老师</p><p>友元定义的三种方式</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*类做友元*/</span></span><br><span class="line"><span class="keyword">friend</span> <span class="keyword">class</span> <span class="title class_">GoodGay</span>;</span><br><span class="line"><span class="comment">/*全局函数做友元*/</span></span><br><span class="line"><span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">GoodBoy</span><span class="params">(Building&amp; building)</span></span>;</span><br><span class="line"><span class="comment">/*成员函数做友元*/</span></span><br><span class="line"> <span class="function"><span class="keyword">friend</span> <span class="type">void</span> <span class="title">GoodGay::visit</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h2 id="运算符重载"><a href="#运算符重载" class="headerlink" title="运算符重载"></a>运算符重载</h2><p>运算符重载概念：对已有的运算符重新定义，赋予其另一种功能，来适应不同的数据类型</p><h4 id="加号运算符重载"><a href="#加号运算符重载" class="headerlink" title="加号运算符重载"></a>加号运算符重载</h4><p>作用：实现了两个自定义数据类型相加的运算</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241225174450781.png" alt="image-20241225174450781"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*加号运算符重载*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*成员函数重载*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="comment">/*成员函数重载*/</span></span><br><span class="line"><span class="comment">//Person operator+(Person&amp; p)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//Person temp;</span></span><br><span class="line"><span class="comment">//temp.a = this-&gt;a + p.a;</span></span><br><span class="line"><span class="comment">//temp.b = this-&gt;b + p.b;</span></span><br><span class="line"><span class="comment">//return temp;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*全集函数重载</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">Person <span class="keyword">operator</span>+(Person&amp; p1, Person&amp; p2)</span><br><span class="line">&#123;</span><br><span class="line">Person temp;</span><br><span class="line">temp.a = p<span class="number">1.</span>a + p<span class="number">2.</span>a;</span><br><span class="line">temp.b = p<span class="number">1.</span>b + p<span class="number">2.</span>b;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*写一个重载的版本*/</span></span><br><span class="line">Person <span class="keyword">operator</span>+(Person&amp; p1, <span class="type">int</span> num)</span><br><span class="line">&#123;</span><br><span class="line">Person temp;</span><br><span class="line">temp.a = p<span class="number">1.</span>a + num;</span><br><span class="line">temp.b = p<span class="number">1.</span>b + num;</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p1;</span><br><span class="line">p<span class="number">1.</span>a = <span class="number">10</span>;</span><br><span class="line">p<span class="number">1.</span>b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">Person p2;</span><br><span class="line">p<span class="number">2.</span>a = <span class="number">10</span>;</span><br><span class="line">p<span class="number">2.</span>b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数方便调用*/</span></span><br><span class="line">Person p3 = p1 + p2;</span><br><span class="line"><span class="comment">/*成员函数本质调用*/</span></span><br><span class="line"><span class="comment">//Person p3 = p1.operator+(p2);</span></span><br><span class="line"><span class="comment">//Person p3 = operator+(p1, p2);</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a of p3 = &quot;</span> &lt;&lt; p<span class="number">3.</span>a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b of p3 = &quot;</span> &lt;&lt; p<span class="number">3.</span>b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">p3 = p3 + <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a of p3 = &quot;</span> &lt;&lt; p<span class="number">3.</span>a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b of p3 = &quot;</span> &lt;&lt; p<span class="number">3.</span>b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="其他运算符的重载"><a href="#其他运算符的重载" class="headerlink" title="其他运算符的重载"></a>其他运算符的重载</h4><p>这里就不展开多说了，基本上都是一样的<br>可以重载的运算符包括</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">左移运算符&lt;&lt;(左移运算符只能利用全局函数重载)</span><br><span class="line">递增运算 ++</span><br><span class="line">赋值运算符 = </span><br><span class="line">关系运算符 &gt;&lt;=!=</span><br><span class="line">函数调用运算符 ()</span><br></pre></td></tr></table></figure><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><p>继承是面向对象三大特性之一<br>有些类和类之间存在特殊关系，例如下图中:<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241225203438189.png" alt="image-20241225203438189"></p><p>我们发现，定义这些类时，下级的成员除了拥有上一级的共性，还有自己的特性。<br>这个时候我们就可以考虑利用继承的技术，减少重复代码</p><h4 id="继承的基本语法"><a href="#继承的基本语法" class="headerlink" title="继承的基本语法"></a>继承的基本语法</h4><p>例如我们看到很多网站中 ，都有公共的头部，公共的底部，甚至公共的左侧列表，只有中心内容不同，系欸下啊来我们分别利用普通写法和继承写法来实现页面中的内容，看一下继承存在的意义以及好处。</p><p>语法： class 子类名 ：继承方式  父类名<br>子类也叫派生类<br>父类也叫基类</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*普通实现页面*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///*java页面*/</span></span><br><span class="line"><span class="comment">//class Java</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//public:</span></span><br><span class="line"><span class="comment">//void header()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;首页、公开课、登陆（公共头部）&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//void footer()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;底部内容&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//void left()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;java python c++等连接(公共分类列表)&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//void content()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;java学科视频&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">///*python页面*/</span></span><br><span class="line"><span class="comment">//class Python</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//public:</span></span><br><span class="line"><span class="comment">//void header()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;首页、公开课、登陆（公共头部）&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//void footer()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;底部内容&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//void left()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;java python c++等连接(公共分类列表)&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//void content()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;python学科视频&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//&#125;;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//void test01()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;java下载视频的页面如下&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//Java j1;</span></span><br><span class="line"><span class="comment">//j1.header();</span></span><br><span class="line"><span class="comment">//j1.content();</span></span><br><span class="line"><span class="comment">//j1.left();</span></span><br><span class="line"><span class="comment">//j1.footer();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;=======分割==========&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//Python p1;</span></span><br><span class="line"><span class="comment">//p1.header();</span></span><br><span class="line"><span class="comment">//p1.content();</span></span><br><span class="line"><span class="comment">//p1.left();</span></span><br><span class="line"><span class="comment">//p1.footer();</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*继承实现页面*/</span></span><br><span class="line"><span class="comment">/*先写一个公共的页面*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BasePage</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">header</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;首页、公开课、登陆（公共头部）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">footer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;底部内容&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">left</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;java python c++等连接(公共分类列表)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*java python页面 */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Java</span> : <span class="keyword">public</span> BasePage</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;java学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Python</span> : <span class="keyword">public</span> BasePage</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">content</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;python学科视频&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;java下载视频的页面如下&quot;</span> &lt;&lt; endl;</span><br><span class="line">Java j1;</span><br><span class="line">j<span class="number">1.</span><span class="built_in">header</span>();</span><br><span class="line">j<span class="number">1.</span><span class="built_in">content</span>();</span><br><span class="line">j<span class="number">1.l</span>eft();</span><br><span class="line">j<span class="number">1.f</span>ooter();</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;=======分割==========&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">Python p1;</span><br><span class="line">p<span class="number">1.</span><span class="built_in">header</span>();</span><br><span class="line">p<span class="number">1.</span><span class="built_in">content</span>();</span><br><span class="line">p<span class="number">1.l</span>eft();</span><br><span class="line">p<span class="number">1.f</span>ooter();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*继承的好处</span></span><br><span class="line"><span class="comment">减少重复的代码</span></span><br><span class="line"><span class="comment">语法 */</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结</strong>：</p><p>继承的好处：<strong><u>可以减少重复 的代码</u></strong><br>class A ： public B;<br>A类称为子类或者派生类<br>B类称为父类或者基类</p><p>派生类中的成员，包含两大部分：</p><p>一类是从基类继承过来的，一类是自己增加的成员。<br>从基类继承过来的表现 出共性 自己新增的表现出个性</p><h4 id="继承方式"><a href="#继承方式" class="headerlink" title="继承方式"></a>继承方式</h4><p>继承的语法：class 子类 ：继承方式 父类</p><p><strong>继承方式一共有三种</strong><br>公共继承<br>保护继承<br>私有继承</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241225211053012.png" alt="image-20241225211053012"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241230174832884.png" alt="image-20241230174832884"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*继承方式*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*公共继承*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son1</span> :<span class="keyword">public</span> Base1</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*父类中的公共权限成员到子类中依然是公共权限*/</span></span><br><span class="line">b = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*父类中的保护权限成员 到子类中依然是保护权限*/</span></span><br><span class="line"><span class="comment">//c = 10;</span></span><br><span class="line"><span class="comment">/*父类中 的私有权限成员 子类中访问不到*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son1 s1;</span><br><span class="line">s<span class="number">1.</span>a = <span class="number">100</span>;</span><br><span class="line"><span class="comment">//s1.b = 100;</span></span><br><span class="line"><span class="comment">/*b是保护权限 类外不可以访问*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*保护继承*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base2</span> :<span class="keyword">public</span> Base1</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span>  <span class="title class_">Son2</span> :<span class="keyword">protected</span> Base2</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a = <span class="number">100</span>;</span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line"><span class="comment">/*父类中的公共成员和保护成员</span></span><br><span class="line"><span class="comment">到子类中都变成保护权限*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//c = 100;</span></span><br><span class="line"><span class="comment">/*私有成员访问不到*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son2 s2;</span><br><span class="line"><span class="comment">//s2.a = 1000;</span></span><br><span class="line"><span class="comment">/*报错 在son2中 a变成了保护权限</span></span><br><span class="line"><span class="comment">所以类外访问不到*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*私有继承*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base3</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son3</span> :<span class="keyword">private</span> Base3</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a = <span class="number">100</span>;<span class="comment">/*父类中的公共成员 到子类中变成私有</span></span><br><span class="line"><span class="comment">父类中保护成员 子类中变为私有成员*/</span></span><br><span class="line">b = <span class="number">100</span>;</span><br><span class="line">c = <span class="number">100</span>;</span><br><span class="line"><span class="comment">/*父类中的私有成员 子类中访问不到*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son3 s3;</span><br><span class="line"><span class="comment">//s3.a = 1000;</span></span><br><span class="line"><span class="comment">//s3.b = 1000;</span></span><br><span class="line"><span class="comment">/*到了son3中变成了私有的成员 类外访问不到*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GrandSon3</span> :<span class="keyword">public</span> Son3</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//a = 1000;</span></span><br><span class="line"><span class="comment">/*还是私有 访问不到*/</span></span><br><span class="line"><span class="comment">/*son3中变为私有 即使是son3的子类也访问不到*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="继承中的对象模型"><a href="#继承中的对象模型" class="headerlink" title="继承中的对象模型"></a>继承中的对象模型</h4><p><strong>问题</strong>：从父亲继承过来的成员，那些属于子类对象中？</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*继承中的对象模型*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> :<span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> d;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son s1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of s1: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(s1) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*父类中所有的非静态成员属性都会被子类继承下去</span></span><br><span class="line"><span class="comment">父类中私有的成员访问不到 但是确实被继承了*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="继承中构造和析构函顺序"><a href="#继承中构造和析构函顺序" class="headerlink" title="继承中构造和析构函顺序"></a>继承中构造和析构函顺序</h4><p>子类继承父类后，当创建子类对象，也会调用父类的构造函数</p><p>问题：父类和子类的构造和析构顺序是谁先谁后？</p><p>继承中的构造和析构顺序如下：<br>先构造父类，再构造子类，析构的顺序与构造的顺序相反<br>先进后出</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*继承中的构造和析构顺序*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Base</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;父类中的构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Base</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;父类中的析构函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> : <span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Son</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子类中的构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Son</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子类中的析构函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son s1;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="继承同名成员处理方式"><a href="#继承同名成员处理方式" class="headerlink" title="继承同名成员处理方式"></a>继承同名成员处理方式</h4><p>问题：当子类与父类出现同名的成员，如何通过子类对象，访问到子类或者父类中同名的数据？</p><p>访问子类同名成员 直接访问即可<br>访问父类同名成员 需要加作用域</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*继承同名成员处理方式*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">Base</span>()</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;base下func&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> :<span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">Son</span>()</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="number">200</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;son下func&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;son下func&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*同名成员对象处理方式*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son s;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;son 下的a= &quot;</span> &lt;&lt; s.a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;base 下的a= &quot;</span> &lt;&lt; s.Base::a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">s.<span class="built_in">func</span>();</span><br><span class="line">s.Base::<span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s.Base::<span class="built_in">func</span>(<span class="number">1</span>);</span><br><span class="line"><span class="comment">/*如果子类中出现了和父类中的同名函数</span></span><br><span class="line"><span class="comment">那么子类中会隐藏掉父类中所有的同名成员函数</span></span><br><span class="line"><span class="comment">如果想要访问都要加作用域*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*同名成员函数处理方式*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>总结：<br>子类对象可以直接访问到子类中的同名成员<br>子类对象加作用域可以访问到父类同名成员<br>当子类和父类拥有同名成员函数，子类会隐藏掉父类中同名成员函数，加作用域可以访问到父类中同名函数</p><h4 id="继承同名静态成员能处理方式"><a href="#继承同名静态成员能处理方式" class="headerlink" title="继承同名静态成员能处理方式"></a>继承同名静态成员能处理方式</h4><p>问题：继承中同名的静态成员再子类对象上如何进行访问？</p><p>静态成员和非静态成员出现同名，处理方式一致</p><p>访问子类同名成员，直接访问即可<br>访问父类同名成员 需加作用域</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*继承 */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> a;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;父类的静态函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> Base::a = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">son</span> :<span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> a;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子类的静态函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*通过对象访问*/</span></span><br><span class="line">son s1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;son 的 a&quot;</span> &lt;&lt; s<span class="number">1.</span>a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;base 的 a&quot;</span> &lt;&lt; s<span class="number">1.</span>Base::a &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*通过类名访问*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;son 的 a&quot;</span> &lt;&lt; son::a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;base 的 a&quot;</span> &lt;&lt; son::Base::a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;base 的 a&quot;</span> &lt;&lt; Base::a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过对象访问*/</span></span><br><span class="line">s<span class="number">1.f</span>unc();</span><br><span class="line">s<span class="number">1.</span>Base::<span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过类名访问*/</span></span><br><span class="line">son::<span class="built_in">func</span>();</span><br><span class="line">son::Base::<span class="built_in">func</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> son::a = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="多继承语法"><a href="#多继承语法" class="headerlink" title="多继承语法"></a>多继承语法</h4><p>c++允许一个类继承多个类</p><p>语法：class 子类 ：继承方式 父类1，继承方式 父类2</p><p>多继承可能会引发父类中同名成员出现，需要加作用域区分</p><p>c++实际开发中不建议用多继承</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*多继承语法*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">Base1</span>()</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base2</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> a;</span><br><span class="line"><span class="built_in">Base2</span>()</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="number">200</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*语法 class 子类 ：继承方式1 父类1 继承方式2 父类2*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> :<span class="keyword">public</span> Base1, <span class="keyword">public</span> Base2</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line"><span class="type">int</span> d;</span><br><span class="line"><span class="built_in">Son</span>()</span><br><span class="line">&#123;</span><br><span class="line">c = <span class="number">300</span>;</span><br><span class="line">d = <span class="number">400</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Son s;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;子类所占的空间&quot;</span> &lt;&lt;<span class="built_in">sizeof</span>(s)&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*当父类中出现了同名的成员，需要加作用域区分*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;base1的a&quot;</span> &lt;&lt; s.Base1::a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;base2的a&quot;</span> &lt;&lt; s.Base2::a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结</strong>：多继承中如果父类出现了同名的情况，子类使用的时候需要加作用域</p><h4 id="菱形继承-虚基类-虚继承-重要重要"><a href="#菱形继承-虚基类-虚继承-重要重要" class="headerlink" title="菱形继承 虚基类 虚继承(重要重要)"></a>菱形继承 虚基类 虚继承(重要重要)</h4><p><strong>菱形继承概念</strong>：<br>    两个派生类继承同一个基类<br>    又有某个类同时继承两个派生类<br>    这种继承被称为菱形继承，或者钻石继承</p><p><strong>经典菱形继承案例</strong>：</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241225225406058.png" alt="image-20241225225406058"></p><p><strong>菱形继承问题</strong>：</p><p>羊继承了 动物的数据，鸵同样继承了动物的数据，当羊驼使用数据时，就会产生二义性<br>羊驼继承自动物的数据继承了两份，其实我们应该清楚，这份数据我们只需要一份</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*动物类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用虚继承可以解决菱形继承的问题*/</span></span><br><span class="line"><span class="comment">/*继承之前加上关键字virtual变为虚继承*/</span></span><br><span class="line"><span class="comment">/*animal类称为虚基类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Sheep</span> :<span class="keyword">virtual</span> <span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Camel</span>:<span class="keyword">virtual</span> <span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Alpaca</span> :<span class="keyword">public</span> Camel, <span class="keyword">public</span> Sheep</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Alpaca a1;</span><br><span class="line">a<span class="number">1.</span>Sheep::age = <span class="number">18</span>;</span><br><span class="line">a<span class="number">1.</span>Camel::age = <span class="number">28</span>;</span><br><span class="line"><span class="comment">/*虚继承之后共享数据 把两个数据改为一个*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*当菱形继承的时候有两个父类具有相同的数据</span></span><br><span class="line"><span class="comment">需要加以区分*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1.Sheep::age &quot;</span> &lt;&lt; a<span class="number">1.</span>Sheep::age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1.Camel::age &quot;</span> &lt;&lt; a<span class="number">1.</span>Camel::age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1.age &quot;</span> &lt;&lt; a<span class="number">1.</span>age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*这份数据我们知道只要有一份就行菱形继承导致数据有两份</span></span><br><span class="line"><span class="comment">资源浪费*/</span></span><br><span class="line"><span class="comment">/*虚继承继承下来的是一个指针 指向虚基类*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结</strong>：<br>菱形继承带来的主要问题是子类继承两份相同的数据，导致资源浪费以及毫无意义<br>利用虚继承可以解决菱形继承问题</p><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><h3 id="多态的基本概念"><a href="#多态的基本概念" class="headerlink" title="多态的基本概念"></a>多态的基本概念</h3><p>多态是C++面向对象三大特性之一<br>多态分为两类<br>静态多态：函数重载和运算符重载属于静态多态，复用函数名<br>动态多态：派生类和虚函数实现运行时多态<br>静态多态和动态多态区别：<br>静态多态的函数地址早绑定 - 编译阶段确定函数地址<br>动态多态的函数地址晚绑定  - 运行阶段确认函数地址</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*多态*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*动物类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*虚函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;动物在说话&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> :<span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;小猫在说话&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> :<span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;狗叫&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*执行说话的函数*/</span></span><br><span class="line"><span class="comment">/*地址早绑定 在编译阶段就能确定函数地址*/</span></span><br><span class="line"><span class="comment">/*如果想要猫说话 那么这个地址就不能提前绑定 需要在运行的时候绑定</span></span><br><span class="line"><span class="comment">也就是地址晚绑定*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">doSpeak</span><span class="params">(Animal &amp;animal)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*c++中允许父类子类直接类型转换*/</span></span><br><span class="line">animal.<span class="built_in">speak</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Cat c1;</span><br><span class="line"><span class="built_in">doSpeak</span>(c1);</span><br><span class="line"></span><br><span class="line">Dog d1;</span><br><span class="line"><span class="built_in">doSpeak</span>(d1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*动态多态满足条件</span></span><br><span class="line"><span class="comment">1、有继承关系</span></span><br><span class="line"><span class="comment">2、子类重写父类的虚函数</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">动态多态的使用</span></span><br><span class="line"><span class="comment">父类的指针或者引用 指向子类的对象</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>重点</strong>：动态多态满足条件<br>1、有继承关系<br>2、子类重写父类的虚函数</p><p>使用条件：父类的指针或者引用指向子类的对象</p><p> 原理：</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241226002720479.png" alt="image-20241226002720479"></p><h4 id="多态案例一-计算器类"><a href="#多态案例一-计算器类" class="headerlink" title="多态案例一 计算器类"></a>多态案例一 计算器类</h4><p>案例描述 ：</p><p>分别利用普通写法和多态技术，设计实现两个操作数进行运算的计算器类</p><p>多态的优点：<br>代码组织结构清晰<br>可读性强<br>利于前期和后期的扩展以及维护</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*分别利用普通写法和多态技术实现计算器*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*普通写法*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Calculator</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> n1;</span><br><span class="line"><span class="type">int</span> n2;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getResutl</span><span class="params">(string oper)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (oper == <span class="string">&quot;+&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> n1 + n2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (oper == <span class="string">&quot;-&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> n1 - n2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (oper == <span class="string">&quot;*&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> n1 * n2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*如果想要扩展新的功能 需要修改源码*/</span></span><br><span class="line"><span class="comment">/*在真的开发中 提倡开闭原则</span></span><br><span class="line"><span class="comment">对扩展进行开放 对修改进行关闭*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用多态实现计算器*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*多态好处</span></span><br><span class="line"><span class="comment">1、组织结构清晰</span></span><br><span class="line"><span class="comment">2、可读性强</span></span><br><span class="line"><span class="comment">3、前后期扩展可维护性高*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*实现计算器的抽象类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AbstractCalc</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> n1;</span><br><span class="line"><span class="type">int</span> n2;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*加法计算器类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AddCalc</span> :<span class="keyword">public</span> AbstractCalc</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> n1 + n2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/*减法计算器*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SubCalc</span> :<span class="keyword">public</span> AbstractCalc</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> n1 - n2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*乘法计算器*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MulCalc</span> :<span class="keyword">public</span> AbstractCalc</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">int</span> <span class="title">getResult</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> n1 * n2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*创建计算器对象*/</span></span><br><span class="line">Calculator c1;</span><br><span class="line">c<span class="number">1.</span>n1 = <span class="number">10</span>;</span><br><span class="line">c<span class="number">1.</span>n2 = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;+&quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">getResutl</span>(<span class="string">&quot;+&quot;</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-&quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">getResutl</span>(<span class="string">&quot;-&quot;</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*&quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">getResutl</span>(<span class="string">&quot;*&quot;</span>) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*加法*/</span></span><br><span class="line">AbstractCalc* abc = <span class="keyword">new</span> AddCalc;</span><br><span class="line">abc-&gt;n1 = <span class="number">10</span>;</span><br><span class="line">abc-&gt;n2 = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;+ &quot;</span> &lt;&lt; abc-&gt;<span class="built_in">getResult</span>() &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*用完后记得销毁*/</span></span><br><span class="line"><span class="keyword">delete</span> abc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="纯虚函数和抽象类（非常重要）"><a href="#纯虚函数和抽象类（非常重要）" class="headerlink" title="纯虚函数和抽象类（非常重要）"></a>纯虚函数和抽象类（非常重要）</h4><p>在多态中，通常父类中虚函数的实现是毫无意义的，主要调用子类重写的内容</p><p>因此可以将虚函数改为<strong>纯虚函数</strong></p><p><strong><u>纯虚函数语法：virtual 返回值类型 函数名 (参数列表) = 0;</u></strong></p><p><strong><u>当类中有了纯虚函数，这个类也称为抽象类</u></strong></p><p>抽象类特点：</p><p>无法实例化对象<br>子类必须重写抽象类中的纯虚函数，否则也属于抽象类</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*纯虚函数和抽象类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*纯虚函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*只要有一个纯虚函数，这个类称为抽象类</span></span><br><span class="line"><span class="comment">抽象类特点：无法实例化对象*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*抽象类的子类必须要重写父类中的纯虚函数 不然也属于抽象类*/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son1</span> :<span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son2</span> :<span class="keyword">public</span> Base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//Base b;</span></span><br><span class="line"><span class="comment">/*报错 不允许使用抽象类创建对象*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Son1 s1;</span></span><br><span class="line"><span class="comment">/*同样报错 因为继承了纯虚函数 所以也是抽象类*/</span></span><br><span class="line"></span><br><span class="line">Son2 s1;</span><br><span class="line"><span class="comment">/*不报错 重写之后就正常了*/</span></span><br><span class="line"></span><br><span class="line">Base* base = <span class="keyword">new</span> Son2;</span><br><span class="line">base-&gt;<span class="built_in">func</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="多态案例2-制作饮品"><a href="#多态案例2-制作饮品" class="headerlink" title="多态案例2 制作饮品"></a>多态案例2 制作饮品</h4><p>案例描述：<br>制作音频的大致流程为：煮水 - 冲泡 - 倒入杯中 - 加入辅料</p><p>利用多态技术实现本案例，提供抽象制作饮品基类，提供子类制作咖啡和茶叶</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*多态案例2 制作饮品*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AbsDrink</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*煮水冲泡倒入*/</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">boil</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">brew</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Pour</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PutSth</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*制作饮品*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">makeDrink</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">boil</span>();</span><br><span class="line"><span class="built_in">brew</span>();</span><br><span class="line"><span class="built_in">Pour</span>();</span><br><span class="line"><span class="built_in">PutSth</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*制作咖啡*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Coffee</span> :<span class="keyword">public</span> AbsDrink</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">boil</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;煮农夫三拳&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">brew</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;冲咖啡&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Pour</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;倒入&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PutSth</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;加糖&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*制作茶叶*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tea</span> :<span class="keyword">public</span> AbsDrink</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">boil</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;煮矿泉水&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">brew</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;冲茶叶&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">Pour</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;倒入&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">PutSth</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;加枸杞&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*制作饮品的函数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">doWork</span><span class="params">(AbsDrink &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a.<span class="built_in">makeDrink</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">doWork</span><span class="params">(AbsDrink *a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">a-&gt;<span class="built_in">makeDrink</span>();</span><br><span class="line"><span class="keyword">delete</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*制作咖啡*/</span></span><br><span class="line">Coffee c1;</span><br><span class="line"><span class="built_in">doWork</span>(c1);</span><br><span class="line"></span><br><span class="line"><span class="built_in">doWork</span>(<span class="keyword">new</span> Tea);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="虚析构和纯虚析构"><a href="#虚析构和纯虚析构" class="headerlink" title="虚析构和纯虚析构"></a>虚析构和纯虚析构</h4><p>多态使用时，如果 子类中有属性开辟到堆区，那么父类指针在释放时无法调用到子类的析构代码</p><p>解决方式：将父类中的析构函数改为虚析构和纯虚析构</p><p>虚析构和纯虚析构的共性：<br>可以解决父类指针释放子类对象<br>都需要具体的函数实现</p><p>虚析构和纯虚析构的区别：<br>如果是虚析构，该类属于抽象类，无法实例化对象</p><p>虚析构语法：<br>virtual ~类名（）{};<br>纯虚析构语法：<br>virtual ~类名() = 0;<br>类名：：类名（）{}</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*虚析构和纯虚析构*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">speak</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Animal</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Animal构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//virtual ~Animal()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;Animal析构函数调用&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">/*利用虚析构可以结局 父类指针释放子类对象时不干净的问题*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*纯虚析构*/</span></span><br><span class="line"><span class="keyword">virtual</span> ~<span class="built_in">Animal</span>() = <span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Animal::~<span class="built_in">Animal</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Animal纯虚析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*析构函数都需要可以实现，不然没有办法清楚该类的数据</span></span><br><span class="line"><span class="comment">万一该类有数据就无法清除 所以必须要有具体实现</span></span><br><span class="line"><span class="comment">有了纯虚析构之后这个类也属于抽象 类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> :<span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">string *cname;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; *cname&lt;&lt;<span class="string">&quot;喵&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Cat</span>(string name)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;cat struct func &quot;</span> &lt;&lt; endl;</span><br><span class="line">cname = <span class="keyword">new</span> <span class="built_in">string</span>(name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~<span class="built_in">Cat</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (cname != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;~CAT running&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">delete</span> cname;</span><br><span class="line">cname = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Animal* a1 = <span class="keyword">new</span> <span class="built_in">Cat</span>(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">a1-&gt;<span class="built_in">speak</span>();</span><br><span class="line"><span class="keyword">delete</span> a1;</span><br><span class="line"><span class="comment">/*父类指针析构的时候不会调用子类中的析构函数导致子类如果有堆区属性</span></span><br><span class="line"><span class="comment">会出现内存泄露的情况*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结</strong>：<br>虚析构和纯虚析构就是用来解决通过父类指针释放子类对象<br>如果子类中没有堆区数据，可以不写为虚构或者纯虚析构<br>拥有纯虚析构的类也属于抽象类</p><h4 id="多态案例3-电脑组装"><a href="#多态案例3-电脑组装" class="headerlink" title="多态案例3 电脑组装"></a>多态案例3 电脑组装</h4><p>案例描述：</p><p>电脑主要组成部件为CPU 显卡 内存条<br>将每个零件疯转给出抽象基类 并且提供不同的厂商生产不同的零件<br>创建电脑类提供让电脑工作的函数，并且调用每个零件工作的接口<br>测试时组装三台不同的电脑进行工作</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*电脑组装*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*抽象不同零件类*/</span></span><br><span class="line"><span class="comment">/*抽象cpu类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CPU</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*抽象的计算函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">calculate</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*抽象GPU类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GPU</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*抽象的显示函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">display</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*抽象内存类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Memory</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*抽象的计算函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">srorage</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*电脑类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Computer</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Computer</span>(CPU* c, GPU* g, Memory* m)</span><br><span class="line">&#123;</span><br><span class="line">c1 = c;</span><br><span class="line">g1 = g;</span><br><span class="line">m1 = m;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">/*提供工作的函数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">work</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*调用接口 */</span></span><br><span class="line">c1-&gt;<span class="built_in">calculate</span>();</span><br><span class="line">g1-&gt;<span class="built_in">display</span>();</span><br><span class="line">m1-&gt;<span class="built_in">srorage</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*提供析构函数释放三个电脑零件*/</span></span><br><span class="line">~<span class="built_in">Computer</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*释放*/</span></span><br><span class="line"><span class="keyword">if</span> (c1 != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> c1;</span><br><span class="line">c1 = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">if</span> (g1 != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> g1;</span><br><span class="line">g1 = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (m1 != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">delete</span> m1;</span><br><span class="line">m1 = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">/*三个零件 的指针*/</span></span><br><span class="line">CPU* c1;</span><br><span class="line">GPU* g1;</span><br><span class="line">Memory* m1;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*具体厂商*/</span></span><br><span class="line"><span class="comment">/*Intel*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IntelCPU</span> :<span class="keyword">public</span> CPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">calculate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;英特尔的cpu开始计算了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IntelGPU</span> :<span class="keyword">public</span> GPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;英特尔的显卡开始超频了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">IntelMemo</span> :<span class="keyword">public</span> Memory</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">srorage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;英特尔的内存开始RGB了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*ASUS*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ASUSCPU</span> :<span class="keyword">public</span> CPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">calculate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ROG的cpu开始计算了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ASUSGPU</span> :<span class="keyword">public</span> GPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ROG的显卡开始超频了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ASUSMemo</span> :<span class="keyword">public</span> Memory</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">srorage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ROG的内存开始RGB了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*lenovo*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">lenovoCPU</span> :<span class="keyword">public</span> CPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">calculate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;lenovo的cpu开始计算了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">lenovoGPU</span> :<span class="keyword">public</span> GPU</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;lenovo的显卡开始超频了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">lenovoMemo</span> :<span class="keyword">public</span> Memory</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">srorage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;lenovo的内存开始RGB了&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*第一台电脑*/</span></span><br><span class="line">CPU* intelCpu = <span class="keyword">new</span> IntelCPU;</span><br><span class="line">GPU* intelGpu = <span class="keyword">new</span> IntelGPU;</span><br><span class="line">Memory* intelMemo = <span class="keyword">new</span> IntelMemo;</span><br><span class="line"></span><br><span class="line">Computer* c1 = <span class="keyword">new</span> <span class="built_in">Computer</span>(intelCpu, intelGpu, intelMemo);</span><br><span class="line">c1-&gt;<span class="built_in">work</span>();</span><br><span class="line"><span class="keyword">delete</span> c1;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*第二台电脑*/</span></span><br><span class="line">CPU* cp2 = <span class="keyword">new</span> ASUSCPU;</span><br><span class="line">GPU* g2 = <span class="keyword">new</span> ASUSGPU;</span><br><span class="line">Memory* m2 = <span class="keyword">new</span> ASUSMemo;</span><br><span class="line"></span><br><span class="line">Computer* c2 = <span class="keyword">new</span> <span class="built_in">Computer</span>(cp2, g2, m2);</span><br><span class="line">c2-&gt;<span class="built_in">work</span>();</span><br><span class="line"><span class="keyword">delete</span> c2;</span><br><span class="line"><span class="comment">/*第三台电脑*/</span></span><br><span class="line">CPU* cp3 = <span class="keyword">new</span> lenovoCPU;</span><br><span class="line">GPU* g3 = <span class="keyword">new</span> lenovoGPU;</span><br><span class="line">Memory* m3 = <span class="keyword">new</span> lenovoMemo;</span><br><span class="line"></span><br><span class="line">Computer* c3 = <span class="keyword">new</span> <span class="built_in">Computer</span>(cp3, g3, m3);</span><br><span class="line">c3-&gt;<span class="built_in">work</span>();</span><br><span class="line"><span class="keyword">delete</span> c3;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="课程考试部分"><a href="#课程考试部分" class="headerlink" title="课程考试部分"></a>课程考试部分</h1><h2 id="特殊及零散知识点"><a href="#特殊及零散知识点" class="headerlink" title="特殊及零散知识点"></a>特殊及零散知识点</h2><h2 id="课后练习"><a href="#课后练习" class="headerlink" title="课后练习"></a>课后练习</h2><p>1、有如下程序</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> x)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> n)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> x, s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (x = <span class="number">0</span>; x &lt;= n; x++)</span><br><span class="line">        s += <span class="built_in">f</span>(x);</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x * x + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> a, b;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Enter an integer number: &quot;</span>;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    b = <span class="built_in">sum</span>(a);</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; <span class="string">&quot;, &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> <strong>如果输入数字3，其输出结果是：</strong><br>A、 3,12<br>B、 3,16<br>C、 3,18<br>D、 4,20</p><p> 2有以下程序：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span>, x;</span><br><span class="line">    x = <span class="built_in">f</span>(i, i + <span class="number">1</span>);</span><br><span class="line">    cout &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> c;</span><br><span class="line">    c = a;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; b)</span><br><span class="line">        c = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        c = <span class="number">-2</span>;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>**运行后的输出结果是：<br>A、 1<br>B、 0<br>C、 -1<br>D、 -2 </p><p>3、若有以下函数调用语句,在此函数调用语句中实参的个数是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fun(a+b,(y=10,y),fun(n,k,d));</span><br></pre></td></tr></table></figure><p>A、 3<br>B、 4<br>C、 5<br>D、 6 </p><p>4、以下函数调用语句中，含有的实参个数是()<br>func(rec1,rec2 +1,(rec3,rec4));</p><p>A、 3<br>B、 4<br>C、 5<br>D、 有语法错误</p><p>以下程序的输出结果是</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">fun</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123; a=<span class="number">456</span>;b=<span class="number">567</span>;c=<span class="number">678</span>;&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="type">int</span> x=<span class="number">10</span>,y=<span class="number">20</span>,z=<span class="number">30</span>;</span><br><span class="line"><span class="built_in">fun</span>(x,y,z);</span><br><span class="line">cout&lt;&lt;z&lt;&lt;”,”&lt;&lt;y&lt;&lt;”,”&lt;&lt;x&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>A、 30,20,10<br>B、 10,20,30<br>C、 456,567,678<br>D、 678,567,456</p><p>C++语言中,形参与实参之间的数据传递方式是<br>A、 只能按值传递<br>B、 只能按引用传递 </p><p>C、 既可以按值传递也可以按引用传递 </p><p>D、 以上说法都不对 </p><h2 id="编程题练习"><a href="#编程题练习" class="headerlink" title="编程题练习"></a>编程题练习</h2><h3 id="编程题：学生信息管理"><a href="#编程题：学生信息管理" class="headerlink" title="编程题：学生信息管理"></a>编程题：学生信息管理</h3><p><strong>题目描述：</strong></p><p>设计一个类 <code>Student</code>，实现学生信息的管理功能。</p><p><strong>数据成员：</strong></p><ul><li><code>name</code>：学生的姓名（字符串类型）。</li><li><code>age</code>：学生的年龄（整数类型）。</li><li><code>score</code>：学生的成绩（浮点型）。</li></ul><p><strong>静态数据成员：</strong></p><ul><li><code>total_students</code>：记录学生对象的总数量。</li></ul><p><strong>成员函数：</strong></p><ul><li>构造函数：初始化学生姓名、年龄和成绩，并更新 <code>total_students</code>。</li><li>析构函数：销毁对象时，减少 <code>total_students</code> 的数量。</li><li><code>print_info()</code>：打印学生的基本信息（姓名、年龄、成绩）。</li></ul><p><strong>静态成员函数：</strong></p><ul><li><code>get_total_students()</code>：返回当前已创建的学生对象总数量。</li></ul><p><strong>主函数要求：</strong></p><p>在主函数中：</p><ol><li>创建若干个 <code>Student</code> 对象。</li><li>调用每个学生对象的 <code>print_info()</code> 函数输出学生信息。</li><li>输出当前学生对象的总数。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">double</span> score;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> total_students;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Student</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Student</span>(string m_name, <span class="type">int</span> m_age, <span class="type">double</span> m_score)</span><br><span class="line">&#123;</span><br><span class="line">name = m_name;</span><br><span class="line">age = m_age;</span><br><span class="line">score = m_score;</span><br><span class="line"></span><br><span class="line">total_students++;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;正在调用学生类的构造函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Student</span>()</span><br><span class="line">&#123;</span><br><span class="line">total_students--;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;正在调用学生类的析构函数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">get_total_students</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> total_students;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print_info</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;学生信息&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name: &quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot;age: &quot;</span> &lt;&lt; age &lt;&lt; <span class="string">&quot;score: &quot;</span> &lt;&lt; score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> Student::total_students = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;初始学生数量: &quot; &lt;&lt; Student::get_total_students() &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//Student s1 = &#123; &quot;jack&quot;,18,90 &#125;;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;现在学生数量:&quot; &lt;&lt; s1.get_total_students() &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//s1.print_info();</span></span><br><span class="line"><span class="comment">//Student s2 = &#123; &quot;mike&quot;,17,80 &#125;;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;现在学生数量:&quot; &lt;&lt; s2.get_total_students() &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//s2.print_info();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*改成由用户输入信息*/</span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入要定义的学生数量&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*检查输入是否有效*/</span></span><br><span class="line"><span class="keyword">if</span> (n &lt; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;非法字符&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (n &gt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数量过多&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Student s1[n]; n不是常量 不能定义数组 要用动态数组</span></span><br><span class="line">Student* s1 = <span class="keyword">new</span> Student[n];</span><br><span class="line"><span class="comment">/*这就是定义一个动态数组*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">double</span> score;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第&quot;</span> &lt;&lt; i<span class="number">+1</span> &lt;&lt; <span class="string">&quot;个学生的信息&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;年龄&quot;</span>;</span><br><span class="line">cin &gt;&gt; age;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;得分&quot;</span>;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">s1[i] = &#123; name,age,score &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n所有学生信息如下&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">s1[i].<span class="built_in">print_info</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="ppt编程题例题1"><a href="#ppt编程题例题1" class="headerlink" title="ppt编程题例题1"></a>ppt编程题例题1</h4><p>定义一个复数类 Complex，重载运算符“+”，使之能用于复数的加法运算。参加运算的两个 运算量可以都是类对象，也可以其中有一个是整数，顺序任意。例如：c1+c2、i+c1 均合法。 （其中 i 是整数，c1、c2 是复数），编程实现求 2 个复数之和、整数与复数之和。 • 主函数如下： int main(){ int r1, i1, r2, i2 ; int i; cin &gt;&gt; r1 &gt;&gt; i1 &gt;&gt; r2 &gt;&gt; i2 &gt;&gt; i; Complex c1(r1, i1), c2(r2, i2), c3; c3 = c1 + c2; c3.display(); c3 = i + c1; c3.display(); return 0; }</p><h4 id="ppt编程题例题2"><a href="#ppt编程题例题2" class="headerlink" title="ppt编程题例题2"></a>ppt编程题例题2</h4><p>声明一个Shape抽象类，由其派生出Point类，再由Point类派生出Circle类， 三个类均有area( ) 和shapeName()成员。 主函数如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">( )</span></span>&#123;</span><br><span class="line"> <span class="function">Point <span class="title">point</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>)</span></span>;</span><br><span class="line"> <span class="function">Circle <span class="title">circle</span><span class="params">(<span class="number">1</span>,<span class="number">1</span>,<span class="number">5.6</span>)</span></span>; </span><br><span class="line">Shape *pt; </span><br><span class="line">pt=&amp;point; </span><br><span class="line">pt-&gt;<span class="built_in">shapeName</span>( );                               </span><br><span class="line">cout&lt;&lt; ”x=” &lt;&lt;point.<span class="built_in">getX</span>( )&lt;&lt;” , y=” &lt;&lt; point.<span class="built_in">getY</span>( ) &lt;&lt; ” , </span><br><span class="line">pointarea=”&lt;&lt;pt-&gt;<span class="built_in">area</span>( )&lt;&lt;endl;</span><br><span class="line"> pt=&amp;circle; </span><br><span class="line">pt-&gt;<span class="built_in">shapeName</span>( );                                </span><br><span class="line">cout&lt;&lt;”x=”&lt;&lt;circle.<span class="built_in">getX</span>( )&lt;&lt;” , y=”&lt;&lt;circle.<span class="built_in">getY</span>( )&lt;&lt;”, circlearea=”&lt;&lt;pt</span><br><span class="line">&gt;<span class="built_in">area</span>( ) &lt;&lt;endl;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">程序运行输出如下：</span><br><span class="line">Point:x=1,y=1, pointarea=0    </span><br><span class="line">Circle:x=1,y=1, circlearea= 98.4</span><br></pre></td></tr></table></figure><h2 id="编程题例题4-Building类（非常重要）"><a href="#编程题例题4-Building类（非常重要）" class="headerlink" title="编程题例题4-Building类（非常重要）"></a>编程题例题4-Building类（非常重要）</h2><p> • 实现一个Building建筑类， • 数据成员包括：编号id、名字name、建筑类型• 静态数据成员包括：总楼数total、下一个楼的编号next • 成员函数包括：构造函数、析构函数、打印信息函数print_info • 静态成员函数：getTotal() • 主函数、样例输入输出见下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">主函数</span><br><span class="line">int main() &#123;</span><br><span class="line">    string name, type;</span><br><span class="line">    Building* buildings[3];</span><br><span class="line">    for (int i = 0; i &lt; 3; i++) &#123;</span><br><span class="line">        cin &gt;&gt; name &gt;&gt; type;</span><br><span class="line">        buildings[i] = new Building(name, type);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; &quot;Building counts: &quot; &lt;&lt; Building::getTotal() &lt;&lt; endl;</span><br><span class="line">    for (int i = 0; i &lt; 3; i++) &#123;</span><br><span class="line">        buildings[i]-&gt;printInfo();</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> • 样例输入</span><br><span class="line">A_building teach</span><br><span class="line"> B_building live</span><br><span class="line"> C_building teach</span><br><span class="line"> • 样例输出</span><br><span class="line">Building counts: 3</span><br><span class="line"> id: 0 A_building, teach</span><br><span class="line"> id: 1 B_building, live</span><br><span class="line"> id: 2 C_building, teach</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Building</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">string name;</span><br><span class="line">string type;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> total;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> next;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Building</span>() &#123;</span><br><span class="line">total++;</span><br><span class="line">next++;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">Building</span>(string b,string c)</span><br><span class="line">&#123;</span><br><span class="line">id = next;</span><br><span class="line">name = b;</span><br><span class="line">type = c;</span><br><span class="line">total++;</span><br><span class="line">next++;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Building</span>()</span><br><span class="line">&#123;</span><br><span class="line">total--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PrintInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;id:&quot;</span> &lt;&lt; id &lt;&lt; <span class="string">&quot; , &quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; type &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> <span class="title">getTotal</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> Building::total = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> Building::next = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">string name, type;</span><br><span class="line">Building* buildings[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">cin &gt;&gt; name &gt;&gt; type;</span><br><span class="line">buildings[i] = <span class="keyword">new</span> <span class="built_in">Building</span>(name, type);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Building counts: &quot;</span> &lt;&lt; Building::<span class="built_in">getTotal</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">buildings[i]-&gt;<span class="built_in">PrintInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 爷的代码，跑起来辣</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241227082008997.png" alt="image-20241227082008997"></p><h2 id="编程题例题5-Animal（非常重要）"><a href="#编程题例题5-Animal（非常重要）" class="headerlink" title="编程题例题5 Animal（非常重要）"></a>编程题例题5 Animal（非常重要）</h2><p>请实现以下三个类：</p><p>一个动物Animal类，包含构造函数、数据成员年龄（age），成员函数getage()、纯虚函数speak()。</p><p>再由Animal类派生出两个类：猫Cat类、鸟Bird类。其中Cat类含有数据成员姓名（name）；Bird类含有数据成员种类（kind），两个派生类都有speak()函数。</p><p>主函数参照以下程序执行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">int main()&#123;</span><br><span class="line"> Animal *pa;</span><br><span class="line"> Cat ct(&quot;Garfield&quot;,2);</span><br><span class="line"> Bird bd(&quot;sparrow&quot;,1);</span><br><span class="line">string x;</span><br><span class="line">while(cin&gt;&gt;x)&#123;  </span><br><span class="line">if(x==&quot;cat&quot;)</span><br><span class="line">pa=&amp;ct;</span><br><span class="line">else if(x==&quot;bird&quot;)</span><br><span class="line">pa=&amp;bd;</span><br><span class="line">pa-&gt;speak();   </span><br><span class="line"> &#125;</span><br><span class="line"> return 0;</span><br><span class="line">&#125;</span><br><span class="line">样例输入：</span><br><span class="line">bird</span><br><span class="line">cat</span><br><span class="line">样例输出：</span><br><span class="line">zizi~I&#x27;m a sparrow ,1-year-old.</span><br><span class="line">Meow~I&#x27;m Garfield , 2-year-old.</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="built_in">Animal</span>()</span><br><span class="line">&#123;&#125;</span><br><span class="line">~<span class="built_in">Animal</span>()</span><br><span class="line">&#123;&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getage</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">speak</span><span class="params">()</span> </span>= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> :<span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string name;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;喵&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Cat</span>(string a, <span class="type">int</span> b)</span><br><span class="line">&#123;</span><br><span class="line">name = a;</span><br><span class="line">age = b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Bird</span> :<span class="keyword">public</span> Animal</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string kind;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">speak</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;鸣&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Bird</span>(string a, <span class="type">int</span> b)</span><br><span class="line">&#123;</span><br><span class="line">kind = a;</span><br><span class="line">age = b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Animal* pa = <span class="literal">nullptr</span>;</span><br><span class="line"><span class="function">Cat <span class="title">ct</span><span class="params">(<span class="string">&quot;Garfield&quot;</span>, <span class="number">2</span>)</span></span>;</span><br><span class="line"><span class="function">Bird <span class="title">bd</span><span class="params">(<span class="string">&quot;sparrow&quot;</span>, <span class="number">1</span>)</span></span>;</span><br><span class="line">string x;</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; x) &#123;</span><br><span class="line"><span class="keyword">if</span> (x == <span class="string">&quot;cat&quot;</span>) &#123;</span><br><span class="line">pa = &amp;ct;</span><br><span class="line">pa-&gt;<span class="built_in">speak</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="string">&quot;bird&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">pa = &amp;bd;</span><br><span class="line">pa-&gt;<span class="built_in">speak</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241227083958055.png" alt="image-20241227083958055"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java程序设计重新笔记及知识点梳理</title>
      <link href="/posts/d7f2c68e.html"/>
      <url>/posts/d7f2c68e.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>java这门语言，我已经记不清开了多少课，敲了多少代码了。但是现在因为生活和学习上的需要，重新开课重新学习，颇有一种朝花夕拾的感觉。代码是以前敲过的代码，知识点是以前学过的知识点，现在只是重走西游路，在复习以前知识的同时找到自己。</p><h3 id="关于笔记记录过程"><a href="#关于笔记记录过程" class="headerlink" title="关于笔记记录过程"></a>关于笔记记录过程</h3><p>按照本人复习过程来，力求逻辑上的完整性，重点放在逻辑上的连贯性，所以不会把理论和实践完全拆分开，在理论和实践的过程中推进。但是本质上还是为了期末的考试，所以会在最后加上一个做题和解析的模块。记录题目的同时方便自己查漏补缺。<br>本套笔记按照优先建立知识体系学习法，知识点的细节在学习和实战中慢慢完善。</p><h2 id="JAVA的知识背景"><a href="#JAVA的知识背景" class="headerlink" title="JAVA的知识背景"></a>JAVA的知识背景</h2><h3 id="java的诞生"><a href="#java的诞生" class="headerlink" title="java的诞生"></a>java的诞生</h3><p>JAVA由美国的SUN公司发明，诞生于1991年。<br>设计初衷是给机顶盒这类电子产品，这类产品的特点就是不同厂家生产的型号<u>拥有不同的CPU不同的操作系统。</u>（为后续跨平台性埋下伏笔）<br><strong>因此要求JAVA产生的程序是中立的</strong>（既跨平台）<br>可是命运总是爱跟人开玩笑，java发明之后这类产品直接褒姒，所以java失去了用武之地。<br>直到90年代中期互联网爆发，各式各样不同的电脑都连接到了互联网上（不同u不同系统）<br>此时急需一个跨平台语言，所以java堂堂崛起！</p><h3 id="JAVA的主要应用范围"><a href="#JAVA的主要应用范围" class="headerlink" title="JAVA的主要应用范围"></a>JAVA的主要应用范围</h3><p>服务器端软件开发：各类网站系统和管理系统</p><p>移动端开发：安卓系统、鸿蒙</p><p>科学研究、云计算、大数据</p><h3 id="JAVA的版本选择"><a href="#JAVA的版本选择" class="headerlink" title="JAVA的版本选择"></a>JAVA的版本选择</h3><p>目前企业中应用最广的还是java8.0，占据了最大的份额。  </p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003082723831.png" alt="image-20241003082723831"></p><h3 id="JVM、JRE、JDK"><a href="#JVM、JRE、JDK" class="headerlink" title="JVM、JRE、JDK"></a>JVM、JRE、JDK</h3><p><strong><u>JVM：Java Virtual Machine虚拟计算机</u></strong>，主要负责Java程序的运行<br>JAVA程序是在JAVA虚拟机上直接运行，而不是运行在操作系统上（有别于C++）<br><strong>Java的跨平台就是基于不同版本的JVM实现。</strong><br>举例：我用mac系统写了一个JAVA程序，首先我MAC系统上需要有对应的MAC版JVM，所以程序在MAC上可以跑，然后我又把程序发给Linux系统，Linux系统上安装的Linux版JVM负责运行发送过去的程序</p><p>JRE ：Java Runtime Environment, java运行时环境。<br>一张图解释<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003083520608.png" alt="image-20241003083520608"></p><p>JRE包含了JVM，JRE是java运行环境，从字面上理解，java运行的时候JVM是必须的，因为Java的run就是run在JVM上。 加上核心的库类和文件，就组成了完整的运行环境。</p><p>JDK：Java Development kit ，Java 开发工具包。提供给java开发人员使用<br>再用一张图解释<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003084432765.png" alt="image-20241003084432765"></p><p>JRE构成了运行JAVA的所有条件，JDK在此基础上加入了开发工具。</p><h2 id="写出第一个JAVA程序。"><a href="#写出第一个JAVA程序。" class="headerlink" title="写出第一个JAVA程序。"></a>写出第一个JAVA程序。</h2><h3 id="JAVA的组织结构"><a href="#JAVA的组织结构" class="headerlink" title="JAVA的组织结构"></a>JAVA的组织结构</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003090408814.png" alt="image-20241003090408814"></p><p>关于java的组织结构和缩进<br>两个花括号一对，最外层下面的花括号对应上面的p，表示中间的部分是class类的类体<br>对于main方法来说，同理下面的花括号和上面的p对齐，两个花括号中间的部分是方法的方法体。</p><h3 id="实际上java开发的步骤"><a href="#实际上java开发的步骤" class="headerlink" title="实际上java开发的步骤"></a>实际上java开发的步骤</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003090554702.png" alt="image-20241003090554702"></p><p>从上图可以知道，虚拟机运行的程序都是.class文件，编写的程序是.java文件</p><h3 id="简单的程序bug调试以及发散出的思维"><a href="#简单的程序bug调试以及发散出的思维" class="headerlink" title="简单的程序bug调试以及发散出的思维"></a>简单的程序bug调试以及发散出的思维</h3><h4 id="关于bug："><a href="#关于bug：" class="headerlink" title="关于bug："></a>关于bug：</h4><p>1、bug说明程序有部分有错，也可以说明你离成功不远了，遇到bug是非常正常的事情<br>2、bug越多程序越复杂，程序越复杂bug越多<br>3、程序员的能力可以简单由调试bug的数量来判断，调试解决的bug越多，程序员的段位越高。<br>4、写不出bug的程序员是没有写代码的程序员，多写多错才会有所成长。</p><h4 id="由bug发散的思维："><a href="#由bug发散的思维：" class="headerlink" title="由bug发散的思维："></a>由bug发散的思维：</h4><p>以下是刚才这个简单的bug我认为新手可能出现的错误以及原因<br>1、类名写错了 public class 后面的类名一定要和建的.java文件前面的名字相同，并且区分大小写<br>2、System的S打成小写，<code>System.out.print</code> 中的 <code>System</code> 是指 Java 的 <code>java.lang.System</code> 类。这个类是 Java 自带的，不需要额外导入，因为 <code>java.lang</code> 包是自动导入的。其中System是一个类，out是一个静态字段，print是一个方法（包括println）</p><h2 id="标识符、关键字、变量本质、注释"><a href="#标识符、关键字、变量本质、注释" class="headerlink" title="标识符、关键字、变量本质、注释"></a>标识符、关键字、变量本质、注释</h2><h3 id="标识符命名规则及使用规范"><a href="#标识符命名规则及使用规范" class="headerlink" title="标识符命名规则及使用规范"></a>标识符命名规则及使用规范</h3><h4 id="标识符命名规则"><a href="#标识符命名规则" class="headerlink" title="标识符命名规则"></a>标识符命名规则</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003155147873.png" alt="image-20241003155147873"></p><p>注：图中一个没有说到的细节就是可以以人民币符号￥开头，在我上课的PPT里面确实显示是可以的<br>我已经测试过了，确实是可以的。但是原理和图中说的有些出入<br>所以用一句话概括</p><p><u><strong>开头字母钱标下划线，大小写敏感，区别关键字。</strong></u></p><h4 id="关于人民币符号￥"><a href="#关于人民币符号￥" class="headerlink" title="关于人民币符号￥"></a>关于人民币符号￥</h4><p>￥符号也是作为”字母“被识别的，和中文和字母一样，因为Java用的是unicode字符集，￥和中文都满足，所以都可以作为”字母“被识别。而不是这个符号本身被识别。</p><h4 id="标识符使用规范"><a href="#标识符使用规范" class="headerlink" title="标识符使用规范"></a>标识符使用规范</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003155953266.png" alt="image-20241003155953266"></p><p>主要是引入了驼峰原则，实际情况可能乱起名的人才是占了大多数</p><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test002</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">_age</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">$age</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span> ￥age = <span class="number">4</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">age123</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"><span class="comment">//      int 123age = 6; 数字在前无法作为标识符，直接报错</span></span><br><span class="line"><span class="comment">//      int age# = 7; 标识符只能是字母数字下划线$</span></span><br><span class="line">        <span class="type">int</span> 年龄 = <span class="number">8</span>; <span class="comment">//java使用的是unicode字符集，中文也被识别成字符集中的 ”字母“</span></span><br><span class="line"><span class="comment">//      int class = 9; class 是java中的关键字，同样无法作为标识符，所以错误</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">_class</span> <span class="operator">=</span> <span class="number">10</span>; <span class="comment">//用下划线等符号标识一下就不是关键字了。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><p>JAVA关键字是JAVA语言保留给内部使用的。所以关键字也叫保留字。<br>关键字都有特殊的含义，我们不能使用关键字作为标识符。<br>下面放一下java中的50个关键字，但是背是不可能背的，这辈子不可能背的。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003163132626.png" alt="image-20241003163132626"></p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h4 id="变量的本质"><a href="#变量的本质" class="headerlink" title="变量的本质"></a>变量的本质</h4><p><u><strong>可操作的存储空间</strong></u></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003163334181.png" alt="image-20241003163334181"></p><p>用商场停车位来举例<br>商场有停车位，每个停车位有独一无二的编号，这个编号就是变量名<br>假设停车位编号A1，你停车之前A1就是一个空值，但是还是存在A1停车位<br>去停车的时候，你把车”小黑“停到一个A1，A1就有了自己的”值“ 小黑<br>所以A1 = 小黑  ，实际上是把小黑赋值给了A1。</p><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">monthlySalary</span> <span class="operator">=</span> <span class="number">3000</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">annualSalary</span> <span class="operator">=</span> monthlySalary*<span class="number">12</span>;</span><br><span class="line">System.out.println(annualSalary);</span><br><span class="line"><span class="type">double</span> <span class="variable">bonus</span> <span class="operator">=</span> <span class="number">150.123</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> annualSalary+bonus;</span><br><span class="line">System.out.println(sum);</span><br></pre></td></tr></table></figure><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><h4 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h4><p>注释不会出现在字节码文件中（.class文件）。<br>java编译器编译的时候会跳过注释语句<br>同样的程序不管写多少注释写没写注释，编译之后的大小都是一样的。</p><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003164311620.png" alt="image-20241003164311620"></p><h2 id="变量-1"><a href="#变量-1" class="headerlink" title="变量"></a>变量</h2><h3 id="八种基本数据类型"><a href="#八种基本数据类型" class="headerlink" title="八种基本数据类型"></a>八种基本数据类型</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200200688.png" alt="image-20241003200200688"></p><p>继续用上文是商场停车位来解释<br>高速休息站里的车位有不同的类型，SUV和越野车的车位大，卡车和客车的车位更大，卡车和客车的停车位可以停下小轿车和越野车，但是卡车和客车没办法停在小轿车和越野车的停车位里。<br>由此可知 ：定义数据类型就是定义停车位的大小和类型<br>JAVA是一种 <strong>强类型语言</strong> ，<strong>每个变量都必须声明数据类型</strong></p><h4 id="整型数据类型"><a href="#整型数据类型" class="headerlink" title="整型数据类型"></a>整型数据类型</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200350108.png" alt="image-20241003200350108"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200414469.png" alt="image-20241003200414469"></p><p>派生知识点：</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200502344.png" alt="image-20241003200502344"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test003</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">18</span>; <span class="comment">//默认是int类型，转换成byte没有损失，所以正常转换了</span></span><br><span class="line">        <span class="type">short</span> <span class="variable">salary</span> <span class="operator">=</span> <span class="number">25000</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">salary2</span> <span class="operator">=</span> <span class="number">50000</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">pekingPopulation</span> <span class="operator">=</span> <span class="number">30000000</span>;</span><br><span class="line"><span class="comment">//      int globalPopulation = 700000000;  表示过大是数会报错</span></span><br><span class="line"><span class="comment">//以上就是整形常量 ，默认的类型是int ，改成long类型需要后面加L/l</span></span><br><span class="line"><span class="comment">//      int globalPopulation = 7000000000L;</span></span><br><span class="line"><span class="comment">//还是报错，因为是把70亿 赋值给int，int 最大只能接受21亿的数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//关于进制，可以定义不同的进制</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="number">65</span>; <span class="comment">//十进制</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="number">065</span>; <span class="comment">//八进制 0开头</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="number">0x65</span>; <span class="comment">//十六进制 0x开头</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t4</span> <span class="operator">=</span> <span class="number">0b01000001</span>; <span class="comment">//二进制 0b开头</span></span><br><span class="line">        System.out.println(t1+<span class="string">&quot;\n&quot;</span>+t2+<span class="string">&quot;\n&quot;</span>+t3+<span class="string">&quot;\n&quot;</span>+t4);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="浮点型数据类型"><a href="#浮点型数据类型" class="headerlink" title="浮点型数据类型"></a>浮点型数据类型</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241004083854873.png" alt="image-20241004083854873"></p><p>可以看到浮点数的表数范围非常大，这是因为<strong>浮点数是不精确</strong>的  </p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241004084218697.png" alt="image-20241004084218697"></p><p><strong>需要注意：</strong><br>    指定范围内的整数是有限的，比如0-10，但是0-10之间的小数是无限的。<br>因此，有限的空间存储无限的数据，必然存在误差，所以浮点数不能精确表示。<br>如果需要进行不产生舍入误差的精确计算，就需要引入BigDecimal类。后续再说。</p><p>实操代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        <span class="comment">//测试浮点数</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">3.14</span>;</span><br><span class="line"><span class="comment">/*        float f1 = 3.14;</span></span><br><span class="line"><span class="comment"> 报错java: incompatible types:</span></span><br><span class="line"><span class="comment">possible lossy conversion from double to float</span></span><br><span class="line"><span class="comment">说明浮点常量默认是double*/</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">f1</span> <span class="operator">=</span> <span class="number">3.14F</span>;<span class="comment">//后面加大写的F，通过编译</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="number">314E-2</span>;<span class="comment">//科学计数法 xEn= x * 10^n</span></span><br><span class="line">        System.out.println(d1+<span class="string">&quot;\n&quot;</span>+f1+<span class="string">&quot;\n&quot;</span>+d2);</span><br><span class="line">        <span class="comment">//浮点数是精确的，用于比较要小心。</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">f3</span> <span class="operator">=</span> <span class="number">0.1F</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">d3</span> <span class="operator">=</span> <span class="number">0.1</span>;</span><br><span class="line">        System.out.println(f3 == d3);</span><br><span class="line">        <span class="comment">//输出false 说明不相等</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Char字符集"><a href="#Char字符集" class="headerlink" title="Char字符集"></a>Char字符集</h4><p>说到char字符，首先要注意String类型<br><strong>String是字符串不是基本数据类型！</strong>是一个类！包含在Java.lang包里面，自动引入<br>本质上是一个字符的数组</p><h5 id="ASCII字符集"><a href="#ASCII字符集" class="headerlink" title="ASCII字符集"></a>ASCII字符集</h5><p>ASCII字符集由美国国家标准协会指定，由一个字节的后7位来表示一个字符。（所以一共有2^7 128字符）<br>剩下的最高位一般为0<br>例 字母A在计算机中就是01000001 也就是65<br>ASCII字符非常简单，就是一个简单的查表的过程（如下图）<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121503946.png" alt="image-20241005121503946"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121533973.png" alt="image-20241005121533973"></p><h5 id="字符集的发展过程"><a href="#字符集的发展过程" class="headerlink" title="字符集的发展过程"></a>字符集的发展过程</h5><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121604545.png" alt="image-20241005121604545"></p><p>ISO GB BIG5，都是不同地区自己制定的标准，由于不互通，经常造成乱码问题<br>所以有了Unicode字符集，每个字符都基于了全球独一无二的编码</p><h5 id="Unicode原理"><a href="#Unicode原理" class="headerlink" title="Unicode原理"></a>Unicode原理</h5><p>unicode采用了字符集和编码分开的策略。<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121931383.png" alt="image-20241005121931383"></p><p>unicode统一采用了两个字节表示一个字符，<strong>包括英文字母</strong><br>但是因为英文占据了互联网信息的绝大部分，所以在传输过程中会造成极大的浪费<br>所以现在主流的UTF-8</p><h5 id="UTF-8"><a href="#UTF-8" class="headerlink" title="UTF-8"></a>UTF-8</h5><p>用1-6个字节来编码表示Unicode字符，西欧字符仍然是一个字节，汉字是三个字节  </p><h4 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h4><p>对照表格<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005122714547.png" alt="image-20241005122714547"></p><h4 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h4><p>布尔类型由两个常量，一个true 一个false组成<br>在内存中占1或4个字节。<br><u>和C的区别</u>：不可以使用0或非0的整数来代替t或者f<br>常用来坐判断逻辑的条件。</p><p>练习代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//测试char</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="string">&#x27;薯&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        System.out.print(c1);</span><br><span class="line">        System.out.print(c2);</span><br><span class="line"></span><br><span class="line">        <span class="type">char</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">c4</span> <span class="operator">=</span> <span class="string">&#x27;片&#x27;</span>;</span><br><span class="line">        System.out.print(c2);</span><br><span class="line">        System.out.println(c3);</span><br><span class="line">        System.out.println(c4);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//字符串不是基本数据类型，是类！</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;\n薯片&quot;</span>;</span><br><span class="line">        <span class="comment">//字符串用双引号，本质上就是一个字符数组</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">&quot;\n\n\&quot;床前\&quot;\t明\&#x27;月光\&#x27;&quot;</span>;</span><br><span class="line">        System.out.println(str2);</span><br><span class="line">        <span class="comment">//布尔类型</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在写代码&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="基本运算符"><a href="#基本运算符" class="headerlink" title="基本运算符"></a>基本运算符</h2><h3 id="运算符分类"><a href="#运算符分类" class="headerlink" title="运算符分类"></a>运算符分类</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005130928325.png" alt="image-20241005130928325"></p><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005131146127.png" alt="image-20241005131146127"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========算术运算符=========&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> a + b * <span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">c1</span> <span class="operator">=</span> (a + b) * <span class="number">4</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;c=&quot;</span> + c);</span><br><span class="line">System.out.println(<span class="string">&quot;c1=&quot;</span>+ c1);</span><br><span class="line"><span class="type">int</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">15</span>/<span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="number">15</span>%<span class="number">4</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;d1=&quot;</span>+d1 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;d2=&quot;</span>+d2);</span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = a ++;  <span class="comment">//先赋值后自增，代码从左往右执行，先把a赋值给a然后a再打印</span></span><br><span class="line">System.out.println(<span class="string">&quot;b=&quot;</span>+b +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;a=&quot;</span>+a);</span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = ++a;  <span class="comment">//先自增后赋值,--和++同理</span></span><br><span class="line">System.out.println(<span class="string">&quot;b=&quot;</span>+b +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;a=&quot;</span>+a);</span><br></pre></td></tr></table></figure><h3 id="扩展运算符"><a href="#扩展运算符" class="headerlink" title="扩展运算符"></a>扩展运算符</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005132427532.png" alt="image-20241005132427532"></p><p>运算符和表达式完全等效 没有过多的说明，用的情况也少<br>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========拓展运算符=========&quot;</span>);</span><br><span class="line"></span><br><span class="line">a = <span class="number">20</span>;</span><br><span class="line">b = <span class="number">30</span>;</span><br><span class="line">a += b;</span><br><span class="line">System.out.println(<span class="string">&quot;a=&quot;</span>+a + <span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b=&quot;</span>+b);</span><br></pre></td></tr></table></figure><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153134726.png" alt="image-20241005153134726"></p><p>关系运算符的计算结果为布尔值<br>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========关系运算符=========&quot;</span>);</span><br><span class="line"> a = <span class="number">20</span>;</span><br><span class="line"> b = <span class="number">30</span>;</span><br><span class="line"> <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> a&lt;b;</span><br><span class="line"> System.out.println(result);</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>这一块基本上用图片来说明</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153620084.png" alt="image-20241005153620084"></p><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153743620.png" alt="image-20241005153743620"><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153828335.png" alt="image-20241005153828335"></p><p> 短路与、或可以节省计算量，提前返回ture或false<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153957310.png" alt="image-20241005153957310"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005154031303.png" alt="image-20241005154031303"></p><p><strong>关于异或</strong><br>个人理解就是简单的 “不同”<br>A和B不同 结果就是true<br>A和B相同 结果就是false 因为不是 “不同”<br>注意异或的符号是^,幂运算的符号，但是表示的不是幂运算<br>java中幂运算（科学计数法）要用E来表示 比如 xEy 就是x乘10的y次方<br>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========逻辑运算符=========&quot;</span>);</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="literal">true</span> &amp; <span class="literal">false</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="literal">true</span> | <span class="literal">false</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b3</span> <span class="operator">=</span> !b2;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b4</span> <span class="operator">=</span> <span class="literal">true</span>^<span class="literal">true</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;b1=&quot;</span>+ b1 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b2=&quot;</span>+ b2 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b3=&quot;</span>+ b3 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b4=&quot;</span>+ b4 );</span><br><span class="line"><span class="comment">//短路与、短路或</span></span><br><span class="line"><span class="type">int</span> <span class="variable">w</span> <span class="operator">=</span><span class="number">3</span>/<span class="number">0</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b5</span> <span class="operator">=</span> <span class="number">3</span>&lt;<span class="number">4</span> || (<span class="number">4</span>&lt;<span class="number">4</span>/<span class="number">0</span>); <span class="comment">//这里如果是普通的或的话就会报错，使用了短路就没问题</span></span><br><span class="line">System.out.println(b5);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005182815752.png" alt="image-20241005182815752"></p><p>例如“3”的二进制：00000000 00000000 00000000 00000011<br>取反就是： 11111111 11111111 11111111 11111100<br> <strong>示例代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">&quot;==========位运算符=========&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">7</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p1</span> <span class="operator">=</span> m&amp;n;</span><br><span class="line">        System.out.println(<span class="string">&quot;p1=&quot;</span>+p1);</span><br><span class="line"><span class="comment">/* 3 = 00000000 00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="comment">*  7 = 00000000 00000000 00000000 00000000 00000111</span></span><br><span class="line"><span class="comment">* 按为与 直观 的可以看到 上下的都是1的时候才是一所以答案为</span></span><br><span class="line"><span class="comment">* 00000000 00000000 00000000 00000011 = 3*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">p2</span> <span class="operator">=</span> m | n ;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p3</span> <span class="operator">=</span> m^n ;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p4</span> <span class="operator">=</span> ~m;</span><br><span class="line">        System.out.println(<span class="string">&quot;p2=&quot;</span>+p2);</span><br><span class="line">        System.out.println(<span class="string">&quot;p3=&quot;</span>+p3);</span><br><span class="line">        System.out.println(<span class="string">&quot;p4=&quot;</span>+p4);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">m2</span> <span class="operator">=</span> <span class="number">3</span>&lt;&lt;<span class="number">3</span>;<span class="comment">//左移3位 =3*2*2*2</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">m3</span> <span class="operator">=</span> <span class="number">12</span>&gt;&gt;<span class="number">2</span>;<span class="comment">//右移2位 =12/2/2</span></span><br><span class="line">        System.out.println(<span class="string">&quot;m2=&quot;</span>+m2);</span><br><span class="line">        System.out.println(<span class="string">&quot;m3=&quot;</span>+m3);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​     </p><h3 id="字符串连接符"><a href="#字符串连接符" class="headerlink" title="字符串连接符"></a>字符串连接符</h3><p>字符串连接符指的是+在连接字符时自动变为字符串连接符，会失去+原本的加的功能<br>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========字符串连接符=========&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">r1</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">r2</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">System.out.println(r1 + r2);<span class="comment">//正常显示</span></span><br><span class="line">System.out.println(<span class="string">&quot;result is&quot;</span>+r1+r2);<span class="comment">//这里+变成字符串连接符</span></span><br></pre></td></tr></table></figure><h3 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h3><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005185520236.png" alt="image-20241005185520236"><br>条件运算符可以很方便的替代if_else语句中的某些特殊情况</p><p><strong>示例代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(&quot;==========条件运算符=========&quot;);</span><br><span class="line">int y1 = 30;</span><br><span class="line">int y2 = 40;</span><br><span class="line">int minY = y1&lt;y2?y1:y2;//返回y1y2中比较小的值</span><br></pre></td></tr></table></figure><p>此致，java中所有的基本运算符都已经学完了</p><h2 id="数据类型自动和强制转换"><a href="#数据类型自动和强制转换" class="headerlink" title="数据类型自动和强制转换"></a>数据类型自动和强制转换</h2><h3 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008080327235.png" alt="image-20241008080327235"></p><p>自动类型转换指容量小的数据类型可以自动转换为容量大的数据类型</p><p><strong>注意</strong>：这里的容量大小，指的不是<u>字节数</u>，而是<u>表数范围</u><br>例如八个字节的long可以自动转换为四个字节的float<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008080511585.png" alt="image-20241008080511585"></p><p>图中的实线表示的是无数据丢失的自动类型转换，虚线表示的是可能会有数据丢失的自动类型转换。</p><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"><span class="comment">/*测试基本数据类型的转换（自动转换，强制转换）</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test006</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//自动类型转换：表数范围小的可以自动转换为表数范围大的</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="number">3456</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">a2</span> <span class="operator">=</span> a1;</span><br><span class="line">        System.out.println(<span class="string">&quot;a1=&quot;</span>+ a1 + <span class="string">&quot;\n&quot;</span> + <span class="string">&quot;a2=&quot;</span>+ a2);</span><br><span class="line">        <span class="comment">//整型常量自动赋值给byte/short/char等类型，只要不超表数范围，则可以自动转换</span></span><br><span class="line">        <span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">121</span>;<span class="comment">//legal</span></span><br><span class="line"><span class="comment">//        byte b2 = 200;//illegal 200超过了byte的表数范围，所以不合法</span></span><br><span class="line">        <span class="comment">//算术运算符，两个操作数都是整形的时候，有一个是long，则结果为long，否则结果为int（即使是byte，结果也是int）</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="number">1234</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="number">123</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">c3</span> <span class="operator">=</span> c1 + c2;<span class="comment">//c1是long，所以整个结果全部变成long</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//算术运算符有一个操作数是double，则结果是double</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">3.14</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">d3</span> <span class="operator">=</span> d1+d2;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//强制类型转换</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">m1</span> <span class="operator">=</span> <span class="number">3.98</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m2</span> <span class="operator">=</span> (<span class="type">int</span>)m1;</span><br><span class="line">        System.out.println(<span class="string">&quot;m2=&quot;</span> + m2 );</span><br><span class="line">        <span class="comment">//转型的时候直接把小数丢掉，不会做任何的四舍五入运算。</span></span><br><span class="line"></span><br><span class="line">        <span class="type">char</span> <span class="variable">m3</span> <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m4</span> <span class="operator">=</span> m3 + <span class="number">2</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">m5</span> <span class="operator">=</span> (<span class="type">char</span>)m4;</span><br><span class="line">        System.out.println(<span class="string">&quot;m5=&quot;</span>+ m5);</span><br><span class="line">        <span class="comment">//这里体现的基本上就是ASCII编码，C往后两位是E</span></span><br><span class="line">        <span class="comment">/*当将一种类型强制转换成另一种类型</span></span><br><span class="line"><span class="comment">        * 而又超出了目标类型的表数范围</span></span><br><span class="line"><span class="comment">        * 就会被截断成一个完全不同的值</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">n2</span> <span class="operator">=</span> (<span class="type">byte</span>)n1;</span><br><span class="line">        System.out.println(<span class="string">&quot;n2=&quot;</span>+n2);</span><br><span class="line">        <span class="comment">//不要去纠结这个值的意义，这个值没有任何的意义，就是随机截的</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//溢出错误，操作比较大的数，要留意是否溢出。</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">salary</span> <span class="operator">=</span> <span class="number">1000000000</span>;<span class="comment">//10e</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">years</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line"><span class="comment">//        int total1 = salary*years; 出来了负数，说明发生了溢出。</span></span><br><span class="line"><span class="comment">//特别需要注意 溢出不会报异常，还是会正常显示。</span></span><br><span class="line"><span class="comment">/*修改方法1，把salary和year改成int类型</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> <span class="comment">//修改方法2</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">total2</span> <span class="operator">=</span> <span class="number">1L</span>*salary*years;</span><br><span class="line">        System.out.println(total2);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="通过键盘输入"><a href="#通过键盘输入" class="headerlink" title="通过键盘输入"></a>通过键盘输入</h3><h2 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h2><p>流程控制语句有两种结构<br>1、选择结构<br>2、循环结构<br>学会了程序控制语句，我们的一只脚就迈进了程序员的大门。</p><h3 id="编程的本质"><a href="#编程的本质" class="headerlink" title="编程的本质"></a>编程的本质</h3><p>编程的本质就是用代码表达现实世界的逻辑。<br>而现实世界中的任何逻辑，最终都可以拆分成选择结构和循环结构。<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008211552442.png" alt="image-20241008211552442"></p><p>选择结构代表 如果…则…  这样的逻辑<br>例：如果看到红灯 则立即停车<br>循环结构就是选择结构的基础上加上重复执行。<br>任何的编程<br>本质上都是由“变量、选择语句、循环语句”组成</p><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009081542457.png" alt="image-20241009081542457"></p><p><strong>语法结构</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009081559194.png" alt="image-20241009081559194"></p><p><strong>流程图</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009081328179.png" alt="image-20241009081328179"></p><h4 id="if-else语句"><a href="#if-else语句" class="headerlink" title="if else语句"></a>if else语句</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083036459.png" alt="image-20241009083036459"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083036459.png" alt="image-20241009083036459">   </p><h4 id="多分支结构"><a href="#多分支结构" class="headerlink" title="多分支结构"></a>多分支结构</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083313068.png" alt="image-20241009083313068"></p><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083400325.png" alt="image-20241009083400325"> </p><h4 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"><span class="comment">/*流程控制语句</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test010</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(Math.random()<span class="comment">/*这个方法返回一个0-1之间的随机数【0，1）*/</span>);</span><br><span class="line">        <span class="comment">//所以如果要返回一个0-10之间的随机数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random() * <span class="number">10</span>);</span><br><span class="line">        System.out.println(r);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果r小于5，则打印&quot;数比较小&quot;</span></span><br><span class="line">        <span class="keyword">if</span>(r&lt;<span class="number">5</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;数比较小&quot;</span>);</span><br><span class="line">        &#125;<span class="comment">//这里如果不加这个花括号其实也有效，但是限制很大，重点是只对第一句有效。</span></span><br><span class="line">        <span class="comment">//所以为了更规范的写代码，最好还是加上。</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (r&lt;<span class="number">5</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;number is small&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;number is big&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//年龄筛选器</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">if</span> (age&lt;<span class="number">15</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;childhood&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">25</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;teenage&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">45</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;adult&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">65</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;old man&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">85</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;get rest&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span>  &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;die&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="特殊练习，数字和字母的转换"><a href="#特殊练习，数字和字母的转换" class="headerlink" title="特殊练习，数字和字母的转换"></a>特殊练习，数字和字母的转换</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test011</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*随机生成字母，aeiou输出元音，其他输出辅音*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">26</span>);</span><br><span class="line">        <span class="type">char</span> <span class="variable">alpha</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        alpha = (<span class="type">char</span>)(alpha + num);</span><br><span class="line">        <span class="keyword">if</span>(alpha == <span class="string">&#x27;a&#x27;</span>|| alpha == <span class="string">&#x27;e&#x27;</span>||alpha == <span class="string">&#x27;i&#x27;</span>||alpha == <span class="string">&#x27;o&#x27;</span>||alpha == <span class="string">&#x27;u&#x27;</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;元音&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;辅音&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Switch语句"><a href="#Switch语句" class="headerlink" title="Switch语句"></a>Switch语句</h3><p> switch语句特别适合做多值判断<br><strong>代码示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*以下是一个简单的判断语句</span></span><br><span class="line"><span class="comment">        * 随机生成了一个值 判断大学几年级*/</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">grade</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (grade == <span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 1&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade ==<span class="number">2</span> ) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 2&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade == <span class="number">3</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 3&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 4&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/* 以下是上面代码的switch语句版本*/</span></span><br><span class="line">        <span class="keyword">switch</span> (grade)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 1&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//必须要每个case后面跟一个break</span></span><br><span class="line">            <span class="comment">/*break是switch的跳出语句，没有break</span></span><br><span class="line"><span class="comment">            * switch就会一直执行*/</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 2&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 3&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 4&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">12</span>);</span><br><span class="line">        <span class="keyword">if</span> (month ==<span class="number">1</span> || month ==<span class="number">2</span> || month == <span class="number">3</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;spring&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (month ==<span class="number">4</span> || month ==<span class="number">5</span> || month == <span class="number">6</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;summer&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (month ==<span class="number">7</span> || month ==<span class="number">8</span> || month == <span class="number">9</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;autumn&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;winter&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (month)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;spring&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;summer&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;autumn&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//            case 10:</span></span><br><span class="line"><span class="comment">//            case 11:</span></span><br><span class="line"><span class="comment">//            case 12:</span></span><br><span class="line"><span class="comment">//                System.out.println(&quot;winter&quot;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;winter&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="switch的表达式"><a href="#switch的表达式" class="headerlink" title="switch的表达式"></a>switch的表达式</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009185237150.png" alt="image-20241009185237150"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009185312810.png" alt="image-20241009185312810"></p><p>switch语句练习</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test002</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//阿拉伯数字转化成英语。1--》one</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">10</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">Character</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;<span class="comment">//逻辑上来讲没有问题 但是从编译器的角度考虑最好先设置一个空值</span></span><br><span class="line">        <span class="keyword">switch</span> (num)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            Character = <span class="string">&quot;zero&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                Character = <span class="string">&quot;one&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                Character = <span class="string">&quot;two&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                Character = <span class="string">&quot;three&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                Character = <span class="string">&quot;four&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                Character = <span class="string">&quot;five&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                Character = <span class="string">&quot;six&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                Character = <span class="string">&quot;seven&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                Character = <span class="string">&quot;eight&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                Character = <span class="string">&quot;nine&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Character);</span><br><span class="line">        <span class="comment">/*超市推出积分活动，积分7000以上奖励苹果，5000以上奖励香蕉，3000以上奖励牛奶*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">10000</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;用户积分：&quot;</span>+ score);</span><br><span class="line">        <span class="comment">/*简单的做法， 用if判断 这里用switch练习*/</span></span><br><span class="line">        <span class="keyword">switch</span> (score/<span class="number">1000</span>)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;apple&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;banana&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;milk&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;none&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010075241955.png" alt="image-20241010075241955"></p><p> 一切的事物，核心都是循环，操作系统的核心是一个接一个的循环<br>屏幕显示是一个循环，键盘监听、鼠标监听，都是循环<br>大到宇宙的运行，也是循环；微观粒子运行，还是循环。<br>人生，也是循环。<br>循环结构分为两个</p><p>while循环和for循环<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010075523742.png" alt="image-20241010075523742"></p><h4 id="whlie的语法结构"><a href="#whlie的语法结构" class="headerlink" title="whlie的语法结构"></a>whlie的语法结构</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010075852717.png" alt="image-20241010075852717"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"><span class="comment">/*用于测试while循环*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test003</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*打印1-100*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">101</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i=&quot;</span>+i);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//计算1+2+...+100</span></span><br><span class="line"></span><br><span class="line">        i =<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">101</span>)&#123;</span><br><span class="line">            <span class="comment">//sum = sum + i;</span></span><br><span class="line">            sum += i ;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;和：&quot;</span>+sum);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010082020653.png" alt="image-20241010082020653"></p><p>只不过for循环的语法做了一些调整<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010082722211.png" alt="image-20241010082722211"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        <span class="comment">//for循环</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">0</span> ;i1&lt;<span class="number">10</span>;i1++)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i1=&quot;</span>+i1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum02</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">8</span>;m&lt;<span class="number">10</span>;m++)&#123;</span><br><span class="line">            sum02 += m;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;sum02=&quot;</span>+ sum02);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="嵌套循环"><a href="#嵌套循环" class="headerlink" title="嵌套循环"></a>嵌套循环</h3><p> 嵌套循环就是大循环里面套着小循环<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010174619193.png" alt="image-20241010174619193"></p><p>这样可以解决更加复杂的问题</p><p>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"><span class="comment">/*测试嵌套循环*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*打印输出十行，每行输出0-9*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>; l &lt;= <span class="number">10</span>; l++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> <span class="number">0</span>; h &lt; <span class="number">10</span>; h++) &#123;</span><br><span class="line">                System.out.print(h + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*for循环内部初始化的变量只再for循环内部使用</span></span><br><span class="line"><span class="comment">         * 除了for循环就没有了*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;奇\t&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;偶\t&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*输出一个矩形*/</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>; m&lt;<span class="number">6</span> ; m++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span><span class="number">0</span>; n&lt;<span class="number">6</span>;n++)&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*输出一个直角三角形*/</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>; m&lt;<span class="number">6</span> ; m++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span><span class="number">0</span>; n&lt;m;n++)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;========&quot;</span>);</span><br><span class="line">        <span class="comment">//输出一个倒直角三角形</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;m&lt;<span class="number">6</span>;m++)&#123;  <span class="comment">//  12345</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> n=<span class="number">5</span>;n&gt;<span class="number">5</span>-m;n--)&#123;<span class="comment">//54321</span></span><br><span class="line">                System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;========&quot;</span>);</span><br><span class="line">        <span class="comment">//输出一个倒直角三角形</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;m&lt;<span class="number">6</span>;m++)&#123;  <span class="comment">//  12345</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> n=<span class="number">0</span>;n&lt;<span class="number">5</span>-m;n++)&#123;<span class="comment">//54321</span></span><br><span class="line">                System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*输出一个等腰的三角形*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (j&gt;=num-i &amp;&amp; j&lt;=num+i)&#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="break和continue语句"><a href="#break和continue语句" class="headerlink" title="break和continue语句"></a>break和continue语句</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010194440523.png" alt="image-20241010194440523"></p><p>这段多说无益，直接上代码，通过代码来了解</p><p>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"><span class="comment">/*break和continue*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test005</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//产生100以内的随机数，知道随机数为88时终止循环</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">100</span>);</span><br><span class="line">            count +=<span class="number">1</span>;</span><br><span class="line">            System.out.println(m);</span><br><span class="line">            <span class="keyword">if</span> (m == <span class="number">88</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;count:&quot;</span>+count);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*测试continue*/</span></span><br><span class="line">        <span class="comment">/*把100-150之间补不能被3整除的数输出，并且每行输出5个*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">100</span>;i&lt;<span class="number">151</span>;i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i % <span class="number">3</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(i+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                    a++;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">if</span> (a % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/*        int a = 0;</span></span><br><span class="line"><span class="comment">        for (int i = 100;i&lt;151;i++) &#123;</span></span><br><span class="line"><span class="comment">            if (i % 3 == 0) &#123;</span></span><br><span class="line"><span class="comment">                continue;</span></span><br><span class="line"><span class="comment">            &#125; else if (a %5 ==0) &#123;</span></span><br><span class="line"><span class="comment">                System.out.println();</span></span><br><span class="line"><span class="comment">            &#125; else &#123;</span></span><br><span class="line"><span class="comment">                System.out.print(i);</span></span><br><span class="line"><span class="comment">                a++;</span></span><br><span class="line"><span class="comment">            &#125; 逻辑问题 */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test006</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 抓动物小游戏</span></span><br><span class="line"><span class="comment">        * 随机出现一个动物</span></span><br><span class="line"><span class="comment">        * 如果出现老虎，则游戏结束，如果出现老鹰，就躲起来等待下一个动物出现</span></span><br><span class="line"><span class="comment">        * 如果出现小猫小狗小鸟小乌龟就可以抓住。记数抓住多少个动物</span></span><br><span class="line"><span class="comment">        * 0老鼠1老鹰2小猫3小狗4小鸟*/</span></span><br><span class="line">        <span class="comment">//while(true)</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//抓住动物的数量</span></span><br><span class="line">        <span class="keyword">for</span>(;;)&#123;<span class="comment">//和while(true)等价</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">5</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">animal</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">switch</span> (num)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    animal = <span class="string">&quot;tiger&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    animal = <span class="string">&quot;eagel&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    animal = <span class="string">&quot;pussy&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    animal = <span class="string">&quot;doggy&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                    animal = <span class="string">&quot;bird&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    animal=<span class="string">&quot;unknow animal&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (animal ==<span class="string">&quot;tiger&quot;</span>)&#123;</span><br><span class="line">                System.out.println(animal);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (animal == <span class="string">&quot;eagel&quot;</span>) &#123;</span><br><span class="line">        System.out.println(animal);</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        count++;</span><br><span class="line">        System.out.println(animal);</span><br><span class="line">        System.out.println(count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="控制语句综合练习"><a href="#控制语句综合练习" class="headerlink" title="控制语句综合练习"></a>控制语句综合练习</h3><p>练习代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test007</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*使用for循环打印a-z的26个字母*/</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">character</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line">            System.out.println(character);</span><br><span class="line">            character++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*打印九九乘法表*/</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> m=<span class="number">1</span>; m&lt;<span class="number">10</span>;m++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span><span class="number">1</span>;n&lt;=m;n++)&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> m*n;</span><br><span class="line">                System.out.print(m+<span class="string">&quot;*&quot;</span>+n+<span class="string">&quot;=&quot;</span>+k+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/*个人理解 这一类问题的关键</span></span><br><span class="line"><span class="comment">* 其实是找到m和n的关系 也就是行和列之间的关系</span></span><br><span class="line"><span class="comment">* 找到了之后就好说*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*薪水计算器</span></span><br><span class="line"><span class="comment">        * 通过键盘输入月薪，每年是几个月的薪水</span></span><br><span class="line"><span class="comment">        * 输出年薪</span></span><br><span class="line"><span class="comment">        * 输出一行字“”如果每年粘性超过十万，恭喜你超过90%的国人</span></span><br><span class="line"><span class="comment">        * 如果年薪超过20万，恭喜你超越98%的国人</span></span><br><span class="line"><span class="comment">        * 知道键盘输入数字88，则退出程序 使用break退出循环</span></span><br><span class="line"><span class="comment">        * 输入中途 键盘输入数字66，则这个用户退出计算不显示 恭喜</span></span><br><span class="line"><span class="comment">        * 直接显示 重新开始计算，然后算下一个用户的年薪*/</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">/*这是面向对象里面的内容，总之通过这个方式可以获得键盘的输入*/</span></span><br><span class="line">        System.out.println(<span class="string">&quot;annual salary calculator&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;enter your salary:&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">monthSalary</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">            System.out.println(<span class="string">&quot;Enter the number of times you are paid in a year:&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">months</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">yearSalary</span> <span class="operator">=</span> monthSalary * months;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;your annual salary:&quot;</span>+ yearSalary );</span><br><span class="line">            <span class="keyword">if</span> (yearSalary&gt;=<span class="number">200000</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;king!&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (yearSalary&gt;=<span class="number">100000</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;victory&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;enter [88] to exit,enter [66] to continue&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">commandNum</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">88</span>==commandNum)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;exit&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">66</span> == commandNum)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;please reenter&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法的定义-内存结构"><a href="#方法的定义-内存结构" class="headerlink" title="方法的定义_内存结构"></a>方法的定义_内存结构</h2><h3 id="JAVA中的方法与函数的关系"><a href="#JAVA中的方法与函数的关系" class="headerlink" title="JAVA中的方法与函数的关系"></a>JAVA中的方法与函数的关系</h3><p>在 Java 中只使用“方法”（method）这个术语，而没有“函数”（function）的概念。Java 的方法（method）与其他编程语言中的函数（function）非常相似，它们都执行特定的任务并可以返回一个值。但是由于 Java 是面向对象的语言，所有方法必须属于一个类，因此使用“方法”这个词来强调它们是类的成员。</p><h3 id="方法的定义和调用"><a href="#方法的定义和调用" class="headerlink" title="方法的定义和调用"></a>方法的定义和调用</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008085025541.png" alt="image-20241008085025541"></p><h3 id="方法的声明格式"><a href="#方法的声明格式" class="headerlink" title="方法的声明格式"></a>方法的声明格式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*多个修饰符  返回值类型 方法名（形势参数列表）&#123;</span><br><span class="line">多个java语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里修饰符就是public static,对于现在来说不是很重要，只要记住就行<br>具体的情况之后再解释</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008085259515.png" alt="image-20241008085259515"></p><p> 示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"><span class="comment">/*测试方法的定义和调用</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test007</span> &#123;</span><br><span class="line">    <span class="comment">//main方法，程序的入口</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a1</span> <span class="operator">=</span> add(<span class="number">100</span>,<span class="number">200</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a2</span> <span class="operator">=</span> add(<span class="number">200</span>,<span class="number">300</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a3</span> <span class="operator">=</span> add(<span class="number">300</span>,<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> add(num1,num2);<span class="comment">//调用时实际传递的参数，实参</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;两个数的和&quot;</span>+ sum);</span><br><span class="line"></span><br><span class="line">        printInfo();</span><br><span class="line">        printInfo();</span><br><span class="line">        printInfo();<span class="comment">//可以多次调用</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//两个数求和</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1,<span class="type">int</span> n2<span class="comment">/*形参*/</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//定义新的变量 计算</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> n1 + n2;</span><br><span class="line">        <span class="keyword">return</span> sum;<span class="comment">//返回sum</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印公司信息</span></span><br><span class="line">    <span class="comment">//这类情况比较特殊，没有形参，也没有返回值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;玲珑山车神&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="方法的修饰符"><a href="#方法的修饰符" class="headerlink" title="方法的修饰符"></a>方法的修饰符</h3><p><strong>可见性修饰符：</strong></p><p><code>public</code>—在所有类中可见，在其他包中可以用import导入。<br><code>缺省</code>—就是没有修饰符，在同一个包中的类中可见，在其他包中不能用import导入。</p><p><strong>修饰符：</strong></p><p><code>final</code>—终态类，表示该类不能被继承<br><code>abstract</code>—抽象类，不能新建对象</p><h3 id="方法调用过程"><a href="#方法调用过程" class="headerlink" title="方法调用过程"></a>方法调用过程</h3><p>首先我们有一个叫栈的空间</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008091615217.png" alt="image-20241008091615217"></p><p>最初始的情况他是空的<br>然后看上面的示例代码，当我们执行到main方法（main方法是程序的入口）的时候<br>栈空间内部出现一个关于main方法的栈帧。（stack frame）</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008091705727.png" alt="image-20241008091705727"></p><p>每一个栈帧里面都包含main方法相关的信息<br>生成一个局部变量表，把上文main方法中的局部变量都放到表内</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008092330712.png" alt="image-20241008092330712"></p><p>当程序执行到int sum的时候，这里就需要调用一个新的add方法<br>开辟一个新的栈帧</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008092431525.png" alt="image-20241008092431525"></p><p>然后生成新的局部变量表<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008092505469.png" alt="image-20241008092505469"></p><p>调用函数的时候，把需要的局部变量的值传递进来。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241011093324455.png" alt="image-20241011093324455"></p><p>当调用printInfo()的时候，也同样会生成printInfo()的栈帧。 <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241011093820561.png" alt="image-20241011093820561"></p><p>打印完了之后直接车从栈里面出去 出栈<br>同时main方法执行完毕，main方法也出栈<br>然后栈就空了，然后整个程序结束执行。</p><h2 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h2><h3 id="overload"><a href="#overload" class="headerlink" title="overload"></a>overload</h3><p>方法的重载，指的是一个类中可以定义多个方法名相同，但参数不同的方法。调用时会根据不同的参数自动匹配对应的方法。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241012075559653.png" alt="image-20241012075559653"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241012075633825.png" alt="image-20241012075633825"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D11;</span><br><span class="line"><span class="comment">/*测试方法的重载*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(add(<span class="number">100.25</span>,<span class="number">100</span>));</span><br><span class="line">        System.out.println(add(<span class="number">100</span>,<span class="number">100</span>));</span><br><span class="line">        System.out.println(add(<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>));</span><br><span class="line">        System.out.println(add(<span class="number">100</span>,<span class="number">100.25</span>));</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1 , <span class="type">int</span> n2)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> n1 + n2;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法名相同，参数类型不同，构成重载。</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">add</span><span class="params">(<span class="type">double</span> n1,<span class="type">int</span> n2)</span>&#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> n1+n2;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1 , <span class="type">int</span> n2, <span class="type">int</span> n3)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> n1 + n2 + n3;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法名相同，参数顺序不同，构成重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1 , <span class="type">double</span> n2)</span>&#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> n1+n2;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*只有返回值不同不构成重载，会报编译错误*/</span></span><br><span class="line"><span class="comment">//    public static void add(int n1 , double n2)&#123;</span></span><br><span class="line"><span class="comment">//        double sum = n1+n2;</span></span><br><span class="line"><span class="comment">//        return sum;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">/*只有形参名字不一样，同样不构成重载，因为不知道调用的是哪一个*/</span></span><br><span class="line"><span class="comment">//    public static double add(int m1 , double m2)&#123;</span></span><br><span class="line"><span class="comment">//        double sum = m1+m2;</span></span><br><span class="line"><span class="comment">//        return sum;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><h3 id="类的基本元素"><a href="#类的基本元素" class="headerlink" title="类的基本元素"></a>类的基本元素</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013202627105.png" alt="image-20241013202627105"></p><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013203352570.png" alt="image-20241013203352570"></p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>初始化就是赋一个默认值给这个成员变量，详见下面的成员变量的默认值</p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D13;</span><br><span class="line"><span class="comment">/*建立一个学生类用来表示学生的信息*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">        <span class="comment">/*静态特征（数据），作为学生需要拥有的一些元素*/</span></span><br><span class="line">        <span class="type">int</span> id;</span><br><span class="line">        String name;</span><br><span class="line">        <span class="type">int</span> score;</span><br><span class="line">        <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*方法（动态行为）（对数据的操作）*/</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123;</span><br><span class="line">            System.out.println(name + <span class="string">&quot;is Studying&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*面向对象编程的好处就是把相关的数据和对他的操作全部都放在一起</span></span><br><span class="line"><span class="comment">        * 这样去调用和定义的时候会非常方便*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="成员变量的默认值"><a href="#成员变量的默认值" class="headerlink" title="成员变量的默认值"></a>成员变量的默认值</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013203930595.png" alt="image-20241013203930595"></p><p>规则：对于数字 可以是0的都赋值为0，对于字符 赋值\u0000 本质也是0<br>对于布尔默认是 false 占一个字节 实际上也是0<br>引用类型： 从现在面向对象开始讲解的新的类型 自定义的类型 都是引用类型。<br>比如上文定义的student 就是一个引用类型</p><h3 id="类和对象的关系"><a href="#类和对象的关系" class="headerlink" title="类和对象的关系"></a>类和对象的关系</h3><p>什么是对象？万物皆对象，在JAVA中，对象就是一类数据的实例化，他们有着一种或几种的相同特征。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013204949141.png" alt="image-20241013204949141"></p><p><strong>个人理解</strong>：用之前使用的过的写过的代码举例就是，比如说定义了 一个int类型的数据a1<br>那么就是存在一个a1，这个a1就是对象，属于的类是int类<br>比如说上文建立了一个student 的类之后，我再输入下面的语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">/*在main方里面去使用上面的内容*/</span></span><br><span class="line">    <span class="type">Student</span> <span class="variable">stu1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是创建了一个新的对象 这个对象的名字叫stu1 属于student的类<br>同时他也是所谓的引用类型变量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D13;</span><br><span class="line"><span class="comment">/**/</span></span><br><span class="line"><span class="comment">public class BaizhanStudent &#123;</span></span><br><span class="line"><span class="comment">    /*定义一个练习用的student类*/</span></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String sname;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="comment">/*假设每个学生都需要一台电脑，</span></span><br><span class="line"><span class="comment">    所以这里给每个学生加了一个电脑属性*/</span></span><br><span class="line">    Computer computer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123;<span class="comment">/*这里定义方法没有写修饰符，默认是公共抽象的，具体后面展开*/</span></span><br><span class="line">        System.out.println(<span class="string">&quot;我正在使用：&quot;</span>+ computer.brand+<span class="string">&quot;学习&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*关于修饰符*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Computer</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Computer</span>();<span class="comment">//这些new的本质是构造方法，这个后期再讲。</span></span><br><span class="line">        c1.brand = <span class="string">&quot;lenovo&quot;</span>;</span><br><span class="line">        c1.price = <span class="number">6000</span>;</span><br><span class="line">        <span class="type">Computer</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Computer</span>();</span><br><span class="line">        c2.brand = <span class="string">&quot;Republic of Gamers&quot;</span>;</span><br><span class="line">        c2.price = <span class="number">9000</span>;</span><br><span class="line">        <span class="type">Computer</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Computer</span>();</span><br><span class="line">        c3.brand = <span class="string">&quot;alienware&quot;</span>;</span><br><span class="line">        c3.price = <span class="number">10000</span>;</span><br><span class="line">        <span class="comment">/*定义computer*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*定义baizhanstudent*/</span></span><br><span class="line">        <span class="type">BaizhanStudent</span> <span class="variable">stu01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BaizhanStudent</span>();</span><br><span class="line">        stu01.id = <span class="number">1001</span>;</span><br><span class="line">        stu01.sname = <span class="string">&quot;疯狂小扬哥&quot;</span>;</span><br><span class="line">        stu01.age = <span class="number">18</span>;</span><br><span class="line">        stu01.computer = c1;</span><br><span class="line"></span><br><span class="line">        stu01.study();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> Y24M10D13;</span><br><span class="line"><span class="comment">/*这是对于computer整个类的定义*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Computer</span> &#123;</span><br><span class="line">    <span class="comment">/*定义电脑类的两个属性，品牌和价格*/</span></span><br><span class="line">    String brand;</span><br><span class="line">    <span class="type">int</span> price;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上是这段的示例代码，以下来讲述底层内存中的变化<br>首先内存中有栈和堆<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072610824.png" alt="image-20241014072610824"></p><p>当我们启动哦那这个类进行运算的时候。 内存中首先会做类的加载动作。<br>双引号中的内容，会被优先做处理，在堆中生成。<br> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072706630.png" alt="image-20241014072706630"></p><p>然后开始执行main方法，生成栈帧和局部变量表，其中c1 c2 stu1这些都是引用类型（四字节）<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072844614.png" alt="image-20241014072844614"><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072954550.png" alt="image-20241014072954550"></p><p>  然后创建一个computer对象，并给他的两个属性赋默认值。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014073750285.png" alt="image-20241014073750285"></p><p>然后这个对象会有一个<u><strong>地址</strong></u> 例0x11（0x代表16进制）这个数我随便写的，无特殊含义<br>也可以用十进制写个2345 反正就是一个标记，告诉我们这个对象的地址是多少。<br>然后这里对象就建立完成了，建立完成了之后会把这个值个给c1，也就是那个0x11<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014074129456.png" alt="image-20241014074129456"></p><p>同时这也就意味着，c1这个变量指向了这个对象。<br>这个时候就可以通过c1找到这个对象。<br>这时候就可以通过C1找到这个对象。<br>因为他引用了这个对象的地址。<br>然后再看下一步c1.brand = 联想<br>假设这里给联想一个虚拟的值0x88<br>然后堆中相当于c1.brand = 0x88<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014074730375.png" alt="image-20241014074730375"></p><p>也就是c1.brand引用了0x88，然后c1.price 重新赋值=6000<br>因为c1.price是基本数据类型，基本数据类型是直接赋值给他，引用数据类型才是给地址。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014074826036.png" alt="image-20241014074826036"></p><p>c2h和stu1的定义过程也是同理，这里就不赘述了，直接上结果</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014075459180.png" alt="image-20241014075459180"></p><p>注意 堆内存中的数据不会清除。因为不确定之后是否还会要被调用</p><h3 id="构造方法constructor"><a href="#构造方法constructor" class="headerlink" title="构造方法constructor"></a>构造方法constructor</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241015084635560.png" alt="image-20241015084635560"></p><p><strong>构造器的定义</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241015085112631.png" alt="image-20241015085112631"></p><p><strong>构造器 的四个要点</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017193612797.png" alt="image-20241017193612797"></p><p><strong>示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D17;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 描述二维空间中的一个点</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Point</span> &#123;</span><br><span class="line">    <span class="type">double</span> x;</span><br><span class="line">    <span class="type">double</span> y;</span><br><span class="line"><span class="comment">//构造器一定返回point对象所以没必要再声明返回值类型</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Point</span><span class="params">(<span class="type">double</span> _x,<span class="type">double</span> _y)</span>&#123;<span class="comment">//这个就是构造器</span></span><br><span class="line">        x = _x;</span><br><span class="line">        y = _y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Point</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Point</span>(<span class="number">3.0</span>,<span class="number">4</span>);<span class="comment">/*这个后面的括号没东西因为是无参的构造器</span></span><br><span class="line"><span class="comment">        当构造器里面加入了参数之后，就变成了有参的构造器，这里就会报错*/</span></span><br><span class="line">        <span class="comment">/*在之前还没有学习构造器的时候，baizhanstudent的时候</span></span><br><span class="line"><span class="comment">        * 也可以自动newStudent类，是因为java的编译器</span></span><br><span class="line"><span class="comment">        * 自动帮助我们添加了 无参构造器。*/</span></span><br><span class="line">        System.out.println(p1.x);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*构造方法的核心作用：初始化对象*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>创建对象的步骤</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017212316194.png" alt="image-20241017212316194"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D17;</span><br><span class="line"><span class="comment">/*模拟网站的账户（用于测试构造方法发的重载*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String uname;</span><br><span class="line">    String pwd;</span><br><span class="line">    <span class="comment">/*以上是用户名和密码*/</span></span><br><span class="line">    User()&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span>  <span class="title function_">User</span><span class="params">(<span class="type">int</span> _id)</span>&#123;<span class="comment">//这里定义了一个构造器 _id是里面的形参</span></span><br><span class="line">        id = _id;<span class="comment">//这里给id赋值_id</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*同名的构造器方法，但是参数不一样*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> _id,String _uname, String _pwd)</span>&#123;</span><br><span class="line">        id = _id;</span><br><span class="line">        uname = _uname;</span><br><span class="line">        pwd = _pwd;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">u1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        <span class="type">User</span> <span class="variable">u2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1001</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">u3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1001</span>,<span class="string">&quot;13&quot;</span>，<span class="number">123456</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>构造方法的重载</strong></p><p><strong><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017212921519.png" alt="image-20241017212316194"></strong></p><h3 id="内存-栈-和-堆"><a href="#内存-栈-和-堆" class="headerlink" title="内存 栈 和 堆"></a>内存 栈 和 堆</h3><p><strong>java虚拟机完整的内存模型</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017214816354.png" alt="image-20241017214816354"></p><p><strong>简化模型</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017214937026.png" alt="image-20241017214937026"></p><p><strong>栈的特点</strong></p><p>1、栈描述的是方法执行的内部模型。每个方法被调用都会船舰一个栈帧（存储局部变量、操作数、方法出口等）<br>2、栈的存储特性是“线进后出，后进先出”<br>3、栈是由系统自动分配，速度快！栈是一个联系的内存空间！<br>其他特性：<br>4、JVM为每个线程出啊昂建一个栈，用于存放改线程执行方法的信息（实际参数、局部变量等）<br>5、栈属于线程私有，不能实现线程之间的共享</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018195717248.png" alt="image-20241018195717248"></p><p>如同上面的方法，假设main方法中调用了另一个A方法，那么在mian方法上面加入那个调用的A方法的栈帧A<br>然后假设A方法又调用了一个B方法，那么在A方法的上面再加入一个B方法的栈帧B<br>然后最后加入的栈帧B方法执行完了之后最先离开栈帧，然后A方法执行完了之后再离开栈帧，最后是main方法<br>也就是说越早调用的越晚离开。</p><p><strong>堆的特点</strong></p><p>1、堆用于存储创建好的对象和数组（数组也是对象）<br>2、堆是一个不连续的内存空间，分配灵活，速度慢！<br>3、JVM只有一个堆，被所有线程共享。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018200537074.png" alt="image-20241018200537074"></p><p><strong>方法区</strong></p><p>1、方法区是JAVA虚拟机规范，可以有不同的实现。（比如JDK8是“元数据空间”和堆结合起来<br>2、方法区实际上也是堆，只是用于存储类、常量相关的信息！<br>3、用来存放程序中永远是不变或者唯一的内容。（类信息【class对象，放射机制中会重点讲授】、静态变量、字符串常量等）<br>4、JVM只有一个方法区，被所有线程共享！</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017221125546.png" alt="image-20241017221125546"></p><p><strong>示例代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D17;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="comment">//这是定义类里面的元素</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;姓名：&quot;</span>+ name + <span class="string">&quot;\t年龄：&quot;</span>+age);</span><br><span class="line">    &#125;</span><br><span class="line">    Person(String _name,<span class="type">int</span> _age)&#123;</span><br><span class="line">        name = _name;</span><br><span class="line">        age = _age;</span><br><span class="line">    &#125;</span><br><span class="line">    Person()&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        p1.age = <span class="number">24</span>;</span><br><span class="line">        p1.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">        p1.show();</span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;李四&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        p2.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当执行这段代码的时候<br>首先 在堆内存中的方法区生成这个person 类<br>然后固定的字符串也一起存储在方法区</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018204603943.png" alt="image-20241018204603943"></p><p>然后在栈中生成main方法的栈帧<br>然后执行person p1的时候，现在栈帧中生成p1，但是此时p1的值为null，<br>然后执行后半句的时候</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018204918572.png" alt="image-20241018204918572"></p><p>执行后半句的时候，调用构造器，在堆中创建person的对象，然后把地址返回给p1（假设地址为0x23)</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018205832177.png" alt="image-20241018205832177"></p><p>此时栈帧中储存的p1 也就有了值（地址）<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018205953095.png" alt="image-20241018205953095"></p><p>然后执行接下来的语句，把堆内存中的p1对象（0x23对象）中的age赋值24，在吧name的值改为张三的地址</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018210111493.png" alt="image-20241018210111493"></p><p>然后再往下调用show方法打印<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018210440169.png" alt="image-20241018210440169"></p><p>执行完了show方法之后直接出栈<br>P2的过程也是同理</p><h3 id="this-的本质"><a href="#this-的本质" class="headerlink" title="this 的本质"></a>this 的本质</h3><p>this的本质就是”当前对象的地址！”<br>普通方法中，this总是指向调用该方法的对象<br>构造方法中，this总是只想正要初始化的对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D19;</span><br><span class="line"><span class="comment">/*this 关键字的本质</span></span><br><span class="line"><span class="comment">* this的用法测试*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String name;</span><br><span class="line">    String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> id,String name)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;正在要初始化的对象：&quot;</span>+ <span class="built_in">this</span>);<span class="comment">//这里实际输出的就是地址</span></span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="comment">// 将形参 id 的值赋给实例变量 id</span></span><br><span class="line">        <span class="comment">/*所以这个代码里面this的意思就是形参的值</span></span><br><span class="line"><span class="comment">        * 具体意思就是形参的值=什么*/</span></span><br><span class="line">        <span class="built_in">this</span>.name =name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> id,String name,String pwd)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>(id, name);<span class="comment">//调用重载的构造器，这种调用必须位于构造方法的第一行</span></span><br><span class="line">        <span class="built_in">this</span>.pwd = pwd;</span><br><span class="line">        System.out.println(<span class="string">&quot;正在要初始化的对象：&quot;</span>+ <span class="built_in">this</span>);<span class="comment">//这里实际输出的就是地址</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;要登陆：&quot;</span>+<span class="built_in">this</span>.name+<span class="string">&quot;，密码：&quot;</span>+<span class="built_in">this</span>.pwd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">u1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">101</span>,<span class="string">&quot;薯片&quot;</span>);</span><br><span class="line">        u1.login();</span><br><span class="line">        <span class="type">User</span> <span class="variable">u2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">102</span>,<span class="string">&quot;薯条&quot;</span>,<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        u2.login();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="static的本质"><a href="#static的本质" class="headerlink" title="static的本质"></a>static的本质</h3><p>static关键字核心用法：<br>用static声明的变量为静态成员变量，也成为类变量<br>1、重属于类，只有一份，在类被载入时被显式初始化。<br>2、一般用“类名.属性/方法”来调用<br>3、在static方法中不可直接访问非static的成员</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D19;</span><br><span class="line"><span class="comment">/*测试static的用法*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestStatic</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">String</span> <span class="variable">company</span> <span class="operator">=</span> <span class="string">&quot;薯片责任有限公司&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">companyId</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;类被初始化的调用&quot;</span>);</span><br><span class="line">        companyId = <span class="number">111222</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*类型: 这不是方法，也不是构造器，而是 静态初始化块（Static Initialization Block）。</span></span><br><span class="line"><span class="comment">作用: 在类被加载到 JVM 时执行。它可以用于初始化静态变量或执行一些一次性的操作。在这个例子中，它打印一条消息并将 companyId 设置为 111222。</span></span><br><span class="line"><span class="comment">特点:</span></span><br><span class="line"><span class="comment">只会在类加载时执行一次，适合进行静态变量的初始化。</span></span><br><span class="line"><span class="comment">可以包含多个静态初始化块，它们的执行顺序是从上到下的。*/</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printCompany</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公司信息&quot;</span>+company);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*在static里面不能使用非static的成员*/</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;登录&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        TestStatic.printCompany();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">TestStatic</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestStatic</span>();</span><br><span class="line">        t1.login();</span><br><span class="line">        <span class="type">TestStatic</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestStatic</span>();</span><br><span class="line">        t2.login();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231203130532.png" alt="image-20241231203130532"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;A&quot;</span>;</span><br><span class="line">    <span class="type">int</span> height;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">rest</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;rest&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    String major;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="built_in">this</span>.name+<span class="string">&quot; is study&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name,<span class="type">int</span> height,String major)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.height =height;</span><br><span class="line">        <span class="built_in">this</span>.major = major;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;jack&quot;</span>,<span class="number">180</span>,<span class="string">&quot;math&quot;</span>);</span><br><span class="line">        s1.study();</span><br><span class="line">        s1.rest();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231203837050.png" alt="image-20241231203837050"></p><h3 id="重写"><a href="#重写" class="headerlink" title="重写"></a>重写</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231203955096.png" alt="image-20241231203955030"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231204101634.png" alt="image-20241231204101634"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Vehicle</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;stop&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Horse</span> <span class="keyword">extends</span> <span class="title class_">Vehicle</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;马在跑&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;马停了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">aircraft</span> <span class="keyword">extends</span>  <span class="title class_">Vehicle</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;飞机在飞&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span>  <span class="keyword">void</span> <span class="title function_">stop</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;降落了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test002</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Horse</span> <span class="variable">h1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Horse</span>();</span><br><span class="line">        h1.run();</span><br><span class="line">        h1.stop();</span><br><span class="line"></span><br><span class="line">        <span class="type">aircraft</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">aircraft</span>();</span><br><span class="line">        a1.run();</span><br><span class="line">        a1.stop();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="final关键字"><a href="#final关键字" class="headerlink" title="final关键字"></a>final关键字</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231204454150.png" alt="image-20241231204454150"></p><p>类似c++中的const</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*final用法*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">func</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Base func()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title function_">func2</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println( <span class="string">&quot;base func02()&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Son</span> <span class="keyword">extends</span> <span class="title class_">Base</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*正常继承*/</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">func</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;sons base func&quot;</span>);</span><br><span class="line">    &#125;<span class="comment">/*正常重写*/</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    public void func2()</span></span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//        System.out.println(&quot;son base func2&quot;);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="comment">/*报错 final修饰无法重写</span></span><br><span class="line"><span class="comment">    * 整个概念类似常函数*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">class</span> <span class="title class_">Base02</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*下面的语句报错 说明用final修饰的class 不能被继承*/</span></span><br><span class="line"><span class="comment">//class Son02 extends Base02</span></span><br><span class="line"><span class="comment">//&#123;&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test003</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">maxSpeed</span> <span class="operator">=</span> <span class="number">120</span>;</span><br><span class="line">        <span class="comment">/*maxSpeed = 100;</span></span><br><span class="line"><span class="comment">        * 报错 final修饰之后变成常量 只能赋值一次*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231205821634.png" alt="image-20241231205821634"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231205853835.png" alt="image-20241231205853835"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231205910445.png" alt="image-20241231205910445"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31.a;</span><br><span class="line"><span class="comment">/*同一个包中的*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BYD</span> <span class="keyword">extends</span> <span class="title class_">Car</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">//        super.check();</span></span><br><span class="line">        <span class="comment">/*编译不通过 无法调用私有的*/</span></span><br><span class="line">        <span class="built_in">super</span>.addOil();<span class="comment">/*同一个包中可以访问default*/</span></span><br><span class="line">        <span class="built_in">super</span>.autoLighten();<span class="comment">/*子类不管怎么样都可以访问父类的*/</span></span><br><span class="line">        <span class="built_in">super</span>.run();<span class="comment">/*任何类都能访问public*/</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> Y24M12D31.a;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Car</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String brand;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span>  <span class="title function_">check</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Car_check&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">addOil</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;car.addoil&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">autoLighten</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;car.autoLighten&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println( <span class="string">&quot;car.run&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> Y24M12D31.b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Y24M12D31.a.Car;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Testla</span> <span class="keyword">extends</span> <span class="title class_">Car</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//super.addoil();/*不同的包不可以访问default*/</span></span><br><span class="line">        <span class="built_in">super</span>.autoLighten();</span><br><span class="line">        <span class="built_in">super</span>.run();<span class="comment">/*任何类都能访问public*/</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231211205096.png" alt="image-20241231211205096"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span>  String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> admin;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAdmin</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> admin;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPwd</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPwd</span><span class="params">(String pwd)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Userlogin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">u1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        u1.setId(<span class="number">100</span>);</span><br><span class="line">        System.out.println(u1.getId());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231212028332.png" alt="image-20241231212028332"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D30;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Dog</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Dog</span>(); </span><br><span class="line">        AnimalCry(d1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">AnimalCry</span><span class="params">(Animal a1)</span></span><br><span class="line">    &#123;</span><br><span class="line">        a1.shout();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> Y24M12D30;</span><br><span class="line"><span class="keyword">import</span> Y24M12D30.Animal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;动物叫&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;汪汪汪&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;喵喵&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="抽象方法和抽象类"><a href="#抽象方法和抽象类" class="headerlink" title="抽象方法和抽象类"></a>抽象方法和抽象类</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231220838611.png" alt="image-20241231220838611"></p><p>在类中的方法前面加上abstract变成抽象方法，只要有了一个抽象方法这个类必须定义成抽象类<br>类定义的前面也要加上abstract，这个类中还可以有其他不抽象的方法，然后在他的子类中<br>必须要实现他的抽象方法，否则编译不通过，或者也会当成抽象类。<br>抽象类无法实例化对象，也就是说new不出来新的这个类的对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D30;</span><br><span class="line"><span class="keyword">import</span> Y24M12D30.Animal;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*抽象类*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*抽象方法*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span>；</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sleep</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;sleep&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;汪汪汪&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span> <span class="keyword">extends</span> <span class="title class_">Animal</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">shout</span><span class="params">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;喵喵&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231221742904.png" alt="image-20241231221742904"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"><span class="comment">/*接口*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test007</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Angel</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Angel</span>();</span><br><span class="line">        <span class="comment">/*这里可以用接口类型 但是用接口类型就调用不了剩下的一个方法*/</span></span><br><span class="line">        a1.fly();</span><br><span class="line">        a1.helpOthers();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*飞行接口*/</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Volant</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line">    <span class="comment">/*public static final*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*public abstract void fly()*/</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">fly</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span>  <span class="title class_">Honest</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">helpOthers</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Angel</span> <span class="keyword">implements</span> <span class="title class_">Volant</span>,Honest</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">helpOthers</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;帮助他人&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fly</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;起飞&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数组和算法"><a href="#数组和算法" class="headerlink" title="数组和算法"></a>数组和算法</h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017181748938.png" alt="image-20241017181748938"></p><p><strong>代码示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D19;</span><br><span class="line"><span class="comment">/*测试static的用法*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestStatic</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">String</span> <span class="variable">company</span> <span class="operator">=</span> <span class="string">&quot;薯片责任有限公司&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">companyId</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;类被初始化的调用&quot;</span>);</span><br><span class="line">        companyId = <span class="number">111222</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*类型: 这不是方法，也不是构造器，而是 静态初始化块（Static Initialization Block）。</span></span><br><span class="line"><span class="comment">作用: 在类被加载到 JVM 时执行。它可以用于初始化静态变量或执行一些一次性的操作。在这个例子中，它打印一条消息并将 companyId 设置为 111222。</span></span><br><span class="line"><span class="comment">特点:</span></span><br><span class="line"><span class="comment">只会在类加载时执行一次，适合进行静态变量的初始化。</span></span><br><span class="line"><span class="comment">可以包含多个静态初始化块，它们的执行顺序是从上到下的。*/</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printCompany</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公司信息&quot;</span>+company);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*在static里面不能使用非static的成员*/</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;登录&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        TestStatic.printCompany();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">TestStatic</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestStatic</span>();</span><br><span class="line">        t1.login();</span><br><span class="line">        <span class="type">TestStatic</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestStatic</span>();</span><br><span class="line">        t2.login();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231225912123.png" alt="image-20241231225912123"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test009</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] [] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>][];</span><br><span class="line">        a[<span class="number">0</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">2</span>];</span><br><span class="line">        a[<span class="number">1</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">4</span>];</span><br><span class="line">        a[<span class="number">2</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        a[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line">        a[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">20</span>;</span><br><span class="line">        a[<span class="number">1</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>&#125;;</span><br><span class="line">        a[<span class="number">2</span>] = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[][] b = &#123;</span><br><span class="line">                &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>&#125;,</span><br><span class="line">                &#123;<span class="number">10</span>,<span class="number">20</span>&#125;,</span><br><span class="line">                &#123;<span class="number">100</span>,<span class="number">200</span>,<span class="number">300</span>,<span class="number">400</span>&#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;b.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> m=<span class="number">0</span>;m&lt;b[i].length;m++)</span><br><span class="line">            &#123;</span><br><span class="line">                System.out.print(b[i][m]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;b.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(Arrays.toString(b[i]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="package和import"><a href="#package和import" class="headerlink" title="package和import"></a>package和import</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241020225023951.png" alt="image-20241020225023951"></p><h3 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h3><p><strong>冒泡排序</strong></p><p>不断做两两比较，可以从前往后，也可以从后往前，如果从前往后，那就是不断两两比较，如果大的就放到后面，第一轮结束之后可以找出最大的。<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018085343879.png" alt="image-20241018085343879"></p><p>第一轮开始之前是这样</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018085353904.png" alt="image-20241018085353904"></p><p>第一轮结束之后就是这样</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018085432409.png" alt="image-20241018085432409"></p><p>最后的结果</p><p><strong>代码示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*测试冒泡排序*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test010</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] values = &#123;<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">9</span>,<span class="number">4</span>,<span class="number">8</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> tempo:values)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(tempo);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i&lt;values.length;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j&lt;values.length-i-<span class="number">1</span>;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">tempo</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (values[j]&gt;values[j+<span class="number">1</span>])</span><br><span class="line">                &#123;</span><br><span class="line">                    tempo = values[j];</span><br><span class="line">                    values[j] = values[j+<span class="number">1</span>];</span><br><span class="line">                    values[j+<span class="number">1</span>] = tempo;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> tempo:values)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.print(tempo);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><p>原理：每轮选择当前位置，开始找出后面的较小值与该位置交换<br>当前位置以此跟后面的比较，只要比他小的就交换</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241231233009550.png" alt="image-20241231233009550"></p><p>总共需要确定的轮数：数组长度-1<br>每一轮确定一个元素，下一轮减少一个个元素参与</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test011</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">5</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>&#125;;</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*选择排序*/</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;arr.length;i++)<span class="comment">/*比较的轮数*/</span></span><br><span class="line">        &#123;<span class="comment">/*当前元素之后的所有元素索引*/</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;arr.length;j++)</span><br><span class="line">            &#123;<span class="comment">/*arr[i]是当前需要比的元素 找的位置*/</span></span><br><span class="line">                <span class="keyword">if</span> (arr[i] &gt;arr[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">int</span> temp= arr[i];</span><br><span class="line">                    arr[i] = arr[j];</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h3><p>前提条件：数组中的数据必须是有序的<br>核心思想：每次排除一半的数据，查询数据的性能明显提高极多</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M12D31;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test012</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span>[]arr = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">300</span>,<span class="number">400</span>&#125;;</span><br><span class="line">        System.out.println(arr[binSearch(arr,<span class="number">6</span>)]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*接受数组和要查找的数据，返回的是索引*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">binSearch</span><span class="params">(<span class="type">int</span>[] arr,<span class="type">int</span> number)</span></span><br><span class="line">    &#123;<span class="comment">/*查找范围，起始索引*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">/*查找范围，结束索引*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> arr.length-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(left &lt;= right)</span><br><span class="line">        &#123;<span class="comment">/*判断条件 元素存在 可以查找*/</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (left+right)/<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (arr[mid]==number)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(arr[mid]&gt;number)</span><br><span class="line">            &#123;</span><br><span class="line">                right = mid -<span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (arr[mid]&lt;number) &#123;</span><br><span class="line">               left = mid +<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*代码走到此处 说明查找元素不存在*/</span></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="课堂题目"><a href="#课堂题目" class="headerlink" title="课堂题目"></a>课堂题目</h4>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JSP学习笔记</title>
      <link href="/posts/5f366732.html"/>
      <url>/posts/5f366732.html</url>
      
        <content type="html"><![CDATA[<h1 id="速成"><a href="#速成" class="headerlink" title="速成"></a>速成</h1><h2 id="导论"><a href="#导论" class="headerlink" title="导论"></a>导论</h2><h3 id="什么是JSP？"><a href="#什么是JSP？" class="headerlink" title="什么是JSP？"></a>什么是JSP？</h3><p>用处：创建Web应用程序。<br>对比Servlet：功能更多，如表达式语言、JSTL<br>组成：一个JSP页面由HTML和JSP标签组成。JSP页面比Servlet更容易维护，原因是设计与开发分离。<br>额外的功能：表达式语言、自定义标签。</p><h3 id="JSP相对于Servlet的优势"><a href="#JSP相对于Servlet的优势" class="headerlink" title="JSP相对于Servlet的优势"></a>JSP相对于Servlet的优势</h3><h4 id="对Servlet的扩展"><a href="#对Servlet的扩展" class="headerlink" title="对Servlet的扩展"></a>对Servlet的扩展</h4><p>JSP技术是对Servlet的扩展，在JSP中可以用Servlet的所有功能。<br>此外，JSP中还可以使用隐含对象、预定义标签、表达式语言和自定义标签等，使JSP开发更加简单</p><h4 id="易于维护"><a href="#易于维护" class="headerlink" title="易于维护"></a>易于维护</h4><p>JSP业务逻辑和表现逻辑分开，在Servlet技术中，我们将业务逻辑与表现逻辑混合在一起。</p><h4 id="快速开发，不需要重新编译和部署"><a href="#快速开发，不需要重新编译和部署" class="headerlink" title="快速开发，不需要重新编译和部署"></a>快速开发，不需要重新编译和部署</h4><p>JSP页面修改之后，不需要重新编译和部署。</p><h4 id="更少的代码"><a href="#更少的代码" class="headerlink" title="更少的代码"></a>更少的代码</h4><p>JSP中的各类标签可以减少代码</p><h3 id="JSP的目录结构"><a href="#JSP的目录结构" class="headerlink" title="JSP的目录结构"></a>JSP的目录结构</h3><p>JSP页面部署要点：把JSP页面放在<strong>WEB-INF文件夹之外</strong>的目录</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009113256330.png" alt="image-20241009113256330"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009113317360.png" alt="image-20241009113317360"></p><h3 id="JSP-API"><a href="#JSP-API" class="headerlink" title="JSP API"></a>JSP API</h3><p>JSP API由两个包组成<br>javax.servlet.jsp<br>javax.servlet.jsp.tagext<br>javax.servlet.jsp包有两个接口和类<br>接口如下<br>JspPage<br>HttpJspPage<br>类如下：<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009113650700.png" alt="image-20241009113650700"></p><h2 id="JSP脚本元素"><a href="#JSP脚本元素" class="headerlink" title="JSP脚本元素"></a>JSP脚本元素</h2><p>JSP中，可以使用脚本元素在jsp页面编写代码。<br>脚本元素提供了在jsp中插入java代码的能力。<br>一共有三种类型的脚本元素</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">脚本标签  &lt;% java source code %&gt;</span><br><span class="line">表达式标签&lt;%= statement%&gt;</span><br><span class="line">声明标签&lt;%! field or method declaration %&gt;</span><br></pre></td></tr></table></figure><h1 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h1><h2 id="JSP和JSTL"><a href="#JSP和JSTL" class="headerlink" title="JSP和JSTL"></a>JSP和JSTL</h2><h3 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241015213018750.png" alt="image-20241015213018750"></p><h2 id="JSP基础语法"><a href="#JSP基础语法" class="headerlink" title="JSP基础语法"></a>JSP基础语法</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>JSP：javaServer Page  SUN公司提供的动态网页编程技术，是java web 服务器端的动态资源<br>和html相比：html只能提供静态数据，而jsp技术允许在页面中嵌套java代码，为用户提供动态数据<br>相比servlet而言，更容易排版<br>    不管是JSP还是servlet都可以用于开发动态web资源，但是由于这两门技术各自的特点，在长期的软件实践中，人们逐渐把servlet作为web应用中的控制器组件来使用，而把JSP技术作为数据显示模板来使用<br>    其实JSP就是一个Servlet，当我们第一次访问jsp的时候，jsp引擎都会将这个jsp翻译成一个servlet，这个问价存在tomcat（源码目录）中的work目录中</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>在JSP中支持两种注释的语法操作<br>    一种是显示注释，这种注释是允许客户端看见的；另一种是隐式注释，此种注释是客户端无法看见的<br>1、显示注释语法：从HTML风格继承而来<br>2、隐藏注释语法：从JAVA风格继承；JSP自己的注释</p><p>JSP的三种注释方式</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、<span class="comment">//注释，单行注释/*多行注释*/</span></span><br><span class="line"><span class="number">2</span> &lt;!-- HTML风格的注释--&gt;</span><br><span class="line"><span class="number">3</span>、&lt;%-- JSP注释 --%&gt;</span><br></pre></td></tr></table></figure><h3 id="Scriptlet"><a href="#Scriptlet" class="headerlink" title="Scriptlet"></a>Scriptlet</h3><p>在JSP中最重要的部分就是Scriptlet（脚本小程序），所有嵌入HTML代码中的java程序。<br>在jap中一共有三种Scriptlet代码：都必须使用Scriptlet标记出来</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一种&lt;%  %&gt;: java脚本段，可以定义局部变量、编写语句</span><br><span class="line">第二种&lt;%! %&gt;:声明，可以定义全局（成员）变量、方法、类</span><br><span class="line">第三种&lt;%= %&gt;表达式，数据的一个变量或者具体内容</span><br></pre></td></tr></table></figure><p>但是现在不建议这样写（脚本和html写一起），因为这样写会导致页面耦合度非常高。</p><p>通过观察解析为java文件的代码jsp代码理解三种小脚本</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: 薯片菌</span><br><span class="line">  Date: <span class="number">16</span>/<span class="number">10</span>/<span class="number">2024</span></span><br><span class="line">  Time: 上午 <span class="number">7</span>:<span class="number">34</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;scriptlet脚本小程序&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%--</span><br><span class="line">scriptlet 脚本小程序</span><br><span class="line">jsp一共有三种scriptlet脚本小程序：</span><br><span class="line">第一种：java脚本段，可以写java代码定义局部变量编写语句</span><br><span class="line">&lt;%</span><br><span class="line"><span class="comment">//可以写java代码</span></span><br><span class="line">%&gt;</span><br><span class="line">生成的代码在servlet中的service方法体中</span><br><span class="line">第二种：声明，声明全局变量、方法、类等</span><br><span class="line">&lt;%!</span><br><span class="line"><span class="comment">//声明全局变量</span></span><br><span class="line">%&gt;</span><br><span class="line">生成的代码在servlet的类体中</span><br><span class="line">第三种：输出表达式。</span><br><span class="line">&lt;%=  数值  %&gt;</span><br><span class="line">生成的代码在servlet中的service方法体中</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%--第一种--%&gt;</span><br><span class="line">&lt;%</span><br><span class="line"><span class="comment">//定义局部变量</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;Hello  Jsp&quot;</span>;</span><br><span class="line">    <span class="comment">//输出内容到控制台</span></span><br><span class="line">    System.out.println(str);</span><br><span class="line">    <span class="comment">//输出到浏览器</span></span><br><span class="line">    out.print(str);</span><br><span class="line">    out.write(<span class="string">&quot;-----&quot;</span>);</span><br><span class="line">    <span class="comment">//输出全局变量</span></span><br><span class="line">    out.write(<span class="string">&quot;全局变量:&quot;</span>+num);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line"><span class="comment">//声明全局变量</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%--第三种--%&gt;</span><br><span class="line">&lt;%= str%&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="JSP的指令标签"><a href="#JSP的指令标签" class="headerlink" title="JSP的指令标签"></a>JSP的指令标签</h2><h3 id="include静态包含"><a href="#include静态包含" class="headerlink" title="include静态包含"></a>include静态包含</h3><p>使用包含操作，可以将一些重复的代码包含进来继续使用，从正常的页面组成来看，有时可能分为几个区域，而其中的一些区域可能是一直不需要改变的，改变的就其中的一个具体内容区域，现在又两种方法可以实现上述功能。</p><p>​    方法一：再每个JSP页面（HTML）都包含工具栏、头部信息、尾部信息、具体内容<br>​    方法二：将工具栏、头部信息、尾部信息都分成各个独立的文件，使用的时候直接导入<br>​    很明显，第二种方法比第一种更好，第一种会存在很多重复的代码，并且修改很不方便，再JSP中如果想要实现包含操作，有两种做法：静态包含、动态包含，静态包含使用include指令即可，动态包含则需要使用include动作标签。<br>示例代码</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: 薯片菌</span><br><span class="line">  Date: <span class="number">16</span>/<span class="number">10</span>/<span class="number">2024</span></span><br><span class="line">  Time: 上午 <span class="number">8</span>:<span class="number">37</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;底部内容&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;Test005-header.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;h2&gt;主体&lt;/h2&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;Test005-footer.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>静态包含就是将内容进行了直接的替换，就好比程序中定义的变量一样 是在servlet引擎转译的时，就把此文件内容包含了进去（两个文件的源代码整合到一起，全部放到_jspService方法中），所以只生成了一个servlet,所以两个页面不能有同名的变量。运行效率高一点点。耦合性较高，不够灵活。</p><h3 id="include动态包含"><a href="#include动态包含" class="headerlink" title="include动态包含"></a>include动态包含</h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ <span class="type">include</span> <span class="variable">file</span> <span class="operator">=</span> <span class="string">&quot;要包含的文件路径&quot;</span> %&gt; &lt;/jsp:include&gt;</span><br></pre></td></tr></table></figure><p>动态包含在代码的编译阶段，包含和被包含部分是两个独立的部分，只有当运行时，才会动态包含进来，</p><p><strong>注意</strong>：动态包含，中间不要加任何内容，包括空格，除非确认要使用参数，否则报错！</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: 薯片菌</span><br><span class="line">  Date: <span class="number">16</span>/<span class="number">10</span>/<span class="number">2024</span></span><br><span class="line">  Time: 上午 <span class="number">11</span>:08</span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;include动态包含&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%--include 动态包含</span><br><span class="line">格式：</span><br><span class="line">   &lt;%@ <span class="type">include</span> <span class="variable">file</span> <span class="operator">=</span> <span class="string">&quot;要包含的文件路径&quot;</span> %&gt; &lt;/jsp:include&gt;</span><br><span class="line">   特点</span><br><span class="line">   <span class="number">1</span>、动态包含相当于方法的调用</span><br><span class="line">   <span class="number">2</span>、动态包含会生成多个源码文件</span><br><span class="line">   <span class="number">3</span>、可以定义同名变量</span><br><span class="line">   <span class="number">4</span>、效率高，耦合度低</span><br><span class="line">   注：</span><br><span class="line">   当动态包含不需要传递参数时，include双标签之间不要有任何内容，包括换行和空格</span><br><span class="line"></span><br><span class="line">   使用动态包含传递参数</span><br><span class="line">   &lt;jsp:include page=<span class="string">&quot;要包含的页面的路径&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;参数名&quot;</span> value=<span class="string">&quot;参数值&quot;</span>/&gt;</span><br><span class="line">   &lt;/jsp:include&gt;</span><br><span class="line">   注：name属性不支持表达式，value属性支持表达式</span><br><span class="line">   获取参数：</span><br><span class="line">   request.getParameter(name);通过特定参数名获取参数值</span><br><span class="line">   --%&gt;</span><br><span class="line"></span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;Test005-header.jsp&quot;</span>&gt;&lt;/jsp:include&gt;</span><br><span class="line">&lt;h2&gt;主体内容&lt;/h2&gt;</span><br><span class="line">&lt;%</span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;Test005-footer.jsp&quot;</span>&gt;&lt;/jsp:include&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--动态包含传递参数--%&gt;</span><br><span class="line">&lt;%  <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;%&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;Test005-footer.jsp&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;uname&quot;</span> value=<span class="string">&quot;admin&quot;</span>/&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;msg&quot;</span> value=<span class="string">&quot;&lt;%=str%&gt;&quot;</span>/&gt;</span><br><span class="line">&lt;/jsp:include&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="JSP四大域对象"><a href="#JSP四大域对象" class="headerlink" title="JSP四大域对象"></a>JSP四大域对象</h2><h3 id="四种属性的范围"><a href="#四种属性的范围" class="headerlink" title="四种属性的范围"></a>四种属性的范围</h3><p>在JSP中提供了四种属性的保存范围，所谓的属性保存范围，指的就是一个设置的对象，可以在多少个页面中保存并可以继续使用<br>就是说属性什么时候失效</p><p>1、page范围<br>        pageCountext：只在一个页面中保存属性，跳转之后无效<br>2、request范围<br>        request：只在一次请求中保存，服务器跳转后依然有效<br>3、session范围<br>        session：在一次会话范围中，无论何种跳转都可以使用<br>4、appliction范围</p><p>​        application: 在整个服务器上保存</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241022103827184.png" alt="image-20241022103827184"></p><h3 id="验证属性范围的特点"><a href="#验证属性范围的特点" class="headerlink" title="验证属性范围的特点"></a>验证属性范围的特点</h3><p>1、page<br>本页面取得，服务器端跳转（ &lt;  jsp:forward  &gt; ）后无效<br>2、request<br>服务器跳转有效，客户端跳转无效<br>如果是客户端跳转，则想打能与发出了两次请求，那么第一次的请求将不存在了；如果希望不管是客户端还是服务器跳转，都能保存的话，就需要继续扩大范围。</p><p>在自己设计的代码中，尽可能多的使用request比较合理</p><p>3、session<br>无论客户端还是服务器端都可以取得，但是现在重新开启一个新的浏览器，则无法取得之前设置的session了，因为每一个seesion只保存在当前的浏览器中，并在相关的页面取得。<br>对于服务器而言，每一个连接到它的客户端都是一个session<br>如果想要让属性设置一次之后，不管是否是新的浏览器打开都能取得则可以使用application<br>4、application<br>所有application属性直接保存在服务器上，所有的用户（每一个session）都可以直接访问取得<br>只要通过application设置的属性，则所有的session都可以取得，表示公共的内容，但是如果此时服务器重启了，则无法取得了，因为关闭服务器后，所有属性都消失了，所以需要重新设置。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库学习笔记</title>
      <link href="/posts/769d2f87.html"/>
      <url>/posts/769d2f87.html</url>
      
        <content type="html"><![CDATA[<h1 id="数据库（基于SQL-Server）"><a href="#数据库（基于SQL-Server）" class="headerlink" title="数据库（基于SQL Server）"></a>数据库（基于SQL Server）</h1><h2 id="T-SQL语句的代码"><a href="#T-SQL语句的代码" class="headerlink" title="T-SQL语句的代码"></a>T-SQL语句的代码</h2><p>所有的基础部分我直接用单独一个sql文件讲完，追求最高效率<br>包括数据库的创建、文件更改、文件增加、表的增删改查、数据的增删改查、连接、子查询、视图、存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br><span class="line">1530</span><br><span class="line">1531</span><br><span class="line">1532</span><br><span class="line">1533</span><br><span class="line">1534</span><br><span class="line">1535</span><br><span class="line">1536</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*验证数据库是否存在，存在的话直接删除*/</span></span><br><span class="line">if <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sys.databases <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;DBTEST&#x27;</span>)</span><br><span class="line"><span class="keyword">drop</span> database DBTEST</span><br><span class="line"><span class="comment">--创建数据库</span></span><br><span class="line"><span class="keyword">create</span> database DBTEST</span><br><span class="line"><span class="comment">--创建数据库 数据库的名称为DBTest</span></span><br><span class="line"><span class="keyword">on</span>(<span class="comment">/*on 的意思就是创建数据文件，然后后面跟着的是括号</span></span><br><span class="line"><span class="comment">这个括号就是用来描述这个数据文件的，也就是写一些数据文件</span></span><br><span class="line"><span class="comment">基本的内容*/</span></span><br><span class="line">name <span class="operator">=</span> <span class="string">&#x27;DBTEST&#x27;</span>,</span><br><span class="line"><span class="comment">/*name就是逻辑名称，就是在数据库里面的代号</span></span><br><span class="line"><span class="comment">习惯上主数据文件的文件逻辑名称和数据库的名称一样</span></span><br><span class="line"><span class="comment">然后日志文件一般就是加上log</span></span><br><span class="line"><span class="comment">然后每两个描述句式之间要用逗号隔开*/</span></span><br><span class="line">filename <span class="operator">=</span> <span class="string">&#x27;D:\SqlS\SelfStudy\DBTest\DBTEST.mdf&#x27;</span>,</span><br><span class="line"><span class="comment">/*物理路径，就是实际上在计算机内的文件的文件路径和文件名</span></span><br><span class="line"><span class="comment">设置物理路径的时候不要忘记加上.mdf或者.ldf的后缀*/</span></span><br><span class="line">size <span class="operator">=</span> <span class="number">5</span>mb,<span class="comment">--设置初始大小</span></span><br><span class="line">filegrowth <span class="operator">=</span> <span class="number">2</span>mb,</span><br><span class="line"><span class="comment">--filegrowth = 10%</span></span><br><span class="line"><span class="comment">/*文件的增长方式，文件的增长方式可以写大小</span></span><br><span class="line"><span class="comment">也可以写百分比。*/</span></span><br><span class="line">maxsize <span class="operator">=</span> <span class="number">10</span>mb <span class="comment">/*最大大小，可以不设置*/</span></span><br><span class="line">)</span><br><span class="line">log <span class="keyword">on</span>(</span><br><span class="line"><span class="comment">/*同理 log on 用于编写日志文件</span></span><br><span class="line"><span class="comment">log内的描述方式和数据文件相同*/</span></span><br><span class="line">name <span class="operator">=</span> <span class="string">&#x27;DBTEST_log&#x27;</span>,</span><br><span class="line">filename <span class="operator">=</span>  <span class="string">&#x27;D:\SqlS\SelfStudy\DBTest\DBTEST_log.ldf&#x27;</span>,</span><br><span class="line">size <span class="operator">=</span> <span class="number">5</span>mb,</span><br><span class="line">filegrowth <span class="operator">=</span> <span class="number">2</span>mb</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建数据库简写</span></span><br><span class="line"><span class="keyword">create</span> database DBTEST1</span><br><span class="line"><span class="comment">--如果按照上述见到那的方法创建数据库，所有设置都采用默认值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*==========以上为创建数据库相关语句============*/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*==========创建数据表============*/</span></span><br><span class="line"></span><br><span class="line">use DBTEST</span><br><span class="line"><span class="comment">/*正常的新建咨询会默认使用master的系统表</span></span><br><span class="line"><span class="comment">如果这个时候直接建表会建到master里面去</span></span><br><span class="line"><span class="comment">所以这里可以在左上角店家更改使用的数据库</span></span><br><span class="line"><span class="comment">也可以直接使用useDBTEST语句*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除表*/</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> Department</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> People</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> [Rank]</span><br><span class="line"><span class="comment">/*删除表中的数据（表中的列）*/</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> Department;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> People;</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> [Rank];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建表的基本语法</span></span><br><span class="line"><span class="comment">create table 表名</span></span><br><span class="line"><span class="comment">（字段名1 数据类型，</span></span><br><span class="line"><span class="comment">字段名2，数据类型）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">if <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sys.objects <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;Department&#x27;</span><span class="keyword">and</span> type <span class="operator">=</span> <span class="string">&#x27;U&#x27;</span>)</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> Department</span><br><span class="line"><span class="comment">/*建表（部门，职级，员工）*/</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Department</span><br><span class="line">( </span><br><span class="line">DepartmentId <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line"><span class="comment">/*部门编号</span></span><br><span class="line"><span class="comment">一般的表格都会加一个单独的编号</span></span><br><span class="line"><span class="comment">一方面防止名称有重复的</span></span><br><span class="line"><span class="comment">第二方面可以作为主键标识</span></span><br><span class="line"><span class="comment">primary key 是设置主键</span></span><br><span class="line"><span class="comment">作为唯一标识</span></span><br><span class="line"><span class="comment">identity(1,1)自动增长，初始值1，增长步长为1*/</span></span><br><span class="line">DepartmentName nVarchar(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>, </span><br><span class="line"><span class="comment">/*部门的名称 字符串类型</span></span><br><span class="line"><span class="comment"> 其中有varchar和nvarchar</span></span><br><span class="line"><span class="comment"> 其中varchar（50）代表50个字符</span></span><br><span class="line"><span class="comment"> 前面加上n变成nvarchar代表50个中文字符或者50个英文字符</span></span><br><span class="line"><span class="comment"> 其中varchar代表可变长度，如果你输入的是一个字符</span></span><br><span class="line"><span class="comment"> 那么这个varchar（50）就是一个字符的长度和大小</span></span><br><span class="line"><span class="comment"> 但是如果是char类型的话就是定长，不管你输入了多少字符 </span></span><br><span class="line"><span class="comment"> 他都是50个字符的大小，所以用varchar大部分情况下更加的 灵活</span></span><br><span class="line"><span class="comment"> 而且可以节省资源*/</span></span><br><span class="line"> <span class="comment">/*部门描述*/</span></span><br><span class="line"> DepartmentRemark text</span><br><span class="line"> <span class="comment">/*text长文本,*/</span></span><br><span class="line">)</span><br><span class="line"><span class="comment">--建立职级表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> [Rank] </span><br><span class="line"><span class="comment">/*这里 Rank是sql中的关键字  所以需要用[]*/</span></span><br><span class="line">(</span><br><span class="line">RankId <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">RankName nvarchar(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">RankRemark text</span><br><span class="line"><span class="comment">/*分别床架按了职级的编号</span></span><br><span class="line"><span class="comment">职级的名称、职级的描述*/</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--建立员工表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> People</span><br><span class="line">(</span><br><span class="line">PeopleId <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line">PeopleName  nvarchar(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">PeopleGender nvarchar(<span class="number">1</span>) <span class="keyword">default</span>(<span class="string">&#x27;男&#x27;</span>)<span class="keyword">check</span>(PeoPleGender <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span><span class="keyword">or</span> PeoPleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>)<span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">/*这里通过check加了一个约束，设置性别的值只能为男或者女</span></span><br><span class="line"><span class="comment">同时还添加了一个默认值，让这个性别默认为男*/</span></span><br><span class="line">PeopleBirth datetime <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">PeopleSalary  <span class="type">decimal</span>(<span class="number">12</span>,<span class="number">2</span>) <span class="keyword">check</span>(Peoplesalary <span class="operator">&gt;=</span> <span class="number">1000</span> <span class="keyword">and</span> Peoplesalary <span class="operator">&lt;=</span> <span class="number">1000000</span>)<span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">PeoplePhone <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">unique</span> <span class="keyword">not</span> <span class="keyword">null</span>, </span><br><span class="line"><span class="comment">/*unique关键字用于创建唯一约束，首先他的本质也是一个约束</span></span><br><span class="line"><span class="comment">然后唯一约束就是爆炸该列中所以的值都是唯一的，不能有重复的值*/</span></span><br><span class="line">PeopleAddress <span class="type">varchar</span>(<span class="number">100</span>),</span><br><span class="line">PeopleAddTime smalldatetime <span class="keyword">default</span>(getdate()),  <span class="comment">--添加时间</span></span><br><span class="line"><span class="comment">/*这里用了一个getdate，是系统默认的函数，这个函数可以获取当前的时间</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*添加外键*/</span></span><br><span class="line">DepartmentId <span class="type">int</span> <span class="keyword">references</span> Department(DepartmentId) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">RankId <span class="type">int</span> <span class="keyword">references</span> [Rank](RankId) <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="comment">/*添加这个reference字段就是添加了外键</span></span><br><span class="line"><span class="comment">然后添加了reference字段之后他就会自动去</span></span><br><span class="line"><span class="comment">外键对应的表中去寻找，如果找不到对应的值</span></span><br><span class="line"><span class="comment">他就不会添加</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*关于getdate（）</span></span><br><span class="line"><span class="comment">在sqls中 getdate()是一个内置函数，用于获取对当前的系统日期和时间。它返回一个datetime类型的值，</span></span><br><span class="line"><span class="comment">表示当前的日期和时间</span></span><br><span class="line"><span class="comment">基本用法</span></span><br><span class="line"><span class="comment">select getdate() as currentdatetime</span></span><br><span class="line"><span class="comment">用于插入数据</span></span><br><span class="line"><span class="comment">在插入数据时，你可以使用getdate（）来记录当前的时间。例如</span></span><br><span class="line"><span class="comment">INSERT INTO Orders (OrderDate) VALUES (GETDATE());</span></span><br><span class="line"><span class="comment">***与其他函数结合使用</span></span><br><span class="line"><span class="comment">很多时候需要我们得到当前的年份月份，所以我们可以用getdate（）提取年月日</span></span><br><span class="line"><span class="comment">语法</span></span><br><span class="line"><span class="comment">select year(getdate()) as currentyear</span></span><br><span class="line"><span class="comment">select month(getdate()) as currentmonth</span></span><br><span class="line"><span class="comment">select day(getdate()) as currentday</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*关于日期</span></span><br><span class="line"><span class="comment">datetime:</span></span><br><span class="line"><span class="comment">范围：1753-9999 年。</span></span><br><span class="line"><span class="comment">精度：可以存储的时间精度为 3.33 毫秒。</span></span><br><span class="line"><span class="comment">存储大小：8 字节。</span></span><br><span class="line"><span class="comment">适用场景：适合需要高精度和大范围的日期时间。</span></span><br><span class="line"><span class="comment">smalldatetime:</span></span><br><span class="line"><span class="comment">范围：1900-2079 年。</span></span><br><span class="line"><span class="comment">精度：可以存储的时间精度为 1 分钟。</span></span><br><span class="line"><span class="comment">存储大小：4 字节。</span></span><br><span class="line"><span class="comment">适用场景：适合对时间精度要求不高且范围较小的应用。</span></span><br><span class="line"><span class="comment">date:</span></span><br><span class="line"><span class="comment">范围：0001-9999 年（不包括时间部分）。</span></span><br><span class="line"><span class="comment">精度：只存储日期，不存储时间。</span></span><br><span class="line"><span class="comment">存储大小：3 字节。</span></span><br><span class="line"><span class="comment">适用场景：适合仅需要存储日期信息的场合，不需要时间。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 关于refence</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">在sqls中，reference关键字用于定义外键约束，它用于在一个表中建立对另一个表的引用。</span></span><br><span class="line"><span class="comment">外键约束的作用是确保了数字的一致性和完整性，它运行的逻辑就是你通过这个关键字添加的值</span></span><br><span class="line"><span class="comment">本质上是一种引用，你去引用别的表里面的数值，所以如果你通过这个关键字去添加列，再你输入值的时候</span></span><br><span class="line"><span class="comment">他就回去查找这个值在主表中是否存在，如果不存在就不会添加，也就是说没办法引用主表中不存在的数据*/</span></span><br><span class="line"></span><br><span class="line">use DBTEST</span><br><span class="line"><span class="comment">/*===表结构和约束的维护=====*/</span></span><br><span class="line"><span class="comment">/*基础知识 sqls中的几种约束</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">主键约束（PRIMARY KEY）：</span></span><br><span class="line"><span class="comment">确保表中每一行的唯一性。</span></span><br><span class="line"><span class="comment">不允许为空（NULL），每个主键值必须唯一。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">外键约束（FOREIGN KEY）：</span></span><br><span class="line"><span class="comment">用于在两个表之间建立关系。</span></span><br><span class="line"><span class="comment">确保外键列的值必须在参考表的主键或唯一键中存在，以保持数据的完整性。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">唯一约束（UNIQUE）：</span></span><br><span class="line"><span class="comment">确保列中的所有值都是唯一的，但允许空值（NULL）。</span></span><br><span class="line"><span class="comment">可以应用于一个或多个列的组合。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">非空约束（NOT NULL）：</span></span><br><span class="line"><span class="comment">确保列不能包含空值（NULL），强制要求输入数据。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">检查约束（CHECK）：</span></span><br><span class="line"><span class="comment">限制列中允许的值范围，例如，可以要求某个年龄列的值必须大于 0。</span></span><br><span class="line"><span class="comment">可以使用表达式来定义条件。</span></span><br><span class="line"><span class="comment">默认约束（DEFAULT）：</span></span><br><span class="line"><span class="comment">为列设置一个默认值，当插入新行时如果未提供该列的值，将使用默认值。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*修改表结构*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*下面三个操作本质上都是在修改原有的表格的结构</span></span><br><span class="line"><span class="comment">所以都要用alter table起手</span></span><br><span class="line"><span class="comment">比如添加就是alter table 表名  add 新列名 数据类型</span></span><br><span class="line"><span class="comment">删除列的语法就是</span></span><br><span class="line"><span class="comment">alter table 表名 drop column 列名</span></span><br><span class="line"><span class="comment">drop 就不需要类型了 但是要加一个关键字</span></span><br><span class="line"><span class="comment">column 就是列的意思</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">修改列的语法</span></span><br><span class="line"><span class="comment">alter table 表名 alter column  列名 数据类型 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 添加列*/</span></span><br><span class="line"> <span class="comment">/*假设现在给员工表添加一列邮箱*/</span></span><br><span class="line"> <span class="keyword">alter</span> <span class="keyword">table</span> People <span class="keyword">add</span> PeopleMail <span class="type">varchar</span>(<span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除列*/</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> People <span class="keyword">drop</span> <span class="keyword">column</span> PeopleMail</span><br><span class="line"></span><br><span class="line"><span class="comment">/*3、修改列*/</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> People <span class="keyword">alter</span> <span class="keyword">column</span> PeopleAddress <span class="type">varchar</span>(<span class="number">40</span>)</span><br><span class="line"><span class="comment">/*这种情况下 这种语句非常有可能报错</span></span><br><span class="line"><span class="comment">因为现在表中是空的没有数据，但是实际上如果有人输入了一个</span></span><br><span class="line"><span class="comment">超过40个字符的地址，那么这里执行语句的时候就会报错。*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*维护约束*/</span></span><br><span class="line"><span class="comment">--删除约束</span></span><br><span class="line"><span class="comment">/*删除约束他的本质也是要去修改表</span></span><br><span class="line"><span class="comment">所以这里也是要用alter table起手</span></span><br><span class="line"><span class="comment">语法 alter table 表名 drop constraint 约束名*/</span></span><br><span class="line"><span class="comment">--删除月薪的约束</span></span><br><span class="line"><span class="keyword">alter</span>  <span class="keyword">table</span> People <span class="keyword">drop</span> <span class="keyword">constraint</span> CK__People__PeopleSa__5165187F</span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加约束</span></span><br><span class="line"><span class="comment">添加check约束的语法</span></span><br><span class="line"><span class="comment">check约束是用来判断输入的值是不是我们想要的值</span></span><br><span class="line"><span class="comment">添加工资字段约束，工资必须在1000-一百万之间*/</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> PeoPle <span class="keyword">add</span> <span class="keyword">constraint</span> Ck_PeoPle_Salary </span><br><span class="line"><span class="keyword">check</span>(Peoplesalary <span class="operator">&gt;=</span> <span class="number">1000</span> <span class="keyword">and</span> Peoplesalary <span class="operator">&lt;=</span><span class="number">1000000</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加主键约束的语法</span></span><br><span class="line"><span class="comment">alter table 表名 add constraint 约束名 primary key(列名)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">添加唯一约束的语法</span></span><br><span class="line"><span class="comment">alter table 表名 add constraint 约束名 unique(列名)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">添加默认值约束</span></span><br><span class="line"><span class="comment">alter table 表名 add constraint 约束名 default 默认值 for 列名</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">添加外键约束</span></span><br><span class="line"><span class="comment">alter table 表名 add constraint 约束名 foreign fey (列名)</span></span><br><span class="line"><span class="comment">reference 关联表名（列名（主键））</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*===插入数据=====*/</span></span><br><span class="line"><span class="comment">--向部门表插入数据</span></span><br><span class="line"><span class="comment">/*insert into 表名 (列1,列2)</span></span><br><span class="line"><span class="comment">values(&#x27;值1&#x27;,&#x27;值2&#x27;)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Department(DepartmentName,DepartmentRemark)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;市场部&#x27;</span>,<span class="string">&#x27;...&#x27;</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Department(DepartmentName,DepartmentRemark)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;软件部&#x27;</span>,<span class="string">&#x27;...&#x27;</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Department(DepartmentName,DepartmentRemark)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;企划部&#x27;</span>,<span class="string">&#x27;...&#x27;</span>) </span><br><span class="line"><span class="comment">/*关于数据的插入还有一种简写*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Department</span><br><span class="line"><span class="keyword">values</span> (<span class="string">&#x27;硬件部&#x27;</span>,<span class="string">&#x27;...&#x27;</span>)</span><br><span class="line"><span class="comment">/*但是这种简写一般不会用，因为这种简写有非常大的缺点</span></span><br><span class="line"><span class="comment">就是简写是根据默认的字段顺序写的，所以可能会遇到插入的值</span></span><br><span class="line"><span class="comment">插入错了列</span></span><br><span class="line"><span class="comment">比如上面的部门名和部门描述的值插入反了的情况</span></span><br><span class="line"><span class="comment">所以一般情况下不会用这种简写*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*一次性插入多行数据*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Department(DepartmentName,DepartmentRemark)</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;测试部&#x27;</span>,<span class="string">&#x27;...&#x27;</span><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span><span class="string">&#x27;实施部&#x27;</span>,<span class="string">&#x27;...&#x27;</span><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span><span class="string">&#x27;产品部&#x27;</span>,<span class="string">&#x27;...&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*向职级表插入数据*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> [Rank](RankName,RankRemark)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;初级&#x27;</span>,<span class="string">&#x27;...&#x27;</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> [Rank](RankName,RankRemark)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;中级&#x27;</span>,<span class="string">&#x27;...&#x27;</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> [Rank](RankName,RankRemark)</span><br><span class="line"><span class="keyword">values</span>(<span class="string">&#x27;高级&#x27;</span>,<span class="string">&#x27;...&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*向员工表中插入数据*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="string">&#x27;刘备&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1984-7-9&#x27;</span>,<span class="number">20000</span>,<span class="string">&#x27;13554785452&#x27;</span>,<span class="string">&#x27;成都&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;孙尚香&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;1987-7-9&#x27;</span>,<span class="number">15000</span>,<span class="string">&#x27;13256854578&#x27;</span>,<span class="string">&#x27;荆州&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;关羽&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1988-8-8&#x27;</span>,<span class="number">12000</span>,<span class="string">&#x27;13985745871&#x27;</span>,<span class="string">&#x27;荆州&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;张飞&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1990-8-8&#x27;</span>,<span class="number">8000</span>,<span class="string">&#x27;13535987412&#x27;</span>,<span class="string">&#x27;宜昌&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;赵云&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1989-8-8&#x27;</span>,<span class="number">9000</span>,<span class="string">&#x27;13845789568&#x27;</span>,<span class="string">&#x27;宜昌&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="number">3</span>,<span class="string">&#x27;马超&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1995-4-8&#x27;</span>,<span class="number">9500</span>,<span class="string">&#x27;13878562568&#x27;</span>,<span class="string">&#x27;香港&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="number">2</span>,<span class="string">&#x27;黄盖&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1989-4-20&#x27;</span>,<span class="number">8500</span>,<span class="string">&#x27;13335457412&#x27;</span>,<span class="string">&#x27;武汉&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="number">1</span>,<span class="string">&#x27;貂蝉&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;1989-4-20&#x27;</span>,<span class="number">6500</span>,<span class="string">&#x27;13437100050&#x27;</span>,<span class="string">&#x27;武汉&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">2</span>,<span class="number">2</span>,<span class="string">&#x27;曹操&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1987-12-20&#x27;</span>,<span class="number">25000</span>,<span class="string">&#x27;13889562354&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;许褚&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1981-11-11&#x27;</span>,<span class="number">9000</span>,<span class="string">&#x27;13385299632&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;典韦&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1978-1-13&#x27;</span>,<span class="number">8000</span>,<span class="string">&#x27;1347854263&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;曹仁&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1998-12-12&#x27;</span>,<span class="number">7500</span>,<span class="string">&#x27;13878523695&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">3</span>,<span class="string">&#x27;孙坚&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1968-11-22&#x27;</span>,<span class="number">11000</span>,<span class="string">&#x27;13558745874&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="number">1</span>,<span class="string">&#x27;孙策&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1988-1-22&#x27;</span>,<span class="number">11000</span>,<span class="string">&#x27;1355874874&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="number">2</span>,<span class="string">&#x27;孙权&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1990-2-21&#x27;</span>,<span class="number">12000</span>,<span class="string">&#x27;13698745214&#x27;</span>,<span class="string">&#x27;深圳&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="number">2</span>,<span class="string">&#x27;大乔&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;1995-2-21&#x27;</span>,<span class="number">13000</span>,<span class="string">&#x27;13985478512&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&#x27;小乔&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;1996-2-21&#x27;</span>,<span class="number">13500</span>,<span class="string">&#x27;13778787874&#x27;</span>,<span class="string">&#x27;北京&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;周瑜&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1992-10-11&#x27;</span>,<span class="number">8000</span>,<span class="string">&#x27;13987455214&#x27;</span>,<span class="string">&#x27;武汉&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;鲁肃&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1984-9-10&#x27;</span>,<span class="number">5500</span>,<span class="string">&#x27;13254785965&#x27;</span>,<span class="string">&#x27;成都&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">3</span>,<span class="number">3</span>,<span class="string">&#x27;吕蒙&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1987-5-19&#x27;</span>,<span class="number">8500</span>,<span class="string">&#x27;13352197364&#x27;</span>,<span class="string">&#x27;成都 &#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;陆逊&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1996-5-19&#x27;</span>,<span class="number">7500</span>,<span class="string">&#x27;13025457392&#x27;</span>,<span class="string">&#x27;南京&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;太史慈&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1983-6-1&#x27;</span>,<span class="number">7500</span>,<span class="string">&#x27;13077778888&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;aaaa&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1983-6-1&#x27;</span>,<span class="number">7500</span>,<span class="string">&#x27;13177778888&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line">use DBTEST</span><br><span class="line"><span class="comment">/*修改表格中的数据</span></span><br><span class="line"><span class="comment">语法</span></span><br><span class="line"><span class="comment">update 表名 set 字段1 = 值1, 字段2 = 值2 where  条件</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="comment">/*工资调整，每个人加薪一千块*/</span></span><br><span class="line"><span class="keyword">update</span> People <span class="keyword">set</span> PeopleSalary <span class="operator">=</span> PeopleSalary<span class="operator">+</span><span class="number">1000</span></span><br><span class="line"><span class="comment">/*这里一般要用where 来确定自己要更改的到底是哪一行数据</span></span><br><span class="line"><span class="comment">但是因为这里是要给所有人都加薪，所以无所谓*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="comment">/*上面的语句是用来直接查询People表中的所有 数据的*/</span></span><br><span class="line"><span class="comment">/*给黄盖一个人的工资加500*/</span></span><br><span class="line"><span class="keyword">update</span> People <span class="keyword">set</span> PeopleSalary <span class="operator">=</span> PeopleSalary <span class="operator">+</span> <span class="number">500</span> <span class="keyword">where</span> PeopleName <span class="operator">=</span> <span class="string">&#x27;黄盖&#x27;</span></span><br><span class="line"><span class="comment">/*给员工编号为7的人减薪500*/</span></span><br><span class="line"><span class="keyword">update</span> People <span class="keyword">set</span> PeopleSalary <span class="operator">=</span> PeopleSalary <span class="operator">-</span> <span class="number">500</span> <span class="keyword">where</span> PeopleId <span class="operator">=</span> <span class="number">7</span></span><br><span class="line"><span class="comment">/*将软件部(部门编号1)人员工资低于15000的调整成15000*/</span></span><br><span class="line"><span class="keyword">update</span> PeoPle <span class="keyword">set</span> PeoPleSalary <span class="operator">=</span> <span class="number">15000</span> </span><br><span class="line"><span class="keyword">where</span> DepartmentId <span class="operator">=</span> <span class="number">1</span> <span class="keyword">and</span> PeopleSalary <span class="operator">&lt;</span><span class="number">15000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*多字段修改</span></span><br><span class="line"><span class="comment">修改刘备的工资为以前的两倍，再把地址改为北京*/</span></span><br><span class="line"><span class="keyword">update</span> People <span class="keyword">set</span> PeopleSalary <span class="operator">=</span> PeopleSalary<span class="operator">*</span><span class="number">2</span>,</span><br><span class="line">PeopleAddress <span class="operator">=</span> <span class="string">&#x27;北京&#x27;</span></span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="operator">=</span> <span class="string">&#x27;刘备&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除数据的语法*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">delete  from 表名 where 条件 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">删除员工表所有记录</span></span><br><span class="line"><span class="comment">delete from People</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除市场部 中 工资大于1w的人*/</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="operator">&gt;</span> <span class="number">10000</span> <span class="keyword">and</span> DepartmentId <span class="operator">=</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*关于删除</span></span><br><span class="line"><span class="comment">drop,truncate,delete</span></span><br><span class="line"><span class="comment">drop table People 删除表对象</span></span><br><span class="line"><span class="comment">这个操作实际上是把整个表删除了</span></span><br><span class="line"><span class="comment">不单单是 删除了表中的数据，是连表格本身都删除掉了 </span></span><br><span class="line"><span class="comment">truncate table People 清空数据 表依然存在</span></span><br><span class="line"><span class="comment">delete from People 删除所有数据 表依然存在</span></span><br><span class="line"><span class="comment">truncate 和delete的区别</span></span><br><span class="line"><span class="comment">truncate直接删除所有数据，不可以带附加条件</span></span><br><span class="line"><span class="comment">不可以删除部分数据，直接清空表内容</span></span><br><span class="line"><span class="comment">delete可以带条件可以只删除部分数据</span></span><br><span class="line"><span class="comment">自动编号：</span></span><br><span class="line"><span class="comment">假设表中自动编号为12345</span></span><br><span class="line"><span class="comment">如果使用truncate之后添加数据 编号仍然是12345</span></span><br><span class="line"><span class="comment">使用delete删除数据，删除的自动编号永远不会在存在</span></span><br><span class="line"><span class="comment">如果用delete删除 之后添加数据就会变成67891</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*======查询语句=====*/</span></span><br><span class="line"><span class="comment">/*查询基本语法</span></span><br><span class="line"><span class="comment">select * from 表名</span></span><br><span class="line"><span class="comment">查询所有列所有行</span></span><br><span class="line"><span class="comment">select 列名 from 表名 where 条件（用于 筛选行）</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询所有列所有行*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Department</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> [Rank]</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询指定列（姓名性别生日月薪电话）*/</span></span><br><span class="line"><span class="keyword">select</span> PeopleName <span class="keyword">as</span> 姓名,</span><br><span class="line">PeopleGender <span class="keyword">as</span> 性别,</span><br><span class="line">PeopleBirth <span class="keyword">as</span> 生日,</span><br><span class="line">PeopleSalary <span class="keyword">as</span> 月薪,</span><br><span class="line">PeoplePhone <span class="keyword">as</span> 电话</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出员工都来自于那些城市城市*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> (PeopleAddress) </span><br><span class="line"> <span class="keyword">from</span> People</span><br><span class="line"> <span class="comment">/*distinct 就是不重复显示相同的数据</span></span><br><span class="line"><span class="comment"> distinct的用法 就是distinct（列名）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">/*假设准备加工资，现在还没有加</span></span><br><span class="line"><span class="comment"> 然后现在想要咨询加工资后的员工的数据</span></span><br><span class="line"><span class="comment"> 假设工资上调20%*/</span></span><br><span class="line"><span class="keyword">select</span> PeopleName <span class="keyword">as</span> 姓名,</span><br><span class="line">PeopleSalary<span class="operator">*</span><span class="number">1.2</span> <span class="keyword">as</span> 调薪后工资,</span><br><span class="line">PeopleSalary <span class="keyword">as</span> 原本工资,</span><br><span class="line">PeopleSalary <span class="operator">*</span> <span class="number">0.2</span> <span class="keyword">as</span> 工资涨幅</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">/*条件查询*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">sql中常用的运算符</span></span><br><span class="line"><span class="comment">= 等于 比较是否相等及赋值</span></span><br><span class="line"><span class="comment">!= 不等于</span></span><br><span class="line"><span class="comment">&gt; 大于</span></span><br><span class="line"><span class="comment">&lt; 小于</span></span><br><span class="line"><span class="comment">&gt;= 大于等于</span></span><br><span class="line"><span class="comment">&lt;= 小于等于</span></span><br><span class="line"><span class="comment">is null 为空</span></span><br><span class="line"><span class="comment">is not null 不为空</span></span><br><span class="line"><span class="comment">in 比较是否在其中</span></span><br><span class="line"><span class="comment">like 模糊查询</span></span><br><span class="line"><span class="comment">between...and,,, 比较是否在两者之间</span></span><br><span class="line"><span class="comment">and 逻辑与</span></span><br><span class="line"><span class="comment">or 逻辑或</span></span><br><span class="line"><span class="comment">not 逻辑非</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">use DBTEST</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询性别为女的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleGender  <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询工资&gt;=1w的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="operator">&gt;=</span> <span class="number">10000</span></span><br><span class="line"><span class="comment">/*查询出性别为女 工资大于等于1w的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> </span><br><span class="line"><span class="keyword">and</span> PeopleSalary <span class="operator">&gt;=</span> <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span> </span><br><span class="line"><span class="keyword">and</span> PeopleSalary <span class="operator">&gt;=</span> <span class="number">10000</span></span><br><span class="line"><span class="keyword">and</span> DepartmentId <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询月薪大于等于1w或者月薪大于等于8k的女员工*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="operator">&gt;=</span> <span class="number">15000</span></span><br><span class="line"><span class="keyword">or</span> (PeopleSalary <span class="operator">&gt;=</span> <span class="number">8000</span></span><br><span class="line"><span class="keyword">and</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出出生年月在1980-1-1之后，而且月薪大于等于1w的女员工 </span></span><br><span class="line"><span class="comment">语法 select * from People where 条件1 and 条件2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleBirth <span class="operator">&gt;=</span> <span class="string">&#x27;1980-1-1&#x27;</span> </span><br><span class="line"><span class="keyword">and</span> PeopleSalary <span class="operator">&gt;=</span> <span class="number">10000</span></span><br><span class="line"><span class="keyword">and</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询月薪在1w-2w之间的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="operator">&gt;=</span> <span class="number">10000</span> <span class="keyword">and</span> PeopleSalary <span class="operator">&lt;=</span> <span class="number">20000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="keyword">between</span> <span class="number">10000</span> <span class="keyword">and</span> <span class="number">20000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出地址在武汉或北京的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span></span><br><span class="line">People <span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;武汉&#x27;</span></span><br><span class="line"><span class="keyword">or</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;北京&#x27;</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span></span><br><span class="line">People <span class="keyword">where</span> PeopleAddress <span class="keyword">in</span>(<span class="string">&#x27;武汉&#x27;</span>,<span class="string">&#x27;北京 &#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*排序</span></span><br><span class="line"><span class="comment">查询所偶有的员工信息 工具工资排序 降序 </span></span><br><span class="line"><span class="comment">在默认的情况下 查询出来的虚表是工具主键来进行排序</span></span><br><span class="line"><span class="comment">在默认情况下  展现出来的结果是工具表格的主键来排序</span></span><br><span class="line"><span class="comment">比如在上面查询的语句中</span></span><br><span class="line"><span class="comment">People表格的主键是PeopleId 所以结果以此排序</span></span><br><span class="line"><span class="comment">（执行查询语句后 在下面的结果 部分</span></span><br><span class="line"><span class="comment">展现出来的表格就是一张虚表 </span></span><br><span class="line"><span class="comment">他不是真正存储在数据库中的表格 只是作为结果展示）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">排序的关键字 order by</span></span><br><span class="line"><span class="comment">order by 就是根据 根据什么信息进行排序</span></span><br><span class="line"><span class="comment">默认情况下虚表根据主键排序</span></span><br><span class="line"><span class="comment">order by 列名 asc(升序） desc （降序）</span></span><br><span class="line"><span class="comment">其中 asc是默认值</span></span><br><span class="line"><span class="comment">只要用了order by 语法之后</span></span><br><span class="line"><span class="comment">就会按照你的列名 升序查询</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询所有员工的信息 根据工资排序 降序 */</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> PeopleSalary  <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询所有员工信息 根据名字长度排序（降序）*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> len(PeopleName) <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*在上方的代码中 len是sql提供给我们取长度的一个函数</span></span><br><span class="line"><span class="comment">len（） */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出工资最高的五个人的信息*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> top <span class="number">5</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> PeopleSalary <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出工资最高的10%的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">10</span><span class="keyword">percent</span> </span><br><span class="line"><span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> PeopleSalary <span class="keyword">desc</span></span><br><span class="line"><span class="comment">/*注意上面的查询百分之多少</span></span><br><span class="line"><span class="comment">不能直接用百分号% 而是要用percent</span></span><br><span class="line"><span class="comment">不然会报错</span></span><br><span class="line"><span class="comment">然后这个查询的结果会自动的四舍五入</span></span><br><span class="line"><span class="comment">比如一共有22条数据 就是四舍五入2条*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*null 空值*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;马云&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1977-7-7&#x27;</span>,<span class="number">500000</span>,<span class="string">&#x27;138585858&#x27;</span>,GETDATE())</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出地址没有填写的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleAddress <span class="keyword">is</span> <span class="keyword">null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleAddress <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出80 后的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">where</span> PeopleBirth <span class="operator">&gt;=</span> <span class="string">&#x27;1980-1-1&#x27;</span></span><br><span class="line"><span class="keyword">and</span> PeopleBirth <span class="operator">&lt;=</span><span class="string">&#x27;1989-12-31&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">where</span> PeopleBirth <span class="keyword">between</span> <span class="string">&#x27;1980-1-1&#x27;</span></span><br><span class="line"><span class="keyword">and</span> <span class="string">&#x27;1989-12-31&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">year</span>(PeopleBirth) <span class="keyword">between</span> <span class="number">1980</span> <span class="keyword">and</span> <span class="number">1989</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询30-40岁之间 并且 工资在1.5w - 3w 之间的员工信息*/</span></span><br><span class="line"><span class="comment">/* 年龄 =   当前年份 - 出生年份</span></span><br><span class="line"><span class="comment">age =  year(getdate) -  year (PeopleBirth)*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> (<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth) <span class="keyword">between</span> <span class="number">30</span> <span class="keyword">and</span> <span class="number">40</span>)</span><br><span class="line"><span class="keyword">and</span> PeopleSalary <span class="keyword">between</span> <span class="number">15000</span> <span class="keyword">and</span> <span class="number">30000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出星座是巨蟹座的员工信息</span></span><br><span class="line"><span class="comment">6.22-7.22</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People <span class="keyword">where</span> </span><br><span class="line">(<span class="keyword">month</span>(PeopleBirth) <span class="operator">=</span> <span class="number">6</span> <span class="keyword">and</span> <span class="keyword">day</span>(PeopleBirth) <span class="operator">&gt;=</span> <span class="number">22</span>)</span><br><span class="line"><span class="keyword">or</span></span><br><span class="line">(<span class="keyword">month</span>(PeopleBirth) <span class="operator">=</span> <span class="number">7</span> <span class="keyword">and</span> <span class="keyword">day</span>(PeopleBirth) <span class="operator">&lt;=</span> <span class="number">22</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出工资比赵云高的人的信息*/</span></span><br><span class="line"><span class="comment">/*首先要查询出赵云的工资*/</span></span><br><span class="line"><span class="keyword">select</span> PeopleSalary</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="operator">=</span> <span class="string">&#x27;赵云&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="operator">&gt;</span> </span><br><span class="line">(<span class="keyword">select</span> PeopleSalary</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="operator">=</span> <span class="string">&#x27;赵云&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出和赵云在一个城市的人的信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">where</span> PeopleAddress </span><br><span class="line"><span class="operator">=</span> (<span class="keyword">select</span> PeopleAddress</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="operator">=</span> <span class="string">&#x27;赵云&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> PeopleAddress</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="operator">=</span> <span class="string">&#x27;赵云&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出生肖是鼠的人的信息*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 鼠牛虎兔龙蛇 马羊猴鸡狗猪</span></span><br><span class="line"><span class="comment">4    5   6   7   8   9  10   11  0   1   2   3*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span><span class="number">12</span> <span class="operator">=</span> <span class="number">4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询所有的员工信息，添加一列 显示生肖*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> ,</span><br><span class="line"><span class="keyword">case</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">4</span> <span class="keyword">then</span> <span class="string">&#x27;鼠&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">5</span> <span class="keyword">then</span> <span class="string">&#x27;牛&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">6</span> <span class="keyword">then</span> <span class="string">&#x27;虎&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">7</span> <span class="keyword">then</span> <span class="string">&#x27;兔&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">8</span> <span class="keyword">then</span> <span class="string">&#x27;龙&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">9</span> <span class="keyword">then</span> <span class="string">&#x27;蛇&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">10</span> <span class="keyword">then</span> <span class="string">&#x27;马&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">11</span> <span class="keyword">then</span> <span class="string">&#x27;羊&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">0</span> <span class="keyword">then</span> <span class="string">&#x27;猴&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">1</span> <span class="keyword">then</span> <span class="string">&#x27;鸡&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">2</span> <span class="keyword">then</span> <span class="string">&#x27;狗&#x27;</span></span><br><span class="line"><span class="keyword">when</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span> <span class="operator">=</span> <span class="number">3</span> <span class="keyword">then</span> <span class="string">&#x27;猪&#x27;</span></span><br><span class="line"><span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">as</span> 生肖</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> ,</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">year</span>(PeopleBirth)<span class="operator">%</span> <span class="number">12</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">4</span> <span class="keyword">then</span> <span class="string">&#x27;鼠&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">5</span> <span class="keyword">then</span> <span class="string">&#x27;牛&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">6</span> <span class="keyword">then</span> <span class="string">&#x27;虎&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">7</span> <span class="keyword">then</span> <span class="string">&#x27;兔&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">8</span> <span class="keyword">then</span> <span class="string">&#x27;龙&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">9</span> <span class="keyword">then</span> <span class="string">&#x27;蛇&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">10</span> <span class="keyword">then</span> <span class="string">&#x27;马&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">11</span> <span class="keyword">then</span> <span class="string">&#x27;羊&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">0</span> <span class="keyword">then</span> <span class="string">&#x27;猴&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">1</span> <span class="keyword">then</span> <span class="string">&#x27;鸡&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">2</span> <span class="keyword">then</span> <span class="string">&#x27;狗&#x27;</span></span><br><span class="line"><span class="keyword">when</span>  <span class="number">3</span> <span class="keyword">then</span> <span class="string">&#x27;猪&#x27;</span></span><br><span class="line"><span class="keyword">else</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">as</span> 生肖</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*模糊查询*/</span></span><br><span class="line"><span class="comment">/*模糊查询使用like瓜庵案件之和通配符结合来实现</span></span><br><span class="line"><span class="comment">通配符如下</span></span><br><span class="line"><span class="comment">% 表示普配0个字符 1个字符或多个字符</span></span><br><span class="line"><span class="comment">_ 表示匹配有且仅有一个字符</span></span><br><span class="line"><span class="comment">[] 表示匹配范围内</span></span><br><span class="line"><span class="comment">[^] 表示不在匹配范围内</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*%（百分号）：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">％ 通配符代表零个或多个字符，意思是可以匹配任意数量（包括零个）字符。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">例如：</span></span><br><span class="line"><span class="comment">SELECT * FROM students WHERE name LIKE &#x27;J%&#x27;;</span></span><br><span class="line"><span class="comment">这个查询将返回所有名字以 &quot;J&quot; 开头的学生，后面可以跟任意数量的字符（例如：James、John、Jack 等）。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">另外，如果你写成 LIKE &#x27;%J%&#x27;，则会匹配所有包含字母 &quot;J&quot; 的名字。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">_（下划线）：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">_ 通配符代表 单个字符。它只能匹配一个字符，不管这个字符是什么。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">例如：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">SELECT * FROM students WHERE name LIKE &#x27;_o&#x27;;</span></span><br><span class="line"><span class="comment">这个查询将返回所有名字的第二个字符是 &quot;o&quot; 的学生，例如 &quot;Tom&quot; 或 &quot;Bob&quot;。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">如果使用 LIKE &#x27;_o_&#x27;，那么查询会返回所有名字中第二个字符是 &quot;o&quot;，且总长度为 3 的名字。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">总结：</span></span><br><span class="line"><span class="comment">% 用来匹配 任意数量的字符，包括零个字符。</span></span><br><span class="line"><span class="comment">_ 用来匹配 单个字符。*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出姓刘的员工信息 */</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="keyword">like</span> <span class="string">&#x27;刘%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出名字中含有尚的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="keyword">like</span> <span class="string">&#x27;%尚%&#x27;</span> <span class="keyword">or</span> PeopleName <span class="keyword">like</span> <span class="string">&#x27;史&#x27;</span></span><br><span class="line"><span class="comment">/*用这种两个百分号的方式查询出来的结果</span></span><br><span class="line"><span class="comment">只是名字中有尚的 可以在前面也可以在后面*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出姓刘的员工信息，名字是两个字*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="keyword">like</span> <span class="string">&#x27;刘_&#x27;</span></span><br><span class="line"><span class="comment">/*用这个下划线就能查出来 刘后面只有一个字的了*/</span></span><br><span class="line"><span class="comment">/*另外一种写法 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">SUBSTRING</span>(<span class="string">&#x27;helko,world&#x27;</span>,<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> <span class="built_in">SUBSTRING</span>(PeopleName,<span class="number">1</span>,<span class="number">1</span>) <span class="operator">=</span> <span class="string">&#x27;刘&#x27;</span></span><br><span class="line"><span class="comment">/*上面 的条件仅仅表达了第一个字是刘，没有表达名字有两个字组成</span></span><br><span class="line"><span class="comment">所以要加上一个条件*/</span></span><br><span class="line"><span class="keyword">and</span> LEN(PeopleName) <span class="operator">=</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询名字最后一个字为香，名字一共是三个字的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> <span class="built_in">SUBSTRING</span>(PeopleName,<span class="number">3</span>,<span class="number">1</span>) <span class="operator">=</span> <span class="string">&#x27;香&#x27;</span></span><br><span class="line"><span class="keyword">and</span> len(PeopleName) <span class="operator">=</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleName <span class="keyword">like</span> <span class="string">&#x27;__香&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出电话号码开头为138的员工信息*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span>  PeoplePhone <span class="keyword">like</span> <span class="string">&#x27;138%&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出电话开头 为138 第四位是 7或者8的 </span></span><br><span class="line"><span class="comment">最后一个号码是5*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span>  PeoplePhone <span class="keyword">like</span> <span class="string">&#x27;138[7,8]%5&#x27;</span></span><br><span class="line"><span class="comment">/*这里就是用[]通配符选择*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> <span class="comment">/*查询出电话开头 为138 第四位是2-5之间的数字的 </span></span><br><span class="line"><span class="comment">最后一个号码是不是2和3*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span>  PeoplePhone <span class="keyword">like</span> <span class="string">&#x27;138[2-5]%[^2,3]&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*聚合函数*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">sqls中的聚合函数主要有</span></span><br><span class="line"><span class="comment">count 求数量</span></span><br><span class="line"><span class="comment">max 求最大值</span></span><br><span class="line"><span class="comment">min 求最小值</span></span><br><span class="line"><span class="comment">sum 求和</span></span><br><span class="line"><span class="comment">avg 求平均值</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">use DBTEST</span><br><span class="line"></span><br><span class="line"><span class="comment">/*1. COUNT() — 求数量</span></span><br><span class="line"><span class="comment">作用：COUNT() 用于计算表中某列或记录的数量。如果指定了列名，它会计算该列中非 NULL 值的数量；如果不指定列名，它会计算记录的总数。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">用法：</span></span><br><span class="line"><span class="comment">计算某列非 NULL 值的数量：</span></span><br><span class="line"><span class="comment">SELECT COUNT(column_name) FROM table_name;</span></span><br><span class="line"><span class="comment">计算所有记录的数量（即使某列有 NULL 值）：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">SELECT COUNT(*) FROM table_name;</span></span><br><span class="line"><span class="comment">示例：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">SELECT COUNT(*) FROM employees;</span></span><br><span class="line"><span class="comment">-- 计算 employees 表中的记录总数</span></span><br><span class="line"><span class="comment">2. MAX() — 求最大值</span></span><br><span class="line"><span class="comment">作用：MAX() 用于返回指定列中的最大值。该列的数据类型必须支持比较（如数字、日期等）。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">用法：</span></span><br><span class="line"><span class="comment">SELECT MAX(column_name) FROM table_name;</span></span><br><span class="line"><span class="comment">示例：</span></span><br><span class="line"><span class="comment">SELECT MAX(salary) FROM employees;</span></span><br><span class="line"><span class="comment">-- 获取 employees 表中工资的最大值</span></span><br><span class="line"><span class="comment">3. MIN() — 求最小值</span></span><br><span class="line"><span class="comment">作用：MIN() 用于返回指定列中的最小值。与 MAX() 类似，该列的数据类型必须支持比较。</span></span><br><span class="line"><span class="comment">用法：</span></span><br><span class="line"><span class="comment">SELECT MIN(column_name) FROM table_name;</span></span><br><span class="line"><span class="comment">示例：</span></span><br><span class="line"><span class="comment">SELECT MIN(salary) FROM employees;</span></span><br><span class="line"><span class="comment">-- 获取 employees 表中工资的最小值</span></span><br><span class="line"><span class="comment">4. SUM() — 求和</span></span><br><span class="line"><span class="comment">作用：SUM() 用于返回指定列的所有数值之和。它只能用于数值类型的列（如整数或浮动类型的列）。</span></span><br><span class="line"><span class="comment">用法：</span></span><br><span class="line"><span class="comment">SELECT SUM(column_name) FROM table_name;</span></span><br><span class="line"><span class="comment">示例：</span></span><br><span class="line"><span class="comment">SELECT SUM(salary) FROM employees;</span></span><br><span class="line"><span class="comment">-- 计算 employees 表中所有员工的工资总和</span></span><br><span class="line"><span class="comment">5. AVG() — 求平均值</span></span><br><span class="line"><span class="comment">作用：AVG() 用于返回指定列的平均值。它只适用于数值类型的列，返回一个浮动类型的结果。</span></span><br><span class="line"><span class="comment">用法：</span></span><br><span class="line"><span class="comment">SELECT AVG(column_name) FROM table_name;</span></span><br><span class="line"><span class="comment">示例：</span></span><br><span class="line"><span class="comment">SELECT AVG(salary) FROM employees;</span></span><br><span class="line"><span class="comment">-- 获取 employees 表中所有员工的平均工资</span></span><br><span class="line"><span class="comment">聚合函数的使用注意事项：</span></span><br><span class="line"><span class="comment">聚合函数通常与 GROUP BY 子句一起使用，来对数据进行分组。例如，计算每个部门的员工人数、最大工资等：</span></span><br><span class="line"><span class="comment">SELECT department, COUNT(*), MAX(salary), MIN(salary), AVG(salary)</span></span><br><span class="line"><span class="comment">FROM employees</span></span><br><span class="line"><span class="comment">GROUP BY department;</span></span><br><span class="line"><span class="comment">如果不使用 GROUP BY，这些函数会对整张表进行计算，返回单个结果。</span></span><br><span class="line"><span class="comment">结论</span></span><br><span class="line"><span class="comment">COUNT()：计算记录数量。</span></span><br><span class="line"><span class="comment">MAX()：返回最大值。</span></span><br><span class="line"><span class="comment">MIN()：返回最小值。</span></span><br><span class="line"><span class="comment">SUM()：返回总和。</span></span><br><span class="line"><span class="comment">AVG()：返回平均值。</span></span><br><span class="line"><span class="comment">这些聚合函数广泛应用于数据分析、报告生成和业务统计等场景中。*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--求员工总人数</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="comment">/*count 的意思 就是求列数</span></span><br><span class="line"><span class="comment">有几列 结果就是多少*/</span></span><br><span class="line"><span class="comment">--求最大值，求最高工资</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="comment">--求最小时，求最小工资</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--求和，求所有员工的工资总和</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 工资总和</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">--求平均值，求所有员工的平均工资</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">AVG</span>(PeopleSalary) <span class="keyword">as</span> 平均工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">--平均工资如果要只保留两位小数</span></span><br><span class="line"><span class="comment">/*通过round 关键字*/</span></span><br><span class="line"><span class="keyword">SELECT</span> ROUND(<span class="built_in">AVG</span>(PeopleSalary), <span class="number">2</span>) <span class="keyword">AS</span> 平均工资</span><br><span class="line"><span class="keyword">FROM</span> People;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--求数量，最大值，最小值，总和，平均值，在一行显示</span></span><br><span class="line"><span class="keyword">Select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出武汉地区的员工人数，总工资，最高工资，最低工资和平均工资*/</span></span><br><span class="line"><span class="keyword">Select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;武汉&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">--求出工资比平均工资高的人员信息</span></span><br><span class="line"><span class="comment">--思路 先求出平均工资</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">AVG</span>(PeopleSalary) <span class="keyword">from</span> People</span><br><span class="line"><span class="comment">--再通过where判断</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="operator">&gt;</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">AVG</span>(PeopleSalary) <span class="keyword">from</span> People)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*求数量，年龄最大值，最小值，总和，平均值</span></span><br><span class="line"><span class="comment">在一行内显示*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--求年龄</span></span><br><span class="line"><span class="keyword">select</span> (<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth))</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="comment">/*求上题*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*方案一*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工总数,</span><br><span class="line"><span class="built_in">max</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 最高年龄,</span><br><span class="line"><span class="built_in">min</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 最低年龄,</span><br><span class="line"><span class="built_in">sum</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 年龄总和,</span><br><span class="line"><span class="built_in">avg</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="comment">/*方案2*/</span></span><br><span class="line"><span class="comment">/*使用datediff算日期*/</span></span><br><span class="line"><span class="keyword">select</span> datediff(<span class="keyword">YEAR</span>,<span class="string">&#x27;1991-1-1&#x27;</span>,<span class="string">&#x27;1993-3-3&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*用这个datediff算出年龄*/</span></span><br><span class="line"><span class="keyword">select</span> PeopleName <span class="keyword">as</span> name,</span><br><span class="line">datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE()) <span class="keyword">as</span> age</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工总数,</span><br><span class="line"><span class="built_in">max</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 最高年龄,</span><br><span class="line"><span class="built_in">min</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 最低年龄,</span><br><span class="line"><span class="built_in">sum</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 年龄总和,</span><br><span class="line"><span class="built_in">avg</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="comment">/*datediff是一个日期函数，用于计算两个日期之间的差异。</span></span><br><span class="line"><span class="comment">它返回两个日期之间的天数差。</span></span><br><span class="line"><span class="comment">DATEDIFF 会返回一个整数值，表示 date1 和 date2 之间的天数差。</span></span><br><span class="line"><span class="comment">如果 date1 比 date2 晚，则返回正数；</span></span><br><span class="line"><span class="comment">如果 date1 比 date2 早，则返回负数；</span></span><br><span class="line"><span class="comment">如果两个日期相同，则返回 0*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*计算出月薪在10000 以上的男性员工的最大年龄 最小年龄和平均年龄*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工总数,</span><br><span class="line"><span class="built_in">max</span>(datediff(<span class="keyword">YEAR</span>,<span class="keyword">YEAR</span>(getdate()),PeopleBirth) ) <span class="keyword">as</span> 最高年龄,</span><br><span class="line"><span class="built_in">min</span>(datediff(<span class="keyword">YEAR</span>,<span class="keyword">YEAR</span>(getdate()),PeopleBirth) ) <span class="keyword">as</span> 最低年龄,</span><br><span class="line"><span class="built_in">sum</span>(datediff(<span class="keyword">YEAR</span>,<span class="keyword">YEAR</span>(getdate()),PeopleBirth) ) <span class="keyword">as</span> 年龄总和,</span><br><span class="line"><span class="built_in">avg</span>(datediff(<span class="keyword">YEAR</span>,<span class="keyword">YEAR</span>(getdate()),PeopleBirth) ) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleSalary <span class="operator">&gt;</span> <span class="number">10000</span></span><br><span class="line"><span class="keyword">and</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*统计出所在地在 武汉或上海的 所有女员工数量以及</span></span><br><span class="line"><span class="comment">最大年龄 最小年龄和平均年龄*/</span></span><br><span class="line"><span class="comment">/*正常做法*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 女员工数量,</span><br><span class="line"><span class="built_in">max</span>(<span class="keyword">year</span>(GETDATE()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 最大年龄,</span><br><span class="line"><span class="built_in">min</span>(<span class="keyword">year</span>(GETDATE()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 最小年龄,</span><br><span class="line"><span class="built_in">avg</span>(<span class="keyword">year</span>(GETDATE())<span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span></span><br><span class="line"><span class="keyword">and</span> PeopleAddress <span class="keyword">in</span> (<span class="string">&#x27;上海&#x27;</span>,<span class="string">&#x27;武汉&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--年龄</span></span><br><span class="line"><span class="keyword">select</span> DATEDIFF(<span class="keyword">year</span>,<span class="keyword">year</span>(GETDATE()),PeopleBirth)</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工总数,</span><br><span class="line"><span class="built_in">max</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 最高年龄,</span><br><span class="line"><span class="built_in">min</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 最低年龄,</span><br><span class="line"><span class="built_in">sum</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 年龄总和,</span><br><span class="line"><span class="built_in">avg</span>(datediff(<span class="keyword">YEAR</span>,PeopleBirth,GETDATE())) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span></span><br><span class="line"><span class="keyword">and</span> PeopleAddress <span class="keyword">in</span> (<span class="string">&#x27;武汉&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 女员工总数,</span><br><span class="line"><span class="built_in">max</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 最高年龄,</span><br><span class="line"><span class="built_in">min</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 最低年龄,</span><br><span class="line"><span class="built_in">sum</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 年龄总和,</span><br><span class="line"><span class="built_in">avg</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> PeopleGender <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span></span><br><span class="line"><span class="keyword">and</span> PeopleAddress <span class="keyword">in</span> (<span class="string">&#x27;武汉&#x27;</span>,<span class="string">&#x27;上海&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--求出年龄比平均年龄的人员信息</span></span><br><span class="line"><span class="comment">/*求年龄*/</span></span><br><span class="line"><span class="keyword">select</span> (<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth))</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="comment">/*求平均年龄*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"></span><br><span class="line"><span class="comment">/* */</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 年龄</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth))</span><br><span class="line"><span class="operator">&gt;</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(<span class="keyword">year</span>(getdate()) <span class="operator">-</span> <span class="keyword">year</span>(PeopleBirth)) <span class="keyword">as</span> 平均年龄</span><br><span class="line"><span class="keyword">from</span> People) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*======分组查询=====*/</span></span><br><span class="line"><span class="comment">/*什么是分组查询？</span></span><br><span class="line"><span class="comment">为什么要用分组查询？</span></span><br><span class="line"><span class="comment">什么时候要用分组查询？*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--根据员工所在地区分组统计员工人数,员工工资总和,平均工资，最高工资和最低工资</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary)  最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) 最低工资</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"></span><br><span class="line"><span class="comment">/*如上面这道题 按这样的办法我们只能查出来一条信息</span></span><br><span class="line"><span class="comment">然后题目现在让我们根据地区进行分组</span></span><br><span class="line"><span class="comment">在引入group by之前 能用的方法就是union*/</span></span><br><span class="line"><span class="comment">/*使用union做*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;北京&#x27;</span> 地区,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary)  最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) 最低工资</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;北京&#x27;</span></span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;武汉&#x27;</span> 地区,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary)  最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) 最低工资</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;武汉&#x27;</span></span><br><span class="line"><span class="comment">/*如果不使用group by 分组查询</span></span><br><span class="line"><span class="comment">只能不断 通过这个union </span></span><br><span class="line"><span class="comment">把每一个地区的信息都咨询出来</span></span><br><span class="line"><span class="comment">=========注意==========</span></span><br><span class="line"><span class="comment">在通过union合并的时候</span></span><br><span class="line"><span class="comment">并不是所有的查询结果都可以合并</span></span><br><span class="line"><span class="comment">使用union要求两个查询结果的列的数量必须一致</span></span><br><span class="line"><span class="comment">同时数据类型也要求相同*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*方案二 使用group by*/</span></span><br><span class="line"><span class="keyword">select</span> PeopleAddress 地区,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary)  最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) 最低工资</span><br><span class="line"><span class="keyword">from</span> People </span><br><span class="line"><span class="keyword">Group</span> <span class="keyword">by</span> PeopleAddress</span><br><span class="line"><span class="comment">/*如果在上面加上一行PeopleName</span></span><br><span class="line"><span class="comment">就会报错</span></span><br><span class="line"><span class="comment">因为group by </span></span><br><span class="line"><span class="comment">只能显示</span></span><br><span class="line"><span class="comment">聚合函数的结果</span></span><br><span class="line"><span class="comment">或者 group by 本身的字段</span></span><br><span class="line"><span class="comment">其他的字段是无法显示的</span></span><br><span class="line"><span class="comment">从逻辑上面也说不过去</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--根据员工所在地区分组统计员工人数，员工工资总和，平均工资，最高工资和最低工资</span></span><br><span class="line"><span class="comment">--1985 年及以后出身的员工不参与统计。</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">&lt;</span> <span class="number">1985</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> PeopleAddress</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--根据员工所在地区分组统计员工人数，员工工资总和，平均工资，最高工资和最低工资</span></span><br><span class="line"><span class="comment">--要求筛选出员工人数至少在2人及以上的记录，并且1985年及以后出身的员工不参与统计。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">select count(*) as 员工人数,</span></span><br><span class="line"><span class="comment">sum(PeopleSalary) as 工资总和,</span></span><br><span class="line"><span class="comment">avg(PeopleSalary) as 平均工资,</span></span><br><span class="line"><span class="comment">max(PeopleSalary) as 最高工资,</span></span><br><span class="line"><span class="comment">min(PeopleSalary) as 最低工资</span></span><br><span class="line"><span class="comment">from People</span></span><br><span class="line"><span class="comment">where year(PeopleBirth) &lt; 1985</span></span><br><span class="line"><span class="comment">and 员工人数 &gt;= 2</span></span><br><span class="line"><span class="comment">group by PeopleAddress</span></span><br><span class="line"><span class="comment">一开始想到的是这种写法</span></span><br><span class="line"><span class="comment">然后这里报错 </span></span><br><span class="line"><span class="comment">显示 聚合不应该出现在where字句中</span></span><br><span class="line"><span class="comment">所以 where 子句中不能出现聚合函数</span></span><br><span class="line"><span class="comment">只能出现原始数据</span></span><br><span class="line"><span class="comment">所以这个时候我们就需要使用having 关键字</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*用下面的做法就正常了*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">&lt;</span> <span class="number">1985</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> PeopleAddress</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>)  <span class="operator">&gt;=</span><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*然后联想到 如果不是聚合函数可不可以在having里面</span></span><br><span class="line"><span class="comment">比如说我把那个年龄的判断放在having里面*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> PeopleAddress</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>)  <span class="operator">&gt;=</span><span class="number">2</span></span><br><span class="line"><span class="keyword">and</span> <span class="keyword">year</span>(PeopleBirth) <span class="operator">&lt;</span> <span class="number">1985</span></span><br><span class="line"><span class="comment">/*上面的代码还是报错</span></span><br><span class="line"><span class="comment">HAVING 子句中的列 &#x27;People.PeopleBirth&#x27; 无效，因为该列没有包含在聚合函数或 GROUP BY 子句中。</span></span><br><span class="line"><span class="comment">说明没有包含聚合函数或者group by 的一般数据</span></span><br><span class="line"><span class="comment">having同样不接收*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*多表查询*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span></span><br><span class="line">Department</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span></span><br><span class="line">People</span><br><span class="line"><span class="comment">/*笛卡尔乘机*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> </span><br><span class="line">People,Department</span><br><span class="line"><span class="comment">/*咨询结果将Department 所有记录</span></span><br><span class="line"><span class="comment">和People表所有记录依次排列组合</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">这个笛卡尔积 他不考虑这么多</span></span><br><span class="line"><span class="comment">直接将所有的数据相乘</span></span><br><span class="line"><span class="comment">之前的外键他也不考虑</span></span><br><span class="line"><span class="comment">所以这里出现了不应该出现的冗余数据</span></span><br><span class="line"><span class="comment">比如说每个人都有属于每个部门的数据</span></span><br><span class="line"><span class="comment">比如说刘备真实情况下属于软件部的</span></span><br><span class="line"><span class="comment">但是在这个笛卡尔积中既有属于软件部的刘备 </span></span><br><span class="line"><span class="comment">也有属于硬件部乃至其他所有部门的刘备</span></span><br><span class="line"><span class="comment">这样明显是不合理不科学的</span></span><br><span class="line"><span class="comment">所以这里要做的事情 就是</span></span><br><span class="line"><span class="comment">让员工表中的department id</span></span><br><span class="line"><span class="comment">和部门表中的department id 相同</span></span><br><span class="line"><span class="comment">关联 之后</span></span><br><span class="line"><span class="comment">再去显示他部门的id</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">之前有说到在建表的时候 通过创建外键的方式</span></span><br><span class="line"><span class="comment">关联了这个department id</span></span><br><span class="line"><span class="comment">所以部门表中没有的department id</span></span><br><span class="line"><span class="comment">无法在员工表中被创建 </span></span><br><span class="line"><span class="comment">这就使得在插入数据的时候就保证了数据是一一对应的</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">tips 外键可以为空 就是说这里 原则上可以存在部门为null的情况</span></span><br><span class="line"><span class="comment">不过我们在上面建表的时候加了not null的非空约束 */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*简单多表查询*/</span></span><br><span class="line"><span class="comment">/*查询员工信息 显示部门名称*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People,</span><br><span class="line">Department</span><br><span class="line"><span class="keyword">where</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="comment">/*通过DepartmentId 连接两张表</span></span><br><span class="line"><span class="comment">使得两张表中的数据对应*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出员工信息 显示职级名称*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> ,</span><br><span class="line">RankName <span class="keyword">as</span> 职级名称</span><br><span class="line"><span class="keyword">from</span> People,</span><br><span class="line">[Rank]</span><br><span class="line"><span class="keyword">where</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询出员工信息 显示部门名称，职级名称*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">DepartmentName,</span><br><span class="line">RankName</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">People,</span><br><span class="line">Department,</span><br><span class="line">[Rank]</span><br><span class="line"><span class="keyword">where</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="keyword">and</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--猜想 如果把where中的语句等号两边换位</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>,</span><br><span class="line">DepartmentName,</span><br><span class="line">RankName</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">People,</span><br><span class="line">Department,</span><br><span class="line">[Rank]</span><br><span class="line"><span class="keyword">where</span> Department.DepartmentId <span class="operator">=</span> People.DepartmentId</span><br><span class="line"><span class="keyword">and</span> [Rank].RankId <span class="operator">=</span> People.RankId</span><br><span class="line"><span class="comment">/*得出结论 等号两边换位置不影响结果*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*直接把所有数据显示出来*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span></span><br><span class="line">People,</span><br><span class="line">Department,</span><br><span class="line">[Rank]</span><br><span class="line"><span class="keyword">where</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="keyword">and</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"></span><br><span class="line"><span class="comment">/*内连接查询*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*内连接（INNER JOIN）是一种常用的连接方式，</span></span><br><span class="line"><span class="comment">指的是只返回在两个表中都有匹配的记录。</span></span><br><span class="line"><span class="comment">在下面的咨询中，INNER JOIN会返回People表与</span></span><br><span class="line"><span class="comment">Department、Rank表中符合条件的所有行。</span></span><br><span class="line"><span class="comment">只要存在匹配行，结果才会返回。</span></span><br><span class="line"><span class="comment">同时如果遇到People中的DepartmentId为空值的情况下</span></span><br><span class="line"><span class="comment">就不会返回记录何结果 </span></span><br><span class="line"><span class="comment">但是因为我在前面添加了非空约束和外键约束</span></span><br><span class="line"><span class="comment">所以一不会出现不对应的情况 二不会出现空值的情况*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*咨询员工信息  显示部门名称 */</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="comment">/**/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*咨询员工信息  显示职级名称 */</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*咨询员工信息 显示部门名称 显示职级名称*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"></span><br><span class="line"><span class="comment">/*简单多表咨询和内连接共同的特点：</span></span><br><span class="line"><span class="comment">不符合主外键关系的数据不会被显示出来</span></span><br><span class="line"><span class="comment">也就是我上面说的  不满足上面约束的数据 咨询不到</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*为了测试下面的外连接 和这里的内连接  现在我要手动删除外键约束</span></span><br><span class="line"><span class="comment">选择people表 然后选择关系 然后删除FK 接着插入下面的数据</span></span><br><span class="line"><span class="comment">insert into People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span></span><br><span class="line"><span class="comment">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span></span><br><span class="line"><span class="comment">values（99,99,&#x27;abc&#x27;,&#x27;男&#x27;,&#x27;1975-8-9&#x27;,&#x27;8000,&#x27;13556857548&#x27;,&#x27;香港&#x27;,getdate()）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> People(DepartmentId,RankId,PeopleName,PeopleGender,PeopleBirth,</span><br><span class="line">PeopleSalary,PeoplePhone,PeopleAddress,PeopleAddTime)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">99</span>,<span class="number">99</span>,<span class="string">&#x27;abc&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1975-8-9&#x27;</span>,<span class="number">8000</span>,<span class="string">&#x27;1351123465&#x27;</span>,<span class="string">&#x27;香港&#x27;</span>,getdate())</span><br><span class="line"></span><br><span class="line"><span class="comment">/*插入成功后 首先我们先来进行查询 会发现我们查询不到abc这条数据</span></span><br><span class="line"><span class="comment">说明不满足主外键关系的数据不会被显示在内连接和简单多表咨询里面</span></span><br><span class="line"><span class="comment">这两种连接 的本质就是根据主外键关系连接*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"><span class="comment">/**/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*外连接</span></span><br><span class="line"><span class="comment">外连接分成三类</span></span><br><span class="line"><span class="comment">左外连接</span></span><br><span class="line"><span class="comment">右外连接 </span></span><br><span class="line"><span class="comment">全外连接*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*咨询员工信息  显示部门名称 */</span></span><br><span class="line"><span class="comment">/*左外连接*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="comment">/*首先左外连接的语法就是把内连接的inner改成left</span></span><br><span class="line"><span class="comment">然后咨询之后发现这个 数据的变化就是</span></span><br><span class="line"><span class="comment">左边出现了上面添加的abc</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">然后我们进行以下分析</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">什么是左表？怎么看？</span></span><br><span class="line"><span class="comment">上面的左外连接 可以写成</span></span><br><span class="line"><span class="comment">People left join Department</span></span><br><span class="line"><span class="comment">这里 People表在left join 语句的左边 所以是左表</span></span><br><span class="line"><span class="comment">通过left join 语句分成左右两张表</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">什么是左外连接？</span></span><br><span class="line"><span class="comment">左外连接就是把左表的数据当主要参考点</span></span><br><span class="line"><span class="comment">也就是说左表中的每一列数据</span></span><br><span class="line"><span class="comment">都要在右表找到对应的值</span></span><br><span class="line"><span class="comment">在这个例子中</span></span><br><span class="line"><span class="comment">People是主表</span></span><br><span class="line"><span class="comment">abc这列数据在people中有 </span></span><br><span class="line"><span class="comment">所以生成的虚表中一定会有这一列</span></span><br><span class="line"><span class="comment">然后在department表中又找不到这一列对应的数据</span></span><br><span class="line"><span class="comment">所以就用null来表示</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">所以这类左外连接适用的范围就是对于左表中的每一行数据</span></span><br><span class="line"><span class="comment">都必须要找到他的对应关系的情况</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Department</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> People <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="comment">/*以department 作为主表</span></span><br><span class="line"><span class="comment">那么所有的部门都会显示出来</span></span><br><span class="line"><span class="comment">同时 没有人的部门会用null的样子来表示*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*咨询员工信息  显示职级名称 */</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*咨询员工信息 显示部门名称 显示职级名称*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"></span><br><span class="line"><span class="comment">/*右连 </span></span><br><span class="line"><span class="comment">A left join B = B right join A</span></span><br><span class="line"><span class="comment">右连 就是把右边的表格当成主表</span></span><br><span class="line"><span class="comment">然后查询出的结果中带着右边的表格中的每一列</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*下面两种咨询咨询出来的结果相同 </span></span><br><span class="line"><span class="comment">只是列显示的顺序不同 可以说是等价的*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> </span><br><span class="line">People <span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> </span><br><span class="line">Department <span class="keyword">right</span> <span class="keyword">join</span> People <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"></span><br><span class="line"><span class="comment">/*全外连</span></span><br><span class="line"><span class="comment">两张表的数据 无论是否符合关系 都要显示</span></span><br><span class="line"><span class="comment">在这个表的关系中</span></span><br><span class="line"><span class="comment">如果说left join 可以显示说有的人（无论这个人是否有部门</span></span><br><span class="line"><span class="comment">right join 可以显示所有的部门（无论部门是否有人</span></span><br><span class="line"><span class="comment">那么 full join 既可以显示所有的人 又可以显示 所有的部门</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> </span><br><span class="line">People <span class="keyword">full</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"></span><br><span class="line"><span class="comment">/*多表查询综合实例*/</span></span><br><span class="line"> <span class="comment">/*查询出武汉地区所有员工信息，要求显示部门名称以及员工的详细资料*/</span></span><br><span class="line"> <span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"> <span class="keyword">from</span> People</span><br><span class="line"> <span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId<span class="operator">=</span>Department.DepartmentId</span><br><span class="line"> <span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;武汉&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">select</span> <span class="operator">*</span> </span><br><span class="line"> <span class="keyword">from</span> People</span><br><span class="line"> <span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId<span class="operator">=</span>Department.DepartmentId</span><br><span class="line"> <span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;武汉&#x27;</span></span><br><span class="line"> <span class="comment">/*这里应该用哪一种连接方式 </span></span><br><span class="line"><span class="comment"> 如果用inner join 则如果有人位于武汉但是没有部门名称不会被显示</span></span><br><span class="line"><span class="comment"> 如果用left join 则没有部门名称会显示null*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/*咨询处武汉地区所有员工信息，要求显示部门名称</span></span><br><span class="line"><span class="comment"> 职级名称 以及员工的详细 资料*/</span></span><br><span class="line"> <span class="comment">/*这种情况就不需要考虑 肯定是用left join</span></span><br><span class="line"><span class="comment"> 因为可能出现有人没有部门编号 但是有职业级编号 的情况 */</span></span><br><span class="line"> <span class="keyword">select</span> PeopleName <span class="keyword">as</span> 姓名,</span><br><span class="line"> DepartmentName <span class="keyword">as</span> 部门名,</span><br><span class="line"> RankName <span class="keyword">as</span> 职级</span><br><span class="line"> <span class="keyword">from</span> People <span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"> <span class="keyword">left</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"> <span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;武汉&#x27;</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">select</span> PeopleName <span class="keyword">as</span> 姓名,</span><br><span class="line"> DepartmentName <span class="keyword">as</span> 部门名,</span><br><span class="line"> People.DepartmentId <span class="keyword">as</span> 部门编号,<span class="comment">/*</span></span><br><span class="line"><span class="comment"> 如果要写下面连接的子句的话 </span></span><br><span class="line"><span class="comment"> 一定要说明这个是左表还是右表里面的数据</span></span><br><span class="line"><span class="comment"> 虽然左表和右表里面到店数据理论上是相同的*/</span></span><br><span class="line"> RankName <span class="keyword">as</span> 职级</span><br><span class="line"> <span class="keyword">from</span> People <span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"> <span class="keyword">left</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"> <span class="keyword">where</span> PeopleAddress <span class="operator">=</span> <span class="string">&#x27;武汉&#x27;</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">/*根据部门分组同居员工人数</span></span><br><span class="line"><span class="comment"> 员工工资总和 平均工资 最高最低工资*/</span></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资,</span><br><span class="line">DepartmentName <span class="keyword">as</span> 部门名称</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Department.DepartmentId,Department.DepartmentName</span><br><span class="line"><span class="comment">/*这样会发现 有一条错误的数据 没有部门名称 不希望显示 所以改成内连接*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资,</span><br><span class="line">DepartmentName <span class="keyword">as</span> 部门名称</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.DepartmentId</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Department.DepartmentId,DepartmentName</span><br><span class="line"></span><br><span class="line"><span class="comment">/*根据部门分组统计员工人数</span></span><br><span class="line"><span class="comment">员工工资总和 平均工资 最高和最低工资</span></span><br><span class="line"><span class="comment">平均工资10000以下的不参与统计 并且根据平均工资降序排列*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资,</span><br><span class="line">DepartmentName <span class="keyword">as</span> 部门名称</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.Departmentid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> People.DepartmentId,DepartmentName</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">avg</span>(PeopleSalary) <span class="operator">&gt;=</span> <span class="number">10000</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 平均工资 <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*根据部门名称 然后根据职位名称</span></span><br><span class="line"><span class="comment">分组统计员工人数 员工工资总和 平均工资 最高最低工资*/</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 员工人数,</span><br><span class="line"><span class="built_in">sum</span>(PeopleSalary) <span class="keyword">as</span> 员工工资总和,</span><br><span class="line"><span class="built_in">avg</span>(PeopleSalary) <span class="keyword">as</span> 平均工资,</span><br><span class="line"><span class="built_in">max</span>(PeopleSalary) <span class="keyword">as</span> 最高工资,</span><br><span class="line"><span class="built_in">min</span>(PeopleSalary) <span class="keyword">as</span> 最低工资,</span><br><span class="line">DepartmentName <span class="keyword">as</span> 部门名称,</span><br><span class="line">Rankname <span class="keyword">as</span> 职级</span><br><span class="line"><span class="keyword">from</span> People</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> Department <span class="keyword">on</span> People.DepartmentId <span class="operator">=</span> Department.Departmentid</span><br><span class="line"><span class="keyword">inner</span> <span class="keyword">join</span> [Rank] <span class="keyword">on</span> People.RankId <span class="operator">=</span> [Rank].RankId</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> People.DepartmentId,People.RankId,DepartmentName,RankName</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">avg</span>(PeopleSalary) <span class="operator">&gt;=</span> <span class="number">10000</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 平均工资 <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*自连接</span></span><br><span class="line"><span class="comment">自己连自己*/</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Dept</span><br><span class="line">(</span><br><span class="line">DeptId <span class="type">int</span> <span class="keyword">Primary</span> key , <span class="comment">--部门编号</span></span><br><span class="line">DeptName <span class="type">varchar</span>(<span class="number">50</span>),<span class="comment">--部门名称</span></span><br><span class="line">ParentId <span class="type">int</span>,<span class="comment">--上级部门编号</span></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">DeptId DeptName ParentId</span></span><br><span class="line"><span class="comment">1       软件部    0</span></span><br><span class="line"><span class="comment">2硬件部  0</span></span><br><span class="line"><span class="comment">3软件研发部 1</span></span><br><span class="line"><span class="comment">4硬件测试部 2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*一级部门*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">1</span>,<span class="string">&#x27;软件部&#x27;</span>,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">2</span>,<span class="string">&#x27;硬件部&#x27;</span>,<span class="number">0</span>)</span><br><span class="line"><span class="comment">/*二级部门*/</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">3</span>,<span class="string">&#x27;软件研发部&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">4</span>,<span class="string">&#x27;软件测试部&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">5</span>,<span class="string">&#x27;软件实施部&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">6</span>,<span class="string">&#x27;硬件研发部&#x27;</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">7</span>,<span class="string">&#x27;硬件测试部&#x27;</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> Dept(DeptId,DeptName,ParentId)</span><br><span class="line"><span class="keyword">values</span> (<span class="number">8</span>,<span class="string">&#x27;硬件实施部&#x27;</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Dept</span><br><span class="line"><span class="comment">/*要查询每个部门的上级部门*/</span></span><br><span class="line"><span class="keyword">select</span> A.DeptId <span class="keyword">as</span> 部门编号,</span><br><span class="line">A.DeptName <span class="keyword">as</span> 部门名称,</span><br><span class="line">B.DeptName <span class="keyword">as</span> 上级部门</span><br><span class="line"><span class="keyword">from</span> Dept A</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Dept B <span class="keyword">on</span> A.ParentId <span class="operator">=</span> B.DeptId</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*视图*/</span></span><br><span class="line"><span class="comment">/*视图  可以理解陈 虚拟表</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*存储过程*/</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="其他课堂的代码"><a href="#其他课堂的代码" class="headerlink" title="其他课堂的代码"></a>其他课堂的代码</h2><h3 id="建库表"><a href="#建库表" class="headerlink" title="建库表"></a>建库表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 创建数据库 DB1</span></span><br><span class="line"><span class="keyword">CREATE</span> DATABASE DB1</span><br><span class="line"><span class="keyword">ON</span></span><br><span class="line">(</span><br><span class="line">    NAME <span class="operator">=</span> DB1_data,</span><br><span class="line">    FILENAME <span class="operator">=</span> <span class="string">&#x27;D:\SQL2019\数据库代码\Y24M9D29\DB1_data.mdf&#x27;</span>,</span><br><span class="line">    SIZE <span class="operator">=</span> <span class="number">30</span>MB,</span><br><span class="line">    MAXSIZE <span class="operator">=</span> <span class="number">100</span>MB,</span><br><span class="line">    FILEGROWTH <span class="operator">=</span> <span class="number">10</span><span class="operator">%</span></span><br><span class="line">)</span><br><span class="line">LOG <span class="keyword">ON</span></span><br><span class="line">(</span><br><span class="line">    NAME <span class="operator">=</span> DB1_log,</span><br><span class="line">    FILENAME <span class="operator">=</span> <span class="string">&#x27;D:\SQL2019\数据库代码\Y24M9D29\DB1_log.ldf&#x27;</span>,</span><br><span class="line">    SIZE <span class="operator">=</span> <span class="number">10</span>MB,</span><br><span class="line">    FILEGROWTH <span class="operator">=</span> <span class="number">20</span>MB</span><br><span class="line">);</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 检查数据库</span></span><br><span class="line"><span class="keyword">EXEC</span> sp_helpdb DB1;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 添加一个数据文件 DB1_data2，位置自定义，其他设置采用默认</span></span><br><span class="line"><span class="keyword">ALTER</span> DATABASE DB1</span><br><span class="line"><span class="keyword">ADD</span> FILE</span><br><span class="line">(</span><br><span class="line">    NAME <span class="operator">=</span> DB1_data2,</span><br><span class="line">    FILENAME <span class="operator">=</span> <span class="string">&#x27;D:\SQL2019\数据库代码\Y24M9D29\DB1_data2.ndf&#x27;</span></span><br><span class="line">);</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将数据文件 DB1_data2 扩大到 20MB</span></span><br><span class="line"><span class="keyword">ALTER</span> DATABASE DB1</span><br><span class="line">MODIFY FILE</span><br><span class="line">(</span><br><span class="line">    NAME <span class="operator">=</span> DB1_data2,</span><br><span class="line">    SIZE <span class="operator">=</span> <span class="number">20</span>MB</span><br><span class="line">);</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 使用数据库 DB1</span></span><br><span class="line">USE DB1;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表格 StudentT</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> StudentT (</span><br><span class="line">    sno <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    sname <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    sex <span class="type">CHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">    birthday <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    IDcard <span class="type">CHAR</span>(<span class="number">18</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    phone <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NULL</span>,</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> pk_Student <span class="keyword">PRIMARY</span> KEY (sno),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> uq_IDcard <span class="keyword">UNIQUE</span> (IDcard),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> chk_sex <span class="keyword">CHECK</span> (sex <span class="keyword">IN</span> (<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;女&#x27;</span>)),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> chk_birthday <span class="keyword">CHECK</span> (birthday <span class="operator">&lt;</span> GETDATE()),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> chk_phone_email <span class="keyword">CHECK</span> (phone <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">OR</span> email <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>)</span><br><span class="line">);</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 删除主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> pk_Student;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将学号字段的数据类型修改为定长8位字符型</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> sno <span class="type">CHAR</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 将学号字段的数据类型修改为 int 型</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> sno <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 重新创建主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> pk_Student <span class="keyword">PRIMARY</span> KEY (sno);</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建选课表 SC</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> SC (</span><br><span class="line">    sno <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    cno <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    score <span class="type">DECIMAL</span>(<span class="number">5</span>, <span class="number">2</span>) <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> pk_SC <span class="keyword">PRIMARY</span> KEY (sno, cno),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> chk_score <span class="keyword">CHECK</span> (score <span class="keyword">BETWEEN</span> <span class="number">0</span> <span class="keyword">AND</span> <span class="number">100</span>),</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> fk_sno <span class="keyword">FOREIGN</span> KEY (sno) <span class="keyword">REFERENCES</span> StudentT(sno)</span><br><span class="line">);</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建表格StudentT</span></span><br><span class="line"><span class="comment">--学号：snoint型不允许空</span></span><br><span class="line"><span class="comment">--姓名：sname变长20位字符型不允许空 </span></span><br><span class="line"><span class="comment">--性别：sex定长2位字符型不允许空 </span></span><br><span class="line"><span class="comment">--生日：birthday日期型不允许空</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 检查表是否存在，若存在则删除</span></span><br><span class="line">IF OBJECT_ID(<span class="string">&#x27;dbo.StudentT&#x27;</span>, <span class="string">&#x27;U&#x27;</span>) <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">DROP</span> <span class="keyword">TABLE</span> dbo.StudentT;</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表格 StudentT</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> StudentT (</span><br><span class="line">    sno <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,                 <span class="comment">-- 学号：int 型，不允许空</span></span><br><span class="line">    sname <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,      <span class="comment">-- 姓名：变长 20 位字符型，不允许空</span></span><br><span class="line">    sex <span class="type">CHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,            <span class="comment">-- 性别：定长 2 位字符型，不允许空</span></span><br><span class="line">    birthday <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,           <span class="comment">-- 生日：日期型，不允许空</span></span><br><span class="line">    <span class="keyword">CONSTRAINT</span> pk_Student <span class="keyword">PRIMARY</span> KEY (sno)  <span class="comment">-- 设置学号为主键</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--增加一个字段：身份证号码IDcard定长18位字符型不允许空A</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> IDcard <span class="type">CHAR</span>(<span class="number">18</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--增加2个字段：电话phone变长20位字符型允许空</span></span><br><span class="line"><span class="comment">--        邮箱email变长20位字符型允许空</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> phone <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NULL</span>,  <span class="comment">-- 增加电话字段，变长20位字符型，允许空</span></span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NULL</span>;  <span class="comment">-- 增加邮箱字段，变长20位字符型，允许空</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--删除一下主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT <span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> pk_Student;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--将学号字段的数据类型修改为定长8位字符型</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> sno <span class="type">CHAR</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--将学号设置为主键</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">PRIMARY</span> KEY(sno);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--删除与 sno 列相关的主键约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT <span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> PK_sno;</span><br><span class="line"></span><br><span class="line"><span class="comment">--将学号字段的数据类型修改为int型</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> sno <span class="type">INT</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"> <span class="keyword">ADD</span> <span class="keyword">PRIMARY</span> KEY(sno)</span><br><span class="line"></span><br><span class="line"><span class="comment">--将身份证号设为惟一</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> IDcard <span class="type">VARCHAR</span>(<span class="number">18</span>);</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">--将性别默认设为“男”</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> DF_sex <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--将性别字段规定为只能是“男”和“女”</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> CK_sex <span class="keyword">CHECK</span> (sex <span class="keyword">IN</span>(<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;女&#x27;</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--将生日字段规定为必须小于今天</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> CK_birthday <span class="keyword">CHECK</span> (birthday <span class="operator">&lt;</span> GETDATE());</span><br><span class="line"></span><br><span class="line"><span class="comment">--要求电话号码和邮箱不能同时为空</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="comment">--加上 with nocheck 达到的效果就是前面的情况不管看（非唯一约束）</span></span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> CK_phone_email <span class="keyword">CHECK</span> (phone <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">or</span> email <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--创建一张选课表SC，包含字段：</span></span><br><span class="line"><span class="comment">--学号：snoint型不可为空</span></span><br><span class="line"><span class="comment">--课程号：cnoint型不可为空</span></span><br><span class="line"><span class="comment">--成绩：score可保留2位小数可为空</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> sc(</span><br><span class="line">sno <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">cno <span class="type">int</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">score <span class="type">decimal</span>(<span class="number">5</span>,<span class="number">2</span>)<span class="keyword">null</span>,);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--将学号和课程号设为主键</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> sc</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> pk_SC <span class="keyword">primary</span> key (sno,cno);</span><br><span class="line"></span><br><span class="line"><span class="comment">--将成绩规定为0~100之间</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> sc</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> ck_score <span class="keyword">check</span>(score <span class="keyword">between</span> <span class="number">0</span> <span class="keyword">and</span> <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">--设置学号为外键</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> sc</span><br><span class="line"><span class="keyword">add</span> <span class="keyword">constraint</span> fk_sno <span class="keyword">foreign</span> key (sno) <span class="keyword">references</span> StudentT(sno);</span><br><span class="line"></span><br><span class="line"><span class="comment">--创建S表格</span></span><br><span class="line"><span class="comment">/*表名 S</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">列名 数据类型 长度 是否允许为空 默认值 说明</span></span><br><span class="line"><span class="comment">sid  char  8  不允许为空 主键</span></span><br><span class="line"><span class="comment">sname varchar 20 不允许 无</span></span><br><span class="line"><span class="comment">sex char 2 不允许 男 男，女</span></span><br><span class="line"><span class="comment">birthday date 3 不允许 无 必须小于今天</span></span><br><span class="line"><span class="comment">IDCard char 18 不允许  无 必须唯一</span></span><br><span class="line"><span class="comment">phone varchar 20 允许 无</span></span><br><span class="line"><span class="comment">email varchar 20 允许 无 Phone与email不能同时为空*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> S (</span><br><span class="line">    sid <span class="type">CHAR</span>(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    sname <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    sex <span class="type">CHAR</span>(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">CHECK</span> (sex <span class="keyword">IN</span> (<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;女&#x27;</span>)),</span><br><span class="line">    birthday <span class="type">DATE</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">CHECK</span> (birthday <span class="operator">&lt;</span> GETDATE()),</span><br><span class="line">    IDCard <span class="type">CHAR</span>(<span class="number">18</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">    phone <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NULL</span>,</span><br><span class="line">    email <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NULL</span>,</span><br><span class="line">    <span class="keyword">CONSTRAINT</span> CK_PhoneEmail <span class="keyword">CHECK</span> (phone <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">OR</span> email <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">--查看建表情况</span></span><br><span class="line"><span class="keyword">EXEC</span> sp_help <span class="string">&#x27;S&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--向学生表StudentT(在DB1数据库中）中添加字段“联系地址address变长50位字符型可为空默认为‘杭州市临安区青山湖街道杭电路1号’”</span></span><br><span class="line">USE DB1;  <span class="comment">-- 切换到 DB1 数据库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> address <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;杭州市临安区青山湖街道杭电路1号&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--向学生表中添加字段编号：id自动增长列不可为空</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> [PK__StudentT__DDDF644604DB6235];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">USE DB1;  <span class="comment">-- 切换到 DB1 数据库</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT</span><br><span class="line"><span class="keyword">ADD</span> id <span class="type">INT</span> <span class="keyword">IDENTITY</span>(<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY;</span><br><span class="line"><span class="comment">--出了点问题 清除一下</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> StudentT;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--向学生表StudentT中插入以下数据</span></span><br><span class="line"><span class="comment">--学号姓名性别生日身份证号电话邮箱地址</span></span><br><span class="line"><span class="comment">--1s1男1999-1-211111111                88166401                s1@163.com杭州</span></span><br><span class="line"><span class="comment">--2s2女1999-12-312222222288166402不知不知</span></span><br><span class="line"><span class="comment">--3s3默认1998-3-433333333不知s3@163.com不知</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> StudentT (sno, sname, sex, birthday, IDcard, phone, email, address)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;s1&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;1999-01-02&#x27;</span>, <span class="string">&#x27;11111111&#x27;</span>, <span class="string">&#x27;88166401&#x27;</span>, <span class="string">&#x27;s1@163.com&#x27;</span>, <span class="string">&#x27;杭州&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> StudentT (sno, sname, sex, birthday, IDcard, phone, email, address)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;s2&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1999-12-31&#x27;</span>, <span class="string">&#x27;22222222&#x27;</span>, <span class="string">&#x27;88166402&#x27;</span>, <span class="string">&#x27;不知&#x27;</span>, <span class="string">&#x27;不知&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> StudentT (sno, sname, sex, birthday, IDcard, phone, email, address)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;s3&#x27;</span>, <span class="string">&#x27;默认&#x27;</span>, <span class="string">&#x27;1998-03-04&#x27;</span>, <span class="string">&#x27;33333333&#x27;</span>, <span class="string">&#x27;不知&#x27;</span>, <span class="string">&#x27;s3@163.com&#x27;</span>, <span class="string">&#x27;不知&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> StudentT <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> sex <span class="type">VARCHAR</span>(<span class="number">4</span>);  </span><br><span class="line"></span><br><span class="line"><span class="keyword">EXEC</span> sp_help <span class="string">&#x27;StudentT&#x27;</span>;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--向表中继续插入数据：</span></span><br><span class="line"><span class="comment">--学号姓名性别生日身份证号电话邮箱地址</span></span><br><span class="line"><span class="comment">--4s4中2999-1-211111111                不知不知不知</span></span><br><span class="line"><span class="comment">--请观察成功插入后的编号值</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> StudentT (sno, sname, sex, birthday, IDcard, phone, email, address)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">&#x27;s4&#x27;</span>, <span class="string">&#x27;中&#x27;</span>, <span class="string">&#x27;2999-01-02&#x27;</span>, <span class="string">&#x27;11111111&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> StudentT;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--删除4号学生</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> StudentT <span class="keyword">WHERE</span> sno <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"><span class="comment">--DELETE FROM StudentT WHERE sno = 3;老师上课的代码 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--将2号同学的邮箱改为“s2@163.com”</span></span><br><span class="line"><span class="keyword">UPDATE</span> StudentT </span><br><span class="line"><span class="keyword">SET</span> email <span class="operator">=</span> <span class="string">&#x27;s2@163.com&#x27;</span> </span><br><span class="line"><span class="keyword">WHERE</span> sno <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--将3号同学的电话改为“88166403”</span></span><br><span class="line"><span class="keyword">UPDATE</span> StudentT </span><br><span class="line"><span class="keyword">SET</span> phone <span class="operator">=</span> <span class="string">&#x27;88166403&#x27;</span> </span><br><span class="line"><span class="keyword">WHERE</span> sno <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="简单查询"><a href="#简单查询" class="headerlink" title="简单查询"></a>简单查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--使用pubs数据库完成下面操作</span></span><br><span class="line"><span class="comment">--检索title表中的所有列</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> titles</span><br><span class="line"><span class="comment">--检索所有书的书的编号、书名、类型、价格</span></span><br><span class="line"><span class="keyword">select</span> title_id,title,type,price</span><br><span class="line"><span class="keyword">from</span>  titles</span><br><span class="line"><span class="comment">--在titles表中检索所有书的编号、单价、打7折后的价格</span></span><br><span class="line"><span class="keyword">SELECT</span> title_id <span class="keyword">as</span> <span class="string">&#x27;标号&#x27;</span>, price <span class="keyword">as</span> <span class="string">&#x27;原价&#x27;</span>, price <span class="operator">*</span> <span class="number">0.7</span> <span class="keyword">AS</span> <span class="string">&#x27;7折后的价格&#x27;</span> <span class="keyword">FROM</span> titles;</span><br><span class="line"><span class="comment">--在authors表中检索所有作者的编号、作者的姓名（firstname与lastname的组合）</span></span><br><span class="line"><span class="keyword">SELECT</span> au_id, CONCAT(au_fname, <span class="string">&#x27; &#x27;</span>, au_lname) <span class="keyword">AS</span> full_name <span class="keyword">FROM</span> authors;</span><br><span class="line"><span class="comment">--查询作者来自哪些州</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> state <span class="keyword">FROM</span> authors;</span><br><span class="line"><span class="comment">--查询作者来自哪些州、哪些城市</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> state, city <span class="keyword">FROM</span> authors;</span><br><span class="line"><span class="comment">--查询前面6本书的所有信息</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">6</span> <span class="operator">*</span> <span class="keyword">FROM</span> titles;</span><br><span class="line"><span class="comment">--查询前10%的书的所有信息</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">10</span> <span class="keyword">PERCENT</span> <span class="operator">*</span> <span class="keyword">FROM</span> titles;</span><br><span class="line"><span class="comment">--查询前面10本书的编号和单价</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">10</span> title_id, price <span class="keyword">FROM</span> titles;</span><br><span class="line"><span class="comment">--查询书的全部信息，按书的类型和价格升序排列</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> titles <span class="keyword">ORDER</span> <span class="keyword">BY</span> type <span class="keyword">ASC</span>, price <span class="keyword">ASC</span>;</span><br><span class="line"><span class="comment">--查询书的全部信息，按书的类型和价格降序排列</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> titles <span class="keyword">ORDER</span> <span class="keyword">BY</span> type <span class="keyword">DESC</span>, price <span class="keyword">DESC</span>;</span><br><span class="line"><span class="comment">--查询单价最高的10本书的信息</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">10</span><span class="operator">*</span> <span class="keyword">FROM</span> titles <span class="keyword">ORDER</span> <span class="keyword">BY</span> price <span class="keyword">DESC</span>;</span><br><span class="line"><span class="comment">--查询单价最高的5本书的信息（显示并列项）</span></span><br><span class="line"><span class="keyword">SELECT</span> TOP <span class="number">5</span> <span class="keyword">WITH</span> TIES <span class="operator">*</span>  <span class="comment">--这个就是显示并列项</span></span><br><span class="line"><span class="keyword">FROM</span> TITLES</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> price <span class="keyword">DESC</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--检索编号为’F-C16315M’的员工的编号、姓、名、雇佣日期</span></span><br><span class="line"><span class="keyword">SELECT</span> emp_id, lname, fname, hire_date <span class="keyword">FROM</span> employee <span class="keyword">WHERE</span> emp_id <span class="operator">=</span> <span class="string">&#x27;F-C16315M&#x27;</span>;</span><br><span class="line"><span class="comment">--查询authors表中所有居住在UT州的作者姓名和电话。（作者的姓名由au_fname和au_lname组合成，中间以空格分隔）</span></span><br><span class="line"><span class="keyword">SELECT</span> au_fname<span class="operator">+</span> <span class="string">&#x27; &#x27;</span><span class="operator">+</span> au_lname <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>,phone  <span class="keyword">as</span> <span class="string">&#x27;电话&#x27;</span></span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> state <span class="operator">=</span> <span class="string">&#x27;UT&#x27;</span>;</span><br><span class="line"><span class="comment">--查询单价小于10的书的所有信息</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> price <span class="operator">&lt;</span> <span class="number">10</span>;</span><br><span class="line"><span class="comment">--查询类型为’business’的书的书名和单价</span></span><br><span class="line"><span class="keyword">SELECT</span> title, price </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> type <span class="operator">=</span> <span class="string">&#x27;business&#x27;</span>;</span><br><span class="line"><span class="comment">--从表 titles 中，查找书名中包含字符串“computer”的书名。</span></span><br><span class="line"><span class="keyword">SELECT</span> title </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> title <span class="keyword">LIKE</span> <span class="string">&#x27;%computer%&#x27;</span>;</span><br><span class="line"><span class="comment">--从表 authors 中，查找au_fname以字符“D”打头的作者的姓、名。</span></span><br><span class="line"><span class="keyword">SELECT</span> au_lname, au_fname </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_fname <span class="keyword">LIKE</span> <span class="string">&#x27;D%&#x27;</span>;</span><br><span class="line"><span class="comment">--从表 authors 中，查找au_id类似于”72?-?”格式的作者的编号、姓、名、电话。</span></span><br><span class="line"><span class="keyword">SELECT</span> au_id, au_lname, au_fname, phone </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;72_-%&#x27;</span>;</span><br><span class="line"><span class="comment">--从表 authors 中，查找au_id的第2个数字是7的作者的编号、姓、名、电话。</span></span><br><span class="line"><span class="keyword">SELECT</span> au_id, au_lname, au_fname, phone </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;_7%&#x27;</span>;</span><br><span class="line"><span class="comment">--从表 authors 中，查找au_id只能是”723-?”、 ”724-?”、 ”725-?”格式 的作者的编号、姓、名、电话。</span></span><br><span class="line"><span class="keyword">SELECT</span> au_id, au_lname, au_fname, phone </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;723-%&#x27;</span> <span class="keyword">OR</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;724-%&#x27;</span> <span class="keyword">OR</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;725-%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> au_id, au_lname, au_fname, phone </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;72[3-5]-%&#x27;</span></span><br><span class="line"><span class="comment">--从表 authors 中，查找au_id的第1个数字是5-9中的一个，第2个数字是1-4中的一个的作者的编号、姓、名、电话。</span></span><br><span class="line"><span class="keyword">SELECT</span> au_id, au_lname, au_fname, phone </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;[5-9][1-4]%&#x27;</span>;</span><br><span class="line"><span class="comment">--从表 authors 中，查找au_id的第1个数字不是5-9中的一个，第2个数字不是1-4中的一个的作者的编号、姓、名、电话。</span></span><br><span class="line"><span class="keyword">SELECT</span> au_id, au_lname, au_fname, phone </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_id <span class="keyword">NOT</span> <span class="keyword">LIKE</span> <span class="string">&#x27;[5-9][1-4]%&#x27;</span>;</span><br><span class="line"><span class="keyword">SELECT</span> au_id, au_lname, au_fname, phone </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> au_id <span class="keyword">LIKE</span> <span class="string">&#x27;[^5-9][^1-4]%&#x27;</span>;</span><br><span class="line"><span class="comment">--查找书名中含有“computer”，或书的编号以“B”打头的书，且价格低于15的书的信息。</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> (title <span class="keyword">LIKE</span> <span class="string">&#x27;%computer%&#x27;</span> <span class="keyword">OR</span> title_id <span class="keyword">LIKE</span> <span class="string">&#x27;B%&#x27;</span>) </span><br><span class="line">  <span class="keyword">AND</span> price <span class="operator">&lt;</span> <span class="number">15</span>;</span><br><span class="line"><span class="comment">--从titles表中查询单价在15美元到20美元之间的书名和单价</span></span><br><span class="line"><span class="keyword">SELECT</span> title, price </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> price <span class="keyword">BETWEEN</span> <span class="number">15</span> <span class="keyword">AND</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> title, price </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> price <span class="operator">&gt;=</span><span class="number">15</span> <span class="keyword">and</span> price <span class="operator">&lt;=</span><span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> title, price </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> price <span class="keyword">not</span> <span class="keyword">BETWEEN</span> <span class="number">15</span> <span class="keyword">AND</span> <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> title, price </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> price <span class="operator">&lt;</span> <span class="number">15</span> <span class="keyword">or</span> price <span class="operator">&gt;</span><span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--从表 authors 中搜索state位于‘CA’,‘KS’,‘MI’,‘IN’的作者姓名和所在州。</span></span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(au_fname, <span class="string">&#x27; &#x27;</span>, au_lname) <span class="keyword">AS</span> full_name, state </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> state <span class="keyword">IN</span> (<span class="string">&#x27;CA&#x27;</span>, <span class="string">&#x27;KS&#x27;</span>, <span class="string">&#x27;MI&#x27;</span>, <span class="string">&#x27;IN&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(au_fname, <span class="string">&#x27; &#x27;</span>, au_lname) <span class="keyword">AS</span> full_name, state </span><br><span class="line"><span class="keyword">FROM</span> authors </span><br><span class="line"><span class="keyword">WHERE</span> state <span class="operator">=</span><span class="string">&#x27;CA&#x27;</span> <span class="keyword">or</span> state <span class="operator">=</span>  <span class="string">&#x27;KS&#x27;</span><span class="keyword">or</span> state <span class="operator">=</span>  <span class="string">&#x27;MI&#x27;</span><span class="keyword">or</span> state <span class="operator">=</span>  <span class="string">&#x27;IN&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--查询表 titles 中还没有定价格的书名和价格。</span></span><br><span class="line"><span class="keyword">SELECT</span> title, price </span><br><span class="line"><span class="keyword">FROM</span> titles </span><br><span class="line"><span class="keyword">WHERE</span> price <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line">use pubs</span><br><span class="line"></span><br><span class="line">use gradeManager</span><br><span class="line"><span class="comment">--自我练习部分（使用GradeManager数据库完成下面操作）</span></span><br><span class="line"><span class="comment">--（1）查询班级表（Class）的全部内容；</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> Class;</span><br><span class="line"><span class="comment">--（2）在学生表Student中查询学生姓名、所在班级。</span></span><br><span class="line"><span class="keyword">SELECT</span> sname, Clno </span><br><span class="line"><span class="keyword">FROM</span> Student;</span><br><span class="line"><span class="comment">--（3）找出01311班女学生的个人信息；</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> </span><br><span class="line"><span class="keyword">FROM</span> Student </span><br><span class="line"><span class="keyword">WHERE</span> Clno <span class="operator">=</span> <span class="string">&#x27;01311&#x27;</span> <span class="keyword">AND</span> Ssex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>;</span><br><span class="line"><span class="comment">--（4）找出所有被学生选修了的课程号；</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">distinct</span> cno</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（5）找出01311班和01312班的学生姓名、性别、出生年份；</span></span><br><span class="line"><span class="keyword">SELECT</span> sname, Ssex,<span class="keyword">year</span>(GETDATE())<span class="operator">-</span>sage <span class="keyword">as</span><span class="string">&#x27;出生年份&#x27;</span>  </span><br><span class="line"><span class="keyword">FROM</span> Student </span><br><span class="line"><span class="keyword">WHERE</span> Clno <span class="keyword">IN</span> (<span class="string">&#x27;01311&#x27;</span>, <span class="string">&#x27;01312&#x27;</span>);</span><br><span class="line"><span class="comment">--（6）找出所有姓李的学生的个人信息。</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> sname <span class="keyword">LIKE</span> <span class="string">&#x27;李%&#x27;</span>;  <span class="comment">-- 使用LIKE语句来查找姓李的学生</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="聚合与分组查询"><a href="#聚合与分组查询" class="headerlink" title="聚合与分组查询"></a>聚合与分组查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--使用pubs数据库完成下面操作</span></span><br><span class="line"><span class="comment">--查询titles表中类型是’popular_comp’的书的平均价格</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(price) <span class="keyword">as</span> avgprice</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">where</span> type <span class="operator">=</span> <span class="string">&#x27;popular_comp&#x27;</span></span><br><span class="line"><span class="comment">--查询publishers表中供应商的数量</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="string">&#x27;供应商的数量&#x27;</span></span><br><span class="line"><span class="keyword">from</span> publishers</span><br><span class="line"><span class="comment">--查询publishers表中供应商所在州的数量</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> state) <span class="keyword">as</span> 供应商所在州的数量</span><br><span class="line"><span class="keyword">from</span> publishers</span><br><span class="line"></span><br><span class="line"><span class="comment">--查询titles表中书的类型有几种</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="keyword">distinct</span> type) <span class="keyword">as</span> 书的类型有几种</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"></span><br><span class="line"><span class="comment">--按书的种类分类，求出各类书籍的数量</span></span><br><span class="line"><span class="keyword">select</span> type,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> book_count</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> type</span><br><span class="line"></span><br><span class="line"><span class="comment">--按书的种类分类，求出3种类型书籍‘business’,‘mod_cook’,‘trad_cook’的价格总和、平均价格以及该类书籍的数量</span></span><br><span class="line"><span class="keyword">select</span> type,</span><br><span class="line"><span class="built_in">sum</span>(price) <span class="keyword">as</span> total_price,</span><br><span class="line"><span class="built_in">avg</span>(price) <span class="keyword">as</span> avg_price,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> book_count</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">where</span> type <span class="keyword">in</span> (<span class="string">&#x27;business&#x27;</span>,<span class="string">&#x27;mod_cook&#x27;</span>,<span class="string">&#x27;trad_cook&#x27;</span>)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> type</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> book_count <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--按书的类型分类，查询每个出版商销售的书的</span></span><br><span class="line"><span class="comment">--平均价和总销售额 </span></span><br><span class="line"><span class="keyword">SELECT</span> type,pub_id <span class="keyword">as</span> pubid,<span class="built_in">AVG</span>(price) avgprice,<span class="built_in">SUM</span>(ytd_sales) total</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> type,pub_id</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> type,<span class="built_in">count</span>(<span class="keyword">distinct</span> pub_id),<span class="built_in">AVG</span>(price) avgprice,<span class="built_in">SUM</span>(ytd_sales) total</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> type</span><br><span class="line"><span class="comment">--按书的类型分类，查询平均价大于15的书的类型、平均价</span></span><br><span class="line"><span class="keyword">select</span> type,<span class="built_in">avg</span>(price)<span class="string">&#x27;平均价&#x27;</span></span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> type</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">avg</span>(price) <span class="operator">&gt;</span><span class="number">15</span>;</span><br><span class="line"><span class="comment">--从titles表中，查询得到总销售额（ytd_sales）超过  $40,000 的出版商。</span></span><br><span class="line"><span class="keyword">select</span> pub_id</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> pub_id</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">sum</span>(ytd_sales)<span class="operator">&gt;</span><span class="number">40000</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--从titles表中，查询得到至少出版六本书的出版商及其总销售额。</span></span><br><span class="line"><span class="keyword">select</span>  pub_id,</span><br><span class="line"><span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> 书数,</span><br><span class="line"><span class="built_in">SUM</span>(ytd_sales) <span class="keyword">as</span> 总额</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> pub_id</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">&gt;=</span><span class="number">6</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--从titles表中，查询标识号大于 0800、支付的总预付款已超过 $15,000 且销售书籍的平均价格小于 $20 的出版商。 </span></span><br><span class="line"><span class="keyword">select</span>  pub_id</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">where</span> title_id <span class="operator">&gt;</span> <span class="string">&#x27;0800&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> pub_id</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">sum</span>(advance) <span class="operator">&gt;</span><span class="number">15000</span> <span class="keyword">and</span> <span class="built_in">AVG</span>(price) <span class="operator">&lt;</span><span class="number">20</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">use GradeManager</span><br><span class="line"><span class="comment">--自我练习1（使用GradeManager数据库完成下面操作）</span></span><br><span class="line"><span class="comment">--（1）计算选2号课程的学生平均成绩，保留2位小数</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">convert</span>(<span class="type">decimal</span>(<span class="number">5</span>,<span class="number">2</span>),<span class="built_in">AVG</span>(Gmark)) <span class="keyword">as</span> avggrade</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">where</span> Cno <span class="operator">=</span> <span class="string">&#x27;2&#x27;</span></span><br><span class="line"><span class="comment">--（2）求各课程相应的选课人数，显示课程号和选课人数</span></span><br><span class="line"><span class="keyword">select</span> Cno <span class="keyword">as</span> 课程号 ,<span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 选课人数</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Cno</span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）计算有人选修的每门课程的平均成绩，显示课程号和平均成绩</span></span><br><span class="line"><span class="keyword">select</span> Cno <span class="keyword">as</span> 课程号,<span class="built_in">AVG</span>(Gmark) <span class="keyword">as</span> avg_grades</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Cno</span><br><span class="line"><span class="comment">--（4）计算参加过考试的每个学生的平均成绩</span></span><br><span class="line"><span class="keyword">select</span> sno <span class="keyword">as</span> 学号,<span class="built_in">AVG</span>(gmark) <span class="keyword">as</span> 平均成绩</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">where</span> gmark <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="comment">--（5）求选课人数最多的课程号及选课人数</span></span><br><span class="line"><span class="keyword">select</span>  top <span class="number">1</span> </span><br><span class="line">cno <span class="keyword">as</span> 课程号,</span><br><span class="line"><span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">as</span> 选课人数</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cno</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 选课人数 <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--（6）求平均成绩大于86分的学生学号及平均成绩</span></span><br><span class="line"><span class="keyword">select</span> sno <span class="keyword">as</span> 学号,</span><br><span class="line"><span class="built_in">AVG</span>(gmark) <span class="keyword">as</span> 平均成绩</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">avg</span>(gmark) <span class="operator">&gt;</span> <span class="number">86</span></span><br><span class="line"><span class="comment">--统计过后的判断用having语句而不是where</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--自我练习2</span></span><br><span class="line"><span class="comment">--（1）统计每年每个专业的班级数</span></span><br><span class="line"><span class="keyword">select</span> inyear <span class="keyword">as</span> 年份 ,</span><br><span class="line">speciality <span class="keyword">as</span> 专业,</span><br><span class="line"><span class="built_in">count</span>(<span class="keyword">distinct</span> Clno) <span class="keyword">as</span> 班级数</span><br><span class="line"><span class="keyword">from</span> Class</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> inyear,speciality</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> inyear <span class="keyword">as</span> 年份 ,</span><br><span class="line">speciality <span class="keyword">as</span> 专业,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 班级数</span><br><span class="line"><span class="keyword">from</span> Class</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> inyear,speciality</span><br><span class="line"></span><br><span class="line"><span class="comment">--（2）统计每年每个专业的班级数及学生人数</span></span><br><span class="line"><span class="keyword">select</span> inyear <span class="keyword">as</span> 年份 ,</span><br><span class="line">speciality <span class="keyword">as</span> 专业,</span><br><span class="line"><span class="built_in">count</span>(<span class="keyword">distinct</span> Clno) <span class="keyword">as</span> 班级数,</span><br><span class="line"><span class="built_in">sum</span>(number) <span class="keyword">as</span> 学生人数</span><br><span class="line"><span class="keyword">from</span> Class</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> inyear,speciality</span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）统计每个班级19岁以上的男生人数，显示班级号和人数</span></span><br><span class="line"><span class="keyword">select</span> clno <span class="keyword">as</span> 班级号 ,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 男生人数</span><br><span class="line"><span class="keyword">from</span> Student</span><br><span class="line"><span class="keyword">where</span> Ssex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span> <span class="keyword">and</span> sage <span class="operator">&gt;</span><span class="number">19</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Clno</span><br><span class="line"></span><br><span class="line"><span class="comment">--（4）统计每门课程，显示平均分高于85分的课程号及平均分</span></span><br><span class="line"><span class="keyword">select</span> cno <span class="keyword">as</span> 课程号,</span><br><span class="line"><span class="built_in">avg</span>(gmark) <span class="keyword">as</span> 平均分</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">avg</span> (gmark)<span class="operator">&gt;</span> <span class="number">85</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--（5）显示没有一门功课不及格的学生的学号</span></span><br><span class="line"><span class="keyword">select</span> sno <span class="keyword">as</span> 学号</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">min</span>(gmark) <span class="operator">&gt;=</span><span class="number">60</span></span><br><span class="line"><span class="comment">--（6）统计选课人数低于3人且平均分低于80分的课程号</span></span><br><span class="line"><span class="keyword">select</span> cno <span class="keyword">as</span> 课程号</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">&lt;</span> <span class="number">3</span> <span class="keyword">and</span> <span class="built_in">AVG</span>(Gmark) <span class="operator">&lt;</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--（7）统计80分（含）以上成绩最多的学生学号</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">1</span> sno <span class="keyword">as</span>  学号,</span><br><span class="line"><span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> 成绩数量</span><br><span class="line"><span class="keyword">from</span> Grade</span><br><span class="line"><span class="keyword">where</span> gmark <span class="operator">&gt;=</span> <span class="number">80</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 成绩数量 <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（8）显示”李勇”同学所选课程的课程号和成绩</span></span><br><span class="line"><span class="keyword">select</span> cno <span class="keyword">as</span> 课程号,</span><br><span class="line">gmark <span class="keyword">as</span> 成绩</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">where</span> sno <span class="operator">=</span> (<span class="keyword">select</span> sno <span class="keyword">from</span> Student <span class="keyword">where</span> Sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> cno <span class="keyword">as</span> 课程号,</span><br><span class="line">gmark <span class="keyword">as</span> 成绩</span><br><span class="line"><span class="keyword">from</span> grade <span class="keyword">join</span> student <span class="keyword">on</span> grade.Sno<span class="operator">=</span>student.Sno</span><br><span class="line"><span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--使用GradeManager数据库完成下面操作</span></span><br><span class="line"><span class="comment">--（1）查询学生“李勇”选修的课程号</span></span><br><span class="line"><span class="keyword">select</span> cno</span><br><span class="line"><span class="keyword">from</span> grade g <span class="keyword">join</span> student s <span class="keyword">on</span> g.Sno <span class="operator">=</span> s.sno</span><br><span class="line"><span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span></span><br><span class="line"><span class="comment">--（2）查询学生“李勇”选修课程的平均分</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(gmark)<span class="string">&#x27;平均分&#x27;</span></span><br><span class="line"><span class="keyword">from</span> grade g <span class="keyword">join</span> Student s <span class="keyword">on</span> s.Sno <span class="operator">=</span> g.Sno</span><br><span class="line"><span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）查询成绩大于80分的学生的姓名</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> sname</span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno <span class="operator">=</span> g.sno</span><br><span class="line"><span class="keyword">where</span> Gmark<span class="operator">&gt;</span><span class="number">80</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（4）查询没有一门考试科目成绩低于70分的学生的姓名</span></span><br><span class="line"><span class="keyword">select</span> sname </span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno<span class="operator">=</span>g.Sno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sno,sname</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">min</span>(gmark)<span class="operator">&gt;=</span><span class="number">70</span></span><br><span class="line"><span class="comment">--（5）查询选了课的每位同学的总学分，显示学号和总学分</span></span><br><span class="line"><span class="keyword">select</span> sno,<span class="built_in">sum</span>(credit)<span class="string">&#x27;总学分&#x27;</span></span><br><span class="line"><span class="keyword">from</span> Course c <span class="keyword">join</span> Grade g <span class="keyword">on</span> c.cno<span class="operator">=</span>g.cno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> Sno</span><br><span class="line"><span class="comment">--（6）查询选课人数最多的课程号、课程名</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">1</span>  c.cno ,c.cname</span><br><span class="line"><span class="keyword">from</span> grade g</span><br><span class="line"><span class="keyword">join</span> Course c <span class="keyword">on</span> g.Cno <span class="operator">=</span> c.Cno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> c.cno,c.Cname</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">count</span>(g.cno) <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（7）查询选课人数超过2人且平均分高于75分的课程号、课程名</span></span><br><span class="line"><span class="keyword">select</span> c.cno,cname</span><br><span class="line"><span class="keyword">from</span> grade g <span class="keyword">join</span> course c <span class="keyword">on</span> c.Cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> c.Cno,</span><br><span class="line">Cname</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="operator">&gt;</span> <span class="number">2</span> <span class="keyword">and</span> <span class="built_in">AVG</span>(Gmark) <span class="operator">&gt;</span><span class="number">75</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（8）查询所有学生的选课号和成绩。</span></span><br><span class="line"><span class="keyword">select</span> cno,gmark</span><br><span class="line"><span class="keyword">from</span> grade g <span class="keyword">right</span> <span class="keyword">join</span> Student s <span class="keyword">on</span> g.sno <span class="operator">=</span> s.sno</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    g.Sno, </span><br><span class="line">    g.Cno, </span><br><span class="line">    g.Gmark</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">    Grade g;</span><br><span class="line"></span><br><span class="line"><span class="comment">--(子)查询选修了数据库和离散数学课程的同学信息，显示学生学号、姓名。</span></span><br><span class="line"><span class="keyword">select</span> g1.sno</span><br><span class="line"><span class="keyword">from</span> Grade g1</span><br><span class="line"><span class="keyword">join</span> Course c1 <span class="keyword">on</span> g1.Cno <span class="operator">=</span> c1.Cno</span><br><span class="line"><span class="keyword">join</span> grade g2 <span class="keyword">on</span> g1.sno <span class="operator">=</span> g2.Sno</span><br><span class="line"><span class="keyword">join</span> Course c2 <span class="keyword">on</span> g2.Cno <span class="operator">=</span> c2.Cno</span><br><span class="line"><span class="keyword">where</span> c1.Cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span></span><br><span class="line"><span class="keyword">and</span> c2.Cname <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> g1.Sno</span><br><span class="line"><span class="keyword">having</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span></span><br><span class="line">(<span class="keyword">select</span> top <span class="number">2</span> s.sno,sname,cname,gmark</span><br><span class="line"><span class="keyword">from</span> grade g <span class="keyword">join</span> student s <span class="keyword">on</span> s.sno <span class="operator">=</span> g.Sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">where</span> cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> gmark <span class="keyword">desc</span>) <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="keyword">select</span> top <span class="number">2</span> s.sno,sname,cname,gmark</span><br><span class="line"><span class="keyword">from</span> grade g <span class="keyword">join</span> student s <span class="keyword">on</span> s.sno <span class="operator">=</span> g.Sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">where</span> cname <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> gmark <span class="keyword">desc</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> s.sno,sname</span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno <span class="operator">=</span> g.sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">where</span> cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span> <span class="keyword">or</span> cname <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> s.sno,sname</span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno <span class="operator">=</span> g.sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">where</span> cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span> <span class="keyword">or</span> cname <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> s.sno,sname</span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno <span class="operator">=</span> g.sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">where</span> cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span>  <span class="keyword">and</span> s.sno <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> sno</span><br><span class="line"><span class="keyword">from</span>  grade g <span class="keyword">join</span> course c <span class="keyword">on</span> c.cno <span class="operator">=</span> g.Cno</span><br><span class="line"><span class="keyword">where</span>  cname <span class="operator">=</span> <span class="string">&#x27;离散数学&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--自我练习</span></span><br><span class="line"><span class="comment">--（1）查看全部选课信息，显示学生姓名、课程名、成绩</span></span><br><span class="line"><span class="keyword">select</span> sname,cname,gmark</span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno <span class="operator">=</span> g.Sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> c.cno<span class="operator">=</span>g.Cno</span><br><span class="line"><span class="comment">--（2）查看所有学生的选课情况，显示学生姓名、课程名、成绩</span></span><br><span class="line"><span class="keyword">select</span> s.sname,</span><br><span class="line">c.cname,</span><br><span class="line">g.gmark</span><br><span class="line"><span class="keyword">from</span> grade g</span><br><span class="line"><span class="keyword">join</span> Student s <span class="keyword">on</span> g.Sno <span class="operator">=</span> s.Sno</span><br><span class="line"><span class="keyword">join</span> Course c <span class="keyword">on</span> g.Cno <span class="operator">=</span> c.Cno</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> s.sname,</span><br><span class="line">c.cname,</span><br><span class="line">g.gmark</span><br><span class="line"><span class="keyword">from</span> student s <span class="keyword">left</span> <span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno<span class="operator">=</span>g.sno</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> course c <span class="keyword">on</span> c.Cno <span class="operator">=</span> g.Cno</span><br><span class="line"><span class="comment">--（3）查看所有课程的选课人数，显示课程名、选课人数</span></span><br><span class="line"><span class="keyword">SELECT</span> c.Cname <span class="keyword">AS</span> 课程名, <span class="built_in">COUNT</span>(g.Sno) <span class="keyword">AS</span> 选课人数</span><br><span class="line"><span class="keyword">FROM</span> Course c</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> Grade g <span class="keyword">ON</span> c.Cno <span class="operator">=</span> g.Cno</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> c.Cname;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> c.cname <span class="keyword">as</span> 课程名,</span><br><span class="line"><span class="built_in">count</span>(g.sno) <span class="keyword">as</span> 选课人数</span><br><span class="line"><span class="keyword">from</span> Course c</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Grade g <span class="keyword">on</span> c.cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> c.Cname</span><br><span class="line"></span><br><span class="line"><span class="comment">--（4）查看所有学生的选课总学分，显示学生姓名、总学分</span></span><br><span class="line"><span class="keyword">select</span> sname <span class="keyword">as</span> 学生姓名,</span><br><span class="line">isnull(<span class="built_in">SUM</span>(c.Credit), <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Course c</span><br><span class="line"><span class="keyword">join</span> grade g <span class="keyword">on</span> c.cno <span class="operator">=</span> g.Cno</span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span> Student s  <span class="keyword">on</span> s.Sno <span class="operator">=</span> g.Sno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sno,sname</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="子查询和高级数据操作"><a href="#子查询和高级数据操作" class="headerlink" title="子查询和高级数据操作"></a>子查询和高级数据操作</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--使用GradeManger数据库完成下面操作</span></span><br><span class="line"><span class="comment">--（1）查询李勇的成绩</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> gmark</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">where</span> sno <span class="operator">=</span>(</span><br><span class="line"><span class="keyword">select</span> sno</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--（2）查询参加了两次考试以上的学生姓名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sname <span class="keyword">from</span> Student <span class="keyword">where</span> sno <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> Sno</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(Gmark) <span class="operator">&gt;=</span> <span class="number">2</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）查询没有参加任何一门考试的学生姓名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sname <span class="keyword">from</span> Student <span class="keyword">where</span> sno <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> Sno</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(Gmark) <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sname <span class="keyword">from</span> Student <span class="keyword">where</span> sno <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> Sno</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sno</span><br><span class="line"><span class="keyword">having</span> <span class="built_in">count</span>(Gmark) <span class="operator">!=</span> <span class="number">0</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--（4）查询王一鸣高于其所有课程平均分的那些课程的课程名和成绩</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> cno,gmark</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">where</span> sno <span class="operator">=</span>(</span><br><span class="line"><span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;王一鸣&#x27;</span>)</span><br><span class="line"><span class="keyword">and</span> Gmark <span class="operator">&gt;</span></span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">AVG</span>(gmark)</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">where</span> sno <span class="operator">=</span>(</span><br><span class="line"><span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;王一鸣&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> cname,gmark</span><br><span class="line"><span class="keyword">from</span> course c <span class="keyword">join</span></span><br><span class="line">(<span class="keyword">select</span> cno,gmark</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">where</span> sno<span class="operator">=</span>(<span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> sname<span class="operator">=</span><span class="string">&#x27;王一鸣&#x27;</span>)</span><br><span class="line"><span class="keyword">and</span> gmark<span class="operator">&gt;</span></span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">avg</span>(gmark)</span><br><span class="line"><span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">where</span> sno<span class="operator">=</span>(<span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> sname<span class="operator">=</span><span class="string">&#x27;王一鸣&#x27;</span>))) <span class="keyword">as</span> t</span><br><span class="line"><span class="keyword">on</span> c.cno<span class="operator">=</span>t.cno</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（5）查询王一鸣高于其所选课程平均分的那些课程的课程名和成绩</span></span><br><span class="line"><span class="keyword">select</span> cname,gmark</span><br><span class="line"><span class="keyword">from</span> course c <span class="keyword">join</span> </span><br><span class="line">(<span class="keyword">select</span> cno,gmark</span><br><span class="line"><span class="keyword">from</span> Grade g1</span><br><span class="line"><span class="keyword">where</span> sno <span class="operator">=</span>  (<span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;王一鸣&#x27;</span>)</span><br><span class="line"><span class="keyword">and</span> gmark <span class="operator">&gt;</span></span><br><span class="line">(<span class="keyword">select</span> <span class="built_in">avg</span>(gmark)</span><br><span class="line"><span class="keyword">from</span> grade g2</span><br><span class="line"><span class="keyword">where</span> g2.cno <span class="operator">=</span> g1.cno )) <span class="keyword">as</span> t </span><br><span class="line"><span class="keyword">on</span> c.cno <span class="operator">=</span> t.cno</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--数据高级操作练习</span></span><br><span class="line"><span class="comment">--（1）将李勇的数据库课程的成绩上调5分。</span></span><br><span class="line"><span class="keyword">update</span> grade</span><br><span class="line"><span class="keyword">set</span> gmark <span class="operator">=</span>  gmark <span class="operator">+</span><span class="number">5</span></span><br><span class="line"><span class="keyword">where</span> sno <span class="operator">=</span> </span><br><span class="line">(<span class="keyword">select</span> sno <span class="keyword">from</span> student <span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;李勇&#x27;</span>)</span><br><span class="line"><span class="keyword">and</span> cno <span class="operator">=</span> (<span class="keyword">select</span> cno <span class="keyword">from</span> course <span class="keyword">where</span> cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（2）将没有一门考试不及格的学生的各门课成绩上调5分。</span></span><br><span class="line"><span class="keyword">update</span> grade</span><br><span class="line"><span class="keyword">set</span> gmark <span class="operator">=</span>  gmark <span class="operator">+</span><span class="number">0</span></span><br><span class="line"><span class="keyword">where</span> sno <span class="keyword">in</span></span><br><span class="line">(<span class="keyword">select</span> sno <span class="keyword">from</span> grade  <span class="keyword">group</span> <span class="keyword">by</span> sno <span class="keyword">having</span> <span class="built_in">min</span>(gmark) <span class="operator">&gt;=</span><span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）将01311班的班长更改为贾向东</span></span><br><span class="line"><span class="keyword">update</span> class</span><br><span class="line"><span class="keyword">set</span> monitor <span class="operator">=</span> (</span><br><span class="line"><span class="keyword">select</span> sno <span class="keyword">from</span> Student <span class="keyword">where</span> sname <span class="operator">=</span> <span class="string">&#x27;贾向东&#x27;</span>)</span><br><span class="line"><span class="keyword">where</span> clno <span class="operator">=</span> <span class="number">01311</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(price) <span class="keyword">from</span> titles </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> price,price<span class="operator">-</span>(<span class="keyword">select</span> <span class="built_in">avg</span>(price) <span class="keyword">from</span> titles )</span><br><span class="line"><span class="keyword">from</span> titles</span><br><span class="line"><span class="keyword">where</span> title_id <span class="operator">=</span> <span class="string">&#x27;BU1111&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> title</span><br><span class="line"><span class="keyword">from</span> titles t <span class="keyword">join</span> sales s <span class="keyword">on</span> t.title_id <span class="operator">=</span> s.title_id</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">year</span>(ord_date) <span class="operator">=</span> <span class="number">1993</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> title <span class="keyword">from</span> titles <span class="keyword">where</span> title_id <span class="keyword">in</span>(</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> title_id</span><br><span class="line"><span class="keyword">from</span> sales</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">year</span>(ord_date) <span class="operator">=</span> <span class="number">1993</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="视图和存储过程"><a href="#视图和存储过程" class="headerlink" title="视图和存储过程"></a>视图和存储过程</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--视图练习</span></span><br><span class="line"><span class="comment">--使用GradeManger数据库，完成下面操作</span></span><br><span class="line"><span class="comment">--（1）建立00312班选了数据库课程并且成绩不及格的学生信息视图Stu_cs(包括学生学号、姓名、性别、成绩)</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> Stu_cs <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> s.sno <span class="keyword">as</span> 学号,</span><br><span class="line">s.sname <span class="keyword">as</span> 姓名,</span><br><span class="line">s.ssex <span class="keyword">as</span> 性别,</span><br><span class="line">g.gmark <span class="keyword">as</span> 成绩</span><br><span class="line"><span class="keyword">from</span> Student s <span class="keyword">join</span> Grade G <span class="keyword">on</span> S.sno <span class="operator">=</span> g.sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> g.cno <span class="operator">=</span> c.Cno</span><br><span class="line"><span class="keyword">where</span> s.clno <span class="operator">=</span> <span class="string">&#x27;00312&#x27;</span></span><br><span class="line"><span class="keyword">and</span> c.cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span></span><br><span class="line"><span class="keyword">and</span> g.gmark <span class="operator">&lt;</span> <span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">exec</span> sp_help <span class="string">&#x27;Stu_cs&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--（2）查询00312班选了数据库课程并且成绩不及格的学生的学号、姓名</span></span><br><span class="line"><span class="keyword">select</span> s.sno <span class="keyword">as</span> 学号,</span><br><span class="line">s.sname <span class="keyword">as</span> 姓名</span><br><span class="line"><span class="keyword">from</span> Student s</span><br><span class="line"><span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno <span class="operator">=</span> g.sno</span><br><span class="line"><span class="keyword">join</span> course c <span class="keyword">on</span> G.cno <span class="operator">=</span> c.cno</span><br><span class="line"><span class="keyword">where</span> s.clno <span class="operator">=</span> <span class="string">&#x27;00312&#x27;</span></span><br><span class="line"><span class="keyword">and</span> c.cname <span class="operator">=</span> <span class="string">&#x27;数据库&#x27;</span></span><br><span class="line"><span class="keyword">and</span> g.gmark <span class="operator">&lt;</span><span class="number">60</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> 学号,姓名 <span class="keyword">from</span> Stu_cs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--查00312班，学生学号和选课数</span></span><br><span class="line"><span class="keyword">create</span> proc up_XK</span><br><span class="line"><span class="variable">@clno</span> <span class="type">char</span>(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> s.sno,<span class="built_in">count</span>(cno)选课数</span><br><span class="line"><span class="keyword">from</span> grade g <span class="keyword">join</span> student s <span class="keyword">on</span> g.sno<span class="operator">=</span>s.sno</span><br><span class="line"><span class="keyword">where</span> clno<span class="operator">=</span><span class="variable">@clno</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sno</span><br><span class="line"></span><br><span class="line"><span class="keyword">exec</span> up_XK <span class="string">&#x27;01311&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）创建视图vw_XK，查看所有学生的选课数，显示学生学号、姓名和选课数</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">view</span> vw_XK <span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> s.sno <span class="keyword">as</span> 学号,</span><br><span class="line">s.sname <span class="keyword">as</span> 姓名,</span><br><span class="line"><span class="built_in">count</span>(G.cno) <span class="keyword">as</span> 选课数</span><br><span class="line"><span class="keyword">from</span> Student S</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> Grade G <span class="keyword">on</span> s.sno <span class="operator">=</span> g.sno</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sno, s.sname</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> vw_XK</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（4）创建视图vw_01311，查询01311班的学生信息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">view</span> vw_01311 <span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> s.sno <span class="keyword">as</span> 学号,</span><br><span class="line">s.sname <span class="keyword">as</span> 姓名,</span><br><span class="line">s.ssex <span class="keyword">as</span> 性别,</span><br><span class="line">s.sage <span class="keyword">as</span> 年龄,</span><br><span class="line">s.Clno <span class="keyword">as</span> 班级号</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> vw_01311 <span class="keyword">where</span> 班级号 <span class="operator">=</span> <span class="string">&#x27;01311&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> Stu_cs</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> vw_XK</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--存储过程练习</span></span><br><span class="line"><span class="comment">--（1）根据学号，得到该学号的选课情况，包括课程名和成绩 </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> GetCourseInfoBySno</span><br><span class="line">    <span class="variable">@student_id</span> <span class="type">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="keyword">SELECT</span> C.Cname, G.Gmark</span><br><span class="line">    <span class="keyword">FROM</span> Grade G</span><br><span class="line">    <span class="keyword">JOIN</span> Course C <span class="keyword">ON</span> G.Cno <span class="operator">=</span> C.Cno</span><br><span class="line">    <span class="keyword">WHERE</span> G.Sno <span class="operator">=</span> <span class="variable">@student_id</span>;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> proc up_xkBySno</span><br><span class="line"><span class="variable">@sno</span> <span class="type">char</span>(<span class="number">7</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> cname,gmark</span><br><span class="line"><span class="keyword">from</span> course c <span class="keyword">join</span> grade g <span class="keyword">on</span> c.cno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">where</span> sno<span class="operator">=</span><span class="variable">@sno</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">exec</span> up_xkBySno <span class="string">&#x27;2000101&#x27;</span></span><br><span class="line"><span class="comment">--（2）根据学号、课程号，得到该学生该课程的成绩</span></span><br><span class="line"><span class="keyword">create</span> proc up_CJbYNo</span><br><span class="line"><span class="variable">@sno</span> <span class="type">char</span>(<span class="number">7</span>),</span><br><span class="line"><span class="variable">@cno</span> <span class="type">char</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> gmark <span class="keyword">from</span> grade</span><br><span class="line"><span class="keyword">where</span> sno <span class="operator">=</span> <span class="variable">@sno</span></span><br><span class="line"><span class="keyword">and</span> cno <span class="operator">=</span> <span class="variable">@cno</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">exec</span> up_CJbYNo <span class="string">&#x27;2000101&#x27;</span>,<span class="string">&#x27;1&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">--（3）根据班级号，查询该系每位学生总学分，显示学号、姓名、总学分</span></span><br><span class="line"><span class="keyword">create</span> proc up_SumXF</span><br><span class="line"><span class="variable">@clno</span> <span class="type">char</span>(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> s.sno,sname,<span class="built_in">sum</span>(Credit) 总学分</span><br><span class="line"><span class="keyword">from</span> Student  s  </span><br><span class="line"><span class="keyword">join</span> grade g <span class="keyword">on</span> s.sno <span class="operator">=</span> g.cno</span><br><span class="line"><span class="keyword">join</span> Course c  <span class="keyword">on</span> c.cno <span class="operator">=</span> g.Cno</span><br><span class="line"><span class="keyword">where</span> clno <span class="operator">=</span> <span class="variable">@clno</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.Sno,Sname</span><br><span class="line"></span><br><span class="line"><span class="keyword">exec</span> up_SumXF <span class="string">&#x27;01311&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--（4）根据学生学号、课程号，修改该生该课程成绩为新的成绩</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> proc up_Updatecj</span><br><span class="line"><span class="variable">@sno</span> <span class="type">char</span>(<span class="number">7</span>),<span class="variable">@cno</span> <span class="type">char</span>(<span class="number">1</span>),<span class="variable">@newgmark</span> <span class="type">decimal</span>(<span class="number">4</span>,<span class="number">1</span>)</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">update</span> grade</span><br><span class="line"><span class="keyword">set</span> gmark<span class="operator">=</span><span class="variable">@newgmark</span></span><br><span class="line"><span class="keyword">where</span> sno<span class="operator">=</span><span class="variable">@sno</span> <span class="keyword">and</span> cno<span class="operator">=</span><span class="variable">@cno</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">exec</span> up_Updatecj <span class="string">&#x27;2000101&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="number">100</span></span><br><span class="line"><span class="keyword">exec</span> up_cjbyno<span class="string">&#x27;2000101&#x27;</span>,<span class="string">&#x27;1&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="知识点复习"><a href="#知识点复习" class="headerlink" title="知识点复习"></a>知识点复习</h2><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/f0a7fb8eecd9c6e277499eb05cc0eba.jpg" alt="f0a7fb8eecd9c6e277499eb05cc0eba"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/ccb6d95adc6d4f2df5a238437177f6b.jpg" alt="ccb6d95adc6d4f2df5a238437177f6b"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://site.shupianjun.fun/">薯片の前端小窝</a></p><p>上面的蓝字是一个神奇的传送门，你可以试试看点击一下</p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>吉他自学成长记录</title>
      <link href="/posts/1564132a.html"/>
      <url>/posts/1564132a.html</url>
      
        <content type="html"><![CDATA[<h2 id="这里记录吉他自学生涯，按照时间线发布"><a href="#这里记录吉他自学生涯，按照时间线发布" class="headerlink" title="这里记录吉他自学生涯，按照时间线发布"></a>这里记录吉他自学生涯，按照时间线发布</h2><h2 id="《I-Really-want-to-stay-at-your-house》"><a href="#《I-Really-want-to-stay-at-your-house》" class="headerlink" title="《I Really want to stay at  your house》"></a>《I Really want to stay at  your house》</h2><p>又名寡妇歌</p><p>2023-02-10，看完边缘行者之后，辗转反侧，起身拿起吉他，在屋外录下了这一段</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1FG4y1M743/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《龙卷风》"><a href="#《龙卷风》" class="headerlink" title="《龙卷风》"></a>《龙卷风》</h2><p>原告：周杰伦<br>买早饭的时候看到了不错的风景，有感而发回去录的。<br>有一说一水杉路的锅贴真是一绝。</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1d94y1Y7Bz/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《一路向北-》"><a href="#《一路向北-》" class="headerlink" title="《一路向北 》"></a>《一路向北 》</h2><p>原告:周杰伦<br>不要问为什么不唱，我学吉他第一节课第一次弹唱第一次张嘴之后，老师就告诉我我生来就是干指弹的，干不了弹唱。</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1C94y1x7AT/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《Flower-Dance》"><a href="#《Flower-Dance》" class="headerlink" title="《Flower Dance》"></a>《Flower Dance》</h2><p>薯片吉他生涯前半生的集大成之作<br>第一段可能还只是感情的沉淀<br>第二段开始的变调直接变成了纯粹的秀技</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1tT4y1h7w4/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《sprial》"><a href="#《sprial》" class="headerlink" title="《sprial》"></a>《sprial》</h2><p>第一次尝试vlog形式，明白了vlog是整不好剪</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1yzqVY5EcP/?vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《花の塔》"><a href="#《花の塔》" class="headerlink" title="《花の塔》"></a>《花の塔》</h2><p>永远怀念穿蓝色雨衣的少女</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV18kD6YPE26/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"薯片菌のBlog","short_name":"薯片菌","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/app966.css"/>
      <url>/css/app966.css</url>
      
        <content type="html"><![CDATA[/* 这里是设置一个全局透明度，不然不太协调，可以根据自己的喜好修改 */:root {    --card-bg: rgba(255, 255, 255, 0.3);}[data-theme='dark'] #web_bg {  background: url('https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/wp10775144-city-anime-night-sky-wallpapers.jpg');  background-size: cover;}/* 适配手机模式 */@media (max-width: 768px) {[data-theme='dark'] #web_bg {    background: url('https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/wp10775144-city-anime-night-sky-wallpapers.jpg');    background-size: cover;  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;}div#menus {    font-family: "ZhuZiAYuanJWD";}h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;}a.article-title,a.blog-slider__title,a.categoryBar-list-link,h1.post-title {    font-family: ZhuZiAYuanJWD;}.iconfont {    font-family: "iconfont" !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;}/* 时间轴生肖icon */svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;}.icon-zhongbiao::before {    color: #f7c768;}/* bilibli番剧插件 */#article-container .bangumi-tab.bangumi-active {    background: var(--anzhiyu-theme);    color: var(--anzhiyu-ahoverbg);    border-radius: 10px;}a.bangumi-tab:hover {    text-decoration: none !important;}.bangumi-button:hover {    background: var(--anzhiyu-theme) !important;    border-radius: 10px !important;    color: var(--anzhiyu-ahoverbg) !important;}a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;}.bangumi-button {    padding: 5px 10px !important;}a.bangumi-tab {    padding: 5px 10px !important;}svg.icon.faa-tada {    font-size: 1.1em;}.bangumi-info-item {    border-right: 1px solid #f2b94b;}.bangumi-info-item span {    color: #f2b94b;}.bangumi-info-item em {    color: #f2b94b;}/* 解决artitalk的图标问题 */#uploadSource>svg {    width: 1.19em;    height: 1.5em;}/*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */#page-header:not(.not-top-img):before {    background-color: transparent !important;}/* 首页文章卡片 */#recent-posts>.recent-post-item {    background: rgba(255, 255, 255, 0.9);}/* 首页侧栏卡片 */#aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);}/* 文章页面正文背景 */div#post {    background: rgba(255, 255, 255, 0.9);}/* 分页页面 */div#page {    background: rgba(255, 255, 255, 0.9);}/* 归档页面 */div#archive {    background: rgba(255, 255, 255, 0.9);}/* 标签页面 */div#tag {    background: rgba(255, 255, 255, 0.9);}/* 分类页面 */div#category {    background: rgba(255, 255, 255, 0.9);}/*夜间模式伪类遮罩层透明*/[data-theme="dark"] #recent-posts>.recent-post-item {    background: #121212;}[data-theme="dark"] .card-widget {    background: #121212 !important;}[data-theme="dark"] div#post {    background: #121212 !important;}[data-theme="dark"] div#tag {    background: #121212 !important;}[data-theme="dark"] div#archive {    background: #121212 !important;}[data-theme="dark"] div#page {    background: #121212 !important;}[data-theme="dark"] div#category {    background: #121212 !important;}[data-theme="dark"] div#category {    background: transparent !important;}/* 页脚透明 */#footer {    background: transparent !important;}/* 头图透明 */#page-header {    background: transparent !important;}#rightside>div>button {    border-radius: 5px;}/* 滚动条 */::-webkit-scrollbar {    width: 10px;    height: 10px;}::-webkit-scrollbar-thumb {    background-color: #3b70fc;    border-radius: 2em;}::-webkit-scrollbar-corner {    background-color: transparent;}::-moz-selection {    color: #fff;    background-color: #3b70fc;}/* 音乐播放器 *//* .aplayer .aplayer-lrc {    display: none !important;  } */.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */}.aplayer.aplayer-fixed {    z-index: 999999 !important;}/* 评论框  */.vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;}/* 设置评论框 */.vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;}/* md网站下划线 */#article-container a:hover {    text-decoration: none !important;}#article-container #hpp_talk p img {    display: inline;}/* 404页面 */#error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);}#error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;}#error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #3b70fc;    background-position: center;    background-size: cover;}#error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;}#error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;}#error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;}#error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);}#body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;}#body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;}#body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;}#body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;}#body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--anzhiyu-card-bg);    display: flex;}#body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;}#body-wrap.error .aside-list .aside-list-item .content time {    display: none;}/* 代码框主题 */#article-container figure.highlight {    border-radius: 10px;}/*B站视频适配*//*哔哩哔哩视频适配*/.aspect-ratio {    position: relative;    width: 100%;    height: 0;    padding-bottom: 75%;    margin: 3% auto;    text-align: center;  }  .aspect-ratio iframe {    position: absolute;    width: 100%;    height: 100%;    left: 0;    top: 0;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/title.js"/>
      <url>/js/title.js</url>
      
        <content type="html"><![CDATA[//动态标题var OriginTitile = document.title;var titleTime;document.addEventListener("visibilitychange", function () {  if (document.hidden) {    //离开当前页面时标签显示内容    document.title = "w(ﾟДﾟ)w 不要走！再看看嘛！";    clearTimeout(titleTime);  } else {    //返回当前页面时标签显示内容    document.title = "♪(^∇^*)欢迎肥来❤️！" + OriginTitile;    //两秒后变回正常标题    titleTime = setTimeout(function () {      document.title = OriginTitile;    }, 2000);  }});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/ali_font.js"/>
      <url>/js/ali_font.js</url>
      
        <content type="html"><![CDATA[!(function (c) {    var l,        h,        a,        t,        i,        v =            '<svg><symbol id="icon-dragon_chen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-498.122105 265.620211L431.157895 754.526316V485.052632h-66.074948c-14.470737 110.645895-44.355368 197.066105-102.696421 260.742736l-39.747368-36.432842C306.526316 617.876211 323.368421 462.901895 323.368421 242.526316V215.578947h377.263158v53.894737H377.182316c-0.404211 58.260211-2.209684 112.128-6.359579 161.684211H700.631579v53.894737h-122.152421a481.172211 481.172211 0 0 0 76.826947 119.70021l66.479158-39.855158 27.728842 46.214737-54.460631 32.687158c29.507368 24.953263 63.757474 45.675789 102.80421 58.098526l-16.303158 51.361684c-134.224842-42.711579-222.773895-167.073684-261.551158-268.207157H485.052632v221.857684l68.985263-41.391158 27.728842 46.214737-109.783579 65.886316zM646.736842 377.263158h-215.578947v-53.894737h215.578947v53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-dog_xu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-375.592421 150.393263c33.684211 44.544 75.210105 74.698105 124.739369 90.812632l11.425684 3.718737 10.401684-6.009264C781.204211 727.740632 808.421053 622.565053 808.421053 592.842105h-53.894737c0 22.069895-19.132632 80.869053-33.711158 103.504842-34.816-14.605474-64.538947-39.262316-89.249684-74.13221 48.316632-55.269053 92.079158-117.328842 120.535579-179.900632l-49.044211-22.285473c-23.767579 52.250947-59.742316 104.717474-100.055579 152.656842-24.010105-50.930526-41.148632-115.927579-51.658105-195.395369H700.631579v-53.894737h-155.189895A1848.050526 1848.050526 0 0 1 538.947368 161.684211h-53.894736c0 58.206316 2.155789 112.074105 6.494315 161.68421H323.368421v26.947368c0 216.549053-13.177263 263.545263-100.702316 359.046737l39.747369 36.432842c63.326316-69.093053 92.806737-118.272 105.714526-206.848H485.052632v-53.894736h-111.319579a1742.147368 1742.147368 0 0 0 3.449263-107.789474h120.158316c12.611368 98.250105 35.031579 177.475368 67.395368 238.187789-61.978947 65.536-128.053895 117.975579-173.298526 142.282106l25.519158 47.481263c47.589053-25.573053 114.095158-77.446737 177.55621-142.821053z m125.170526-411.971368l-80.842105-80.842106-38.103579 38.103579 80.842105 80.842106 38.103579-38.103579z" fill="#231F20" ></path></symbol><symbol id="icon-dog" viewBox="0 0 1024 1024"><path d="M894.814316 904.434526l83.240421-183.134315-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939369-185.263158-0.134737-7.922526-0.134737-33.953684-0.134736-55.996631-30.693053 15.306105-70.090105 19.887158-106.09179 19.887157-92.752842 0-163.624421-23.983158-210.647579-71.275789a192.512 192.512 0 0 1-27.944421-36.513684H377.263158v377.263158c342.662737 0 403.105684 51.092211 494.592 128.377263 7.922526 6.682947 15.521684 13.312 22.959158 19.86021z" fill="#85C3DE" ></path><path d="M326.063158 282.947368c0 34.250105-13.231158 44.463158-29.642105 44.463158s-29.642105-10.213053-29.642106-44.463158c0-34.223158 13.231158-44.463158 29.642106-44.463157s29.642105 10.24 29.642105 44.463157zM269.473684 430.295579v311.646316L190.275368 916.210526h59.203369L323.368421 753.637053V377.263158h-26.947368c-119.403789 0-172.732632-53.382737-185.505685-107.789474h35.624421c51.092211 0 68.581053-15.764211 120.535579-62.544842 12.773053-11.506526 28.079158-25.276632 47.023158-41.741474l18.351158-15.952842-69.658947-99.139368-44.085895 30.989474 41.768421 59.472842c-11.183158 9.862737-20.884211 18.593684-29.480421 26.327579C180.736 212.156632 176.235789 215.578947 146.539789 215.578947H53.894737v26.947369c0 88.710737 66.910316 178.149053 215.578947 187.769263z m216.710737-161.414737c2.290526 71.733895 28.698947 136.326737 75.048421 182.918737C618.711579 509.628632 702.437053 538.947368 810.091789 538.947368c18.593684 0 36.190316-1.158737 52.628211-3.449263 3.745684 111.265684 33.630316 170.334316 51.496421 196.015158l-38.507789 84.722526C782.174316 742.049684 688.774737 700.631579 377.263158 700.631579v53.894737c34.277053 0 65.697684 0.512 94.639158 1.509052L374.595368 970.105263h59.203369l96.013474-211.240421c66.182737 4.338526 117.005474 11.829895 157.911578 22.016L626.229895 916.210526h59.176421l54.16421-119.134315c47.616 18.405053 79.737263 42.091789 113.125053 69.739789L805.753263 970.105263h59.203369l113.071157-248.778105-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939368-185.263158C985.168842 498.553263 1024 447.811368 1024 377.263158c0-95.205053-66.506105-161.684211-161.684211-161.684211v53.894737c65.482105 0 107.789474 42.307368 107.789474 107.789474 0 89.088-87.013053 107.789474-160.013474 107.789474-92.752842 0-163.624421-23.983158-210.647578-71.27579-30.315789-30.504421-45.891368-65.832421-53.35579-98.735158 11.210105 6.952421 22.932211 13.338947 35.274105 19.186527l23.04-48.720843c-92.106105-43.654737-148.992-128.646737-219.243789-243.981473l-46.026105 28.05221c49.448421 81.246316 92.968421 148.506947 147.051789 199.302737z" fill="#231F20" ></path></symbol><symbol id="icon-goat" viewBox="0 0 1024 1024"><path d="M548.378947 646.736842a952.32 952.32 0 0 1 140.90779-161.68421H107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L66.721684 754.526316h417.172211c20.345263-41.472 43.654737-77.446737 64.485052-107.789474z" fill="#F7C768" ></path><path d="M608.256 144.734316C555.762526 115.577263 506.098526 107.789474 485.052632 107.789474V53.894737c32.579368 0 91.270737 11.452632 149.369263 43.735579 75.290947 41.822316 130.694737 94.531368 171.385263 150.878316C755.873684 288.013474 697.101474 323.368421 646.736842 323.368421h-107.789474v-53.894737h107.789474c20.506947 0 48.424421-11.210105 80.437895-31.285895a471.04 471.04 0 0 0-118.918737-93.453473zM832.673684 342.231579c-16.384 0-29.642105 10.24-29.642105 44.463158 0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642105-44.463158c0-34.223158-13.231158-44.463158-29.642105-44.463158zM1024 619.789474C1024 347.109053 901.066105 122.448842 686.753684 3.395368l-26.165895 47.104C914.324211 191.461053 964.688842 440.400842 969.647158 592.842105h-84.506947c-17.92-35.624421-45.352421-69.12-87.013053-101.995789l-16.788211-13.285053-16.734315 13.392842c-66.128842 52.897684-134.629053 127.083789-187.311158 209.677474H102.965895l-8.272842-20.318316C159.043368 617.013895 161.684211 603.109053 161.684211 485.052632v-53.894737h485.052631v-53.894737H161.684211c0-80.384 14.309053-110.026105 66.586947-137.916632l-25.384421-47.535158C123.365053 234.226526 107.789474 291.920842 107.789474 377.263158v107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L110.618947 862.315789h58.206316l-43.897263-107.789473h103.477895l43.897263 107.789473h58.206316l-43.897263-107.789473h259.47621C508.981895 824.939789 485.052632 899.152842 485.052632 970.105263h53.894736c0-68.688842 27.270737-144.060632 68.958316-215.578947H687.157895c7.410526 0 13.473684 6.063158 13.473684 13.473684V862.315789h53.894737v-94.315789c0-37.160421-30.208-67.368421-67.368421-67.368421h-44.65179c40.771368-58.017684 89.438316-111.427368 138.913684-153.626947C841.512421 600.037053 862.315789 655.225263 862.315789 754.526316h53.894737c0-38.912-2.748632-74.482526-11.102315-107.789474H1024v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-goat_wei" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 50.202947c52.304842 70.925474 136.973474 152.144842 232.528843 190.383158l19.994947-50.041263c-109.271579-43.708632-202.805895-152.629895-238.780632-217.49221H808.421053v-53.894737H538.947368v-53.894737h215.578948v-53.894737h-215.578948V161.684211h-53.894736v161.68421h-215.578948v53.894737h215.578948v53.894737H215.578947v53.894737h255.757474c-35.974737 64.862316-129.536 173.783579-238.807579 217.49221l20.021895 50.041263c95.528421-38.238316 180.197053-119.484632 232.501895-190.383158V808.421053h53.894736v-246.218106z" fill="#231F20" ></path></symbol><symbol id="icon-dragon" viewBox="0 0 1024 1024"><path d="M366.376421 344.441263l152.980211-152.98021c43.142737-43.142737 141.204211-9.216 270.201263 115.738947-15.225263 9.835789-25.114947 15.818105-44.13979 32.256s-38.076632 35.489684-59.418947 56.832c-4.203789 4.203789-51.173053 53.221053-78.740211 82.027789-10.805895-12.126316-22.743579-24.171789-34.654315-36.082526L493.136842 362.792421l-54.218105 54.218105-72.542316-72.569263zM862.315789 512c0 46.834526-45.352421 80.842105-107.789473 80.842105-108.948211 0-189.359158-28.806737-267.129263-56.697263C414.100211 509.871158 344.872421 485.052632 258.182737 485.052632 80.788211 485.052632 0 588.126316 0 683.897263h53.894737C73.216 659.779368 135.302737 646.736842 177.340632 646.736842c77.338947 0 223.124211 23.282526 291.893894 47.912421C547.462737 722.701474 615.989895 754.526316 734.315789 754.526316 862.315789 754.526316 916.210526 670.315789 916.210526 512h-53.894737z" fill="#FF8787" ></path><path d="M552.421053 1024c-69.766737 0-113.825684-13.958737-156.402527-27.459368-54.487579-17.273263-110.807579-35.004632-232.421052-26.516211l-3.826527-53.733053c131.718737-9.458526 195.934316 10.967579 252.52379 28.887579 42.226526 13.365895 78.686316 24.926316 140.126316 24.926316 92.752842 0 148.210526-57.936842 148.210526-113.960421 0-16.949895-5.524211-101.618526-114.634105-101.618526-64.970105 0-112.747789 23.336421-163.328 48.02021C365.325474 830.571789 300.301474 862.315789 204.288 862.315789 85.908211 862.315789 0 787.294316 0 683.897263 0 588.126316 80.788211 485.052632 258.182737 485.052632c86.689684 0 155.917474 24.818526 229.214316 51.09221 45.810526 16.410947 92.564211 33.172211 145.488842 44.166737 9.000421-7.033263 13.850947-16.276211 13.850947-26.758737 0-37.187368-37.672421-74.859789-74.13221-111.265684l-3.287579-3.287579 38.103579-38.103579 3.260631 3.287579C652.853895 446.275368 700.631579 494.026105 700.631579 553.552842c0 12.719158-2.802526 24.926316-7.976421 36.109474A594.997895 594.997895 0 0 0 754.526316 592.842105c62.437053 0 107.789474-34.007579 107.789473-80.842105 0-58.853053-52.870737-110.268632-108.840421-164.702316l-8.057263-7.841684c-19.024842 16.437895-38.076632 35.489684-59.418947 56.832l-38.103579-38.103579c74.805895-74.832842 134.898526-134.898526 268.314947-141.931789V55.619368c-63.407158 7.787789-120.993684 39.424-121.667368 39.801264l-15.818105 8.811789-14.120421-11.344842C731.701895 66.452211 709.712842 53.894737 673.684211 53.894737c-41.418105 0-74.347789 25.869474-109.190737 53.301895-26.624 20.911158-54.137263 42.549895-86.851369 53.194105L469.342316 161.684211h-69.093053l-105.525895 105.525894-38.103579-38.130526L324.015158 161.684211H161.684211V107.789474h303.104c22.231579-8.272842 43.708632-25.168842 66.398315-42.981053C569.829053 34.438737 613.618526 0 673.684211 0c48.909474 0 81.408 17.946947 110.888421 40.097684C813.702737 26.300632 877.729684 0 943.157895 0h26.947368v323.368421h-53.894737v-53.167158c-54.164211 3.098947-92.914526 15.845053-127.002947 36.675369l1.832421 1.778526C852.587789 368.505263 916.210526 430.376421 916.210526 512c0 60.928-43.708632 109.945263-107.789473 127.622737V700.631579h53.894736v-53.894737h53.894737v53.894737h53.894737v53.894737h-53.894737v53.894737h-53.894737v-53.894737h-53.894736c-29.722947 0-53.894737-24.171789-53.894737-53.894737v-53.894737c-118.325895 0-207.063579-31.797895-285.318737-59.877053C400.437895 562.229895 335.494737 538.947368 258.182737 538.947368 117.059368 538.947368 53.894737 611.732211 53.894737 683.897263 53.894737 757.221053 115.738947 808.421053 204.288 808.421053c11.910737 0 23.228632-0.538947 34.034526-1.536C248.454737 796.321684 269.473684 770.640842 269.473684 739.166316c0-33.118316-43.088842-70.979368-58.152421-81.596632l30.935579-44.139789c8.299789 5.793684 81.111579 58.664421 81.111579 125.736421 0 19.429053-4.527158 37.052632-10.994526 52.304842 30.773895-10.051368 58.314105-23.498105 86.662737-37.349053C452.877474 727.848421 508.577684 700.631579 585.997474 700.631579 702.410105 700.631579 754.526316 778.725053 754.526316 856.144842 754.526316 938.657684 678.912 1024 552.421053 1024z m-21.180632-623.104L493.136842 362.792421l137.889684-137.889684 38.103579 38.103579-137.889684 137.889684z m-126.760421-18.351158l-38.103579-38.103579 152.980211-152.98021 38.103579 38.103579-152.980211 152.98021z m282.004211-218.624c15.494737-9.754947 43.331368-31.447579 43.331368-31.447579-25.734737-27.809684-49.556211-33.333895-67.368421-29.07621-19.240421 4.608-37.753263 24.602947-37.753263 24.602947s42.253474 22.447158 61.790316 35.920842z" fill="#231F20" ></path></symbol><symbol id="icon-horse" viewBox="0 0 1024 1024"><path d="M776.003368 646.736842c16.599579-99.947789 43.439158-181.086316 83.213474-256.538947l6.817684-12.934737H269.473684c-36.756211 0-53.894737 54.945684-53.894737 92.05221 0 46.753684 6.656 77.527579 70.278737 176.074106l84.533895 128.269473L498.876632 646.736842h277.126736z" fill="#FFAF6E" ></path><path d="M1024 0v404.210526c0 33.333895 0 134.736842-92.079158 134.736842h-13.824l-78.362947-109.056c-22.743579 49.906526-40.340211 103.046737-53.490527 162.950737h115.092211C937.310316 592.842105 970.105263 625.637053 970.105263 661.638737c0 60.631579-69.389474 154.300632-77.312 164.75621l-43.008-32.471579C875.466105 759.861895 916.210526 693.813895 916.210526 661.638737c0-5.982316-8.919579-14.901895-14.901894-14.901895h-125.332211C761.128421 736.121263 754.526316 840.569263 754.526316 970.105263h-53.894737c0-283.971368 31.097263-453.605053 110.888421-605.049263l20.318316-38.534737 112.801684 156.995369c14.443789-4.419368 25.465263-20.938105 25.465263-79.306106V0h53.894737z m-161.684211 161.684211h53.894737V0h-53.894737v80.842105c-17.381053-14.955789-38.184421-26.947368-80.842105-26.947368h-134.736842v53.894737h134.736842c37.672421 0 80.842105 40.906105 80.842105 53.894737z m-107.789473 0h-215.578948v53.894736h161.684211l53.894737-53.894736zM300.894316 766.544842L400.680421 916.210526h64.754526l-95.043368-142.551579L498.876632 646.736842h167.855157a1212.631579 1212.631579 0 0 1 9.431579-53.894737h-199.383579l-175.885473 173.702737z m109.97221-184.400842l-37.861052-38.319158-132.419369 130.802526C173.729684 571.095579 161.684211 529.812211 161.684211 469.315368 161.684211 398.578526 199.464421 323.368421 269.473684 323.368421h323.368421l53.894737-53.894737H269.473684c-6.709895 0-13.258105 0.565895-19.698526 1.482105C234.927158 249.451789 204.638316 215.578947 160.633263 215.578947 65.967158 215.578947 0 349.291789 0 469.315368c0 70.170947 16.141474 136.650105 49.232842 202.671158L6.197895 723.833263l41.472 34.41179 66.128842-79.737264-8.704-16.033684C83.105684 622.133895 53.894737 558.214737 53.894737 469.315368 53.894737 368.451368 106.765474 269.473684 160.633263 269.473684c13.231158 0 25.815579 9.889684 35.43579 20.533895C142.874947 321.967158 107.789474 388.500211 107.789474 469.315368c0 78.201263 19.698526 130.937263 93.642105 243.981474l-55.296 54.622316L280.899368 970.105263h64.754527l-130.048-195.072 195.260631-192.889263z" fill="#231F20" ></path></symbol><symbol id="icon-monkey_shen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 134.736842h161.684211v53.894737h53.894737V269.473684h-215.578948V161.684211h-53.894736v107.789473h-215.578948v431.157895h53.894737v-53.894737h161.684211v215.578947h53.894736v-215.578947z m0-161.68421h161.684211v107.789473h-161.684211v-107.789473z m-215.578947 0h161.684211v107.789473h-161.684211v-107.789473z m215.578947-161.684211h161.684211v107.789474h-161.684211v-107.789474z m-215.578947 0h161.684211v107.789474h-161.684211v-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-ox_chou" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-161.68421 188.631579h-159.555369c13.985684-172.813474 43.115789-357.429895 70.817684-385.158737L700.631579 269.473684H323.368421v53.894737h107.169684c-1.940211 45.756632-8.192 103.962947-15.76421 161.684211H323.368421v53.894736h83.968c-9.862737 68.446316-20.264421 130.128842-25.734737 161.684211H215.578947v53.894737h592.842106v-53.894737z m-346.543158-161.684211h149.800421a3313.717895 3313.717895 0 0 0-16.842105 161.684211h-158.477474c6.036211-35.247158 16.114526-95.636211 25.519158-161.684211z m22.608842-215.578947h171.735579c-15.198316 41.121684-27.405474 100.594526-36.890948 161.684211h-150.123789c7.383579-57.505684 13.419789-115.361684 15.279158-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-monkey" viewBox="0 0 1024 1024"><path d="M757.733053 485.052632H565.894737a80.842105 80.842105 0 0 0-80.842105 80.842105v215.578947c0 40.96 43.546947 99.678316 77.446736 139.210105C596.426105 960.215579 603.055158 970.105263 603.055158 970.105263H754.526316s15.144421-18.674526 45.891368-58.071579S862.315789 809.984 862.315789 717.608421c0-89.573053-47.993263-166.346105-104.582736-232.555789z" fill="#C3D686" ></path><path d="M538.947368 1024h-53.894736c0-32.794947 25.869474-87.417263 77.446736-103.316211C528.599579 881.152 485.052632 822.433684 485.052632 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h80.842105v53.894737h-80.842105a26.947368 26.947368 0 0 0-26.947369 26.947368c0 19.725474 36.675368 77.473684 92.133053 134.736842h88.602947c20.210526-14.147368 88.737684-71.464421 88.737685-198.602105 0-108.382316-93.237895-202.967579-168.151579-278.986105-49.502316-50.202947-88.576-89.842526-98.735158-128.61979-11.749053-44.732632-21.584842-112.586105-26.327579-148.318315H377.263158c-45.136842 0-89.519158 8.434526-121.802105 53.894736H431.157895v53.894737c-97.28 0-107.789474 113.071158-107.789474 161.684211v53.894737h53.894737v161.68421h-53.894737v-107.789474h-26.947368c-170.253474 0-188.631579-94.234947-188.631579-134.736842 0-31.043368 35.220211-72.326737 55.727158-93.722947 2.694737-14.686316 5.847579-28.348632 9.431579-41.013895H161.684211V215.578947h31.528421C239.642947 120.993684 317.224421 107.789474 377.263158 107.789474h185.640421l2.802526 23.794526c0.134737 1.050947 12.719158 106.657684 27.944421 164.756211 6.494316 24.872421 44.624842 63.514947 84.965053 104.448C760.481684 483.813053 862.315789 587.129263 862.315789 717.608421c0 92.375579-31.124211 155.028211-61.898105 194.425263C904.919579 892.146526 970.105263 803.004632 970.105263 673.684211c0-91.405474-42.819368-154.381474-84.237474-215.255579C847.791158 402.458947 808.421053 344.576 808.421053 269.473684c0-119.349895 87.093895-161.684211 161.68421-161.68421v53.894737c-32.417684 0-107.789474 10.509474-107.789474 107.789473 0 58.502737 31.555368 104.933053 68.096 158.639158C974.282105 492.597895 1024 565.679158 1024 673.684211c0 177.286737-108.301474 296.421053-269.473684 296.421052h-161.684211c-37.672421 0-53.894737 40.906105-53.894737 53.894737zM229.214316 269.473684a384.808421 384.808421 0 0 0-14.012632 58.341053l-1.401263 8.488421-6.090105 6.117053c-22.878316 22.932211-44.813474 52.601263-46.026105 62.275368 0 56.805053 53.76 75.264 107.789473 79.386947V431.157895c0-58.691368 13.473684-119.619368 46.511158-161.684211h-86.770526zM323.368421 1024h-53.894737c0-32.794947 25.869474-87.417263 77.446737-103.316211C313.020632 881.152 269.473684 822.433684 269.473684 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h45.16379A188.847158 188.847158 0 0 1 565.894737 592.842105h134.736842v53.894737h-134.736842c-74.293895 0-134.736842 60.442947-134.736842 134.736842v26.516211l-53.894737 0.377263V781.473684c0-9.162105 0.646737-18.135579 1.913263-26.947368H350.315789c-14.848 0-26.947368 12.072421-26.947368 26.947368 0 19.725474 36.675368 77.473684 92.133053 134.736842H431.157895v53.894737h-53.894737c-37.672421 0-53.894737 40.906105-53.894737 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-horse_wu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 26.947368h269.473685v-53.894736H538.947368v-161.684211h161.684211v-53.894737H411.001263c12.045474-33.28 20.156632-69.793684 20.156632-107.789473h-53.894737c0 121.963789-105.364211 233.391158-106.415158 234.496l38.858105 37.349052c2.883368-3.018105 43.816421-46.133895 77.392842-110.160842H485.052632v161.684211H215.578947v53.894736h269.473685v323.368421h53.894736V538.947368z" fill="#231F20" ></path></symbol><symbol id="icon-ox" viewBox="0 0 1025 1024"><path d="M540.294737 754.526316h215.578947c20.210526 0 35.112421 1.374316 53.894737 4.581052 91.863579 15.656421 145.354105 67.691789 161.684211 86.069895V916.210526h53.894736V635.580632l-7.895579-7.895579c-9.269895-9.269895-36.513684-49.232842-44.032-196.527158H540.294737a161.684211 161.684211 0 0 0-161.684211 161.68421v131.098948c43.304421 20.210526 97.28 30.585263 161.684211 30.585263z" fill="#FFAF6E" ></path><path d="M1025.347368 635.580632V916.210526h-53.894736v-71.033263c-16.330105-18.405053-69.820632-70.413474-161.684211-86.069895V916.210526h-53.894737v-161.68421h-107.789473v215.578947h-53.894737V700.631579h161.68421c100.998737 0 172.570947 38.669474 215.578948 71.868632v-115.738948c-33.684211-43.627789-51.712-137.458526-53.706106-279.498105H701.978947c-76.934737 0-127.218526-26.219789-175.804631-51.550316a1556.048842 1556.048842 0 0 0-26.839579-13.743158c-26.839579 26.004211-66.209684 44.921263-115.738948 55.511579 24.441263 22.986105 60.874105 52.116211 106.469053 72.838737l-22.312421 49.044211c-76.584421-34.816-129.589895-88.926316-150.824421-113.125053-10.644211 0.619789-21.477053 1.024-32.687158 1.024a473.734737 473.734737 0 0 1-123.365053-15.952842l-93.022315 186.314105 68.581052 53.86779C167.882105 579.557053 237.891368 538.947368 324.715789 538.947368v53.894737c-95.986526 0-170.361263 62.490947-171.088842 63.137684l-16.78821 14.282106-136.838737-107.358316 109.729684-219.809684C46.430316 314.448842 1.347368 267.371789 1.347368 199.868632 1.347368 89.815579 121.586526 53.894737 163.031579 53.894737v53.894737c-14.120421 0-107.789474 17.165474-107.789474 92.079158C55.242105 290.465684 192.188632 323.368421 284.240842 323.368421c67.907368 0 122.421895-12.988632 157.696-35.624421-42.711579-14.336-95.097263-23.120842-169.337263-18.324211l-3.503158-53.786947c95.878737-6.117053 160.148211 8.515368 211.429053 28.833684C484.244211 235.439158 486.4 225.818947 486.4 215.578947c0-48.855579-57.829053-76.288-58.394947-76.557473l22.393263-49.017263C454.063158 91.648 540.294737 131.826526 540.294737 215.578947c0 18.566737-3.422316 35.84-9.997474 51.631158 7.060211 3.584 13.985684 7.168 20.776421 10.698106C597.854316 302.322526 638.248421 323.368421 701.978947 323.368421h269.473685v26.947368c0 214.689684 35.220211 266.590316 45.999157 277.369264l7.895579 7.895579z m-729.384421 25.141894l-98.789052 118.541474 86.797473 137.835789 45.594948-28.725894-65.913263-104.690527 37.052631-44.43621C358.642526 785.192421 439.080421 808.421053 540.294737 808.421053v-53.894737c-99.893895 0-175.077053-24.549053-223.474526-72.946527l-20.857264-20.857263z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit_mao" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-377.263158-188.631579h107.789474v323.368421c-20.48 0-39.936-11.264-40.016842-11.317895l-27.728842 46.214737c3.206737 1.940211 32.660211 18.997895 67.745684 18.997895 30.746947 0 53.894737-23.147789 53.894737-53.894737V269.473684h-215.578948v538.947369h53.894737V323.368421z m-107.789473 242.526316v-242.526316h-53.894737v196.904421l-107.789474 40.421053v-243.927579l169.094737-48.316632-14.821053-51.819789L269.473684 276.102737v304.801684l-36.405895 13.662316 18.917053 50.472421 178.741895-67.018105c-5.039158 69.928421-55.269053 106.981053-165.133474 122.933894l7.733895 53.328842C325.712842 746.657684 485.052632 723.536842 485.052632 565.894737z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit" viewBox="0 0 1024 1024"><path d="M680.96 488.744421a1666.667789 1666.667789 0 0 0-54.433684-23.95621c-16.006737 12.234105-33.899789 20.264421-60.631579 20.264421h-80.842105c-36.810105 0-83.644632 30.396632-104.394106 67.772631-42.819368 77.123368-53.409684 117.813895-11.021473 201.701053C397.096421 808.879158 431.157895 876.409263 431.157895 970.105263h338.539789l68.338527-138.859789c20.129684-40.96 24.252632-73.701053 24.252631-110.349474 0.026947-57.397895-25.061053-159.717053-181.328842-232.151579z" fill="#FFBDD8" ></path><path d="M862.315789 720.896c0 36.621474-4.122947 69.389474-24.252631 110.349474L769.697684 970.105263H485.052632v-53.894737h48.370526C507.877053 880.074105 485.052632 833.509053 485.052632 781.473684c0-59.418947 24.171789-113.313684 63.218526-152.360421l38.103579 38.103579A161.091368 161.091368 0 0 0 538.947368 781.473684c0 54.784 35.381895 104.043789 63.514948 134.736842h133.712842l53.490526-108.759579c15.710316-31.851789 18.755368-55.834947 18.755369-86.554947 0-80.976842-63.434105-150.096842-178.607158-195.503158-17.542737 8.138105-38.292211 13.554526-63.919158 13.554526h-80.842105c-13.958737 0-43.924211 15.979789-57.290106 40.016843l-47.104-26.165895C401.408 515.449263 448.242526 485.052632 485.052632 485.052632h80.842105c37.268211 0 57.478737-15.440842 79.090526-36.45979C625.367579 336.195368 549.753263 269.473684 485.052632 269.473684h-107.789474a21.288421 21.288421 0 0 0-5.955369 2.021053A683.762526 683.762526 0 0 0 302.187789 194.021053c-35.84-34.223158-61.763368-58.933895-94.908631-79.440842A42.442105 42.442105 0 0 0 185.478737 107.789474a22.824421 22.824421 0 0 0-17.381053 7.194947c-10.913684 11.425684-6.063158 28.240842 1.428211 39.181474 21.989053 32.121263 47.912421 56.858947 83.752421 91.109052 20.614737 19.671579 49.259789 43.169684 77.392842 63.08379C281.007158 367.400421 215.578947 484.432842 215.578947 592.842105c0 74.482526 24.791579 124.065684 51.065264 176.586106C294.534737 825.209263 323.368421 882.903579 323.368421 970.105263h-53.894737c0-74.482526-24.791579-124.065684-51.065263-176.586105C190.517895 737.738105 161.684211 680.043789 161.684211 592.842105c0-90.866526 42.226526-197.685895 93.453473-274.485894a803.759158 803.759158 0 0 1-39.046737-34.115369C177.852632 247.754105 150.231579 221.399579 125.035789 184.616421c-24.441263-35.759158-22.797474-78.686316 4.069053-106.819368 26.300632-27.567158 70.898526-31.043368 106.522947-9.000421 37.941895 23.444211 65.562947 49.798737 103.774316 86.258526 9.970526 9.512421 33.037474 32.309895 56.93979 60.550737h68.634947c-27.621053-37.780211-60.416-72.730947-88.522105-99.543579-28.833684-27.540211-54.730105-52.116211-84.533895-74.024421L326.305684 0.296421c31.232 23.228632 57.802105 48.532211 87.309474 76.719158 53.840842 51.388632 94.450526 100.594526 121.74821 146.83621 82.836211 26.650947 150.042947 116.870737 165.025685 230.750316l1.724631 13.177263-9.404631 9.404632c-3.772632 3.772632-7.706947 7.653053-11.802948 11.587368C837.227789 561.178947 862.315789 663.498105 862.315789 720.896zM309.463579 754.526316c3.934316 8.057263 7.895579 16.087579 11.991579 24.144842C348.887579 832.970105 377.263158 889.128421 377.263158 970.105263h53.894737c0-93.696-34.061474-161.226105-61.520842-215.578947h-60.173474z m597.90821 53.894737c-3.422316 9.404632-7.814737 19.806316-13.770105 31.959579L829.790316 970.105263h60.065684l52.143158-105.957052c10.778947-21.935158 17.515789-40.016842 21.90821-55.727158h-56.535579zM514.694737 390.736842c0-34.223158-13.231158-44.463158-29.642105-44.463158s-29.642105 10.24-29.642106 44.463158c0 34.250105 13.231158 44.463158 29.642106 44.463158s29.642105-10.213053 29.642105-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rat_zi" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 188.631579v-215.578947h269.473685v-53.894737H538.947368v-39.585684c26.543158-18.081684 94.585263-65.050947 177.852632-127.488L700.631579 215.578947H323.368421v53.894737h295.316211a4221.008842 4221.008842 0 0 1-121.640421 85.369263l-11.991579 8.003369V431.157895H242.526316v53.894737h242.526316v215.578947c0 48.343579-13.850947 53.894737-134.736843 53.894737v53.894737c105.391158 0 188.631579 0 188.631579-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-rat" viewBox="0 0 1024 1024"><path d="M727.659789 431.157895c-132.581053 0-220.348632 47.454316-285.803789 154.354526-19.779368 32.309895-15.845053 76.503579-9.404632 96.579368 3.260632 10.159158 7.760842 18.647579 12.422737 25.546106C464.761263 737.010526 499.927579 754.526316 538.947368 754.526316h66.829474c1.158737 17.893053-1.967158 34.762105-15.144421 53.975579-12.692211 18.539789-37.807158 40.151579-56.32 54.810947 25.249684-0.673684 52.709053-0.997053 83.240421-0.997053C877.487158 862.315789 970.105263 711.922526 970.105263 571.176421 936.421053 512 882.364632 431.157895 727.659789 431.157895z" fill="#85C3DE" ></path><path d="M210.432 1012.897684l-43.573895-31.690105c106.954105-147.051789 185.317053-171.196632 423.828211-172.705684 21.396211-31.258947 16.249263-56.266105 9.377684-89.70779-3.557053-17.138526-7.221895-34.842947-7.221895-54.433684 0-68.958316 25.330526-104.636632 63.407158-136.973474l34.896842 41.040842c-29.453474 25.061053-44.409263 46.780632-44.409263 95.932632 0 14.093474 2.937263 28.402526 6.063158 43.546947 5.901474 28.510316 12.8 62.032842-1.131789 99.462737 166.373053-10.24 264.542316-96.902737 264.542315-236.193684C916.210526 418.330947 827.580632 323.368421 684.921263 323.368421c-83.644632 0-153.303579 29.696-174.187789 39.612632a224.875789 224.875789 0 0 1-20.533895 31.339789l-41.741474-34.115368 20.884211 17.057684-20.911158-16.976842C448.781474 359.828211 485.052632 314.287158 485.052632 262.736842c0-34.816-8.946526-60.766316-26.570106-77.069474-17.515789-16.249263-44.786526-24.602947-81.219368-24.953263V323.368421h-53.894737V109.783579l24.872421-1.913263c64.700632-4.931368 114.095158 7.895579 146.863158 38.238316C524.207158 173.056 538.947368 212.291368 538.947368 262.736842c0 11.102316-1.131789 21.908211-3.072 32.202105 37.268211-12.584421 89.842526-25.465263 149.045895-25.465263C858.165895 269.473684 970.105263 387.907368 970.105263 571.176421 970.105263 711.922526 877.487158 862.315789 617.552842 862.315789c-258.667789 0-311.942737 19.698526-407.120842 150.581895z m19.105684-256.835368c-12.045474 0-24.387368-0.565895-37.025684-1.64379l-22.096842-1.859368-2.425263-22.016C167.747368 728.144842 161.684211 672.444632 161.684211 631.026526c0-103.585684 21.450105-178.903579 53.894736-259.045052V107.789474h53.894737v274.782315l-2.021052 4.904422C235.439158 465.758316 215.578947 533.800421 215.578947 631.026526c0 22.878316 2.101895 51.442526 3.826527 70.979369 99.678316 2.802526 172.813474-35.408842 222.450526-116.493474l48.020211 24.090947c-11.237053 28.133053-11.371789 51.577263-0.377264 67.853474 9.701053 14.282105 28.645053 23.174737 49.448421 23.174737v53.894737c-39.019789 0-74.186105-17.515789-94.073263-46.888421a100.244211 100.244211 0 0 1-12.422737-25.546106c-53.221053 49.178947-121.128421 73.943579-202.913684 73.970527zM379.957895 525.473684c0-34.223158-13.231158-44.463158-29.642106-44.463158s-29.642105 10.24-29.642105 44.463158c0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642106-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rooster_you" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-215.578947-188.631579h-161.684211v-26.947368h161.684211V242.526316H269.473684v53.894737h161.684211v26.947368h-161.684211v485.052632h53.894737v-53.894737h377.263158v53.894737h53.894737V323.368421zM323.368421 646.736842h377.263158v53.894737H323.368421v-53.894737z m0-269.473684h107.789474c0 103.316211-72.784842 107.654737-81.084632 107.789474L350.315789 538.947368c46.592 0 134.736842-33.792 134.736843-161.68421h53.894736v107.789474c0 29.722947 24.171789 53.894737 53.894737 53.894736h107.789474v53.894737H323.368421v-215.578947z m377.263158 0v107.789474h-107.789474v-107.789474h107.789474z m-215.578947-80.842105h53.894736v26.947368h-53.894736v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-rooster" viewBox="0 0 1024 1024"><path d="M891.688421 506.421895C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V116.224l-323.368421 195.745684V323.368421c0 78.524632 14.928842 131.664842 29.372632 183.053474 12.611368 44.894316 24.522105 87.282526 24.522105 140.314947 0 101.618526-77.931789 176.693895-168.286316 203.991579l5.416422 11.587368h215.578947c24.333474 0 43.385263-0.242526 58.556631-2.128842C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947z" fill="#FF8787" ></path><path d="M673.684211 354.357895c-16.384 0-29.642105-10.213053-29.642106-44.463158 0-34.223158 13.231158-44.463158 29.642106-44.463158s29.642105 10.24 29.642105 44.463158c0 34.250105-13.258105 44.463158-29.642105 44.463158zM540.106105 970.105263l-50.58021-107.789474h156.05221l50.607158 107.789474h59.553684l-51.60421-109.918316C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V107.789474c0-59.445895-48.343579-107.789474-107.789473-107.789474a107.924211 107.924211 0 0 0-107.789474 106.172632 100.890947 100.890947 0 0 0-24.117895-3.314527 88.710737 88.710737 0 0 0-88.602947 88.602948c0 20.668632 5.227789 39.720421 10.671158 53.921684l-99.489684 59.688421 93.749894 14.470737V377.263158c0 14.416842-5.901474 21.692632-33.360842 49.152l-11.129263 11.129263C398.228211 326.521263 324.985263 269.473684 215.740632 269.473684 96.768 269.473684 0 366.241684 0 485.214316V646.736842h53.894737v-161.522526A162.007579 162.007579 0 0 1 215.740632 323.368421c82.081684 0 140.422737 36.244211 240.64 152.252632l-38.615579 38.615579C367.804632 461.285053 323.098947 431.157895 259.584 431.157895A151.983158 151.983158 0 0 0 107.789474 582.952421V754.526316h53.894737v-171.573895A98.007579 98.007579 0 0 1 259.584 485.052632c46.322526 0 79.629474 20.911158 137.027368 86.016l18.970948 21.530947 128.080842-128.080842C572.200421 435.981474 592.842105 415.366737 592.842105 377.263158v-97.926737l23.309474-14.120421-13.662316-23.04c-0.161684-0.242526-14.578526-24.899368-14.578526-50.688 0-19.132632 15.575579-34.708211 34.70821-34.708211 5.093053 0 26.785684 3.179789 39.558737 18.647579l26.327579 46.026106 39.774316-24.090948-20.372211-49.367579C704.754526 140.449684 700.631579 117.517474 700.631579 107.789474c0-29.722947 24.171789-53.894737 53.894737-53.894737s53.894737 24.171789 53.894737 53.894737v215.578947c0 85.935158 16.680421 145.300211 31.366736 197.632C851.887158 564.008421 862.315789 601.141895 862.315789 646.736842c0 95.285895-99.408842 161.684211-188.631578 161.684211h-209.461895l-68.419369-145.704421C375.242105 618.954105 338.108632 592.842105 296.448 592.842105A80.976842 80.976842 0 0 0 215.578947 673.711158V862.315789h53.894737v-188.604631c0-14.874947 12.099368-26.974316 26.974316-26.974316 20.533895 0 38.965895 14.147368 50.553263 38.858105L480.579368 970.105263h59.526737z" fill="#231F20" ></path></symbol><symbol id="icon-snake_si" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-242.041263 180.762947l-52.116211-13.797052C657.219368 749.864421 651.425684 754.526316 619.789474 754.526316h-242.526316V485.052632h269.473684v53.894736h53.894737V215.578947H323.368421v538.947369c0 29.722947 24.171789 53.894737 53.894737 53.894737h242.526316c77.689263 0 91.189895-51.065263 108.274526-115.658106zM377.263158 269.473684h269.473684v161.684211H377.263158v-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-tiger_yin" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-257.42821 299.250526l-107.789474-53.894737-24.117895 48.208843 107.789474 53.894736 24.117895-48.208842z m-269.473685-5.658947l-24.117894-48.208842-107.789474 53.894737 24.117895 48.208842 107.789473-53.894737zM700.631579 431.157895h-161.684211v-53.894737h107.789474v-53.894737H377.263158v53.894737h107.789474v53.894737h-161.684211v323.368421h53.894737v-53.894737h269.473684v53.894737h53.894737V431.157895z m-161.684211 161.68421h107.789474v53.894737h-107.789474v-53.894737z m-161.68421 0h107.789474v53.894737h-107.789474v-53.894737z m161.68421-107.789473h107.789474v53.894736h-107.789474v-53.894736z m-161.68421 0h107.789474v53.894736h-107.789474v-53.894736zM754.526316 215.578947h-223.097263l-20.803369-62.410105-51.119158 17.057684L474.624 215.578947H269.473684v107.789474h53.894737v-53.894737h377.263158v53.894737h53.894737V215.578947z" fill="#231F20" ></path></symbol><symbol id="icon-snake" viewBox="0 0 1024 1024"><path d="M107.789474 790.474105c0-72.434526 67.880421-91.513263 121.451789-91.513263 74.401684 0 153.815579 34.438737 237.891369 70.925474 50.580211 21.935158 104.609684 45.325474 162.250105 63.083789-52.412632 44.786526-118.784 74.347789-195.152842 83.078737-143.171368 16.357053-326.440421 7.006316-326.440421-125.574737zM377.263158 215.578947c-15.575579 0-30.288842 3.449263-43.654737 9.377685A250.691368 250.691368 0 0 0 323.368421 296.421053c0 115.550316 76.422737 169.391158 137.83579 212.614736 8.138105 5.712842 16.141474 11.371789 23.848421 17.057685V323.368421a107.789474 107.789474 0 0 0-107.789474-107.789474z" fill="#C3D686" ></path><path d="M671.528421 788.857263c44.328421 11.964632 89.626947 19.563789 136.892632 19.56379 89.168842 0 161.684211-60.442947 161.68421-134.736842s-72.515368-134.736842-161.68421-134.736843c-19.078737 0-37.025684 1.509053-54.218106 4.015158-0.754526-101.402947-38.211368-172.355368-79.413894-219.648L673.684211 323.368421a1749.962105 1749.962105 0 0 1-79.036632-1.751579c45.702737 35.866947 108.705684 107.870316 105.984 232.367158 0 0.431158-0.080842 0.808421-0.10779 1.239579-34.923789 10.994526-66.155789 26.731789-95.097263 45.190737a163.085474 163.085474 0 0 0-15.845052-42.388211c-21.557895-39.639579-60.065684-66.775579-97.360842-93.022316C433.098105 423.343158 377.263158 384 377.263158 296.421053c0-130.290526 108.274526-188.631579 215.578947-188.631579 64.134737 0 132.715789 12.045474 214.366316 37.807158C802.330947 180.250947 780.099368 209.381053 700.631579 214.635789V161.684211h-53.894737v53.679157c-63.272421-1.024-104.528842-5.200842-104.986947-5.254736l-5.578106 53.598315C538.408421 263.949474 592.357053 269.473684 673.684211 269.473684c125.170526 0 188.631579-48.128 188.631578-143.063579V106.981053l-18.432-6.144C747.789474 68.823579 668.025263 53.894737 592.842105 53.894737c-158.666105 0-269.473684 99.732211-269.473684 242.526316 0 115.550316 76.422737 169.391158 137.83579 212.614736 33.684211 23.713684 65.509053 46.106947 81.003789 74.698106 9.539368 17.542737 13.285053 33.414737 12.341895 47.750737 21.153684 9.108211 42.118737 17.839158 62.949052 25.977263C671.151158 620.193684 729.977263 592.842105 808.421053 592.842105c59.445895 0 107.789474 36.271158 107.789473 80.842106s-48.343579 80.842105-107.789473 80.842105c-105.472 0-203.237053-42.388211-297.768421-83.429053-94.800842-41.094737-184.346947-79.952842-281.411369-79.952842C122.718316 591.171368 53.894737 644.715789 53.894737 727.578947c0 79.063579 67.098947 136.434526 159.555368 136.434527 142.174316 0 230.426947-66.883368 306.79579-129.886316 31.420632 13.419789 62.787368 26.058105 94.450526 37.133474-47.077053 49.637053-110.969263 82.566737-186.610526 91.270736l5.066105 53.625264c93.453474-7.006316 143.144421 9.350737 195.718737 26.543157 46.457263 15.225263 94.127158 30.854737 169.822316 30.854737 19.994947 0 41.957053-1.077895 66.344421-3.557052l-5.416421-53.625263c-105.283368 10.778947-158.100211-6.548211-213.935158-24.872422-22.150737-7.275789-44.624842-14.632421-70.305684-20.345263a334.848 334.848 0 0 0 96.14821-82.297263z m-458.078316 21.261474C162.573474 810.118737 107.789474 784.276211 107.789474 727.578947c0-60.847158 62.733474-82.539789 121.451789-82.539789 77.850947 0 154.731789 30.288842 235.250526 64.943158-66.263579 52.924632-139.722105 100.136421-251.041684 100.136421z" fill="#231F20" ></path></symbol><symbol id="icon-tiger" viewBox="0 0 1024 1024"><path d="M431.157895 162.250105V134.736842c0-41.552842-39.289263-80.842105-80.842106-80.842105-28.833684 0-57.128421 4.661895-58.314105 4.850526L269.473684 62.490947v83.887158C144.788211 223.824842 89.222737 346.839579 66.991158 431.157895h266.051368c240.747789 0 415.851789 107.789474 415.85179 269.473684-14.848-25.114947-43.924211-53.894737-88.68379-53.894737-67.988211 0-121.263158 71.033263-121.263158 161.684211 0 66.802526 30.477474 119.888842 60.712421 156.16 12.638316 15.171368 36.055579 37.726316 59.014737 58.88 5.066105 0.107789 9.781895 0.538947 15.009685 0.538947 219.297684 0 350.315789-191.811368 350.315789-377.263158C1024 327.545263 679.855158 172.813474 431.157895 162.250105z" fill="#F7C768" ></path><path d="M673.684211 1024c-114.768842 0-188.820211-33.333895-254.167579-62.787368-53.625263-24.144842-99.974737-45.002105-161.28-45.002106-40.448 0-83.590737 23.255579-103.639579 45.16379l-39.747369-36.432842C142.497684 894.787368 199.168 862.315789 258.236632 862.315789c68.392421 0 119.861895 21.288421 172.921263 45.056V673.684211c0-35.166316-17.542737-64.107789-30.639158-80.815158-15.198316 9.835789-32.067368 18.890105-50.741895 26.947368l-21.342316-49.475368C469.800421 509.413053 485.052632 377.317053 485.052632 323.368421V221.642105A597.827368 597.827368 0 0 0 404.210526 215.578947h-26.947368V134.736842c0-12.099368-14.848-26.947368-26.947369-26.947368-9.377684 0-18.836211 0.592842-26.947368 1.347368V269.473684h-53.894737V211.671579c-136.030316 102.912-158.450526 266.886737-161.306947 295.882105 9.135158 9.108211 38.992842 25.061053 71.976421 38.669474l38.103579-59.365053 12.449684-1.589894C321.212632 473.653895 377.263158 392.192 377.263158 323.368421h53.894737c0 88.333474-68.796632 192.242526-180.870737 213.342316l-48.397474 75.398737-20.291368-7.437474C53.894737 557.756632 53.894737 523.317895 53.894737 512c0-50.041263 37.025684-254.733474 215.578947-365.621895V62.490947l22.528-3.745684C293.187368 58.556632 321.482105 53.894737 350.315789 53.894737c41.552842 0 80.842105 39.289263 80.842106 80.842105v27.513263c248.697263 10.563368 592.842105 165.295158 592.842105 484.486737 0 185.451789-131.018105 377.263158-350.315789 377.263158z m-13.473685-323.368421c-36.513684 0-67.368421 49.367579-67.368421 107.789474 0 85.746526 68.096 145.084632 89.465263 161.549473 91.540211-2.533053 164.378947-45.487158 213.827369-107.654737H700.631579v-53.894736h230.238316c8.919579-17.273263 16.357053-35.354947 22.285473-53.894737h-239.885473l-6.467369-17.650527C706.290526 735.582316 692.439579 700.631579 660.210526 700.631579zM485.052632 931.112421c33.926737 14.066526 70.521263 26.597053 114.607157 33.468632C569.424842 928.309895 538.947368 875.223579 538.947368 808.421053c0-90.650947 53.274947-161.684211 121.263158-161.684211 44.759579 0 73.835789 28.779789 88.68379 53.894737h217.007158c2.775579-17.866105 4.203789-35.920842 4.203789-53.894737 0-38.938947-5.658947-74.752-15.925895-107.627789l-126.706526 126.679579-38.103579-38.103579L932.001684 485.052632a367.939368 367.939368 0 0 0-57.775158-81.596632l-154.543158 154.543158-38.103579-38.103579 153.573053-153.573053a537.869474 537.869474 0 0 0-82.593684-56.751158l-140.665263 140.638316-38.103579-38.103579 128.134737-128.134737A794.731789 794.731789 0 0 0 538.947368 231.046737V323.368421c0 50.149053-11.102316 156.698947-95.932631 236.328421 18.378105 23.417263 42.037895 63.407158 42.037895 113.987369v257.42821zM215.578947 431.157895v-53.894737c39.774316 0 53.894737-29.022316 53.894737-53.894737h53.894737c0 53.571368-37.025684 107.789474-107.789474 107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-boar" viewBox="0 0 1024 1024"><path d="M732.079158 377.263158c-107.789474 0-186.421895 31.393684-281.869474 126.841263L180.331789 773.982316C257.724632 807.909053 348.725895 808.421053 485.052632 808.421053h96.013473c55.834947-34.411789 133.551158-53.894737 227.354948-53.894737h121.344L970.105263 680.555789V572.631579c0-94.315789-130.236632-195.368421-238.026105-195.368421z" fill="#FFBDD8" ></path><path d="M808.421053 700.631579v53.894737c-196.446316 0-323.368421 84.641684-323.368421 215.578947h-53.894737c0-163.705263 148.075789-269.473684 377.263158-269.473684z m-323.368421 107.789474v-53.894737c-158.342737 0-245.598316 0-319.649685-49.367579L158.612211 700.631579H80.842105c-21.692632 0-26.624-14.821053-26.947368-26.947368v-82.620632c84.156632-11.183158 161.684211-74.913684 161.68421-186.853053V215.578947H161.684211v161.684211H134.736842c-66.964211 0-134.736842 37.025684-134.736842 107.789474h53.894737c0-42.630737 52.870737-53.894737 80.842105-53.894737h24.629895C147.132632 504.912842 85.153684 538.947368 26.947368 538.947368H0v134.736843c0 32.498526 21.530947 80.842105 80.842105 80.842105h61.682527c32.687158 20.506947 67.125895 33.145263 105.957052 41.013895A232.879158 232.879158 0 0 0 215.578947 916.210526h53.894737c0-41.930105 14.012632-80.303158 39.424-112.505263C358.885053 808.151579 415.959579 808.421053 485.052632 808.421053z m-72.946527-342.420211L323.368421 554.738526V431.157895h-53.894737v253.682526l180.736-180.736-38.103579-38.103579zM323.368421 161.684211h-53.894737v190.032842a769.536 769.536 0 0 1 53.894737-49.098106V161.684211z m323.368421-53.894737c-72.623158 0-146.809263 23.336421-215.578947 58.637473V107.789474h-53.894737v154.138947C458.832842 205.392842 555.331368 161.684211 646.736842 161.684211c148.587789 0 269.473684 120.885895 269.473684 269.473684v235.654737L809.579789 862.315789h61.359158L970.105263 680.555789V431.157895c0-178.310737-145.057684-323.368421-323.368421-323.368421z" fill="#231F20" ></path></symbol><symbol id="icon-boar_hai" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M309.975579 804.756211l-27.136-46.592c103.073684-60.011789 183.026526-132.473263 241.475368-219.24379H350.315789l-13.473684-50.283789c58.88-33.980632 99.435789-117.571368 118.703158-165.295158H242.526316v-53.894737h538.947368v53.894737h-268.18021c-12.395789 34.088421-42.469053 106.603789-90.435369 161.68421h134.009263a680.555789 680.555789 0 0 0 46.349474-107.708631l51.092211 17.057684c-58.421895 175.265684-171.034947 309.490526-344.333474 410.381474z m192.350316-2.937264L467.806316 760.454737c88.414316-73.728 154.516211-158.773895 202.105263-259.907369l48.801684 22.959158a797.372632 797.372632 0 0 1-82.351158 137.781895c32.741053 15.009684 83.456 44.867368 137.647158 101.591579l-38.938947 37.268211c-57.236211-59.877053-109.325474-85.557895-133.766737-95.178106a850.997895 850.997895 0 0 1-98.977684 96.848842z m48.613052-536.872421l-80.842105-53.894737 29.884632-44.840421 80.842105 53.894737-29.884632 44.840421zM512 53.894737C259.395368 53.894737 53.894737 259.395368 53.894737 512s205.500632 458.105263 458.105263 458.105263c9.081263 0 17.973895-0.835368 26.947368-1.374316v-53.894736c-8.946526 0.619789-17.866105 1.374316-26.947368 1.374315-222.881684 0-404.210526-181.328842-404.210526-404.210526S289.118316 107.789474 512 107.789474s404.210526 181.328842 404.210526 404.210526c0 195.206737-139.075368 358.507789-323.368421 396.045474v54.460631c214.096842-38.346105 377.263158-225.549474 377.263158-450.533052C970.105263 259.395368 764.604632 53.894737 512 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-bilibili1" viewBox="0 0 1129 1024"><path d="M234.909 9.656a80.468 80.468 0 0 1 68.398 0 167.374 167.374 0 0 1 41.843 30.578l160.937 140.82h115.07l160.936-140.82a168.983 168.983 0 0 1 41.843-30.578A80.468 80.468 0 0 1 930.96 76.445a80.468 80.468 0 0 1-17.703 53.914 449.818 449.818 0 0 1-35.406 32.187 232.553 232.553 0 0 1-22.531 18.508h100.585a170.593 170.593 0 0 1 118.289 53.109 171.397 171.397 0 0 1 53.914 118.288v462.693a325.897 325.897 0 0 1-4.024 70.007 178.64 178.64 0 0 1-80.468 112.656 173.007 173.007 0 0 1-92.539 25.75H212.377a341.186 341.186 0 0 1-72.421-4.024A177.835 177.835 0 0 1 28.91 939.065a172.202 172.202 0 0 1-27.36-92.539V388.662a360.498 360.498 0 0 1 0-66.789A177.03 177.03 0 0 1 162.487 178.64h105.414c-16.899-12.07-31.383-26.555-46.672-39.43a80.468 80.468 0 0 1-25.75-65.984 80.468 80.468 0 0 1 39.43-63.57M216.4 321.873a80.468 80.468 0 0 0-63.57 57.937 108.632 108.632 0 0 0 0 30.578v380.615a80.468 80.468 0 0 0 55.523 80.469 106.218 106.218 0 0 0 34.601 5.632h654.208a80.468 80.468 0 0 0 76.444-47.476 112.656 112.656 0 0 0 8.047-53.109v-354.06a135.187 135.187 0 0 0 0-38.625 80.468 80.468 0 0 0-52.304-54.719 129.554 129.554 0 0 0-49.89-7.242H254.22a268.764 268.764 0 0 0-37.82 0z m0 0" fill="#20B0E3" ></path><path d="M348.369 447.404a80.468 80.468 0 0 1 55.523 18.507 80.468 80.468 0 0 1 28.164 59.547v80.468a80.468 80.468 0 0 1-16.094 51.5 80.468 80.468 0 0 1-131.968-9.656 104.609 104.609 0 0 1-10.46-54.719v-80.468a80.468 80.468 0 0 1 70.007-67.593z m416.02 0a80.468 80.468 0 0 1 86.102 75.64v80.468a94.148 94.148 0 0 1-12.07 53.11 80.468 80.468 0 0 1-132.773 0 95.757 95.757 0 0 1-12.875-57.133V519.02a80.468 80.468 0 0 1 70.007-70.812z m0 0" fill="#20B0E3" ></path></symbol><symbol id="icon-yinle" viewBox="0 0 1024 1024"><path d="M512.2976 0a531.2 531.2 0 0 0-512 548.48V960h128V548.48a398.72 398.72 0 0 1 384-411.52 398.72 398.72 0 0 1 384 411.52V960h128V548.48A531.2 531.2 0 0 0 512.2976 0z" fill="#5c8add" ></path><path d="M64.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path><path d="M704.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path></symbol><symbol id="icon-icon-test-copy" viewBox="0 0 1024 1024"><path d="M512 512m-229.517241 0a229.517241 229.517241 0 1 0 459.034482 0 229.517241 229.517241 0 1 0-459.034482 0Z" fill="#5c8add" ></path><path d="M512 1024A512 512 0 1 1 1024 512 512 512 0 0 1 512 1024z m0-141.241379A370.758621 370.758621 0 1 0 141.241379 512 370.758621 370.758621 0 0 0 512 882.758621z" fill="#5c8add" ></path></symbol><symbol id="icon-V" viewBox="0 0 1024 1024"><path d="M1012.47774251 492.58192592L544.94137566 87.22962963a49.96686561 49.96686561 0 0 0-65.88275132 0L11.63784127 492.6975097c-21.03624691 18.26223633-23.3479224 49.93219048-5.08568606 70.96843739 18.03106878 21.03624691 49.93219048 23.3479224 70.96843738 5.08568607L512 191.83294532l434.71057495 376.91868784c9.47786949 8.20644797 21.26741446 12.25188008 32.82579189 12.13629629 14.10122046 0 27.97127337-5.77918871 38.02706173-17.33756613 18.14665256-20.92066314 15.95056084-52.70620106-5.08568606-70.9684374z" fill="#5c8add" ></path><path d="M109.30613051 567.59579541V896.89396825c0 42.53482892 34.90629982 77.44112875 77.44112875 77.44112875h220.76500882V666.30433862c0-25.54401411 20.92066314-46.46467725 46.46467724-46.46467724h116.16169313c25.54401411 0 46.46467725 20.92066314 46.46467725 46.46467724V974.335097h220.76500882c42.53482892 0 77.44112875-34.90629982 77.44112874-77.44112875l0.11558377-329.29817284L512 218.18604586 109.30613051 567.59579541zM848.00203175 197.49655027h-63.91782716c-12.82979894 0-23.23233862 10.40253968-23.23233863 23.23233862v24.27259259l110.49808818 95.70336508V220.72888889h-0.11558377c0-12.82979894-10.40253968-23.23233862-23.23233862-23.23233862zM905.44716754 83.18419754s-34.90629982 56.86721693-89.11508994 100.32671603c152.68616579 13.98563668 127.83565432-133.26809171 127.83565432-133.2680917-134.07717813-10.28695591-132.92134039 102.29164021-131.072 127.83565432 20.92066314-20.92066314 49.70102293-62.64640564 92.35143562-94.89427865zM798.53217637 174.61096297c-19.64924162-16.52847972-40.56990476-43.45949912-51.203612-53.97762258 0 0 32.94137566 20.57391182 56.40488184 49.3542716 2.42725926-18.37782011 6.47269135-93.3916896-93.16052205-85.3008254 0 0-13.98563668 104.71889947 87.95925221 89.92417638z" fill="#5c8add" ></path></symbol><symbol id="icon-zhifeiji" viewBox="0 0 1167 1024"><path d="M41.201759 463.52493L1110.665064 30.117647c10.32605-4.159104 21.942857 0.860504 26.101961 11.043137 1.434174 3.728852 1.864426 7.744538 1.003921 11.616807L949.033691 978.823529c-2.151261 10.89972-12.764146 17.927171-23.663865 15.632493-2.72493-0.573669-5.306443-1.721008-7.601121-3.298599L634.80624 789.79944l-163.065546 133.951821c-16.492997 13.62465-40.87395 11.186555-54.498599-5.306443-3.011765-3.728852-5.306443-7.887955-6.884034-12.477311l-102.973669-313.080112-265.178712-91.787115c-10.469468-3.585434-16.062745-15.058824-12.333893-25.528291 1.864426-5.44986 6.023529-9.895798 11.329972-12.047059z" fill="#FCFDFC" ></path><path d="M929.385512 1023.569748c-3.155182 0-6.453782-0.286835-9.752381-1.003922-6.740616-1.434174-12.907563-4.015686-18.50084-8.031372L635.953579 825.940616l-146.142297 120.040336c-13.911485 11.473389-31.408403 16.779832-49.335574 15.058824-17.927171-1.721008-34.133333-10.32605-45.463305-24.237535-5.306443-6.453782-9.322129-13.768067-11.903642-21.79944l-98.527731-299.598879-251.697479-87.19776c-12.333894-4.302521-22.229692-13.05098-27.966386-24.811204s-6.453782-24.954622-2.151261-37.288515c4.589356-13.337815 14.771989-23.9507 27.82297-29.257143L1099.908761 3.585434c24.954622-10.039216 53.351261 2.007843 63.533894 26.819048 3.585434 8.891877 4.445938 18.644258 2.581513 28.109804L977.143495 984.560224c-4.732773 23.090196-25.098039 39.009524-47.757983 39.009524z m-294.579272-233.770308l282.962465 201.357983c2.294678 1.577591 4.87619 2.72493 7.601121 3.298599 10.89972 2.151261 21.512605-4.87619 23.663865-15.632493L1137.914364 52.777591c0.860504-3.872269 0.430252-7.887955-1.003922-11.616807-4.159104-10.32605-15.919328-15.202241-26.101961-11.043137L41.201759 463.52493c-5.306443 2.151261-9.465546 6.597199-11.47339 12.047059-1.721008 5.019608-1.434174 10.469468 0.860505 15.345658 2.294678 4.87619 6.453782 8.461625 11.473389 10.182633l265.178711 91.787115L410.214644 905.967507c1.434174 4.589356 3.872269 8.748459 6.884033 12.477311 6.597199 8.031373 15.919328 12.907563 26.101961 13.911485 10.32605 1.003922 20.365266-2.007843 28.396639-8.605042l163.208963-133.951821z" fill="#4A4A4A" ></path><path d="M307.097557 592.743978l105.698599 316.091876c6.310364 18.787675 26.532213 28.970308 45.319888 22.659944 4.159104-1.434174 7.887955-3.442017 11.186555-6.166946l164.786555-133.951821-165.360224-118.892997c297.017367-287.982073 447.462185-433.980952 451.191036-437.853222 0.573669-0.573669 2.581513-3.442017 0.430252-7.027451-1.290756-1.577591-3.298599-3.298599-7.027451-2.15126-202.218487 120.327171-404.293557 242.805602-606.22521 367.291877z" fill="#CAE0EE" ></path><path d="M446.786072 934.794398c-5.736695 0-11.329972-1.290756-16.636414-3.872269-8.891877-4.445938-15.632493-12.047059-18.787675-21.512605L305.376549 592.313725l1.003921-0.573669C507.308201 467.684034 711.391114 344.058263 912.60568 224.161345l0.286835-0.143418c3.585434-1.147339 6.310364-0.286835 8.605042 2.581513l0.143417 0.143417c2.438095 4.015686 0.573669 7.457703-0.573669 8.74846-3.872269 4.015686-155.177591 150.87507-450.043698 436.705882l165.503642 119.036414-166.220728 135.09916c-3.442017 2.868347-7.457703 5.019608-11.760225 6.453782-3.728852 1.290756-7.744538 2.007843-11.760224 2.007843z m-137.967507-341.333334l105.268348 314.944538c2.868347 8.748459 9.035294 15.77591 17.210084 19.935014 8.17479 4.159104 17.496919 4.732773 26.245378 1.864426 3.872269-1.290756 7.60112-3.298599 10.756302-5.880112l163.352381-132.804482L466.434252 672.627451l1.290756-1.147339C763.308201 384.932213 915.043775 237.642577 918.772627 233.626891c0 0 2.007843-2.294678 0.286835-5.306443-1.003922-1.290756-2.438095-2.438095-5.306443-1.577591-200.784314 119.610084-404.293557 242.94902-604.934454 366.718207z" fill="#CAE0EE" ></path><path d="M460.840974 924.898599l7.457703-253.561904 165.933894 119.896918-168.658824 135.959664c-1.290756 1.003922-3.011765 0.860504-4.015686-0.430252-0.430252-0.430252-0.717087-1.147339-0.717087-1.864426z" fill="#94C3E2" ></path><path d="M463.709322 929.344538c-1.290756 0-2.438095-0.573669-3.2986-1.577591-0.573669-0.860504-1.003922-1.864426-1.003921-2.868348l7.60112-256.286834 169.519328 122.621848-1.434174 1.147339-168.658823 135.959664c-0.860504 0.717087-1.721008 1.003922-2.72493 1.003922z m6.023529-255.282913l-7.457703 250.836974c0 0.286835 0.143417 0.717087 0.286835 1.003922 0.430252 0.573669 1.434174 0.717087 2.007843 0.286835l167.22465-134.812325-162.061625-117.315406z" fill="#94C3E2" ></path></symbol><symbol id="icon-lianjie" viewBox="0 0 1079 1024"><path d="M695.355535 432.666896c-0.553495-1.10699-0.885592-2.186305-1.383737-3.265619-0.193723-0.193723-0.193723-0.359772-0.359771-0.719543-12.508983-26.318678-39.436506-43.366319-69.325226-41.013966-39.076734 3.265619-68.439634 39.021384-65.312388 79.841627 0.857917 10.516401 3.653066 20.147211 7.998 28.83708 19.78744 46.659613 11.097571 103.448181-25.377737 141.750022l-191.094085 199.950001a118.088119 118.088119 0 0 1-171.998513 0c-47.434506-49.537786-47.434506-130.098956 0-179.636742l71.234782-74.389703-0.52582-0.553494a75.911814 75.911814 0 0 0 24.326097-61.880721c-3.127246-40.820243-37.3609-71.51153-76.437634-68.24591a69.463599 69.463599 0 0 0-46.908685 23.966325l-0.166049-0.193723-72.618519 75.856464c-103.226783 107.793115-103.226783 282.36538 0 390.158495 103.171433 107.793115 270.299193 107.793115 373.498301 0l191.619904-200.1714c80.256748-83.992838 97.636485-208.307773 52.83108-310.289193z" fill="#5c8add" ></path><path d="M1002.047012 80.865592c-103.226783-107.82079-270.382217-107.82079-373.581325 0l-191.619905 200.199075c-80.284423 83.854464-97.66416 208.197074-52.997128 310.233843 0.52582 1.079315 0.857917 2.15863 1.383737 3.26562 0.166048 0.166048 0.166048 0.359772 0.332097 0.719543 12.536658 26.291004 39.46418 43.366319 69.3529 41.013966 39.076734-3.265619 68.439634-39.021384 65.312388-79.869302a78.679288 78.679288 0 0 0-7.998-28.864755c-19.78744-46.631938-11.097571-103.448181 25.377737-141.750022l191.287808-199.839302a118.088119 118.088119 0 0 1 172.026188 0c47.434506 49.537786 47.434506 130.126631 0 179.692091l-71.234782 74.417378 0.52582 0.553495a75.939489 75.939489 0 0 0-24.353772 61.88072c3.15492 40.847917 37.3609 71.51153 76.465309 68.245911a69.463599 69.463599 0 0 0 46.908685-23.938651l0.166049 0.166048 72.646194-75.856464c103.03306-107.82079 103.03306-282.642127 0-390.269194z" fill="#5c8add" ></path></symbol><symbol id="icon-liaotian" viewBox="0 0 1171 1024"><path d="M1068.71699 0.243751H102.193768C46.228437 0.243751 0.500666 45.045267 0.500666 99.74309v696.251622c0 54.697824 45.727771 99.450589 101.693102 99.450589h329.113198l120.851966 114.465677a48.652788 48.652788 0 0 0 66.641644 0l120.851966-114.465677h329.064448c55.965331 0 101.741852-44.752765 101.741852-99.450589V99.74309C1170.458842 45.045267 1124.682321 0.243751 1068.71699 0.243751z m-439.776354 596.849784h-370.989696c-27.933915 0-50.846551-22.425133-50.846551-49.774045 0-27.348912 22.912636-49.725294 50.846551-49.725294h370.989696c27.933915 0 50.846551 22.376382 50.846551 49.725294 0 27.348912-22.912636 49.774045-50.846551 49.774045z m287.18795-211.381252H254.782171a50.456549 50.456549 0 0 1-50.846551-49.725294c0-27.397662 22.912636-49.774045 50.846551-49.774045h661.346415c27.933915 0 50.846551 22.376382 50.846551 49.774045 0 27.348912-22.912636 49.725294-50.846551 49.725294z" fill="#5C8ADD" ></path></symbol><symbol id="icon-xinfeng" viewBox="0 0 1400 1024"><path d="M1301.63733163 214.78520234a207.81921797 207.81921797 0 0 1 7.02423018 52.42036465v489.73590176a205.10753818 205.10753818 0 0 1-205.05853125 205.05853125H283.05853124A205.15654424 205.15654424 0 0 1 77.99999999 756.79444971V267.20556699a201.36672685 201.36672685 0 0 1 7.02423106-52.42036465L586.24393329 562.1905874c69.44187217 51.96297217 146.36536612 49.13694404 214.1736961 0zM1103.60303056 62.0000167H283.05853124A204.50312753 204.50312753 0 0 0 106.37462518 163.41030547l489.71956641 335.75823018c62.43397646 50.77048623 127.85733457 50.31309463 194.62019765 0L1280.28693749 163.41030547A204.68281729 204.68281729 0 0 0 1103.60303056 62.0000167z m0 0" fill="#5c8add" ></path></symbol><symbol id="icon-QQ1" viewBox="0 0 1024 1024"><path d="M0 512a512 512 0 1 0 1024 0A512 512 0 1 0 0 512z" fill="#18ACFC" ></path><path d="M500.113 228.39c118.396-1.518 178.924 61.004 201 156 3.497 15.048 0.15 34.807 0 50 27.143 5.682 33.087 60.106 10 75v1h1c8.26 14.33 19.04 28.125 26 44 7.332 16.723 9.306 35.16 14 55 4.024 17.01-2.287 51.505-10 57-0.771 0.683-2.231 1.312-3 2-14.601-3.016-30.377-16.865-38-27-3.065-4.074-5.275-9.672-10-12-0.395 21.568-12.503 41.15-22 55-3.514 5.123-14.073 13.217-14 18 3.691 2.836 8.305 2.956 13 5 10.513 4.577 25.449 13.168 32 22 2.334 3.146 5.548 7.555 7 11 16.193 38.414-36.527 48.314-63 54-27.185 5.839-77.818-10.224-92-19-8.749-5.414-16.863-18.573-29-19-3.666 2.389-14.438 1.132-20 1-16.829 32.804-101.913 47.868-148 31-14.061-5.146-43.398-17.695-38-40 4.437-18.327 19.947-29.224 35-37 5.759-2.975 18.915-4.419 22-10-13.141-8.988-24.521-28.659-31-44-3.412-8.077-4.193-25.775-9-32-7.789 12.245-32.097 36.91-52 33-3.071-4.553-7.213-9.097-9-15-4.792-15.835-1.81-40.379 2-54 8.117-29.02 16.965-50.623 32-72 4.672-6.643 11.425-12.135 16-19-8.945-9.733-6.951-37.536-1-49 4.002-7.709 9.701-7.413 10-20-1.92-3.022-0.071-8.604-1-13-4.383-20.75 3.273-47.552 9-63 19.8-53.421 53.712-90.466 105-112 11.986-5.033 25.833-7.783 39-11 5.322-1.3 11.969 0.518 16-2z" fill="#FFFFFF" ></path></symbol><symbol id="icon-rss" viewBox="0 0 1024 1024"><path d="M749.61196492 908.06119793C749.61196492 560.41848146 463.58151854 274.36328126 115.93880207 274.36328126V115.93880207c434.50388795 0 792.12239584 357.61850789 792.12239586 792.12239586zM224.55858562 690.72261555a108.91682943 108.91682943 0 0 1 108.69404499 108.74355267C333.25263061 859.29616292 284.24005737 908.06119793 224.31104736 908.06119793 164.48105265 908.06119793 115.96355592 859.41993206 115.96355592 799.46616822s48.69077351-108.71879883 108.61978351-108.74355267zM641.01693522 908.06119793h-153.96879069c0-203.60020956-167.50913289-371.13409627-371.10934246-371.13409629v-153.96879068c288.03550619 0 525.07813313 237.11688843 525.07813315 525.10288697z" fill="#FFA500" ></path></symbol><symbol id="icon-youxiang" viewBox="0 0 1024 1024"><path d="M583.60666667 972h-68.08c-8.43333333 0-15.33333333-6.9-15.33333334-15.33333333V609.52c0-8.43333333 6.9-15.33333333 15.33333334-15.33333333h68.08c8.43333333 0 15.33333333 6.9 15.33333333 15.33333333V956.66666667c0 8.43333333-6.9 15.33333333-15.33333333 15.33333333z" fill="#629FF9" ></path><path d="M294.42 167c-113.62 0-205.77333333 92-205.77333333 205.31333333v336.72h411.39333333V372.31333333c0.15333333-113.31333333-92-205.31333333-205.62-205.31333333z" fill="#2166CC" ></path><path d="M519.97333333 627H216.98666667c-25.45333333 0-46-20.54666667-46-46V393.78c0-25.45333333 20.54666667-46 46-46h302.98666666c25.45333333 0 46 20.54666667 46 46V581c0 25.45333333-20.54666667 46-46 46z" fill="#D2E4FF" ></path><path d="M565.97333333 397a49.22 49.22 0 0 0-49.37333333-49.22H220.36c-27.29333333 0-49.37333333 22.08-49.37333333 49.22v10.27333333l179.4 94.60666667c11.34666667 5.98 24.84 5.98 36.18666666 0l179.4-94.60666667v-10.27333333z" fill="#FFFFFF" ></path><path d="M730.5 167h-427.8v0.46c109.78666667 4.29333333 197.49333333 94.3 197.49333333 205.00666667v336.72h411.39333334c27.29333333 0 49.37333333-22.08 49.37333333-49.22V397c0-126.96-103.19333333-230-230.46-230z" fill="#4E8DF6" ></path><path d="M845.80666667 52H681.12666667c-9.04666667 0-16.40666667 7.36-16.40666667 16.40666667v336.72a24.67133333 24.67133333 0 1 0 49.37333333 0V134.18666667h131.71333334c9.04666667 0 16.40666667-7.36 16.40666666-16.40666667V68.40666667c0-9.04666667-7.36-16.40666667-16.40666666-16.40666667z" fill="#2166CC" ></path><path d="M896.25333333 659.81333333h-35.11333333c-8.43333333 0-15.33333333-6.9-15.33333333-15.33333333v-35.11333333c0-8.43333333 6.9-15.33333333 15.33333333-15.33333334h35.11333333c8.43333333 0 15.33333333 6.9 15.33333334 15.33333334v35.11333333c0 8.58666667-6.9 15.33333333-15.33333334 15.33333333z" fill="#FFFFFF" ></path><path d="M88.8 709.18666667l-24.22666667 131.40666666c-9.66 54.43333333 26.83333333 98.59333333 81.26666667 98.59333334h213.9c54.58666667 0 106.56666667-44.16 116.22666667-98.59333334l23.15333333-131.40666666H88.8z" fill="#2974CE" ></path></symbol><symbol id="icon-gitHub" viewBox="0 0 1049 1024"><path d="M523.6581816 52C262.83923907 52 52 262.8401375 52 523.6581816c0 208.49703047 135.09433812 384.97758117 322.50789391 447.44906532 23.42658172 4.68531653 32.01647887-10.15136894 32.01647796-22.64584583 0-10.93210574-0.78163433-48.41463703-0.78163433-87.45953855-131.18885996 28.11189824-158.5200223-56.22379738-158.52002231-56.22379739-21.08437312-54.66232469-52.3201152-68.71827336-52.3201152-68.71827335-42.94858371-28.89353348 3.12384382-28.89353348 3.12384384-28.89353348 47.63479867 3.12384382 72.62285398 48.41643391 72.62285398 48.4164339 42.16784782 71.84121875 110.10538527 51.53758242 137.43654672 39.04400399 3.90457972-30.45500618 16.3990566-51.5393793 29.67427028-63.25222094-104.64023039-10.93300418-214.74561566-51.53848086-214.74561657-232.70524742 0-51.53848086 18.74126609-93.70632867 48.4164339-126.50444187-4.68621496-11.71284164-21.08527156-60.12837711 4.6844181-124.94207075 0 0 39.82563922-12.49447688 129.62738726 48.41463704 37.48253129-10.15136894 78.08980484-15.61742227 117.91454562-15.61742137s80.43201433 5.46605242 117.91454473 15.61742137c89.80264648-60.90911391 129.62828571-48.41463703 129.62828571-48.41463704 25.76879122 64.81369363 9.37063305 113.22922911 4.68531651 124.94207075 30.45410773 32.79721477 48.41463703 74.96506258 48.41463703 126.50444187 0 181.16676656-110.10538527 220.99150644-215.52545401 232.70524742 17.1797934 14.83668547 32.01647887 42.94858371 32.01647886 87.45953946 0 63.25222094-0.78163433 114.009965-0.78163523 129.62738636 0 12.49447688 8.59079468 27.33116234 32.01737731 22.64584583 187.41265734-62.4705866 322.50699547-238.95203574 322.50699546-447.44996375C995.31636231 262.8401375 783.69369203 52 523.6581816 52z" fill="#663399" ></path><path d="M230.82365863 729.03136735c-0.7807359 2.34310703-4.68531653 3.12384382-7.80916035 1.56237113s-5.46605242-4.68531653-3.90368129-7.02842356c0.7807359-2.34220859 4.68531653-3.12384382 7.80826192-1.56147269s4.68531653 4.68531653 3.90457972 7.02752512z m18.7412661 21.08437312c-2.34220859 2.34220859-7.02752512 0.78163433-9.37063305-2.34310703-3.12294539-3.12294539-3.90457972-7.80826192-1.5614727-10.15136894 2.34220859-2.34220859 6.24678922-0.7807359 9.37063305 2.34310702 3.12384382 3.90457972 3.90457972 8.58899782 1.5614727 10.15136895zM268.30618992 777.44690281c-3.12294539 2.34220859-7.80826192 0-10.15136895-3.90457972-3.12384382-3.90457972-3.12384382-9.37063305 0-10.93210574 3.12384382-2.34310703 7.80916035 0 10.15226739 3.90457972 3.12294539 3.90368129 3.12294539 8.58899782 0 10.93210574z m25.76968965 26.55042555c-2.34220859 3.12294539-7.80916035 2.34220859-12.49447688-1.56237113-3.90457972-3.90368129-5.46605242-9.37063305-2.34220859-11.71284164 2.34220859-3.12384382 7.80826192-2.34310703 12.49447687 1.56147269 3.90368129 3.12384382 4.68531653 8.58989625 2.3422086 11.71374008z m35.1403227 14.83668637c-0.78163433 3.90457972-6.24768766 5.46605242-11.71374008 3.90457972-5.46605242-1.5614727-8.58899782-6.24768766-7.80916036-9.37063305 0.78163433-3.90457972 6.24768766-5.46605242 11.71374009-3.90457972 5.46605242 1.5614727 8.58899782 5.46605242 7.80916035 9.37063305z m38.26416562 3.12384382c0 3.90457972-4.68621496 7.02752512-10.15226738 7.02752512-5.46605242 0-10.15226738-3.12294539-10.15226739-7.02752512s4.68621496-7.02842356 10.15226739-7.02842445c5.46605242 0 10.15226738 3.12384382 10.15226738 7.02842445z m35.92016106-6.24768766c0.78163433 3.90457972-3.12384382 7.80916035-8.58899872 8.58989625-5.46695086 0.78163433-10.15226738-1.5614727-10.93390172-5.46605241-0.77983747-3.90457972 3.12384382-7.80916035 8.5907947-8.58899872 5.46605242-0.78163433 10.15136894 1.56057426 10.93210574 5.46515488z m0 0" fill="#663399" ></path></symbol><symbol id="icon-bilibili" viewBox="0 0 1024 1024"><path d="M832.61667555 181.33447111h-164.32545185l74.45617778-74.45617778c12.84020148-12.84020148 12.84020148-30.8140563 0-43.65425778-12.84020148-12.84020148-30.8140563-12.84020148-43.65425778 0L573.2882963 189.04101925H450.04420741L324.2272237 63.23617185c-10.26730667-12.84020148-25.68040297-15.40096-41.08136295-7.70654815-2.57289482 0-2.57289482 2.57289482-5.13365334 5.13365333-12.84020148 12.84020148-12.84020148 30.8140563 0 43.65425779l77.02907259 77.02907259h-164.32545185c-89.86927408 0-164.32545185 74.45617778-164.32545185 164.32545184v408.24073483c0 87.29637925 74.45617778 161.75255703 164.32545185 161.75255703h25.68040296c0 30.8140563 25.68040297 53.92156445 53.92156444 53.92156444s53.92156445-25.68040297 53.92156445-53.92156444H704.23893333c2.57289482 30.8140563 28.24116148 53.92156445 59.05521778 51.34866964 28.24116148-2.57289482 48.78791111-23.10750815 51.34866964-51.34866964h20.53461333c89.86927408 0 164.32545185-74.45617778 164.32545184-164.32545186V343.09916445c-2.56075852-89.86927408-77.02907259-161.76469333-166.88621037-161.76469334z m-5.13365333 634.19429926H200.99527111c-33.37481482 0-59.05521778-28.24116148-61.61597629-61.61597629l-2.57289482-415.94728297c0-33.37481482 28.24116148-61.6159763 61.6159763-61.61597629h626.48775111c33.37481482 0 59.05521778 28.24116148 61.61597629 61.61597629l2.57289482 415.94728297c-2.57289482 35.93557333-28.24116148 61.6159763-61.6159763 61.61597629z" fill="#ff7299" ></path><path d="M403.82919111 417.55534222l15.40096 77.0290726-205.40681481 38.50846815-15.40096-77.0290726 205.40681481-38.50846815z m197.70026667 77.0290726l15.40096-77.0290726 205.40681481 38.50846815-15.40096 77.0290726-205.40681481-38.50846815z m41.08136297 161.75255703c0 2.57289482 0 7.70654815-2.57289483 10.26730667-12.84020148 28.24116148-41.08136297 46.2150163-74.45617777 48.78791111-20.53461333 0-41.08136297-10.26730667-53.92156445-25.68040296-15.40096 15.40096-33.37481482 25.68040297-53.92156445 25.68040296-30.8140563-2.57289482-59.05521778-20.53461333-74.45617777-48.78791111 0-2.57289482-2.57289482-5.13365333-2.57289481-10.26730667 0-10.26730667 7.70654815-17.97385482 17.97385481-20.53461333h2.57289482c7.70654815 0 12.84020148 2.57289482 15.40096 10.26730666 0 0 20.53461333 28.24116148 38.50846815 28.24116149 35.94770963 0 35.94770963-30.8140563 56.48232296-53.92156445 23.10750815 25.68040297 23.10750815 53.92156445 56.48232296 53.92156445 23.10750815 0 38.50846815-28.24116148 38.50846815-28.24116149 2.57289482-5.13365333 10.26730667-10.26730667 15.40096-10.26730666 10.26730667-2.57289482 17.97385482 5.13365333 20.53461333 15.40096v5.13365333h0.0364089z" fill="#ff7299" ></path></symbol></svg>',        o = (o = document.getElementsByTagName("script"))[o.length - 1].getAttribute("data-injectcss"),        p = function (c, l) {            l.parentNode.insertBefore(c, l);        };    if (o && !c.__iconfont__svg__cssinject__) {        c.__iconfont__svg__cssinject__ = !0;        try {            document.write(                "<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>"            );        } catch (c) {            console && console.log(c);        }    }    function d() {        i || ((i = !0), a());    }    function m() {        try {            t.documentElement.doScroll("left");        } catch (c) {            return void setTimeout(m, 50);        }        d();    }    (l = function () {        var c,            l = document.createElement("div");        (l.innerHTML = v),            (v = null),            (l = l.getElementsByTagName("svg")[0]) &&            (l.setAttribute("aria-hidden", "true"),                (l.style.position = "absolute"),                (l.style.width = 0),                (l.style.height = 0),                (l.style.overflow = "hidden"),                (l = l),                (c = document.body).firstChild ? p(l, c.firstChild) : c.appendChild(l));    }),        document.addEventListener            ? ~["complete", "loaded", "interactive"].indexOf(document.readyState)                ? setTimeout(l, 0)                : ((h = function () {                    document.removeEventListener("DOMContentLoaded", h, !1), l();                }),                    document.addEventListener("DOMContentLoaded", h, !1))            : document.attachEvent &&            ((a = l),                (t = c.document),                (i = !1),                m(),                (t.onreadystatechange = function () {                    "complete" == t.readyState && ((t.onreadystatechange = null), d());                }));})(window);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime/runtime.min.js"/>
      <url>/js/runtime/runtime.min.js</url>
      
        <content type="html"><![CDATA[var now = new Date();function createtime() {    var t = new Date("09/08/2024 00:00:00");    now.setTime(now.getTime() + 250);    var e = (now - t) / 1e3 / 60 / 60 / 24,        a = Math.floor(e),        n = (now - t) / 1e3 / 60 / 60 - 24 * a,        r = Math.floor(n);    1 == String(r).length && (r = "0" + r);    var s = (now - t) / 1e3 / 60 - 1440 * a - 60 * r,        i = Math.floor(s);    1 == String(i).length && (i = "0" + i);    var o = (now - t) / 1e3 - 86400 * a - 3600 * r - 60 * i,        l = Math.round(o);    1 == String(l).length && (l = "0" + l);    // 显示站点运行时间和附加句子    let g = `<span class='textTip'> <br> 本站已经平安运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i><br><br>    <span class='quote'>发挥才智，则锋芒毕露。凭借感情，则流于世俗。坚持己见，则多方掣肘。 总之，人世难居。—夏目漱石《草枕》</span>`;    document.getElementById("workboard") && (document.getElementById("workboard").innerHTML = g);}setInterval(() => { createtime(); }, 250);]]></content>
      
    </entry>
    
    
  
</search>

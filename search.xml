<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++学习笔记</title>
      <link href="/posts/ad4f1e09.html"/>
      <url>/posts/ad4f1e09.html</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>由于我也是第一次学习C++，很多概念我自己也不清楚，所以此处基本上用来记录我学习过程中写的代码<br>各类概念和知识点理论，则是想到多少学到多少记多少。</p><h1 id="C-基础部分"><a href="#C-基础部分" class="headerlink" title="C++基础部分"></a>C++基础部分</h1><h2 id="输出helloworld代码"><a href="#输出helloworld代码" class="headerlink" title="输出helloworld代码"></a>输出helloworld代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第六行cout语句实现了输出的功能，除去第六行的语句，整体就是C++代码的基本框架<br>类似java中的类体+方法体</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>C++的注释有以下几种</p><h3 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h3><p>//</p><h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h3><p>/**/<br>同样的，编译器编译代码的时候，会忽略注释的内容。</p><h2 id="C-基本-语法"><a href="#C-基本-语法" class="headerlink" title="C++基本 语法"></a>C++基本 语法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">///*这个include相当于import的意思</span></span><br><span class="line"><span class="comment">//相当于是导入了iostream这个包</span></span><br><span class="line"><span class="comment">//然后这个iostream是c++中进行输入输出操作的标准库</span></span><br><span class="line"><span class="comment">//*/</span></span><br><span class="line"><span class="comment">//using namespace std;</span></span><br><span class="line"><span class="comment">///*这条指令是告诉编译器 程序要使用std中的所有内容</span></span><br><span class="line"><span class="comment">//* 相当于是java lang类 如果不导入</span></span><br><span class="line"><span class="comment">//* 每次输入输出都要加上std 代码会变得很冗长</span></span><br><span class="line"><span class="comment">//* 所以这里导入std</span></span><br><span class="line"><span class="comment">//*/</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//int main() &#123;</span></span><br><span class="line"><span class="comment">///*这里就是普通的定义了一个main方法</span></span><br><span class="line"><span class="comment">//和Java类似 但是没有public static那一套</span></span><br><span class="line"><span class="comment">//然后这里下面的return 0 表示了程序正常结束</span></span><br><span class="line"><span class="comment">//在C++中程序正常结束就是返回0*/</span></span><br><span class="line"><span class="comment">//    cout &lt;&lt; &quot;爷回来辣&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//    system(&quot;pause&quot;);</span></span><br><span class="line"><span class="comment">//    /*system() 是 C 标准库中的一个函数</span></span><br><span class="line"><span class="comment">//    它的参数是一个字符串，表示要执行的命令。</span></span><br><span class="line"><span class="comment">//    用来暂停程序的执行并显示提示信息</span></span><br><span class="line"><span class="comment">//    这个命令的作用是让用户有时间查看程序输出的内容</span></span><br><span class="line"><span class="comment">//    而不会让控制台窗口在程序结束后立刻关闭*/</span></span><br><span class="line"><span class="comment">//    return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="变量和常量"><a href="#变量和常量" class="headerlink" title="变量和常量"></a>变量和常量</h2><h3 id="变量基本介绍"><a href="#变量基本介绍" class="headerlink" title="变量基本介绍"></a>变量基本介绍</h3><p>变量存在的意义： 管理内存空间<br>变量创建语法：数据类型 变量名 =  变量初始值；</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">10</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*cout的意思就是把对象输出到控制台</span></span><br><span class="line"><span class="comment">&lt;&lt;就是把右侧的内容插入到左边*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"> <span class="comment">//这里system(&quot;pause&quot;)的作用是运行完了之后暂停窗口</span></span><br><span class="line"> <span class="comment">//方便你查看 结果 就不会直接结束程序</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>c++中和java中不一样 还存在常量，常量就是定义之后不可以发生改变的数据<br>可以看成java中用final修饰的变量<br>定义的两种方法<br>1、用#define定义在文件的上方 作为宏常量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define 常量名 常量值</span><br></pre></td></tr></table></figure><p>2、用const修饰一个变量<br>const 数据类型 数据名 = 数据值<br>两种方法定义的常量都不可以发生改变 如果尝试在代码中改变就会报错</p><p>关于const：我认为的const本质：限定修改</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//#define day 7;</span></span><br><span class="line"><span class="comment">/*上方代码报错</span></span><br><span class="line"><span class="comment">为什么 因为用#defin 定义常量 不需要使用分号结尾 </span></span><br><span class="line"><span class="comment">按下面的方式定义就正确了*/</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> day 7</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//day = 14;</span></span><br><span class="line"><span class="comment">/*上面的代码会报错 因为常量不能被改变*/</span></span><br><span class="line"><span class="comment">/*const 修饰的变量*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> month = <span class="number">12</span>;</span><br><span class="line"><span class="comment">//month = 24;</span></span><br><span class="line"><span class="comment">/*同样报错 用const修饰的变量也会变成常量*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a year have &quot;</span> &lt;&lt; month &lt;&lt; <span class="string">&quot; months&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a week have &quot;</span> &lt;&lt; day &lt;&lt; <span class="string">&quot; days&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="comment">/*可以理解为导入string 的包</span></span><br><span class="line"><span class="comment">* 再用C++风格的字符串的时候 要包含这个头文件</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*C++的数据类型*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 整型</span></span><br><span class="line"><span class="comment">C++的整型分成 </span></span><br><span class="line"><span class="comment">短整型 short 最小的表述范围都特别大 +-3w多</span></span><br><span class="line"><span class="comment">整型 int </span></span><br><span class="line"><span class="comment">长整型 long </span></span><br><span class="line"><span class="comment">长长整型 longlong*/</span></span><br><span class="line"><span class="type">short</span> num1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> num2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> num3 = <span class="number">10</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> num4 = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num1 = &quot;</span> &lt;&lt; num1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num2 = &quot;</span> &lt;&lt; num2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num3 = &quot;</span> &lt;&lt; num3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num4 = &quot;</span> &lt;&lt; num4 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*size of 关键字</span></span><br><span class="line"><span class="comment">通过这个关键字可以求出数据类型的所占的内存大小*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;num4 的大小: &quot;</span> &lt;&lt;<span class="built_in">sizeof</span>(num4) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;short 的大小: &quot;</span> &lt;&lt;<span class="built_in">sizeof</span>(<span class="type">short</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*实型（浮点型</span></span><br><span class="line"><span class="comment">作用：表示小数</span></span><br><span class="line"><span class="comment">C++中有两种浮点型</span></span><br><span class="line"><span class="comment">单精度 float</span></span><br><span class="line"><span class="comment">双进度 double</span></span><br><span class="line"><span class="comment">双精度的有效范围更大*/</span></span><br><span class="line"><span class="comment">/*float的定义*/</span></span><br><span class="line"><span class="type">float</span> f1 = <span class="number">3.14f</span>;</span><br><span class="line"><span class="comment">/*为什么这里用3.14f而不用3.14</span></span><br><span class="line"><span class="comment">因为程序运行的逻辑是先创建了3.14 再通过指针</span></span><br><span class="line"><span class="comment">把f1指向这个3.14的位置 然后在程序创建3.14的时候会默认创建为一个double</span></span><br><span class="line"><span class="comment">的数据 所以要在后面先加上f 让他在创建的时候就创建为float的</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">上面的理解是全部错误的</span></span><br><span class="line"><span class="comment">cpp中将没有后缀的浮点数全部默认解释为double 因为double有更高的精度和更大的表数范围*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f1 = &quot;</span> &lt;&lt; f1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f1 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f1) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> d1 = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;d1 = &quot;</span> &lt;&lt; f1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;d1 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(d1) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*科学计数法*/</span></span><br><span class="line"><span class="type">float</span> f2 = <span class="number">3e2</span>;</span><br><span class="line"><span class="comment">/*3*10^2  </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f2 = &quot;</span> &lt;&lt; f2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f2 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f2) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> f3 = <span class="number">3e-2</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f3 = &quot;</span> &lt;&lt; f3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;f3 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(f3) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*字符型*/</span></span><br><span class="line"><span class="comment">/*字符型就是表示单个字符的数据类型</span></span><br><span class="line"><span class="comment">下面依次 写  </span></span><br><span class="line"><span class="comment">字符型变量的创建方式</span></span><br><span class="line"><span class="comment">所占的内存大小</span></span><br><span class="line"><span class="comment">常见错误</span></span><br><span class="line"><span class="comment">对应的ASCII编码</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">char</span> ch1 = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ch1 = &quot;</span> &lt;&lt; ch1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ch1 的大小: &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(ch1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ch1 &quot;</span> &lt;&lt; ch1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*加入字符的时候用单引号应用</span></span><br><span class="line"><span class="comment">这点在java里面其实也是 一样 的 </span></span><br><span class="line"><span class="comment">java中的双引号是用来引入字符串string的 </span></span><br><span class="line"><span class="comment">string和char有本质的区别 所以确实不同</span></span><br><span class="line"><span class="comment">字符型只占用一个字节</span></span><br><span class="line"><span class="comment">字符型变量并不是把字符本身放到内存 中存储</span></span><br><span class="line"><span class="comment">而是讲ASCII编码放到存储单元中 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*转义字符 </span></span><br><span class="line"><span class="comment">作用 用于表示一些不能显示出来的ASCII字符</span></span><br><span class="line"><span class="comment">现阶段我们常用的转义字符 有 \n \\ \t</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;转义字符\\ n &quot;</span> &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;hello\n world  &quot;</span>  &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;转义字符\\ t &quot;</span> &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;转义字符\\ \ &quot;</span> &lt;&lt; <span class="string">&quot;\\&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*在c中没有endl  结束语句也是通过\n*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;hello world \n&quot;</span>;</span><br><span class="line"><span class="comment">/*上面的代码可以执行*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*水平制表符\t</span></span><br><span class="line"><span class="comment">水平制表符具体输出 几个空格并不确定</span></span><br><span class="line"><span class="comment">取决于一种叫制表位的概念</span></span><br><span class="line"><span class="comment">一般来说是八个字符占一个制表位置 </span></span><br><span class="line"><span class="comment">所以输出 的时候 就是输出到最开始的八个字符 之后</span></span><br><span class="line"><span class="comment">如果已经输出了 3个字符 那么他就会输出到五个字符 的后面*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;aaaaaaa\t hello world  &quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*字符串类型</span></span><br><span class="line"><span class="comment">字符串类型分为两种 C类型和C++类型</span></span><br><span class="line"><span class="comment">C类型的本质我认为就是一个字符的数组</span></span><br><span class="line"><span class="comment">C风格 char 变量名[] = &quot;字符串值&quot;</span></span><br><span class="line"><span class="comment">C++ 风格字符串 string 变量名 = &quot;字符串值&quot;*/</span></span><br><span class="line"><span class="type">char</span> str1[] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;str1:&quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*注意事项1、一定要加[]表示数组</span></span><br><span class="line"><span class="comment">2、一定要用 双引号 因为是多个字符 */</span></span><br><span class="line"></span><br><span class="line">string str2 = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;str2:&quot;</span> &lt;&lt; str2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*注意事项1、 C++中的string 是小写S开头</span></span><br><span class="line"><span class="comment">java中是大写s开头</span></span><br><span class="line"><span class="comment">2、一定要导入include string*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*布尔数据类型</span></span><br><span class="line"><span class="comment">只有真假 true false</span></span><br><span class="line"><span class="comment">本质就是0 和1  所以只占1字节 </span></span><br><span class="line"><span class="comment">创建布尔类型数据</span></span><br><span class="line"><span class="comment">查看所占用的空间</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> bl1 = <span class="literal">true</span>;;</span><br><span class="line"><span class="type">bool</span> bl2 = <span class="literal">false</span>;;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;bl1 = &quot;</span> &lt;&lt; bl1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;所占字节： &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(bl1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;bl1 = &quot;</span> &lt;&lt; bl2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;所占字节 &quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(bl1) &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*本质上1代表真 0带代表假*/</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*关于c++的命名规则</span></span><br><span class="line"><span class="comment">1、不能是关键字</span></span><br><span class="line"><span class="comment">2、字母、数字、下划线组成</span></span><br><span class="line"><span class="comment">3、第一个字符不能是数字</span></span><br><span class="line"><span class="comment">4、区分大小写</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">和java的主要区别</span></span><br><span class="line"><span class="comment">1、java中可以使用美元符号，且可以用$作为开头*/</span></span><br></pre></td></tr></table></figure><h3 id="数据的输入"><a href="#数据的输入" class="headerlink" title="数据的输入"></a>数据的输入</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*数据的输入</span></span><br><span class="line"><span class="comment">使用关键字 cin</span></span><br><span class="line"><span class="comment">使用语法 cin &gt;&gt; 变量;*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*依次输入整型浮点型字符型字符串布尔型等*/</span></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给整型变量a1赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a的值：&quot;</span> &lt;&lt; a1&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> a2 = <span class="number">0.0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给浮点型a2赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a2的值：&quot;</span> &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">char</span> a3 = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给字符型a3赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a3的值：&quot;</span> &lt;&lt; a3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">string a4 = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给字符串型a4赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a4;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a4的值：&quot;</span> &lt;&lt; a4 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> a5 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请给布尔型a5赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a5;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在a5的值：&quot;</span> &lt;&lt; a5 &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="comment">/*布尔类型的值赋值 只要是非0的值 都代表真*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基本运算符"><a href="#基本运算符" class="headerlink" title="基本运算符"></a>基本运算符</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*基本运算符</span></span><br><span class="line"><span class="comment">+- * /%</span></span><br><span class="line"><span class="comment">++ --  */</span></span><br><span class="line"><span class="type">int</span> n1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> n2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;给 整型数据 n1赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; n1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;给 整型数据 n2赋值：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; n2;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n3 = n1;</span><br><span class="line"><span class="type">int</span> n4 = n2;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;加:&quot;</span> &lt;&lt; n1 + n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;减:&quot;</span> &lt;&lt; n1 - n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;乘:&quot;</span> &lt;&lt; n1 * n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;除:&quot;</span> &lt;&lt; n1 / n2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;取余:&quot;</span> &lt;&lt; n1 % n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">n1 = ++n2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = ++n2 &quot;</span> &lt;&lt;<span class="string">&quot;n1:&quot;</span>&lt;&lt;n1&lt;&lt;<span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*等号右边的代码从左往右运行 首先先自增++ n2 = n2+1</span></span><br><span class="line"><span class="comment">n2本来是15 现在是16 然后赋值给n1 所以n1 = n2  = 16*/</span></span><br><span class="line"></span><br><span class="line">n1 = n3;</span><br><span class="line">n2 = n4;</span><br><span class="line">n1 = n2++;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 =n2++ &quot;</span> &lt;&lt; <span class="string">&quot;n1:&quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*这里就是先赋值再加减 先是n1 = n2 = 15 然后n2 + 1 = 16</span></span><br><span class="line"><span class="comment">下面的减法代码也是同理*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n1 = n3;</span><br><span class="line">n2 = n4;</span><br><span class="line">n1 = --n2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = --n2 &quot;</span> &lt;&lt; <span class="string">&quot;n1:&quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">n1 = n3;</span><br><span class="line">n2 = n4;</span><br><span class="line">n1 = n2--;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = n2-- &quot;</span> &lt;&lt; <span class="string">&quot;n1:&quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">float</span> m2 = <span class="number">3.14</span>;</span><br><span class="line"><span class="type">float</span> m3 = <span class="number">3.1415926535f</span>;</span><br><span class="line"><span class="type">double</span> m4 = <span class="number">3.1415926535</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; m1 / m2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; m3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; m4 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*关于除法</span></span><br><span class="line"><span class="comment">1、除数不能为0</span></span><br><span class="line"><span class="comment">2、不能对0取余*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*赋值运算符*/</span></span><br><span class="line"><span class="type">int</span> z1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> z2 = z1 += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;z1+=1:&quot;</span> &lt;&lt; z2 &lt;&lt; endl;</span><br><span class="line">z2 = z1 -= <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;z1-=1:&quot;</span> &lt;&lt; z2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*这里把加号换成- * / % 都是同理</span></span><br><span class="line"><span class="comment">所以就不逐个演示了</span></span><br><span class="line"><span class="comment">下面讲一讲与或非</span></span><br><span class="line"><span class="comment">符号分别是！非</span></span><br><span class="line"><span class="comment">&amp;&amp;  与</span></span><br><span class="line"><span class="comment">||  或 */</span></span><br><span class="line"></span><br><span class="line">n1 = <span class="number">0</span>;</span><br><span class="line">n2 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 = &quot;</span> &lt;&lt; n1 &lt;&lt; <span class="string">&quot;/n&quot;</span> &lt;&lt; <span class="string">&quot;n2 = &quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> z3 = (n1 &amp;&amp; n2);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 &amp;&amp; n2:&quot;</span> &lt;&lt; z3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">z3 = (n1 || n2);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1 || n2:&quot;</span> &lt;&lt; z3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环结构和分支结构"><a href="#循环结构和分支结构" class="headerlink" title="循环结构和分支结构"></a>循环结构和分支结构</h2><h3 id="if分支"><a href="#if分支" class="headerlink" title="if分支"></a>if分支</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*程序执行的三种结构</span></span><br><span class="line"><span class="comment">顺序结构 就是直接按照顺序执行代码</span></span><br><span class="line"><span class="comment">选择结构 就是执行满足条件 的代码</span></span><br><span class="line"><span class="comment">循环结构 满足条件时重复执行代码 直到不满足条件为止*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*if 语句 </span></span><br><span class="line"><span class="comment">输入分数  大于100 则打印考上了*/</span></span><br><span class="line"><span class="type">int</span> score = <span class="number">0</span>;</span><br><span class="line"><span class="comment">/*在Cpp中变量不会默认初始化，所以你定义完了一个数字之后必须要赋值一个值</span></span><br><span class="line"><span class="comment">这点和java不同*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;please enter a score&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you score is:&quot;</span> &lt;&lt;score&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">100</span>)</span><br><span class="line">&#123; </span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you can go to the college!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">60</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Maybe next time&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;stupid&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="if循环练习"><a href="#if循环练习" class="headerlink" title="if循环练习"></a>if循环练习</h3><p>三只小猪称体重，找出最大的那一只</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*一个小程序 三只小猪比体重*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> p1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> p2 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> p3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第一只小猪的体重 \n &quot;</span>;</span><br><span class="line">cin &gt;&gt; p1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第一只小猪的体重是：&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第二只小猪的体重 \n &quot;</span>;</span><br><span class="line">cin &gt;&gt; p2;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第二只小猪的体重是：&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入第三只小猪的体重 \n &quot;</span>;</span><br><span class="line">cin &gt;&gt; p3;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第三 只小猪的体重是：&quot;</span> &lt;&lt; p3&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (p1 &gt; p2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p1 &gt; p3) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第一只小猪,重量为：&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第三只小猪,重量为：&quot;</span> &lt;&lt; p3 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p2 &gt; p3)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第二只小猪,重量为：&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;最重的是第三只小猪,重量为：&quot;</span> &lt;&lt; p3 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*三目运算符</span></span><br><span class="line"><span class="comment">表达式一 ？ 表达式二 ： 表达式3</span></span><br><span class="line"><span class="comment">对表达式1判断 真执行2假执行3*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*三目运算符</span></span><br><span class="line"><span class="comment">创建abc变量</span></span><br><span class="line"><span class="comment">ab比较 大的赋值c*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">c= (a &gt; b ? a : b);</span><br><span class="line">cout &lt;&lt; c &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*在cpp中 三目运算符返回的是变量，可以继续赋值*/</span></span><br><span class="line">(a &gt; b ? a : b) = <span class="number">100</span>;</span><br><span class="line"><span class="comment">/*返回 的值是b </span></span><br><span class="line"><span class="comment">这里是把返回的b重新赋值了*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt;<span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;b:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="switch和do-while基本语法"><a href="#switch和do-while基本语法" class="headerlink" title="switch和do while基本语法"></a>switch和do while基本语法</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="comment">/*time系统时间头文件包含*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*switch 语句</span></span><br><span class="line"><span class="comment">switch基本语法</span></span><br><span class="line"><span class="comment">switch（ 表达式）&#123;</span></span><br><span class="line"><span class="comment">case 结果1： 执行语句 ；break；</span></span><br><span class="line"><span class="comment">default：执行语句；break；</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">根据表达式产生的结果不同</span></span><br><span class="line"><span class="comment">执行 不同 的 语句，</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*给电影进行打分</span></span><br><span class="line"><span class="comment">10-9 经典</span></span><br><span class="line"><span class="comment">8-7 非常好</span></span><br><span class="line"><span class="comment">6-5 一般</span></span><br><span class="line"><span class="comment">5以下 烂片*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">short</span> <span class="type">int</span> a1 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;please enter  your score:&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//cin &gt;&gt; a1;</span></span><br><span class="line">a1 = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//switch (a1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//case 10:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;经典&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 9 :</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;经典&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 8:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;非常好&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 7:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;非常好&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 6:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;一般&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//case 5:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;一般&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//default:</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;不行&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (a1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;经典&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;非常好&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;一般&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;不行&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*循环 结构</span></span><br><span class="line"><span class="comment">while循环</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (n1 &lt; <span class="number">10</span>) &#123;</span><br><span class="line">cout &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">n1++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line"><span class="comment">/*猜数字游戏*/</span></span><br><span class="line"><span class="type">int</span> a2 = (<span class="built_in">rand</span>() % <span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> b1 = (<span class="built_in">rand</span>() % <span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; b1 &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> b2 = (<span class="built_in">rand</span>() % <span class="number">100</span>) + <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; b2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*这个函数可以随机生成 一个不小于后面数字的 数</span></span><br><span class="line"><span class="comment">这里 就是随机生成了一个 0-99之间 的 数*/</span></span><br><span class="line"><span class="comment">/*然后发现这个随机数不是真的随机数 每次生成的都是一样 </span></span><br><span class="line"><span class="comment">重复生成的数字也是固定的</span></span><br><span class="line"><span class="comment">然后看到网上说要添加随机数的种子，才能防止每次生成的都一样</span></span><br><span class="line"><span class="comment">可以根据系统时间生成随机数*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a3 = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;enter  your guess:&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line"><span class="type">int</span> a4 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (a3 &gt; a2)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2 is smaller&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line">a4++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a3 &lt; a2) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2 is bigger&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; a3;</span><br><span class="line">a4++;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you god damn right&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you guess &quot;</span> &lt;&lt; a4 &lt;&lt; <span class="string">&quot; times&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*do while 循环语句</span></span><br><span class="line"><span class="comment">dowhile先 执行一次 循环语句</span></span><br><span class="line"><span class="comment">再判断 循环条件</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> n2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">cout &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line">n2++;</span><br><span class="line">&#125; <span class="keyword">while</span> (n2 &lt; <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="水仙花数练习"><a href="#水仙花数练习" class="headerlink" title="水仙花数练习"></a>水仙花数练习</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*水仙花数练习</span></span><br><span class="line"><span class="comment">解题思路 </span></span><br><span class="line"><span class="comment">1、输出所有三位数 （100-999）</span></span><br><span class="line"><span class="comment">2、找到水仙花数字</span></span><br><span class="line"><span class="comment">3、取模取各个位 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">判断 个位^3+十位^3+百位^3 = 本身</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印三位数*/</span></span><br><span class="line"><span class="type">int</span> num = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="comment">/*添加判断条件 如果是水仙花数才打印*/</span></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> a3 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">a1 = num % <span class="number">10</span>;</span><br><span class="line">a2 = (num/<span class="number">10</span>)%<span class="number">10</span>;</span><br><span class="line">a3 = num/<span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> b1 = a1 * a1 * a1;</span><br><span class="line"><span class="type">int</span> b2 = a2 * a2 * a2;</span><br><span class="line"><span class="type">int</span> b3 = a3 * a3 * a3;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> c1 = b1 + b2 + b3;</span><br><span class="line"><span class="keyword">if</span> ( c1 == num )</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; num &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (num &lt; <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*for 循环</span></span><br><span class="line"><span class="comment">满足循环条件时</span></span><br><span class="line"><span class="comment">执行循环语句</span></span><br><span class="line"><span class="comment">语法</span></span><br><span class="line"><span class="comment">for(起始表达式;条件表达式；末尾循环体)&#123;</span></span><br><span class="line"><span class="comment">循环语句 &#125;</span></span><br><span class="line"><span class="comment">起始表达式不参与循环，</span></span><br><span class="line"><span class="comment">条件表达式就是循环执行的条件</span></span><br><span class="line"><span class="comment">末尾循环体在循环每次结束之后运行</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*用for循环从数字0打印到9*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;<span class="comment">/*需要声明变量的类型</span></span><br><span class="line"><span class="comment"> java和c++中都需要声明*/</span></span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; a &lt; <span class="number">10</span>; a++)</span><br><span class="line">&#123;<span class="comment">/*声明也可以写外面</span></span><br><span class="line"><span class="comment"> 但是声明如果写在外面，不管写不写起始表达式都要加一个分号*/</span></span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="for循环练习案例"><a href="#for循环练习案例" class="headerlink" title="for循环练习案例"></a>for循环练习案例</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*练习案例 敲桌子 </span></span><br><span class="line"><span class="comment">从数字1数到100 如果数字个位</span></span><br><span class="line"><span class="comment">十位 含有7或者是7的倍数 我们打印敲桌子</span></span><br><span class="line"><span class="comment">其他数字直接打印*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line"><span class="type">int</span> a = (i % <span class="number">10</span>);</span><br><span class="line"><span class="type">int</span> b = i / <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">7</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;flap desk&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(b == <span class="number">7</span>)&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;flap desk&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i % <span class="number">7</span> ==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;flap desk&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="嵌套循环练习"><a href="#嵌套循环练习" class="headerlink" title="嵌套循环练习"></a>嵌套循环练习</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*嵌套循环*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*练习1 打印10x10图*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j&lt;<span class="number">11</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *&quot;</span> ;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>打印乘法口诀表</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印乘法口诀表*/</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; <span class="string">&quot;x&quot;</span> &lt;&lt; j &lt;&lt; <span class="string">&quot;=&quot;</span> &lt;&lt; i * j &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="跳转语句"><a href="#跳转语句" class="headerlink" title="跳转语句"></a>跳转语句</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*跳转语句</span></span><br><span class="line"><span class="comment">1、出现在switch语句中 跳出循环</span></span><br><span class="line"><span class="comment">2、出现在循环中，作用是跳出当前的循环</span></span><br><span class="line"><span class="comment">3、出现在嵌套循环中，跳出内层的循环*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;please choice level&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1、easy&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;2、normal&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;3、difficult&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (select)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you choice easy mode&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you choice normal mode&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;you choice difficult mode&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*出现在for循环中*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*嵌套循环*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">11</span>;j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (j==<span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><p>一维数组定义的三种方法</p><p>数据类型 数据名 [数组长度];<br>数据类型 数据名 [数组长度] = {值1，值2};<br>数据类型 数据名 [] = {值1，值2};</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*数组</span></span><br><span class="line"><span class="comment">数组就是一个集合 里面装了相同类型的数据元素</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">特点1 数组中的每个数据元素都是相同的数据类型</span></span><br><span class="line"><span class="comment">特点2 数组是由连续的内存位置组成的*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*一维数组的三种定义方式</span></span><br><span class="line"><span class="comment">2、数据类型 数据名 [数组长度];</span></span><br><span class="line"><span class="comment">首先根据特点1 数组里面所有元素都需要是相同的数据类型</span></span><br><span class="line"><span class="comment">所以声明数据类型特别重要 </span></span><br><span class="line"><span class="comment">数据名就是数组的总体名称</span></span><br><span class="line"><span class="comment">最后因为数组是一个定长 同时内存位置连续</span></span><br><span class="line"><span class="comment">所以需要声明数组长度 提前规划数组内存位置</span></span><br><span class="line"><span class="comment">2、数据类型 数据名 [数组长度] = &#123;值1，值2&#125;;</span></span><br><span class="line"><span class="comment">3、数据类型 数据名 [] = &#123;值1，值2&#125;;</span></span><br><span class="line"><span class="comment">第三种方法是你直接 把值写入进去 然后不人为定义的数组长度</span></span><br><span class="line"><span class="comment">那么他会根据你写入的值默认定义数组的长度</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">数组自动生成下标 我们可以通过下标来访问数组中的元素</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*第一种方法 */</span></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">5</span>];</span><br><span class="line"><span class="comment">/*给数组中的元素进行赋值</span></span><br><span class="line"><span class="comment">数组下标从0开始*/</span></span><br><span class="line">arr1[<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line">arr1[<span class="number">1</span>] = <span class="number">20</span>;</span><br><span class="line">arr1[<span class="number">2</span>] = <span class="number">30</span>;</span><br><span class="line">arr1[<span class="number">3</span>] = <span class="number">40</span>;</span><br><span class="line">arr1[<span class="number">4</span>] = <span class="number">50</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*访问数据元素*/</span></span><br><span class="line">cout &lt;&lt; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*第二种*/</span></span><br><span class="line"><span class="type">int</span> arr2[<span class="number">5</span>] = &#123; <span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span> &#125;;</span><br><span class="line"><span class="comment">//cout &lt;&lt; arr2[0] &lt;&lt; endl;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用循环的方式输出*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr2[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr3[<span class="number">5</span>] = &#123; <span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>&#125;;</span><br><span class="line">cout &lt;&lt; arr3[<span class="number">4</span>] &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*如果在初始化的时候没有填写完全部的数据</span></span><br><span class="line"><span class="comment">，剩下的数据会用0来填补*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义数组的时候必须有数组初始长度*/</span></span><br><span class="line"><span class="type">int</span> arr4[] = &#123; <span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr4[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一维数名的用途"><a href="#一维数名的用途" class="headerlink" title="一维数名的用途"></a>一维数名的用途</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*一维数组数组名的用途</span></span><br><span class="line"><span class="comment">1、统计整个数组在内存中的长途*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">5</span>] = &#123; <span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>,<span class="number">40</span>,<span class="number">50</span> &#125;;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(arr1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">sizeof</span>(arr1)/ <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*输出数组名称查看首地址*/</span></span><br><span class="line">cout &lt;&lt; arr1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; &amp;arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>)arr1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>) &amp; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; (<span class="type">int</span>) &amp; arr1[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">arr1[<span class="number">0</span>] = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一维数组练习"><a href="#一维数组练习" class="headerlink" title="一维数组练习"></a>一维数组练习</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*五只小猪称重</span></span><br><span class="line"><span class="comment">一个数组中记录了五只小猪的体重</span></span><br><span class="line"><span class="comment">从中选出最重的*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> pig[<span class="number">5</span>] = &#123; <span class="number">100</span>,<span class="number">300</span>,<span class="number">500</span>,<span class="number">200</span>,<span class="number">400</span> &#125;;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (pig[i] &gt; j)</span><br><span class="line">&#123;</span><br><span class="line">j = pig[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; j &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*冒泡排序*/</span></span><br><span class="line"><span class="comment">/*最常用的排序算法</span></span><br><span class="line"><span class="comment">对数组内的元素进行排序</span></span><br><span class="line"><span class="comment">比较相邻的元素，如果第一个比第二个大，就交换</span></span><br><span class="line"><span class="comment">对比每一对相邻元素做同样的工作，执行完毕后，找到第一个最大值</span></span><br><span class="line"><span class="comment">重复以上的步骤，每次比较次数-1直到不需要比较</span></span><br><span class="line"><span class="comment">总的比较次数 = 数组长度 - 1</span></span><br><span class="line"><span class="comment">数组长度 用size of可以计算</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//void swapValues(int&amp; a, int&amp; b) &#123;</span></span><br><span class="line"><span class="comment">//int temp = a;  // 使用临时变量来交换</span></span><br><span class="line"><span class="comment">//a = b;</span></span><br><span class="line"><span class="comment">//b = temp;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[] = &#123; <span class="number">4</span>,<span class="number">9</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*计算数组长度*/</span></span><br><span class="line"><span class="type">int</span> length = <span class="built_in">sizeof</span>(arr1) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;数组长度&quot;</span> &lt;&lt; length &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> times = length - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tempo = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*排序总轮数 = 元素个数 -1</span></span><br><span class="line"><span class="comment">每轮对比的次数 = 元素个数 - 排序轮数*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//总排序轮数 times</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; times; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; times  - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (arr1[j] &gt; arr1[j<span class="number">+1</span>])</span><br><span class="line">&#123;</span><br><span class="line">tempo = arr1[j];</span><br><span class="line">arr1[j] = arr1[j + <span class="number">1</span>];</span><br><span class="line">arr1[j + <span class="number">1</span>] = tempo;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;冒泡排序 排序后&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr1[i];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*调用函数实现*/</span></span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; times; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//for (int j = 0; j &lt; times - i; j++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//if (arr5[j]&gt;arr5[j+1])</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//swapValues(arr5[j], arr5[j+1]);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二维数组"><a href="#二维数组" class="headerlink" title="二维数组"></a>二维数组</h3><p>二维数组的四种定义方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">数据类型 数据名[行数][列数];</span><br><span class="line">数据类型 数据名[行数][列数]=&#123;&#123;数据1,数据2&#125;,&#123;数据3,数据4&#125;&#125;;</span><br><span class="line">数据类型 数据名[行数][列数]=&#123;数据1，数据2，数据3，数据4&#125;;</span><br><span class="line">数据类型 数据名[][列数]=&#123;数据1,数据2,数据3,数据4&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*二维数组</span></span><br><span class="line"><span class="comment">二维数组就是在一维数组基础上个多加了一个维度</span></span><br><span class="line"><span class="comment">二维数组定义有四种方式</span></span><br><span class="line"><span class="comment">数据类型 数据名[行数][列数];</span></span><br><span class="line"><span class="comment">数据类型 数据名[行数][列数]=&#123;&#123;数据1,数据2&#125;,&#123;数据3,数据4&#125;&#125;;</span></span><br><span class="line"><span class="comment">数据类型 数据名[行数][列数]=&#123;数据1，数据2，数据3，数据4&#125;;</span></span><br><span class="line"><span class="comment">数据类型 数据名[][列数]=&#123;数据1,数据2,数据3,数据4&#125;*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*第一种二维数组的定义方式*/</span></span><br><span class="line"><span class="type">int</span> arr[<span class="number">2</span>][<span class="number">3</span>];</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">arr[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">4</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">5</span>;</span><br><span class="line">arr[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr2[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr2[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr3[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr3[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;<span class="comment">/*默认情况下他先按照行输入，满了之后换下一行*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr4[][<span class="number">3</span>] =</span><br><span class="line">&#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; arr3[i][j];</span><br><span class="line">&#125;cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二维数组名的用途"><a href="#二维数组名的用途" class="headerlink" title="二维数组名的用途"></a>二维数组名的用途</h3><p>查看二维数组所占内存空间<br>获取二维数组首地址</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">2</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组所占内存空间：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一行所占内存 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一个元素所占内存 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组有多少行 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1)/ <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组有多少列 ：&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>][<span class="number">0</span>]) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*可以查看二维数组首地址*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组的首地址&quot;</span> &lt;&lt; (<span class="type">int</span>)arr1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第一行的首地址&quot;</span> &lt;&lt; (<span class="type">int</span>)arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;二维数组第二行的首地址&quot;</span> &lt;&lt; (<span class="type">int</span>)arr1[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二维数组应用案例"><a href="#二维数组应用案例" class="headerlink" title="二维数组应用案例"></a>二维数组应用案例</h3><p>在一次考试中成绩分别如下表，请分别输出三名同学的总成绩</p><div class="table-container"><table><thead><tr><th></th><th>语文</th><th>数学</th><th>英语</th></tr></thead><tbody><tr><td>张三</td><td>100</td><td>100</td><td>100</td></tr><tr><td>李四</td><td>90</td><td>50</td><td>100</td></tr><tr><td>王五</td><td>60</td><td>70</td><td>80</td></tr></tbody></table></div><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*二维数组应用案例</span></span><br><span class="line"><span class="comment">案例描述：有三名同学（张三李四王五）</span></span><br><span class="line"><span class="comment">在一次考试中成绩分别如下表，请分别输出三名同学的总成绩</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*自己写的*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;========自己写的==========&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> score[<span class="number">3</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">90</span>,<span class="number">50</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">string name = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">sum += score[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> (i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">name = <span class="string">&quot;李四&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">name = <span class="string">&quot;王五&quot;</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; name &lt;&lt; <span class="string">&quot;的总成绩：&quot;</span> &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;========视频写的==========&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> score2[<span class="number">3</span>][<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">90</span>,<span class="number">50</span>,<span class="number">100</span>&#125;,</span><br><span class="line">&#123;<span class="number">60</span>,<span class="number">70</span>,<span class="number">80</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line">string name1[<span class="number">3</span>] = &#123; <span class="string">&quot;张三&quot;</span>,<span class="string">&quot;李四&quot;</span>,<span class="string">&quot;王五&quot;</span> &#125;; </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;<span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sum2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">sum2 += score2[i][j];</span><br><span class="line">cout &lt;&lt; score[i][j]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cout &lt;&lt;&quot;\n&quot; &lt;&lt; &quot;第&quot; &lt;&lt; i + 1 &lt;&lt; &quot;个人的总分为:&quot; &lt;&lt; sum2 &lt;&lt; endl;</span></span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\n&quot;</span> &lt;&lt; name1[i] &lt;&lt; <span class="string">&quot;的总分为:&quot;</span> &lt;&lt; sum2 &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>作用：将一段经常使用的代码封装起来，减少重复代码<br>一个较大的程序，一半分为若干个程序块，每个模块时下按特定的功能</p><h3 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h3><p>函数的定义一般主要有五个步骤<br>1、返回值类型<br>2、函数名<br>3、参数列表<br>4、函数体语句<br>5、return表达式<br><strong>语法</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">返回值类型 函数名 （参数列表）</span><br><span class="line">&#123;</span><br><span class="line">函数体</span><br><span class="line">return语句</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义一个加法函数，传入两个参数，相加</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*1、返回值类型</span></span><br><span class="line"><span class="comment">2、函数名</span></span><br><span class="line"><span class="comment">3、参数列表</span></span><br><span class="line"><span class="comment">4、函数体语句</span></span><br><span class="line"><span class="comment">5、return表达式*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*实现一个加法函数，功能是，传入两个整型数据</span></span><br><span class="line"><span class="comment">计算数据相加的结果，并且返回*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">( <span class="type">int</span> num1,<span class="type">int</span> num2 )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a3 = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> a4 = <span class="built_in">add</span>(a2, a3);</span><br><span class="line"><span class="type">int</span> a5 = <span class="built_in">add</span>(a1, a2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">2</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1:&quot;</span>&lt;&lt;a1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a4:&quot;</span>&lt;&lt;a4 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a5:&quot;</span>&lt;&lt;a5 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数调用，形参和实参"><a href="#函数调用，形参和实参" class="headerlink" title="函数调用，形参和实参"></a>函数调用，形参和实参</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数调用*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*函数调用语法: 函数名(参数)*/</span></span><br><span class="line"><span class="comment">/*a和b称为 实际参数 实际上是有值的 </span></span><br><span class="line"><span class="comment">实参 传入的参数</span></span><br><span class="line"><span class="comment">再看函数在定义的时候 num1 和 num2</span></span><br><span class="line"><span class="comment">并没有实际的值 所以是形式参数 也就是形参*/</span></span><br><span class="line"><span class="type">int</span> c = <span class="built_in">add</span>(a, b);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="值传递"><a href="#值传递" class="headerlink" title="值传递"></a>值传递</h3><p>所谓值传递，就是函数调用时实参将数值传入给形参<br>值传递时，如果<strong>形参发生改变，并不会影响实参</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">add</span><span class="params">(<span class="type">int</span> num1, <span class="type">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> sum = num1 + num2;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义函数 实现两个数字进行交换*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> n1, <span class="type">int</span> n2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;before&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1=&quot;</span>&lt;&lt; n1&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n2=&quot;</span>&lt;&lt; n2&lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n3 = n1;</span><br><span class="line">n1 = n2;</span><br><span class="line">n2 = n3;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;after&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n1=&quot;</span> &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;n2=&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">//return; 返回值不需要的时候 可以不写return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap</span>(a1, a2);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1=&quot;</span> &lt;&lt; a1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2=&quot;</span> &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*输出了之后发现a1 a2的值没变</span></span><br><span class="line"><span class="comment">说明交换只在函数内有效*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*用专业的语句来说 就是我们做值传递的时候</span></span><br><span class="line"><span class="comment">函数的形参发生改变，并不会影响实参数</span></span><br><span class="line"><span class="comment">现在根据我的理解，值传递就是赋值</span></span><br><span class="line"><span class="comment">就是调用函数的时候把实际的两个变量 传递进函数的两个变量</span></span><br><span class="line"><span class="comment">也就是传递进函数的两个实参的值，传递给函数内的形参</span></span><br><span class="line"><span class="comment">到上面为止的所有方法都是值传递</span></span><br><span class="line"><span class="comment">值传递的时候形参发生的任何改变都不会影响实参*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>( <span class="string">&quot;pause&quot;</span> );</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结：值传递时，形参改变（修饰）不了实参</p><h3 id="函数的常见样式"><a href="#函数的常见样式" class="headerlink" title="函数的常见样式"></a>函数的常见样式</h3><p>常见的函数样式有四种<br>1、无参无返<br>2、有参无返<br>3、无参有返<br>4、有参有返</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*四种常见的函数*/</span></span><br><span class="line"><span class="comment">/*无参无返*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test01&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*有参无返*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;int a is :&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*无参有返*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test03&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">test04</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is test04&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*无参无返的函数调用*/</span></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="comment">/*有参无返的函数调用*/</span></span><br><span class="line"><span class="built_in">test02</span>(<span class="number">2</span>);</span><br><span class="line"><span class="comment">/*无参有返的函数调用*/</span></span><br><span class="line"><span class="type">int</span> a1 = <span class="built_in">test03</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1=&quot;</span> &lt;&lt; a1 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*有参有返的函数调用*/</span></span><br><span class="line"><span class="type">int</span> a2 = <span class="built_in">test04</span>(<span class="number">10000</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a2=&quot;</span> &lt;&lt; a2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数的声明"><a href="#函数的声明" class="headerlink" title="函数的声明"></a>函数的声明</h3><p><strong>作用</strong>：告诉编译器函数名称一集如何调用函数。函数的实际主体可以单独定义。<br>函数的什么可以多次，但是函数的定义只能有一次</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数的声明*/</span></span><br><span class="line"><span class="comment">/*比较函数，实现两个整形的数字进行比较</span></span><br><span class="line"><span class="comment">返回较大的值*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*提前告诉编译器函数存在 可以利用函数的声明*/</span></span><br><span class="line"><span class="comment">/*函数的声明*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="comment">/*声明可以写多次，但是定义只能有一次*/</span></span><br><span class="line"><span class="comment">/*个人看法 就是把函数体中的部分去掉*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; <span class="built_in">max</span>(a1, a2) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义函数*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数的分文件编写"><a href="#函数的分文件编写" class="headerlink" title="函数的分文件编写"></a>函数的分文件编写</h3><p><strong>作用</strong>：让代码结构更加清晰<br>函数分文件编写一般有4个步骤<br>1、创建后缀名为.h的头文件<br>2、创建后缀名为.cpp的源文件<br>3、再头文件中写函数的声明<br>4、在源文件中写函数的定义</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">swap.h</span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数的声明*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span>;</span><br><span class="line">swap.cpp</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*定义*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = a;</span><br><span class="line">a = b;</span><br><span class="line">b = tempo;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">test<span class="number">035.</span>cpp</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;swap.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*函数的分文件编写*/</span></span><br><span class="line"><span class="comment">/*实现两个数字*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a2 = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap</span>(a1, a2);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><h3 id="指针的基本概念"><a href="#指针的基本概念" class="headerlink" title="指针的基本概念"></a>指针的基本概念</h3><p>作用：通过指针间接访问内存</p><p>内存编号是从0开始记录的，一般用十六进制表示<br>可以利用指针变量保存地址</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241220203516452.png" alt="image-20241220203516452"></p><h3 id="指针变量的定义和使用"><a href="#指针变量的定义和使用" class="headerlink" title="指针变量的定义和使用"></a>指针变量的定义和使用</h3><p>指针变量定义语法：数据类型 *变量名;</p><p>为什么要写数据类型：定义指针时需要指定数据类型，是为了保证指针的正确行为，包括内存访问、数据解释以及指针算术操作。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*定义指针*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*指针定义的语法： 数据类型 * 指针变量名;*/</span></span><br><span class="line"><span class="type">int</span> * p;</span><br><span class="line"><span class="comment">/*p代表point point 代表的就是指针的意思</span></span><br><span class="line"><span class="comment">指向性 指针</span></span><br><span class="line"><span class="comment">不同的数据类型在内存中占用不同大小</span></span><br><span class="line"><span class="comment">不同指针*/</span></span><br><span class="line"><span class="comment">/*&amp;a 获得a的地址</span></span><br><span class="line"><span class="comment">后面引用传递的时候也会记载*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*让指针记录变量a的地址*/</span></span><br><span class="line">p = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a的地址&quot;</span> &lt;&lt; &amp;a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;指针p为&quot;</span> &lt;&lt; p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*使用指针*/</span></span><br><span class="line"><span class="comment">/*可以通过解引用的方式来找到指针指向的内存*/</span></span><br><span class="line"><span class="comment">/*指针前加一个*就是解引用，找到指针指向的内存中的数据*/</span></span><br><span class="line">*p = <span class="number">1000</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a的现在为&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p现在为&quot;</span> &lt;&lt; p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p现在为&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*个人理解：首先我们定义了一个int变量a 他的地址可能是0x00</span></span><br><span class="line"><span class="comment">* 然后内存中 0x00 的位置的变量就是a 假设为0</span></span><br><span class="line"><span class="comment">* 然后我们定义了一个 int 指针 p</span></span><br><span class="line"><span class="comment">* 然后让这个指针指向 a 就是说 p = 0x00</span></span><br><span class="line"><span class="comment">* 然后解引用就是找到这个地址中的数据 比如说找到0x00</span></span><br><span class="line"><span class="comment">* 然后看一下这个位置4个字节长度的数据是0000 那就是0 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解引用<br>*p 表示 解引用操作，也就是通过指针 p 获取它所指向的地址，并操作该地址中的数据。<br>然后指针的定义中 </p><ul><li><strong>功能上</strong>，<code>int *p;</code>、<code>int * p;</code> 和 <code>int* p;</code> 是等价的，指向 <code>int</code> 类型的指针。</li><li><strong>空格的使用</strong> 完全是风格问题，取决于个人或团队的编码习惯。</li></ul><h3 id="指针所占内存空间"><a href="#指针所占内存空间" class="headerlink" title="指针所占内存空间"></a>指针所占内存空间</h3><p>指针也是种数据类型，那么这种数据类型占用多少内存空间？</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*指针所占内存空间*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//int* p;</span></span><br><span class="line"><span class="comment">//p = &amp;a;</span></span><br><span class="line"><span class="comment">/*更加简洁的写法*/</span></span><br><span class="line"><span class="type">int</span> * p = &amp;a;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of (int *)&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">int</span> * ) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of (double *)&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(<span class="type">double</span> * ) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;size of (p)&quot;</span> &lt;&lt; <span class="built_in">sizeof</span>(p) &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*在32位操作系统下 所有指针都占4个字节</span></span><br><span class="line"><span class="comment">在64位操作系统下，所有指针都占8个字节</span></span><br><span class="line"><span class="comment">我是64位系统，所以这里都是显示占8字节*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="空指针和野指针"><a href="#空指针和野指针" class="headerlink" title="空指针和野指针"></a>空指针和野指针</h3><p><strong>空指针</strong>：指针变量指向内存中编号为0的空间<br><strong>用途</strong>：初始化指针变量<br><strong>注意</strong>：空指针指向的内存是不可以访问的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span>  <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*空指针*/</span></span><br><span class="line"><span class="comment">/*空指针用于初始化*/</span></span><br><span class="line"><span class="type">int</span> *p = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*空指针是不可以访问 的</span></span><br><span class="line"><span class="comment">下面 尝试解引用，然后 就失败了*/</span></span><br><span class="line"><span class="comment">//*p = 100;</span></span><br><span class="line"><span class="comment">//0-255之间的内存编号是系统占用的，因此不可以访问</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>野指针</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*野指针*/</span></span><br><span class="line"><span class="comment">/*在程序中尽量避免出现野指针</span></span><br><span class="line"><span class="comment">野指针就是直接赋值了一块地址</span></span><br><span class="line"><span class="comment">但是这块地址实际上是没有权限去操作的</span></span><br><span class="line"><span class="comment">因为正常可以操作的地址是通过正常定义申请得来的*/</span></span><br><span class="line"><span class="type">int</span>* p = (<span class="type">int</span>*)<span class="number">0x1100</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><u>空指针和野指针都不是我们申请的空间，因此不要访问。</u></p><h3 id="const修饰指针"><a href="#const修饰指针" class="headerlink" title="const修饰指针"></a>const修饰指针</h3><p>const 修饰指针有三种情况<br>const修饰指针 常量指针<br>const修饰常量 指针常量<br>const既修饰指针 又修饰常量</p><h4 id="常量指针"><a href="#常量指针" class="headerlink" title="常量指针"></a>常量指针</h4><p>特点：指针的指向可以修改，但是指针指向的值不可以改。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241220221523804.png" alt="image-20241220221523804"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*常量指针 </span></span><br><span class="line"><span class="comment">常量指针 首先是指针， 然后是const修饰的指针</span></span><br><span class="line"><span class="comment">const导致这个指针变成了一个常量*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">20</span>;</span><br><span class="line"><span class="comment">/*常量指针*/</span></span><br><span class="line"><span class="type">int</span> * p1 = &amp;a;</span><br><span class="line"><span class="comment">/*上面就是定义一个指针的正常语</span></span><br><span class="line"><span class="comment">然后如果要定义一个常量指针 首先他是一个指针</span></span><br><span class="line"><span class="comment">其次用常量修饰 所以应该用const修饰这个指针的定义*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* p2 = &amp;a;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p2 = &quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*指针的指向可以修改，</span></span><br><span class="line"><span class="comment">但是指针指向的值不可以改</span></span><br><span class="line"><span class="comment">首先如果我定义一个指针</span></span><br><span class="line"><span class="comment">比如在这里，我能*/</span></span><br><span class="line">p2 = &amp;b;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p2 = &quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*为什么这里用p1 = &amp;b;而不是*p1 = &amp;b;</span></span><br><span class="line"><span class="comment">因为p1 = &amp;b;的意思是把p1的指向从a改成b</span></span><br><span class="line"><span class="comment">而*p1 = &amp;b;的意思是把p1指向的内容 ，也就是a指向的内存所占的空间中的数据改成b</span></span><br><span class="line"><span class="comment">这肯定是不行的，因为a是一个int 所以只能存储数字，b在这里只是一个字母*/</span></span><br><span class="line"></span><br><span class="line">p2 = &amp;c;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p2 = &quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*从这里我们可以知道 首先这个所谓的常量指针</span></span><br><span class="line"><span class="comment">说白了就是不可以解引用然后修改内存地址中存储的数字，</span></span><br><span class="line"><span class="comment">但是实际上还是可以指向不同的数的 这里可以指向代表20的c</span></span><br><span class="line"><span class="comment">也可以指向代表10的b 说明就是缺少了解引用的功能</span></span><br><span class="line"><span class="comment">我的猜测是可能可以用来防止修改已有的变量吧*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="指针常量"><a href="#指针常量" class="headerlink" title="指针常量"></a>指针常量</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*指针常量*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*正常指针*/</span></span><br><span class="line"><span class="type">int</span>* p2 = &amp;a;</span><br><span class="line"><span class="comment">/*指针常量*/</span></span><br><span class="line"><span class="type">int</span>* <span class="type">const</span> p1 = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">*p1 = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p1 = &quot;</span> &lt;&lt; *p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*这里可以看到 p1的地址没有发生改变</span></span><br><span class="line"><span class="comment">也就是说p1一直是指向那一块内存空间的</span></span><br><span class="line"><span class="comment">但是p1的值*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>const既修饰指针，又修饰常量</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*const 既修饰指针 也修饰常量*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p1 = &amp;a;</span><br><span class="line"><span class="type">int</span> <span class="type">const</span> * <span class="type">const</span> p2 = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p2=&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p1=&quot;</span> &lt;&lt; *p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p2=&quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*指针的指向和指针的值都不可以修改*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>理解看法和总结</strong>：</p><p>说一下这一块我整体的看法和总结，首先先来看指针的定义<br>指针定义过程中的int <em> p = &xxx; 其中 </em>代表他是一个指针，然后p实际上就是一个数字，用来存储内存地址<br>常量指针，常量作为一个形容词修饰指针，所以const 肯定在 <em>的前面（无所谓在int前后）<br>所以他作为指针常量，只是指针的 </em> 部分被限制住了，<em>在解引用的时候要用到，所以就没办法用了<br>说人话就是没办法用 </em>p = 10;这种语句来修改内存地址中的数据了。这是常量指针 指针的部分被常量限制了。<br>然后是指针常量，指针常量在前面，首先是指针 然后才是常量 所以定义的方式是 int <em> const p = &a;这样，然后p的部分本来存储的就是内存地址，被const修饰之后 内存地址就没办法更改了，但是 </em>的部分功能还是正常的，也就是说我们可以解引用修改内存地址中的数据 但是没办法修改引用的内存地址了。 这 p永远都只能指向a<br>最后是第三种  const int * const p  = &amp;a 这种 情况下 既没办法修改地址 也没办法解引用修改值。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*const 既修饰指针 也修饰常量*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p1 = &amp;a;</span><br><span class="line"><span class="type">int</span> <span class="type">const</span> * <span class="type">const</span> p2 = &amp;a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p1=&quot;</span> &lt;&lt; p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; p2=&quot;</span> &lt;&lt; p2 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p1=&quot;</span> &lt;&lt; *p1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; *p2=&quot;</span> &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*指针的指向和指针的值都不可以修改*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*1\ const修饰指针*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* p3 = &amp;a;</span><br><span class="line">p3 = &amp;b;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p3:&quot;</span> &lt;&lt; p3 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p3:&quot;</span> &lt;&lt; *p3 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2\ const修饰常量*/</span></span><br><span class="line"><span class="type">int</span>* <span class="type">const</span> p4 = &amp;a;</span><br><span class="line">*p4 = <span class="number">30</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p4&quot;</span>&lt;&lt;p4&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p4&quot;</span> &lt;&lt; *p4&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a=&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*3 const修饰指针和常量*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>* <span class="type">const</span> p5 = &amp;a;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p5&quot;</span> &lt;&lt; p5 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*p5&quot;</span> &lt;&lt; *p5 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="指针和数组"><a href="#指针和数组" class="headerlink" title="指针和数组"></a>指针和数组</h3><p><strong>作用</strong>：利用指针访问数组中元素</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*指针和数组</span></span><br><span class="line"><span class="comment">利用指针访问数组中的元素*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">10</span>] = &#123; <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span> &#125;;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第一个元素&quot;</span> &lt;&lt; arr1[<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*数组是整形的 所以我们创建指针的时候也要创建整形的指针*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* p = arr1;</span><br><span class="line"><span class="comment">/*arr就是数组首地址*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;利用指针访问第一个元素:&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">p++;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;P++元素:&quot;</span> &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*p++之后访问的就是数组中的第二个元素了*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;利用指针遍历数组&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span>* p2 = arr1;</span><br><span class="line"><span class="type">int</span> length = <span class="built_in">sizeof</span>(arr1) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*不用指针*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;个数是&quot;</span> &lt;&lt; arr1[i] &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*用指针*/</span></span><br><span class="line">cout &lt;&lt; *p2 &lt;&lt; endl;</span><br><span class="line">p2++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针和函数"><a href="#指针和函数" class="headerlink" title="指针和函数"></a>指针和函数</h3><p>作用：利用指针做函数参数，可以改变实际参数的值<br>（引用传递）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*写一个函数实现两个数字进行交换*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap01</span><span class="params">(<span class="type">int</span> n1, <span class="type">int</span> n2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;交换前&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n1:&quot;</span> &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> tempo = n1;</span><br><span class="line">n1 = n2;</span><br><span class="line">n2 = tempo;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;交换后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n1:&quot;</span> &lt;&lt; n1 &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;swap01函数中n2:&quot;</span> &lt;&lt; n2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*值传递 要来力*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap02</span><span class="params">(<span class="type">int</span> *p1 , <span class="type">int</span> *p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = *p1;</span><br><span class="line">*p1 = *p2;</span><br><span class="line">*p2 = tempo;</span><br><span class="line"><span class="comment">/* *p是解引用的意思 这里是引用了a和b</span></span><br><span class="line"><span class="comment">然后传入了两个内存地址的解引用</span></span><br><span class="line"><span class="comment">然后用解引用重新赋值*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*指针和函数*/</span></span><br><span class="line"><span class="comment">/*值传递*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"><span class="built_in">swap01</span>(a, b);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中b:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*地址传递*/</span></span><br><span class="line"><span class="built_in">swap02</span>(&amp;a, &amp;b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;地址传递后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;main函数中b:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="指针、数组、函数"><a href="#指针、数组、函数" class="headerlink" title="指针、数组、函数"></a>指针、数组、函数</h3><p>封装一个函数，利用冒泡排序，实现对整整形数组的升序排序<br>举例 int arr1[10]= {4,3,6,9,5,8,2,1,7,5} ;</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*参数1 数组的首地址 参数二 数组长度*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="type">int</span>* p, <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p[j]&gt;p[j<span class="number">+1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> tempo = p[j];</span><br><span class="line">p[j] = p[j + <span class="number">1</span>];</span><br><span class="line">p[j + <span class="number">1</span>] = tempo;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*问 为什么这里可以用p[j]访问数组元素*/</span></span><br><span class="line"><span class="comment">/*在 C++ 中，指针和数组是密切相关的。</span></span><br><span class="line"><span class="comment">实际上，数组名本质上是一个指针，指向数组的第一个元素。</span></span><br><span class="line"><span class="comment">arr[j] 实际上是对指针 arr 的解引用操作（即 *(arr + j)）。</span></span><br><span class="line"><span class="comment">它等价于指针的偏移。</span></span><br><span class="line"><span class="comment">你可以通过 arr + j 来访问数组的第 j 个元素，</span></span><br><span class="line"><span class="comment">因为 arr 是一个指向数组首元素的指针，arr + j 就是指向数组第 j 个元素的指针。*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*写一个 打印数组的函数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printArray</span><span class="params">(<span class="type">int</span>* p, <span class="type">int</span>  len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; p[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> arr1[<span class="number">10</span>] = &#123; <span class="number">4</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">5</span> &#125;;</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(arr1) / <span class="built_in">sizeof</span>(arr1[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; len; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; arr1[i];</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printArray</span>(arr1,len);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n&quot;</span> &lt;&lt; <span class="string">&quot;排序前如上&quot;</span> &lt;&lt;<span class="string">&quot;\n&quot;</span>&lt;&lt;<span class="string">&quot;排序后如下&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">bubbleSort</span>(arr1, len);</span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; len; i++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; arr1[i] ;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">printArray</span>(arr1, len);</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><h3 id="结构体的基本概念"><a href="#结构体的基本概念" class="headerlink" title="结构体的基本概念"></a>结构体的基本概念</h3><p>结构体属于用户自定义的数据类型，允许用户存储不同的数据类型<br>我的感觉就是java中自定义的类，但是好像又不一样</p><h3 id="结构体定义和使用"><a href="#结构体定义和使用" class="headerlink" title="结构体定义和使用"></a>结构体定义和使用</h3><p>语法：struct 结构体名{结构体成员列表};<br>通过结构体创建变量的方式有三种：<br>struct 结构体名 变量名<br>struct 结构体名 变量名 = {成员值1,成员值2…}<br>定义结构体时顺便创造变量</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建学生数据类型</span></span><br><span class="line"><span class="comment">学生包括 姓名 年龄  分数*/</span></span><br><span class="line"><span class="comment">/*语法 struct 类型名称&#123;成员列表&#125;*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*成员列表*/</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="comment">/*姓名 年龄  分数*/</span></span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;s3;</span><br><span class="line"><span class="comment">/*在这里可以顺便创建一个结构体变量</span></span><br><span class="line"><span class="comment">但是我感觉不会有人这么写*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*为了偷懒我这里写了一个函数打印学生信息*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student p1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p<span class="number">1.</span>name &lt;&lt; <span class="string">&quot;  age:&quot;</span> &lt;&lt; p<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过学生类创建具体学生*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*三种方法创建*/</span></span><br><span class="line"><span class="comment">//struct Student s1; struct 可以省略</span></span><br><span class="line">Student s1;</span><br><span class="line">s<span class="number">1.</span>age = <span class="number">18</span>;</span><br><span class="line">s<span class="number">1.</span>name = <span class="string">&quot;jack&quot;</span>;</span><br><span class="line">s<span class="number">1.</span>score = <span class="number">90</span>;</span><br><span class="line"><span class="built_in">printStudent</span>(s1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span> s2 = &#123; <span class="string">&quot;mike&quot;</span>,<span class="number">20</span>,<span class="number">90</span> &#125;;</span><br><span class="line"><span class="comment">/*这里和java又不一样 java是括号 这里是 花括号*/</span></span><br><span class="line"><span class="built_in">printStudent</span>(s2);</span><br><span class="line"></span><br><span class="line">s<span class="number">3.</span>age = <span class="number">20</span>;</span><br><span class="line">s<span class="number">3.</span>name = <span class="string">&quot;fiona&quot;</span>;</span><br><span class="line">s<span class="number">3.</span>score = <span class="number">95</span>;</span><br><span class="line"><span class="built_in">printStudent</span>(s3);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>总结<br>1、定义结构体的关键字是 struct 类似java中的class 不可省略<br>2、创建结构体变量的时候，关键字stcuct可以省略<br>3、结构体利用操作符”.”访问成员</p><h3 id="结构体数组"><a href="#结构体数组" class="headerlink" title="结构体数组"></a>结构体数组</h3><p><strong>作用</strong>：将自定义的结构体放入数组中方便维护<br>我认为可能跟用java做 管理系统需要把自定义的类放入到arraylist差不多<br>语法： struct 结构体名 数组名[元素个数 ] = { {}，{}…{} }</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student p1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p<span class="number">1.</span>name &lt;&lt; <span class="string">&quot;  age:&quot;</span> &lt;&lt; p<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*结构体数组*/</span></span><br><span class="line"><span class="comment">/*1 定义结构体</span></span><br><span class="line"><span class="comment">2 创建结构体数组</span></span><br><span class="line"><span class="comment">3 给结构体数组中的元素赋值*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span> stuArr[<span class="number">3</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">&quot;mike&quot;</span>,<span class="number">17</span>,<span class="number">70</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;alice&quot;</span>,<span class="number">18</span>,<span class="number">80</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;john&quot;</span>,<span class="number">19</span>,<span class="number">90</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*如果要修改*/</span></span><br><span class="line">stuArr[<span class="number">2</span>].name = <span class="string">&quot;jack&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*尝试一下遍历输出*/</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(stuArr) / <span class="built_in">sizeof</span>(stuArr[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printStudent</span>(stuArr[i]);</span><br><span class="line">&#125;<span class="comment">/*成功*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体指针"><a href="#结构体指针" class="headerlink" title="结构体指针"></a>结构体指针</h3><p>作用：通过指针访问结构体中的成员</p><p>利用操作符 - &gt;可以通过结构体指针访问 结构体属性</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student *p1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p1-&gt;name &lt;&lt; <span class="string">&quot;  age:&quot;</span> &lt;&lt; p1-&gt;age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p1-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建学生结构体 变量</span></span><br><span class="line"><span class="comment">通过指针指向结构体变量</span></span><br><span class="line"><span class="comment">通过指针访问结构体变量中的数据*/</span></span><br><span class="line"></span><br><span class="line">Student s1 = &#123; <span class="string">&quot;jack&quot;</span>,<span class="number">18</span>,<span class="number">90</span> &#125;;</span><br><span class="line">Student * p = &amp;s1;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent</span>(p);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体嵌套结构体"><a href="#结构体嵌套结构体" class="headerlink" title="结构体嵌套结构体"></a>结构体嵌套结构体</h3><p><strong>作用</strong>：结构体中的成员可以是另一个结构体<br><strong>例如</strong>：每个老师辅导一个学员，一个老师的结构体中，记录一个学生的结构体</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Teacher</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">Student stu;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printTeacherInfo</span><span class="params">(<span class="type">const</span> Teacher&amp; t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 输出教师信息</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Teacher ID: &quot;</span> &lt;&lt; t.id &lt;&lt; <span class="string">&quot;Teacher Name: &quot;</span> </span><br><span class="line">&lt;&lt; t.name&lt;&lt; <span class="string">&quot;Teacher Age: &quot;</span> &lt;&lt; t.age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出学生信息</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Student Name: &quot;</span> &lt;&lt; t.stu.name </span><br><span class="line">&lt;&lt; <span class="string">&quot;Student Age: &quot;</span> &lt;&lt; t.stu.age </span><br><span class="line">&lt;&lt; <span class="string">&quot;Student Score: &quot;</span> &lt;&lt; t.stu.score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Student s1 = &#123;<span class="string">&quot;jack&quot;</span>,<span class="number">18</span>,<span class="number">70</span>&#125;;</span><br><span class="line">Student s2 = &#123;<span class="string">&quot;mike&quot;</span>,<span class="number">19</span>,<span class="number">80</span>&#125;;</span><br><span class="line">Student s3 = &#123;<span class="string">&quot;lisa&quot;</span>,<span class="number">20</span>,<span class="number">90</span>&#125;;</span><br><span class="line"></span><br><span class="line">Teacher t1 = &#123;<span class="number">1</span>,<span class="string">&quot;white&quot;</span>,<span class="number">40</span>,s1&#125;;</span><br><span class="line">Teacher t2 = &#123;<span class="number">2</span>,<span class="string">&quot;greffin&quot;</span>,<span class="number">46</span>,s2&#125;;</span><br><span class="line">Teacher t3 = &#123;<span class="number">3</span>,<span class="string">&quot;park&quot;</span>,<span class="number">38</span>,s3&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printTeacherInfo</span>(t1);</span><br><span class="line"><span class="built_in">printTeacherInfo</span>(t2);</span><br><span class="line"><span class="built_in">printTeacherInfo</span>(t3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结构体做函数参数"><a href="#结构体做函数参数" class="headerlink" title="结构体做函数参数"></a>结构体做函数参数</h3><p><strong>作用</strong>：将结构体作为参数 向函数中传递<br>传递的方式有两种<br>值传递<br>地址传递</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*学生类*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印学生 信息的函数*/</span></span><br><span class="line"><span class="comment">/*值传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent01</span><span class="params">(Student s1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;值传递函数内&quot;</span> &lt;&lt; endl;</span><br><span class="line">s<span class="number">1.</span>age = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*地址传递 引用传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent02</span><span class="params">(Student *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;引用传递函数内&quot;</span> &lt;&lt; endl;</span><br><span class="line">p-&gt;age = <span class="number">100</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p-&gt;name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; p-&gt;age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; p-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Student s1 = &#123; <span class="string">&quot;jack&quot;</span>,<span class="number">18</span>,<span class="number">70</span> &#125;;</span><br><span class="line">Student s2 = &#123; <span class="string">&quot;mike&quot;</span>,<span class="number">19</span>,<span class="number">80</span> &#125;;</span><br><span class="line">Student s3 = &#123; <span class="string">&quot;alice&quot;</span>,<span class="number">20</span>,<span class="number">90</span> &#125;;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line"><span class="built_in">printStudent01</span>(s1);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;值传递修改后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent02</span>(&amp;s1);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;地址传递修改后&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s<span class="number">1.</span>name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s<span class="number">1.</span>age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s<span class="number">1.</span>score &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="结构体中const使用场景"><a href="#结构体中const使用场景" class="headerlink" title="结构体中const使用场景"></a>结构体中const使用场景</h3><p><strong>作用</strong>：用const防止误操作 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent</span><span class="params">(Student s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s.name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s.age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s.score &lt;&lt; endl;</span><br><span class="line">&#125;<span class="comment">/*这就是标准的值传递  值传递会拷贝出非常多的多余数据 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*尝试用引用 传递*/</span></span><br><span class="line"><span class="comment">/*为什么用指针 因为上面的代码相当会把Student中</span></span><br><span class="line"><span class="comment">所有的数据都复制出来一份，在实际情况中，student的人数会很多</span></span><br><span class="line"><span class="comment">student的信息也会很多 ，数据量就会按照指数级增长</span></span><br><span class="line"><span class="comment">所以用指针可以很好的解决这个问题，一个指针只占4个字节（64位系统是八个）*/</span></span><br><span class="line"><span class="comment">/*一句话概括 用指针 可以减少内存空间 同时不会复制新的副本*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printStudent02</span><span class="params">(<span class="type">const</span> Student* s)</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*这节课的重点 就是上面在函数定义的时候在形参前面加一个const 这样的话 就无法修改</span></span><br><span class="line"><span class="comment"> 引用的指针，就是所谓的 常量指针 可以修改引用不同的指针 传入不同的student类的数据</span></span><br><span class="line"><span class="comment"> 都可以读数据 但是都无法更改 student中的内容*/</span></span><br><span class="line"><span class="comment">//s-&gt;name = &quot;mike&quot; 加入const之后这里就会报错 不能进行修改 </span></span><br><span class="line"><span class="comment">/*这样就可以保证不修改原始数据了*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; s-&gt;name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; s-&gt;age &lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; s-&gt;score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span>  <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Student s1 = &#123; <span class="string">&quot;jack&quot;</span>,<span class="number">17</span>,<span class="number">70</span> &#125;;</span><br><span class="line"><span class="built_in">printStudent</span>(s1);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printStudent02</span>(&amp;s1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结构体案例"><a href="#结构体案例" class="headerlink" title="结构体案例"></a>结构体案例</h3><h4 id="案例1"><a href="#案例1" class="headerlink" title="案例1"></a>案例1</h4><p>案例描述：<br>学校正在做毕设项目，每名老师带领5个学生，总共有3名老师，<br>需求如下<br>设计学生和老师的结构体，其中在老师的结构体中，有老师姓名和一个存放5名学生的数组作为成员学生的成员有姓名、考试分数，创建数组存放3名老师，通过函数给每个老师及所带的学生赋值最终打印出老师数据以及老师所带的学生数据。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line">string sname;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Teacher</span></span><br><span class="line">&#123;</span><br><span class="line">string tname;</span><br><span class="line">Student stuArr[<span class="number">5</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*给老师和学生赋值的函数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">allocatSpace</span><span class="params">(Teacher tArr[], <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string nameSeed = <span class="string">&quot;ABCDE&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*给老师的姓名赋值*/</span></span><br><span class="line">tArr[i].tname = <span class="string">&quot;Teacher_&quot;</span>;</span><br><span class="line">tArr[i].tname += nameSeed[i];</span><br><span class="line"><span class="comment">/*给老师的学生赋值 通过循环*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">tArr[i].stuArr[j].sname = <span class="string">&quot;student_&quot;</span>;</span><br><span class="line">tArr[i].stuArr[j].sname += nameSeed[j];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*给成绩赋值*/</span></span><br><span class="line"><span class="type">int</span> random = <span class="built_in">rand</span>() % <span class="number">61</span> + <span class="number">40</span>;</span><br><span class="line">tArr[i].stuArr[j].score = random;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">printInfo</span><span class="params">(Teacher tArr[],<span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;teacher name:&quot;</span> &lt;&lt; tArr[i].tname &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;<span class="comment">/* 打印学生姓名和成绩*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t student name:&quot;</span> &lt;&lt; tArr[i].stuArr[j].sname</span><br><span class="line">&lt;&lt; <span class="string">&quot; score:&quot;</span> &lt;&lt; tArr[i].stuArr[j].score &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*随机数种子*/</span></span><br><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line"><span class="comment">/*创建三名老师的数组*/</span></span><br><span class="line">Teacher tArr[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过函数赋值*/</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(tArr) / <span class="built_in">sizeof</span>(tArr[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">allocatSpace</span>(tArr, len);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*打印信息*/</span></span><br><span class="line"><span class="built_in">printInfo</span>(tArr, len);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="案例2"><a href="#案例2" class="headerlink" title="案例2"></a>案例2</h4><p>设计一个英雄的结构体，包括成员姓名，年龄，性别;创建结构体数组，数组中存放5名英雄。<br>通过冒泡排序的算法，将数组中的英雄按照年龄进行升序排序，最终打印排序后的结果。</p><p>五名英雄信息如下</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*英雄结构体*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">hero</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line">string gender;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*排序算法*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubler</span><span class="params">(hero *p,<span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; len <span class="number">-1</span> - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p[j].age &gt; p[j + <span class="number">1</span>].age)</span><br><span class="line">&#123;</span><br><span class="line">hero tempo = p[j];</span><br><span class="line">p[j] = p[j + <span class="number">1</span>];</span><br><span class="line">p[j + <span class="number">1</span>] = tempo;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">(hero* p, <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; p[i].name &lt;&lt; <span class="string">&quot; age:&quot;</span> &lt;&lt; p[i].age &lt;&lt; <span class="string">&quot; gender:&quot;</span> &lt;&lt; p[i].gender &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">hero HeroList[<span class="number">5</span>] =</span><br><span class="line">&#123;</span><br><span class="line">&#123;<span class="string">&quot;刘备&quot;</span>,<span class="number">23</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;关羽&quot;</span>,<span class="number">22</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;张飞&quot;</span>,<span class="number">20</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;赵云&quot;</span>,<span class="number">21</span>,<span class="string">&quot;男&quot;</span>&#125;,</span><br><span class="line">&#123;<span class="string">&quot;貂蝉&quot;</span>,<span class="number">19</span>,<span class="string">&quot;女&quot;</span>&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">sizeof</span>(HeroList) / <span class="built_in">sizeof</span>(HeroList[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">bubler</span>(HeroList, len);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*输出*/</span></span><br><span class="line"><span class="built_in">show</span>(HeroList, len);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第一大项目"><a href="#第一大项目" class="headerlink" title="第一大项目"></a>第一大项目</h2><h3 id="尝试做通讯录管理系统"><a href="#尝试做通讯录管理系统" class="headerlink" title="尝试做通讯录管理系统"></a>尝试做通讯录管理系统</h3><h3 id="系统需求"><a href="#系统需求" class="headerlink" title="系统需求"></a>系统需求</h3><p>通讯录是一个可以记录亲人、好友信息的工具。<br>本教程主要利用C++来实现一个通讯录管理系统系统中需要实现的功能如下:<br>添加联系人:向通讯录中添加新人，信息包括(姓名、性别、年龄、联系电话、家庭住址)最多记录1000人<br>显示联系人:显示通讯录中所有联系人信息<br>删除联系人:按照姓名进行删除指定联系人<br>查找联系人:按照姓名查看指定联系人信息<br>修改联系人:按照姓名重新修改指定联系人<br>清空联系人:清空通讯录中所有信息<br>退出通讯录:退出当前使用的通讯录</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> max 1000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*封装函数显示该界面 如void showMenu()</span></span><br><span class="line"><span class="comment">在main 函数中调用封装好的函数 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*联系人结构体*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line">string m_name;</span><br><span class="line"><span class="type">int</span> m_sex;</span><br><span class="line"><span class="type">int</span> m_age;</span><br><span class="line">string m_phone;</span><br><span class="line">string m_addr;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">AddressBooks</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Person</span> PersonArray[max];</span><br><span class="line"><span class="type">int</span> m_size;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*菜单界面*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showMenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 1. 添加联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 2. 显示联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 3. 删除联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 4. 查找联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 5. 修改联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 6. 清空联系人 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***** 0. 退出通讯录 *****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">addPerson</span><span class="params">(AddressBooks * abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*判断通讯录是否已满，如果满了就不再添加*/</span></span><br><span class="line"><span class="keyword">if</span> (abs-&gt;m_size ==max)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通讯录已满，无法继续添加！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="comment">/*添加具体联系人*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入姓名&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">abs-&gt;PersonArray[abs-&gt;m_size].m_name = name;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> gender = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入性别&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1--男，2--女&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;<span class="comment">/*如果输入的是一或者2 可以退出循环</span></span><br><span class="line"><span class="comment"> 因为输入的是正确值 如果输入有误，重新输入*/</span></span><br><span class="line">cin &gt;&gt; gender;</span><br><span class="line"><span class="keyword">if</span> (gender == <span class="number">1</span> || gender == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">abs-&gt;PersonArray[abs-&gt;m_size].m_sex = gender;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*年龄*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入年龄：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> age = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; age;</span><br><span class="line">abs-&gt;PersonArray[abs-&gt;m_size].m_age = age;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入联系电话：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string phone = <span class="string">&quot;&quot;</span>;</span><br><span class="line">cin &gt;&gt; phone;</span><br><span class="line">abs-&gt;PersonArray[abs-&gt;m_size].m_phone = phone;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入住址：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string address = <span class="string">&quot;&quot;</span>;</span><br><span class="line">cin &gt;&gt; address;</span><br><span class="line">abs-&gt;PersonArray[abs-&gt;m_size].m_addr = address;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*更新通讯录人数*/</span></span><br><span class="line">abs-&gt;m_size++;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;添加成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*显示联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showPerson</span><span class="params">(AddressBooks* abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*判断通讯录中的人数*/</span></span><br><span class="line"><span class="comment">/*如果不为0 显示记录的联系人的信息*/</span></span><br><span class="line"><span class="keyword">if</span> (abs-&gt;m_size == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;当前记录为空&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; abs-&gt;m_size; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名:&quot;</span> &lt;&lt; abs-&gt;PersonArray[i].m_name &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;性别:&quot;</span> &lt;&lt; (abs-&gt;PersonArray[i].m_sex==<span class="number">1</span>?<span class="string">&quot;男&quot;</span>:<span class="string">&quot;女&quot;</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;年龄:&quot;</span> &lt;&lt; abs-&gt;PersonArray[i].m_age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;电话:&quot;</span> &lt;&lt; abs-&gt;PersonArray[i].m_phone &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;住址:&quot;</span> &lt;&lt; abs-&gt;PersonArray[i].m_addr &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除功能 */</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">isExist</span><span class="params">(AddressBooks* abs, string name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; abs-&gt;m_size; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (abs-&gt;PersonArray[i].m_name == name)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*找到用户*/</span></span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*删除指定的联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deletePerson</span><span class="params">(AddressBooks *abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入你要删除的联系人&quot;</span> &lt;&lt; endl;</span><br><span class="line">string name;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*查找到这个人 删除</span></span><br><span class="line"><span class="comment">要删除 一个数据 将后面的数据向前移动</span></span><br><span class="line"><span class="comment">并且让通讯录中记录的人员数量做-1的操作即可*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = ret; i &lt; abs-&gt;m_size; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*数据前移*/</span></span><br><span class="line">abs-&gt;PersonArray[i] = abs-&gt;PersonArray[i + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">abs-&gt;m_size--;<span class="comment">/*更新一下通讯录中的人员数*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;delete complete!&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;404 not found&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查找联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">findPerson</span><span class="params">(AddressBooks * abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您要查找的联系人&quot;</span> &lt;&lt; endl;</span><br><span class="line">string name;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*判断指定的姓名是否存在 */</span></span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;姓名:&quot;</span> &lt;&lt; abs-&gt;PersonArray[ret].m_name &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;性别:&quot;</span> &lt;&lt; (abs-&gt;PersonArray[ret].m_sex == <span class="number">1</span> ? <span class="string">&quot;男&quot;</span> : <span class="string">&quot;女&quot;</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;年龄:&quot;</span> &lt;&lt; abs-&gt;PersonArray[ret].m_age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;电话:&quot;</span> &lt;&lt; abs-&gt;PersonArray[ret].m_phone &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;住址:&quot;</span> &lt;&lt; abs-&gt;PersonArray[ret].m_addr &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查无此人&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*修改联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modifyPerson</span><span class="params">(AddressBooks *abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入您要修改的联系人&quot;</span> &lt;&lt; endl;</span><br><span class="line">string name;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line"><span class="comment">/*判断指定的姓名是否存在 */</span></span><br><span class="line"><span class="type">int</span> ret = <span class="built_in">isExist</span>(abs, name);</span><br><span class="line"><span class="keyword">if</span> (ret != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line"><span class="comment">/*添加具体联系人*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入姓名&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">abs-&gt;PersonArray[ret].m_name = name;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> gender = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入性别&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;1--男，2--女&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;<span class="comment">/*如果输入的是一或者2 可以退出循环</span></span><br><span class="line"><span class="comment"> 因为输入的是正确值 如果输入有误，重新输入*/</span></span><br><span class="line">cin &gt;&gt; gender;</span><br><span class="line"><span class="keyword">if</span> (gender == <span class="number">1</span> || gender == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">abs-&gt;PersonArray[ret].m_sex = gender;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入有误，请重新输入&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*年龄*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入年龄：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> age = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; age;</span><br><span class="line">abs-&gt;PersonArray[ret].m_age = age;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入联系电话：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string phone = <span class="string">&quot;&quot;</span>;</span><br><span class="line">cin &gt;&gt; phone;</span><br><span class="line">abs-&gt;PersonArray[ret].m_phone = phone;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入住址：&quot;</span> &lt;&lt; endl;</span><br><span class="line">string address = <span class="string">&quot;&quot;</span>;</span><br><span class="line">cin &gt;&gt; address;</span><br><span class="line">abs-&gt;PersonArray[ret].m_addr = address;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;修改成功&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;查无此人&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*清空联系人*/</span></span><br><span class="line"><span class="function"><span class="type">void</span>  <span class="title">claenPerson</span><span class="params">(AddressBooks* abs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">abs-&gt;m_size = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;已清空&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>)<span class="comment">/*请按任意键继续*/</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);<span class="comment">/*清屏*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*创建通讯录结构体变量*/</span></span><br><span class="line">AddressBooks abs;</span><br><span class="line"><span class="comment">/*初始化通讯录中当前人员个数*/</span></span><br><span class="line">abs.m_size = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123; </span><br><span class="line"><span class="built_in">showMenu</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建用户选择输入的变量*/</span></span><br><span class="line"><span class="type">int</span> select = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (select)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"><span class="comment">/*添加联系人*/</span></span><br><span class="line"><span class="built_in">addPerson</span>(&amp;abs);</span><br><span class="line"><span class="comment">/*利用地址传递可以修饰实参*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line"><span class="comment">/*显示联系人*/</span></span><br><span class="line"><span class="built_in">showPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="comment">//&#123;/*删除联系人*/</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;请输入删除联系人的姓名&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//string name = &quot;&quot;;</span></span><br><span class="line"><span class="comment">//cin &gt;&gt; name;</span></span><br><span class="line"><span class="comment">//if (isExist(&amp;abs, name) == -1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;404 not found&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;got you&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="built_in">deletePerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="comment">/*查找联系人*/</span></span><br><span class="line"><span class="built_in">findPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line"><span class="comment">/*修改联系人*/</span></span><br><span class="line"><span class="built_in">modifyPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line"><span class="comment">/*清空联系人*/</span></span><br><span class="line"><span class="built_in">claenPerson</span>(&amp;abs);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="comment">/*退出通讯录*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;byebye~&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>中途还是有很多问题 但是至此 通讯录管理系统完成</p><h1 id="C-核心编程"><a href="#C-核心编程" class="headerlink" title="C++核心编程"></a>C++核心编程</h1><p>主要是面向对象 技术的详解</p><h2 id="内存的分区模型"><a href="#内存的分区模型" class="headerlink" title="内存的分区模型"></a>内存的分区模型</h2><p>C++程序在执行时，将内存大方向划分为四个区域<br>代码区：存放函数体的二进制代码，由操作系统进行管理（cout ，字符）<br>全局区：存放全局变量和静态变量以及常量<br>栈区：由编译器自动分配释放，存放函数的参数值，局部变量等<br>堆区：由程序员分配和释放，若程序员不释放，程序结束时由操作系统回收</p><p>内存四区的意义：不同区域存放 的数据，赋予不同的生命周期，给我们更大的灵活编程。</p><h3 id="程序运行前"><a href="#程序运行前" class="headerlink" title="程序运行前"></a>程序运行前</h3><p>在程序编译后，生成了exe可执行程序，未执行该程序前分为两个区域<br><strong>代码区</strong>：<br>    存放cpu执行的机器指令<br>    代码区是共享的，共享的目的是对于频繁被执行的程序，只需要在 内存中有一份 代码即可<br>    代码区是只读的，使其只读的原因是防止程序意外地修改了它的指令<br><strong>全局区</strong>：<br>    全局变量和静态变量存放于此<br>    全局区还包含了常量区，字符串常量和其他常量也存放在此<br>    该区域的数据在程序结束后由操作系统释放。</p><h3 id="程序运行后"><a href="#程序运行后" class="headerlink" title="程序运行后"></a>程序运行后</h3><p><strong>栈区</strong>：<br>    由编译器自动分配释放，存放函数的参数值，局部变量等<br>    注意事项：不要反悔局部变量的地址，栈区开辟的数据由于编译器自动释放<br><strong>堆区</strong>：<br>    由于程序员分配释放，若程序员不释放，程序结束时由操作系统回收<br>    在C++中主要利用new在堆区开辟内存</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*全局变量*/</span></span><br><span class="line"><span class="type">int</span> g_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> g_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*const修饰的全局变量*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> cga = <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> cgb = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> * <span class="title">func</span><span class="params">(<span class="type">int</span> b)</span><span class="comment">/*返回一个int类型的指针*/</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*形参数据也会放在栈区*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;<span class="comment">/*存放在栈区 栈区的数据在函数执行完之后自动释放*/</span></span><br><span class="line"><span class="keyword">return</span> &amp;a;</span><br><span class="line"><span class="comment">/*这里就是在返回局部变量的地址*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> * <span class="title">func1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*利用new关键字 可以将数据开辟 到 堆区*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*指针本质上给是一个局部变量 也是放在栈上</span></span><br><span class="line"><span class="comment">指针保存的数据 放在堆区*/</span></span><br><span class="line"><span class="type">int</span> * p = <span class="keyword">new</span> <span class="built_in">int</span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*全局区*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*全局变量 静态变量 常量*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建一个普通的局部变量*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*只要写在函数体内的变量</span></span><br><span class="line"><span class="comment">都叫 局部变量*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部变量a的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部变量b的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局变量g_a的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;g_a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局变量g_b的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;g_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*静态变量*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> s_a = <span class="number">10</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> s_b = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;静态变量s_a的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;s_a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;静态变量s_b的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;s_b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*常量 字符串常量和const 修饰的变量*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;字符串常量的地址&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;<span class="string">&quot;hello world&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*const 修饰的全局变量和局部变量*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局常量cga的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;cga &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;全局常量cgb的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;cgb &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> cla = <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> clb = <span class="number">10</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部常量cla的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;cla &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;局部常量clb的地址：&quot;</span> &lt;&lt; (<span class="type">int</span>)&amp;clb &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*局部在代码区域 全局在全局区*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*栈区数据的注意事项</span></span><br><span class="line"><span class="comment">不要返回局部变量的地址</span></span><br><span class="line"><span class="comment">栈区的数据由编译器管理开辟和释放*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//int* p1 = func();</span></span><br><span class="line"><span class="comment">///*接受func函数的返回值*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//cout &lt;&lt; *p1 &lt;&lt; endl;/*第一次可以 打印正确的数字是因为编译器做了保留*/</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; *p1 &lt;&lt; endl;/*这里理论上应该输出乱码*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*在堆区开辟数据*/</span></span><br><span class="line"><span class="type">int</span>* p = <span class="built_in">func1</span>();</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="new操作符（重点）"><a href="#new操作符（重点）" class="headerlink" title="new操作符（重点）"></a>new操作符（重点）</h3><p>C++中利用new操作符在堆区开辟数据<br>堆区开辟的数据，由程序员手动开辟，手动释放 ，释放利用操作符delete<br>语法：new 数据类型<br>利用new创建的数据，会返回该数据对应的类型的指针</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*new基本语法*/</span></span><br><span class="line"><span class="function"><span class="type">int</span>* <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*在堆区创建整形数据*/</span></span><br><span class="line"><span class="comment">/*new返回的是一个该数据类型的指针*/</span></span><br><span class="line"><span class="type">int</span> * p  =<span class="keyword">new</span> <span class="built_in">int</span>(<span class="number">10</span>);</span><br><span class="line"><span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span>* p = <span class="built_in">func</span>();</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; *p &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*堆区的数据有程序员管理</span></span><br><span class="line"><span class="comment">如果想释放 用delete*/</span></span><br><span class="line"><span class="keyword">delete</span> p;</span><br><span class="line"><span class="comment">//cout &lt;&lt; *p &lt;&lt; endl;报错</span></span><br><span class="line"><span class="comment">/*内存已经被释放 再次访问就是非法操作*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*创建10整形数据的数组，在堆区*/</span></span><br><span class="line"><span class="type">int</span> * arr = <span class="keyword">new</span> <span class="type">int</span>[<span class="number">10</span>];</span><br><span class="line"><span class="comment">/*10代表数组元素个数*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">arr[i] = i + <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><h3 id="引用的基本使用"><a href="#引用的基本使用" class="headerlink" title="引用的基本使用"></a>引用的基本使用</h3><p><strong>作用</strong>：给变量起别名<br><strong>语法</strong>: 数据类型 &amp; 别名 = 原名 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*引用基本语法*/</span></span><br><span class="line"><span class="comment">/*数据类型 &amp;别名 = 原名*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span>&amp; b = a;</span><br><span class="line"><span class="comment">/*这样这块地址又叫a 又叫b*/</span></span><br><span class="line">b = <span class="number">20</span>;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*a 也变成了20*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="引用的注意事项"><a href="#引用的注意事项" class="headerlink" title="引用的注意事项"></a>引用的注意事项</h3><p>引用必须初始化<br>引用初始化之后就不可以改变</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> c = <span class="number">20</span>;</span><br><span class="line"><span class="comment">//int&amp; b;报错</span></span><br><span class="line"><span class="type">int</span>&amp; b = a;</span><br><span class="line"><span class="comment">/*初始化之后不可以赋值*/</span></span><br><span class="line">b = c; </span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c = &quot;</span> &lt;&lt; c &lt;&lt;endl;</span><br><span class="line"><span class="comment">/*这里a原本是数据丢失*/</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="引用作函数参数"><a href="#引用作函数参数" class="headerlink" title="引用作函数参数"></a>引用作函数参数</h3><p><strong>作用</strong>：函数传参时，可以利用引用的技术让形参修饰实参<br><strong>优点</strong>:可以简化指针修改实参</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*交换函数</span></span><br><span class="line"><span class="comment">值传递 地址传递 引用传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myswap01</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = a;</span><br><span class="line">a = b;</span><br><span class="line">b = tempo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*地址传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myswap02</span><span class="params">(<span class="type">int</span> * a,<span class="type">int</span> * b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = *a;</span><br><span class="line">*a = *b;</span><br><span class="line">*b = tempo;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*引用传递*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mySwap03</span><span class="params">(<span class="type">int</span>&amp; a, <span class="type">int</span>&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> tempo = a;</span><br><span class="line">a = b;</span><br><span class="line">b = tempo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">myswap01</span>(a, b);</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a after myswap01:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b after myswap01:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">myswap02</span>(&amp;a, &amp;b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a after myswap02:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b after myswap02:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>; b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">mySwap03</span>(a, b);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a after myswap03:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;b after myswap03:&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>总结：通过引用参数产生的效果和地址传递是一样的。引用的语法更加简单清楚</p><h3 id="引用做函数返回值"><a href="#引用做函数返回值" class="headerlink" title="引用做函数返回值"></a>引用做函数返回值</h3><p>作用：引用是可以作为函数返回值存在的<br>注意：不要返回局部变量引用<br>用法：函数调用作为左值</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*引用作函数的返回值</span></span><br><span class="line"><span class="comment">不要返回局部变量的引用 */</span></span><br><span class="line"><span class="function"><span class="type">int</span> &amp; <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*局部变量存放在内存四区中的栈区</span></span><br><span class="line"><span class="comment">调用函数结束之后就释放内存了*/</span></span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数的调用可以作为左值存在*/</span></span><br><span class="line"><span class="function"><span class="type">int</span>&amp; <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*静态变量 存放在全局区*/</span></span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> &amp; ref = <span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref =&quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line"><span class="comment">/* 变成了空的内存地址*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span>&amp; ref2 = <span class="built_in">test02</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref2 =&quot;</span> &lt;&lt; ref2 &lt;&lt; endl;</span><br><span class="line"><span class="comment">/*正常输出*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">test02</span>() = <span class="number">1000</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref2 =&quot;</span> &lt;&lt; ref2 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="引用的本质"><a href="#引用的本质" class="headerlink" title="引用的本质"></a>引用的本质</h3><p><strong>本质：引用的本质在C++内部实现是一个指针常量</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*发现是引用  转换未int * const ref = &amp;a */</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span>&amp; ref)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ref = <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*自动转换int * const ref  = &amp;a ;</span></span><br><span class="line"><span class="comment">本质上是一个个指针常量，也说明了为什么引用不可更改 */</span></span><br><span class="line"><span class="type">int</span>&amp; ref = a;</span><br><span class="line">ref = <span class="number">20</span>;</span><br><span class="line"><span class="comment">/*颞部发现ref是引用 会自动帮我们转换成*ref = 20</span></span><br><span class="line"><span class="comment">* 说人话就是会自动解引用</span></span><br><span class="line"><span class="comment">所有为什么说引用简单 因为涉及到了大量的自动转换</span></span><br><span class="line"><span class="comment">在前面自己写代码的过程中我就 隐隐约约感觉到了</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;ref:&quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">func</span>(a);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结论：c++推荐用引用技术，因为语法方便，引用本质是指针常量，但是所有的指针操作编译器都帮我们做了<br>后记：妈的，那老子学那么久的指针是为了什么，牛魔酬宾，把我的时间还给我！</p><h3 id="常量引用"><a href="#常量引用" class="headerlink" title="常量引用"></a>常量引用</h3><p><strong>作用</strong>：常量引用主要用来修饰形参，防止误操作<br>在函数形象 列表中,可以加const修饰形参,防止形参改变实参</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showValue</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;val)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*用const修饰之后变成只读 下面就不能再修改*/</span></span><br><span class="line"><span class="comment">//val = 1000;</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;val=&quot;</span> &lt;&lt; val &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*常量引用*/</span></span><br><span class="line"><span class="comment">/*使用场景，用来修饰形式参 防止误操作*/</span></span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span>&amp; ref = a;</span><br><span class="line"><span class="comment">//int&amp; ref1 = 10;</span></span><br><span class="line"><span class="comment">/*必须引用合法内存空间</span></span><br><span class="line"><span class="comment">10不具有合法内存空间*/</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span>&amp; ref1 = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*这样就正确了</span></span><br><span class="line"><span class="comment">加上const之后 编译器将代码修改</span></span><br><span class="line"><span class="comment">int temp = 10;</span></span><br><span class="line"><span class="comment">const int &amp; ref = temp</span></span><br><span class="line"><span class="comment">相当于把代码改成这样的形式了*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a1 = <span class="number">100</span>;</span><br><span class="line"><span class="built_in">showValue</span>(a1);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a1=&quot;</span> &lt;&lt; a1 &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="函数提高（重要）"><a href="#函数提高（重要）" class="headerlink" title="函数提高（重要）"></a>函数提高（重要）</h2><h3 id="函数默认参数（重要）"><a href="#函数默认参数（重要）" class="headerlink" title="函数默认参数（重要）"></a>函数默认参数（重要）</h3><p>在C++中，函数的形参列表中的形参是可以有默认值的<br>语法：返回值类型 函数名 （参数 = 默认值）{}</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数默认参数*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b = <span class="number">20</span>, <span class="type">int</span> c=<span class="number">30</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a + b + c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*如果自己传入的数据 就优先用传入的</span></span><br><span class="line"><span class="comment">默认数据在没有传入数据的时候才会不得已被调用*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*下面这个是重要考点*/</span></span><br><span class="line"><span class="comment">/*1、如果某个位置已经有了默认参数，</span></span><br><span class="line"><span class="comment">那么这个位置往后，从左往右都必须有默认值 */</span></span><br><span class="line"><span class="comment">//int func2(int a,int b = 10,int c,int d )</span></span><br><span class="line"><span class="comment">//&#123;/*如果这里b有参数 那么后面的c  d 都必须有参数</span></span><br><span class="line"><span class="comment">// 不然就报错*/</span></span><br><span class="line"><span class="comment">//return a + b + c;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*2、如果函数声明有默认参数，函数实现就不能有默认参数</span></span><br><span class="line"><span class="comment">声明和定义只能有一个有默认参数*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func3</span><span class="params">(<span class="type">int</span> a = <span class="number">10</span>, <span class="type">int</span> b =<span class="number">10</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">func3</span><span class="params">(<span class="type">int</span> a =<span class="number">10</span>, <span class="type">int</span> b = <span class="number">20</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*这里有可能出现如上的情况 不知道</span></span><br><span class="line"><span class="comment"> 两边的默认函数不同 不知道按哪一边的默认参数来</span></span><br><span class="line"><span class="comment"> 所以只能有一边有默认参数</span></span><br><span class="line"><span class="comment"> 只要删除一个地方都能正常运行*/</span></span><br><span class="line"><span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*报错 重定义默认参数 */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="built_in">func</span>(<span class="number">10</span>) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="built_in">func</span>(<span class="number">10</span>, <span class="number">30</span>, <span class="number">30</span>) &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*cout &lt;&lt; func3(10) &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">调用时报错*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数占位参数"><a href="#函数占位参数" class="headerlink" title="函数占位参数"></a>函数占位参数</h3><p>C++中的函数形参列表里可以有占位参数，用来做占位，调用函数时必须填补该位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">语法： 返回值类型 函数名 （数据类型）&#123;&#125;</span><br></pre></td></tr></table></figure><p>现阶段函数的占位参数意义不大，但是据说后面会用到。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="comment">/*函数 占位参数*/</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*目前阶段占位参数 还用不到 后面课程可能会用到*/</span></span><br><span class="line"><span class="comment">/*占位参数还可以有默认参数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span>=<span class="number">10</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;this is func&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">func</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数重载（重要）"><a href="#函数重载（重要）" class="headerlink" title="函数重载（重要）"></a>函数重载（重要）</h3><h4 id="函数重载-概述"><a href="#函数重载-概述" class="headerlink" title="函数重载 概述"></a>函数重载 概述</h4><p><strong>作用</strong>：函数名可以相同，提高服用性<br><strong>函数重载满足条件</strong>：<br>同一个作用域下<br>函数名称相同<br>函数的参数 类型不同或个数不同或顺序不同</p><p><strong>注意</strong>：函数的返回值不可以作为函数重载的条件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="comment">/*函数重载*/</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数 重载 的满足条件</span></span><br><span class="line"><span class="comment">1、同一个作用域下</span></span><br><span class="line"><span class="comment">2、函数名称相同</span></span><br><span class="line"><span class="comment">3、函数的参数类型个数或者顺序不同*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">int</span> a )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(int a )的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">double</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(double a )的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">int</span> a,<span class="type">double</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(int,double)的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">double</span> b, <span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func(double,int)的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*注意事项</span></span><br><span class="line"><span class="comment">函数的返回值不可以作为重载的条件*/</span></span><br><span class="line"><span class="comment">//int func01()</span></span><br><span class="line"><span class="comment">//&#123; 这种情况就是错误的</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;func的调用&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">func01</span>();</span><br><span class="line"><span class="built_in">func01</span>(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">func01</span>(<span class="number">1.0</span>);</span><br><span class="line"><span class="built_in">func01</span>(<span class="number">1</span>,<span class="number">1.0</span>);</span><br><span class="line"><span class="built_in">func01</span>(<span class="number">1.0</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="函数重载注意事项"><a href="#函数重载注意事项" class="headerlink" title="函数重载注意事项"></a>函数重载注意事项</h3><p>引用作为重载条件<br>函数重载碰到函数默认参数</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*函数重载的注意事项*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*引用作为重载的条件*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func01(int a ,int b)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">/*int &amp; a = 10 不合法的*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func01(int &amp;a)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func01</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;a)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">/*const int &amp;a = 10*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func01(const int a)&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数重载碰到默认参数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func2（int a）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">func2</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;func2（int a,int b）&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//void func2(int a=10)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;func2（int a=10）&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line"><span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">func01</span>(a);<span class="comment">//调用的是int &amp;a</span></span><br><span class="line"><span class="built_in">func01</span>(<span class="number">10</span>);</span><br><span class="line"><span class="comment">/*上面调用的是int &amp;a </span></span><br><span class="line"><span class="comment">下面调用的是const*/</span></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* a默认情况下是一个变量，</span></span><br><span class="line"><span class="comment">所以我用func01(a);的时候默认的情况下他选择了 </span></span><br><span class="line"><span class="comment">可读可写的int &amp;a版本</span></span><br><span class="line"><span class="comment">而10本身就作为一个常量 是不可以被更改的 </span></span><br><span class="line"><span class="comment">所以默认他就选择了void func01(const int &amp;a)*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">func2</span>(a);</span><br><span class="line"><span class="comment">//func2();</span></span><br><span class="line"><span class="comment">/*当函数重载遇到默认参数 会出现二义性</span></span><br><span class="line"><span class="comment">尽量避免这种情况</span></span><br><span class="line"><span class="comment">如果要重载就不要写默认参数*/</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><p>C++面向对象的三大特性为：封装、继承、多态<br>C++认为完事<strong>万物皆对象</strong>，对下昂 上有其属性和行为</p><p>例如：<br>        人可以作为对象，属性有姓名、年龄、身高、体重…行为有走、跑、跳、吃饭、唱歌<br>        车也可以作为对象，属性有轮胎、方向盘、车灯.,行为有载人、放音乐、放空调…<br>        具有相同性质的对象，我们可以抽象称为类，人属于人类，车属于车类，都可以作为地球上的东西一类</p><h3 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h3><h4 id="封装的意义（重点）"><a href="#封装的意义（重点）" class="headerlink" title="封装的意义（重点）"></a>封装的意义（重点）</h4><p>封装是C++面向对象三大特性之一<br>封装的意义：<br>        将属性和行为作为一个个整体，表现生活中的事物<br>        讲过属性和行为加以权限控制</p><h5 id="封装的意义一："><a href="#封装的意义一：" class="headerlink" title="封装的意义一："></a><strong>封装的意义一</strong>：</h5><p>​        在设计类的时候，属性和行为写在一起，表现事物<br><strong>语法</strong>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class 类名 &#123;访问权限：属性/行为&#125;；</span><br></pre></td></tr></table></figure><p>示例1：设计一个圆类，球圆的周长</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">double</span> pi = <span class="number">3.14</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*设计一个圆类 求圆周长</span></span><br><span class="line"><span class="comment">袁求周长的公式 2*PI * 半径*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:<span class="comment">/*公共权限*/</span></span><br><span class="line"><span class="comment">/*属性 半径*/</span></span><br><span class="line"><span class="type">int</span> r;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*行为 获取圆的周长*/</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">length</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span> * pi * r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*r是类的成员变量</span></span><br><span class="line"><span class="comment">对于每一个circle 都有一个r</span></span><br><span class="line"><span class="comment">length（）是成员函数</span></span><br><span class="line"><span class="comment">因为 r 是类的 成员，</span></span><br><span class="line"><span class="comment">对于类的每个实例（对象）来说，</span></span><br><span class="line"><span class="comment">r 是属于该实例的</span></span><br><span class="line"><span class="comment">在成员函数中，你可以直接访问类的 成员变量，不需要额外传参。</span></span><br><span class="line"><span class="comment">所以这里不需要传参就可以直接访问*/</span></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*通过圆类床关键具体的圆*/</span></span><br><span class="line">Circle c1;</span><br><span class="line"><span class="comment">/*给圆对象的属性进行赋值*/</span></span><br><span class="line">c<span class="number">1.</span>r = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;圆的周长为：&quot;</span> &lt;&lt; c<span class="number">1.l</span>ength() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 示例2：设计一个学生类，属性有姓名和学号，可以给姓名和学号赋值，可以显示学生的姓名和学号</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*学生类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:<span class="comment">/*控制权限写在类里面*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*类中的属性和行为，我们统一称为成员</span></span><br><span class="line"><span class="comment">属性 成员属性 成员变量</span></span><br><span class="line"><span class="comment">行为 成员函数 成员方法*/</span></span><br><span class="line"></span><br><span class="line">string name;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;name:&quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot; id:&quot;</span> &lt;&lt; id &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setName</span><span class="params">(string sname)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">name = sname;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setId</span><span class="params">(<span class="type">int</span> nid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">id = nid;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;<span class="comment">/*class 后面要加分号*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Student s1;</span><br><span class="line">s<span class="number">1.</span>name = <span class="string">&quot;jack&quot;</span>;</span><br><span class="line">s<span class="number">1.</span>id = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">Student s2;</span><br><span class="line">s<span class="number">2.</span>name = <span class="string">&quot;fiona&quot;</span>;</span><br><span class="line">s<span class="number">2.</span>id = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">s<span class="number">1.</span><span class="built_in">show</span>();</span><br><span class="line">s<span class="number">2.</span><span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line">s<span class="number">1.</span><span class="built_in">setName</span>(<span class="string">&quot;mike&quot;</span>);</span><br><span class="line">s<span class="number">1.</span><span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line">s<span class="number">2.</span><span class="built_in">setId</span>(<span class="number">3</span>);</span><br><span class="line">s<span class="number">2.</span><span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="封装的意义二（重点）："><a href="#封装的意义二（重点）：" class="headerlink" title="封装的意义二（重点）："></a><strong>封装的意义二</strong>（重点）：</h5><p>类在设计时，可以把属性和行为放在不同的权限下，加以控制</p><p>访问权限有三种：<br>1、public 公共权限<br>2、protected 保护权限<br>3、private 私有权限</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*访问权限</span></span><br><span class="line"><span class="comment">三种</span></span><br><span class="line"><span class="comment">公共权限 public 成员类内外都可以访问</span></span><br><span class="line"><span class="comment">保护权限 protected 类内可以访问 子类可以访问</span></span><br><span class="line"><span class="comment">私有权限 private  类内可以访问 子类不能访问</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">保护和私有的关系主要在继承</span></span><br><span class="line"><span class="comment">父类的保护权限子类可以访问</span></span><br><span class="line"><span class="comment">私有权限就不可以*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string pname;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">string pcar;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string password;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setFunc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">pname = <span class="string">&quot;jack&quot;</span>;</span><br><span class="line">pcar = <span class="string">&quot;BMW&quot;</span>;</span><br><span class="line">password = <span class="string">&quot;123321&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*这里在类内访问都是正常的，没有问题</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/*实例化一个具体的对象进行操作*/</span></span><br><span class="line">Person p1;</span><br><span class="line"></span><br><span class="line">p<span class="number">1.</span>pname = <span class="string">&quot;mike&quot;</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">p1.pcar = &quot;benz&quot;;</span></span><br><span class="line"><span class="comment">p1.password = &quot;123123&quot;;</span></span><br><span class="line"><span class="comment">报错 说明类外不可以访问</span></span><br><span class="line"><span class="comment">protected和private权限</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="struct和class区别"><a href="#struct和class区别" class="headerlink" title="struct和class区别"></a>struct和class区别</h3><p>在c++中 struct和class <strong>唯一的区别</strong>就是<strong><u>默认的访问权限不同</u></strong></p><p><strong>区别</strong>：<br>struct默认权限为公共<br>class 默认权限为私有</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a1;</span><br><span class="line"><span class="comment">/*默认权限是私有*/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">C2</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a2;</span><br><span class="line"><span class="comment">/*默认是公共权限*/</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*struct和class 区别</span></span><br><span class="line"><span class="comment">struct 默认权限是公共</span></span><br><span class="line"><span class="comment">class 默认权限是私有*/</span></span><br><span class="line">C1 obj1;</span><br><span class="line">C2 obj2;</span><br><span class="line"></span><br><span class="line">obj<span class="number">1.</span>a1 = <span class="number">1</span>;</span><br><span class="line"><span class="comment">/*这里不可以访问</span></span><br><span class="line"><span class="comment">因为对于class来说</span></span><br><span class="line"><span class="comment">a1默认是私有的*/</span></span><br><span class="line">obj<span class="number">2.</span>a2 = <span class="number">2</span>;</span><br><span class="line"><span class="comment">/*这里可以访问</span></span><br><span class="line"><span class="comment">因为对于struct来说</span></span><br><span class="line"><span class="comment">a2默认是公共的*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="成员属性设置为私有"><a href="#成员属性设置为私有" class="headerlink" title="成员属性设置为私有"></a>成员属性设置为私有</h3><p><strong>优点</strong>1：将所有成员属性设置为私有，可以自己控制读写权限<br><strong>优点</strong>2：对于写权限，我们可以检测数据的有效性</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*成员属性设置私有</span></span><br><span class="line"><span class="comment">可以自己控制读写权限</span></span><br><span class="line"><span class="comment">对于写权限可以检测数据有效性</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">string pname;<span class="comment">//姓名 可读写</span></span><br><span class="line"><span class="type">int</span> page = <span class="number">18</span>;<span class="comment">//年龄 只读</span></span><br><span class="line">string idol;<span class="comment">//偶像 只写</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//设置姓名</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setName</span><span class="params">(string name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">pname = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取姓名</span></span><br><span class="line"><span class="function">string <span class="title">getName</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> pname;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*获取年龄*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getAge</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> page;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*设置偶像*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setIdol</span><span class="params">(string name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">idol = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加设置年龄的公共函数</span></span><br><span class="line"><span class="comment">然后添加一个验证</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setAge</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a&lt;<span class="number">0</span> || a&gt;<span class="number">150</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;不合法字符&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">page = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Person p1;</span><br><span class="line"><span class="comment">/*设置姓名*/</span></span><br><span class="line"><span class="comment">//p.pname = &quot;jack&quot;;</span></span><br><span class="line"><span class="comment">//访问不到 报错</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;name:&quot; &lt;&lt; p1.pname &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//上面的语句同样报错</span></span><br><span class="line">p<span class="number">1.</span><span class="built_in">setName</span>(<span class="string">&quot;john&quot;</span>);</span><br><span class="line">cout &lt;&lt; p<span class="number">1.</span><span class="built_in">getName</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*对于年龄</span></span><br><span class="line"><span class="comment">我们只写了获取的方法</span></span><br><span class="line"><span class="comment">所有理论上没有任何办法可以修改年龄</span></span><br><span class="line"><span class="comment">p1.setAge(20);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">p<span class="number">1.</span><span class="built_in">getAge</span>();</span><br><span class="line">cout &lt;&lt; p<span class="number">1.</span><span class="built_in">getAge</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">p<span class="number">1.</span><span class="built_in">setIdol</span>(<span class="string">&quot;jackson&quot;</span>);</span><br><span class="line"><span class="comment">/*用get会报错 这里就不演示了*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*一句话形容</span></span><br><span class="line"><span class="comment">就是通过公共的set方法来写</span></span><br><span class="line"><span class="comment">通过get方法来读</span></span><br><span class="line"><span class="comment">通过公共的 set和get方法 我们自己就能控制读和写*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加验证 可以写 但是年龄必须在0-150之间*/</span></span><br><span class="line">p<span class="number">1.</span><span class="built_in">setAge</span>(<span class="number">160</span>);</span><br><span class="line">cout &lt;&lt; p<span class="number">1.</span><span class="built_in">getAge</span>() &lt;&lt; endl;</span><br><span class="line">p<span class="number">1.</span><span class="built_in">setAge</span>(<span class="number">70</span>);</span><br><span class="line">cout &lt;&lt; p<span class="number">1.</span><span class="built_in">getAge</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="练习案例："><a href="#练习案例：" class="headerlink" title="练习案例："></a>练习案例：</h3><h4 id="设计立方体类"><a href="#设计立方体类" class="headerlink" title="设计立方体类"></a>设计立方体类</h4><p>设计立方体类（Cube）<br>求出立方体的面积和体积<br>分别用全局函数和成员函数判断两个立方体是否相等</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*立方体类设计</span></span><br><span class="line"><span class="comment">1、创建立方体类</span></span><br><span class="line"><span class="comment">2、设计属性和行为</span></span><br><span class="line"><span class="comment">3、获取立方体的面积和体积</span></span><br><span class="line"><span class="comment">4、分别利用全局函数和成员函数</span></span><br><span class="line"><span class="comment">判断两个立方体是否相等*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cube</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="comment">/*定义私有属性长宽高*/</span></span><br><span class="line"><span class="type">int</span> length;</span><br><span class="line"><span class="type">int</span> wideth;</span><br><span class="line"><span class="type">int</span> height;</span><br><span class="line"><span class="comment">/*行为*/</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*这里放getset*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getLen</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setLen</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">length = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getwide</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> wideth;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setwide</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">wideth = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getHeig</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> height;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setHeig</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">height = a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*计算面积*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">SurF</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> surface = (length * height + length * wideth + height * wideth) * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> surface;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*计算体积*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">volume</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> volume = length * height *wideth;</span><br><span class="line"><span class="keyword">return</span> volume;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用成员函数判断两个立方体是否相等*/</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">JudgeInClass</span><span class="params">(Cube&amp; a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (height == a.<span class="built_in">getHeig</span>() &amp;&amp; wideth == a.<span class="built_in">getwide</span>() &amp;&amp; length == a.<span class="built_in">getLen</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用全局函数判断两个立方体是否相等*/</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">Judge</span><span class="params">(Cube&amp; c1, Cube&amp; c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (c<span class="number">1.</span><span class="built_in">getHeig</span>() == c<span class="number">2.</span><span class="built_in">getHeig</span>() &amp;&amp; c<span class="number">1.</span><span class="built_in">getwide</span>() == c<span class="number">2.</span><span class="built_in">getwide</span>() &amp;&amp; c<span class="number">1.</span><span class="built_in">getLen</span>() == c<span class="number">2.</span><span class="built_in">getLen</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Cube c1;</span><br><span class="line">c<span class="number">1.</span><span class="built_in">setLen</span>(<span class="number">7</span>);</span><br><span class="line">c<span class="number">1.</span><span class="built_in">setwide</span>(<span class="number">8</span>);</span><br><span class="line">c<span class="number">1.</span><span class="built_in">setHeig</span>(<span class="number">9</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 s surface is: &quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">SurF</span>() &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 s volume is: &quot;</span> &lt;&lt; c<span class="number">1.</span><span class="built_in">volume</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">Cube c2;</span><br><span class="line">c<span class="number">2.</span><span class="built_in">setLen</span>(<span class="number">7</span>);</span><br><span class="line">c<span class="number">2.</span><span class="built_in">setwide</span>(<span class="number">8</span>);</span><br><span class="line">c<span class="number">2.</span><span class="built_in">setHeig</span>(<span class="number">9</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c2 s surface is: &quot;</span> &lt;&lt; c<span class="number">2.</span><span class="built_in">SurF</span>() &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c2 s volume is: &quot;</span> &lt;&lt; c<span class="number">2.</span><span class="built_in">volume</span>() &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*利用全局函数判断*/</span></span><br><span class="line"><span class="type">bool</span> ret = <span class="built_in">Judge</span>(c1, c2);</span><br><span class="line"><span class="keyword">if</span> (ret)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 and c2 is same&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 and c2 is not same&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*利用成员函数判断*/</span></span><br><span class="line"><span class="type">bool</span> ret1 = c<span class="number">1.</span><span class="built_in">JudgeInClass</span>(c2);</span><br><span class="line"><span class="keyword">if</span> (ret1)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 and c2 is same&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;c1 and c2 is not same&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="点和圆的关系"><a href="#点和圆的关系" class="headerlink" title="点和圆的关系"></a>点和圆的关系</h4><p>设计一个圆形类（Circle)和一个点类（Point)计算点和圆的关系</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/*点和圆的关系案例</span></span><br><span class="line"><span class="comment"> * 点*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> p_x;</span><br><span class="line"><span class="type">int</span> p_y;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*xy坐标的get and set*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setX</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p_x = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setY</span><span class="params">(<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p_y = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getX</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> p_x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getY</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> p_y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="comment">/*圆类*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> c_r;</span><br><span class="line">Point c_Center;</span><br><span class="line"><span class="comment">/*在类中可以让给另一个类作为本类的成员*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*设置和获取半径*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setR</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">c_r = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getR</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> c_r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*设置和获取圆心*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setCenter</span><span class="params">(Point center)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">c_Center = center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Point <span class="title">getCenter</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> c_Center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">isInCircle</span><span class="params">(Circle&amp; c, Point&amp; p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*计算两点之间距离的平方*/</span></span><br><span class="line"><span class="type">int</span> distance =</span><br><span class="line">(c.<span class="built_in">getCenter</span>().<span class="built_in">getX</span>() - p.<span class="built_in">getX</span>()) * (c.<span class="built_in">getCenter</span>().<span class="built_in">getX</span>() - p.<span class="built_in">getX</span>()) +</span><br><span class="line">(c.<span class="built_in">getCenter</span>().<span class="built_in">getY</span>() - p.<span class="built_in">getY</span>()) * (c.<span class="built_in">getCenter</span>().<span class="built_in">getY</span>() - p.<span class="built_in">getY</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">/*计算半径的平方*/</span></span><br><span class="line"><span class="type">int</span> rad2 = c.<span class="built_in">getR</span>()* c.<span class="built_in">getR</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*判断*/</span></span><br><span class="line"><span class="keyword">if</span> (distance &gt; rad2)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;point is out of circle&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (distance == rad2)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;point is on the circle&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;point is in the circle&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建圆*/</span></span><br><span class="line">Circle c1;</span><br><span class="line">c<span class="number">1.</span><span class="built_in">setR</span>(<span class="number">10</span>);</span><br><span class="line">Point center;</span><br><span class="line">center.<span class="built_in">setX</span>(<span class="number">10</span>);</span><br><span class="line">center.<span class="built_in">setY</span>(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">c<span class="number">1.</span><span class="built_in">setCenter</span>(center);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*创建点*/</span></span><br><span class="line">Point p1;</span><br><span class="line">p<span class="number">1.</span><span class="built_in">setX</span>(<span class="number">10</span>);</span><br><span class="line">p<span class="number">1.</span><span class="built_in">setY</span>(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*判断  */</span></span><br><span class="line"><span class="built_in">isInCircle</span>(c1, p1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="对象的初始化和清理-重点"><a href="#对象的初始化和清理-重点" class="headerlink" title="对象的初始化和清理(重点)"></a>对象的初始化和清理(重点)</h3><p>生活中我们卖的电子产品都有出厂设置，在某一天我们不用之后也会删除一些自己的信息数据来保护隐私<br>C++中的面向对象来源于生活，每个对象也会有初始设置以及对象销毁前的清理数据的设置</p><h4 id="构造函数和析构函数-重点"><a href="#构造函数和析构函数-重点" class="headerlink" title="构造函数和析构函数(重点)"></a>构造函数和析构函数(重点)</h4><p>对象的初始化和清理也是两个非常重要的安全问题<br>    一个对象或者变量没有初始状态，对其使用后果是未知的<br>    通过杨使用完一个对象或者变量，没有及时清理，也会造成一些安全问题</p><p>C+++利用了<strong>构造函数和析构函数</strong>解决上述问题，这两个函数将会被自动编译器自动调用，完成对象初始化和清理工作。<br>对象的初始化和清理工作是编译器强制要我们做的事情，<br><strong>因此如果我们不提供构造和析构，编译器会提供的构造和析构函数是空实现</strong><br>(就是说一行代码都没有 里面是空的)</p><p>构造函数 ：主要作用在于创建对象时为对象的成员属性赋值，构造函数由编译器自动调用，无需手动调用。<br>析构函数：主要作用在于对象销毁前系统自动调用，执行一些清理工作。</p><p> 构造函数语法啊:类名(){}<br>1.构造函数没有返回值也不写void<br>2.函数名称与类名相同<br>3.构造函数可以有参数,因此可以发生重载<br>4.程序在调用对香港时候会自动调用构造,无须手动调用,而且只会调用一次</p><p>析构函数语法: ~类名(){}<br>1.析构函数,没有返回值也不写void<br>2..函数名称与类名相同,在名称前加上符号~<br>3.析构哈桉树不可以有参数因此不可以发生重载<br>4.程序在对象销毁前会自动调用析构,无需手动调用,而且只会调用一次</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*对象的初始化和清理*/</span></span><br><span class="line"><span class="comment">/*构造函数进行初始化的操作*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">/*构造函数*/</span></span><br><span class="line"><span class="comment">/*没有返回值 不用void</span></span><br><span class="line"><span class="comment">函数名 = 类名 可以有参数可以重载</span></span><br><span class="line"><span class="comment">创建对象的时候自动调用*/</span></span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;构造函数的调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*不写的话编译器就自动生成一个无内容的*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*析构函数进行清理的操作</span></span><br><span class="line"><span class="comment">没有返回值不写void</span></span><br><span class="line"><span class="comment">函数名和类名相同 前面加~</span></span><br><span class="line"><span class="comment">析构函数不可以有参数 无法重载</span></span><br><span class="line"><span class="comment">对象销毁前自动调用析构函数 只会调用一次*/</span></span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person 的析构 函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span>  <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;现在进入了test01&quot;</span> &lt;&lt; endl;</span><br><span class="line">Person p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*为什么这里要通过test01执行</span></span><br><span class="line"><span class="comment">因为test01作为栈上的函数 执行完之后内部的东西全部会销毁</span></span><br><span class="line"><span class="comment">这样的话内部创建的person也会被销毁</span></span><br><span class="line"><span class="comment">所以就会调用析构函数 如果只是在main里面创建person</span></span><br><span class="line"><span class="comment">就没办法展示析构函数调用的部分*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">Person p1;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="构造函数的分类以及调用（重点）"><a href="#构造函数的分类以及调用（重点）" class="headerlink" title="构造函数的分类以及调用（重点）"></a>构造函数的分类以及调用（重点）</h4><p>两种分类方式：<br>    按参数分：有参构造和无参构造<br>    按类型分：普通构造和拷 贝构造</p><p>三种调用方式：<br>    括号法<br>    显示法<br>    隐式转换法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*构造函数的分类以调用</span></span><br><span class="line"><span class="comment">分类</span></span><br><span class="line"><span class="comment">按照参数分类</span></span><br><span class="line"><span class="comment">可以分为有参构造函数和无参构造函数（默认构造函数）</span></span><br><span class="line"><span class="comment">按照 类型来分 普通构造和拷贝构造*/</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> a)</span><br><span class="line">&#123;</span><br><span class="line">age = a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person有参构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*拷贝构造函数*/</span></span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person &amp;p)</span><br><span class="line">&#123;<span class="comment">/*传入了一个person类的数据</span></span><br><span class="line"><span class="comment"> 把传入的person类上的所有属性拷贝到这个构造的person类中</span></span><br><span class="line"><span class="comment"> 这里加上const 保证不会修改原始的要被拷贝的数据 然后通过引用的方式传入*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*将传入的人身上的所有属性拷贝到我身上*/</span></span><br><span class="line">age = p.age;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Person拷贝构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person 析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">/*调用*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*括号法*/</span></span><br><span class="line">Person p;</span><br><span class="line"><span class="comment">/*默认构造函数调用*/</span></span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(<span class="number">10</span>)</span></span>;</span><br><span class="line"><span class="comment">/*调用有参构造函数*/</span></span><br><span class="line"><span class="function">Person <span class="title">p3</span><span class="params">(p2)</span></span>;</span><br><span class="line"><span class="comment">/*调用拷贝构造函数*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*注意事项</span></span><br><span class="line"><span class="comment">调用默认构造函数的时候不要加（）*/</span></span><br><span class="line"><span class="comment">//person p4();</span></span><br><span class="line"><span class="comment">/*如果写成这样 没有发生任何事</span></span><br><span class="line"><span class="comment">因为上面的代码 编译器会认为是一个函数的声明</span></span><br><span class="line"><span class="comment">所以不会认为在创建对象*/</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;age of p2: &quot;</span> &lt;&lt; p<span class="number">2.</span>age &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;age of p3: &quot;</span> &lt;&lt; p<span class="number">3.</span>age &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*显示法*/</span></span><br><span class="line">Person p5;</span><br><span class="line">Person p6 = <span class="built_in">Person</span>(<span class="number">10</span>);</span><br><span class="line">Person p7 = <span class="built_in">Person</span>(p6);</span><br><span class="line"><span class="comment">/*分别用显示法调用三种构造*/</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>(<span class="number">10</span>);<span class="comment">/*匿名对象</span></span><br><span class="line"><span class="comment">特点：当前行结束后，系统会立刻回收掉匿名对象*/</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;匿名对象的下一行&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*不要利用拷贝构造函数初始化匿名对象*/</span></span><br><span class="line"><span class="comment">/*Person(p3); 编译器会认为person（p3） === person p3;</span></span><br><span class="line"><span class="comment">* 编译器认为这是一个对象的声明</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*隐式转换法*/</span></span><br><span class="line">Person p8 = <span class="number">10</span>;</span><br><span class="line"><span class="comment">/*相当于 写了 Person p4 = Person(10);*/</span></span><br><span class="line">Person p9 = p8; <span class="comment">/*隐式的拷贝构造*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="拷贝构造函数调用时机"><a href="#拷贝构造函数调用时机" class="headerlink" title="拷贝构造函数调用时机"></a>拷贝构造函数调用时机</h4><p>C++中拷贝构造函数调用实际通常有三种情况<br>使用一个一集创建完毕的对象来初始化一个新对象<br>值传递的方式给函数参数传值<br>以值方式返回局部对象</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*拷贝构造函数调用时机*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person默认构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">int</span> tage)</span><br><span class="line">&#123;</span><br><span class="line">age = tage;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person有参构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(<span class="type">const</span> Person &amp;p)</span><br><span class="line">&#123;</span><br><span class="line">age = p.age;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person拷贝构造函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~<span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;person 析构函数调用&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//1\使用一个一集创建完毕的对象来初始化一个新对象</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test01</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">Person <span class="title">p1</span><span class="params">(<span class="number">20</span>)</span></span>;</span><br><span class="line"><span class="function">Person <span class="title">p2</span><span class="params">(p1)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;p2 age:&quot;</span> &lt;&lt; p<span class="number">2.</span>age &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//值传递的方式给函数参数传值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">doWord</span><span class="params">(Person p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*其实这里就是在调用拷贝函数创建一个新的p*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test02</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p3;</span><br><span class="line"><span class="built_in">doWord</span>(p3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//以值方式返回局部对象</span></span><br><span class="line"><span class="function">Person <span class="title">doWork2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p1;</span><br><span class="line"><span class="comment">/*这里的p1式一个局部变量</span></span><br><span class="line"><span class="comment">生命周期只在函数 内部 没办法超过这个函数</span></span><br><span class="line"><span class="comment">所以下面return的时候 其实是调用拷贝函数拷贝出了一个新的对象*/</span></span><br><span class="line"><span class="keyword">return</span> p1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">test03</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p = <span class="built_in">doWork2</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">test01</span>();</span><br><span class="line"><span class="built_in">test02</span>();</span><br><span class="line"><span class="built_in">test03</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java程序设计重新笔记及知识点梳理</title>
      <link href="/posts/d7f2c68e.html"/>
      <url>/posts/d7f2c68e.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h3><p>java这门语言，我已经记不清开了多少课，敲了多少代码了。但是现在因为生活和学习上的需要，重新开课重新学习，颇有一种朝花夕拾的感觉。代码是以前敲过的代码，知识点是以前学过的知识点，现在只是重走西游路，在复习以前知识的同时找到自己。</p><h3 id="关于笔记记录过程"><a href="#关于笔记记录过程" class="headerlink" title="关于笔记记录过程"></a>关于笔记记录过程</h3><p>按照本人复习过程来，力求逻辑上的完整性，重点放在逻辑上的连贯性，所以不会把理论和实践完全拆分开，在理论和实践的过程中推进。但是本质上还是为了期末的考试，所以会在最后加上一个做题和解析的模块。记录题目的同时方便自己查漏补缺。<br>本套笔记按照优先建立知识体系学习法，知识点的细节在学习和实战中慢慢完善。</p><h2 id="JAVA的知识背景"><a href="#JAVA的知识背景" class="headerlink" title="JAVA的知识背景"></a>JAVA的知识背景</h2><h3 id="java的诞生"><a href="#java的诞生" class="headerlink" title="java的诞生"></a>java的诞生</h3><p>JAVA由美国的SUN公司发明，诞生于1991年。<br>设计初衷是给机顶盒这类电子产品，这类产品的特点就是不同厂家生产的型号<u>拥有不同的CPU不同的操作系统。</u>（为后续跨平台性埋下伏笔）<br><strong>因此要求JAVA产生的程序是中立的</strong>（既跨平台）<br>可是命运总是爱跟人开玩笑，java发明之后这类产品直接褒姒，所以java失去了用武之地。<br>直到90年代中期互联网爆发，各式各样不同的电脑都连接到了互联网上（不同u不同系统）<br>此时急需一个跨平台语言，所以java堂堂崛起！</p><h3 id="JAVA的主要应用范围"><a href="#JAVA的主要应用范围" class="headerlink" title="JAVA的主要应用范围"></a>JAVA的主要应用范围</h3><p>服务器端软件开发：各类网站系统和管理系统</p><p>移动端开发：安卓系统、鸿蒙</p><p>科学研究、云计算、大数据</p><h3 id="JAVA的版本选择"><a href="#JAVA的版本选择" class="headerlink" title="JAVA的版本选择"></a>JAVA的版本选择</h3><p>目前企业中应用最广的还是java8.0，占据了最大的份额。  </p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003082723831.png" alt="image-20241003082723831"></p><h3 id="JVM、JRE、JDK"><a href="#JVM、JRE、JDK" class="headerlink" title="JVM、JRE、JDK"></a>JVM、JRE、JDK</h3><p><strong><u>JVM：Java Virtual Machine虚拟计算机</u></strong>，主要负责Java程序的运行<br>JAVA程序是在JAVA虚拟机上直接运行，而不是运行在操作系统上（有别于C++）<br><strong>Java的跨平台就是基于不同版本的JVM实现。</strong><br>举例：我用mac系统写了一个JAVA程序，首先我MAC系统上需要有对应的MAC版JVM，所以程序在MAC上可以跑，然后我又把程序发给Linux系统，Linux系统上安装的Linux版JVM负责运行发送过去的程序</p><p>JRE ：Java Runtime Environment, java运行时环境。<br>一张图解释<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003083520608.png" alt="image-20241003083520608"></p><p>JRE包含了JVM，JRE是java运行环境，从字面上理解，java运行的时候JVM是必须的，因为Java的run就是run在JVM上。 加上核心的库类和文件，就组成了完整的运行环境。</p><p>JDK：Java Development kit ，Java 开发工具包。提供给java开发人员使用<br>再用一张图解释<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003084432765.png" alt="image-20241003084432765"></p><p>JRE构成了运行JAVA的所有条件，JDK在此基础上加入了开发工具。</p><h2 id="写出第一个JAVA程序。"><a href="#写出第一个JAVA程序。" class="headerlink" title="写出第一个JAVA程序。"></a>写出第一个JAVA程序。</h2><h3 id="JAVA的组织结构"><a href="#JAVA的组织结构" class="headerlink" title="JAVA的组织结构"></a>JAVA的组织结构</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003090408814.png" alt="image-20241003090408814"></p><p>关于java的组织结构和缩进<br>两个花括号一对，最外层下面的花括号对应上面的p，表示中间的部分是class类的类体<br>对于main方法来说，同理下面的花括号和上面的p对齐，两个花括号中间的部分是方法的方法体。</p><h3 id="实际上java开发的步骤"><a href="#实际上java开发的步骤" class="headerlink" title="实际上java开发的步骤"></a>实际上java开发的步骤</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003090554702.png" alt="image-20241003090554702"></p><p>从上图可以知道，虚拟机运行的程序都是.class文件，编写的程序是.java文件</p><h3 id="简单的程序bug调试以及发散出的思维"><a href="#简单的程序bug调试以及发散出的思维" class="headerlink" title="简单的程序bug调试以及发散出的思维"></a>简单的程序bug调试以及发散出的思维</h3><h4 id="关于bug："><a href="#关于bug：" class="headerlink" title="关于bug："></a>关于bug：</h4><p>1、bug说明程序有部分有错，也可以说明你离成功不远了，遇到bug是非常正常的事情<br>2、bug越多程序越复杂，程序越复杂bug越多<br>3、程序员的能力可以简单由调试bug的数量来判断，调试解决的bug越多，程序员的段位越高。<br>4、写不出bug的程序员是没有写代码的程序员，多写多错才会有所成长。</p><h4 id="由bug发散的思维："><a href="#由bug发散的思维：" class="headerlink" title="由bug发散的思维："></a>由bug发散的思维：</h4><p>以下是刚才这个简单的bug我认为新手可能出现的错误以及原因<br>1、类名写错了 public class 后面的类名一定要和建的.java文件前面的名字相同，并且区分大小写<br>2、System的S打成小写，<code>System.out.print</code> 中的 <code>System</code> 是指 Java 的 <code>java.lang.System</code> 类。这个类是 Java 自带的，不需要额外导入，因为 <code>java.lang</code> 包是自动导入的。其中System是一个类，out是一个静态字段，print是一个方法（包括println）</p><h2 id="标识符、关键字、变量本质、注释"><a href="#标识符、关键字、变量本质、注释" class="headerlink" title="标识符、关键字、变量本质、注释"></a>标识符、关键字、变量本质、注释</h2><h3 id="标识符命名规则及使用规范"><a href="#标识符命名规则及使用规范" class="headerlink" title="标识符命名规则及使用规范"></a>标识符命名规则及使用规范</h3><h4 id="标识符命名规则"><a href="#标识符命名规则" class="headerlink" title="标识符命名规则"></a>标识符命名规则</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003155147873.png" alt="image-20241003155147873"></p><p>注：图中一个没有说到的细节就是可以以人民币符号￥开头，在我上课的PPT里面确实显示是可以的<br>我已经测试过了，确实是可以的。但是原理和图中说的有些出入<br>所以用一句话概括</p><p><u><strong>开头字母钱标下划线，大小写敏感，区别关键字。</strong></u></p><h4 id="关于人民币符号￥"><a href="#关于人民币符号￥" class="headerlink" title="关于人民币符号￥"></a>关于人民币符号￥</h4><p>￥符号也是作为”字母“被识别的，和中文和字母一样，因为Java用的是unicode字符集，￥和中文都满足，所以都可以作为”字母“被识别。而不是这个符号本身被识别。</p><h4 id="标识符使用规范"><a href="#标识符使用规范" class="headerlink" title="标识符使用规范"></a>标识符使用规范</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003155953266.png" alt="image-20241003155953266"></p><p>主要是引入了驼峰原则，实际情况可能乱起名的人才是占了大多数</p><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test002</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">_age</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">$age</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span> ￥age = <span class="number">4</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">age123</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line"><span class="comment">//      int 123age = 6; 数字在前无法作为标识符，直接报错</span></span><br><span class="line"><span class="comment">//      int age# = 7; 标识符只能是字母数字下划线$</span></span><br><span class="line">        <span class="type">int</span> 年龄 = <span class="number">8</span>; <span class="comment">//java使用的是unicode字符集，中文也被识别成字符集中的 ”字母“</span></span><br><span class="line"><span class="comment">//      int class = 9; class 是java中的关键字，同样无法作为标识符，所以错误</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">_class</span> <span class="operator">=</span> <span class="number">10</span>; <span class="comment">//用下划线等符号标识一下就不是关键字了。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><p>JAVA关键字是JAVA语言保留给内部使用的。所以关键字也叫保留字。<br>关键字都有特殊的含义，我们不能使用关键字作为标识符。<br>下面放一下java中的50个关键字，但是背是不可能背的，这辈子不可能背的。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003163132626.png" alt="image-20241003163132626"></p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h4 id="变量的本质"><a href="#变量的本质" class="headerlink" title="变量的本质"></a>变量的本质</h4><p><u><strong>可操作的存储空间</strong></u></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003163334181.png" alt="image-20241003163334181"></p><p>用商场停车位来举例<br>商场有停车位，每个停车位有独一无二的编号，这个编号就是变量名<br>假设停车位编号A1，你停车之前A1就是一个空值，但是还是存在A1停车位<br>去停车的时候，你把车”小黑“停到一个A1，A1就有了自己的”值“ 小黑<br>所以A1 = 小黑  ，实际上是把小黑赋值给了A1。</p><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">monthlySalary</span> <span class="operator">=</span> <span class="number">3000</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">annualSalary</span> <span class="operator">=</span> monthlySalary*<span class="number">12</span>;</span><br><span class="line">System.out.println(annualSalary);</span><br><span class="line"><span class="type">double</span> <span class="variable">bonus</span> <span class="operator">=</span> <span class="number">150.123</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> annualSalary+bonus;</span><br><span class="line">System.out.println(sum);</span><br></pre></td></tr></table></figure><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><h4 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h4><p>注释不会出现在字节码文件中（.class文件）。<br>java编译器编译的时候会跳过注释语句<br>同样的程序不管写多少注释写没写注释，编译之后的大小都是一样的。</p><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003164311620.png" alt="image-20241003164311620"></p><h2 id="变量-1"><a href="#变量-1" class="headerlink" title="变量"></a>变量</h2><h3 id="八种基本数据类型"><a href="#八种基本数据类型" class="headerlink" title="八种基本数据类型"></a>八种基本数据类型</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200200688.png" alt="image-20241003200200688"></p><p>继续用上文是商场停车位来解释<br>高速休息站里的车位有不同的类型，SUV和越野车的车位大，卡车和客车的车位更大，卡车和客车的停车位可以停下小轿车和越野车，但是卡车和客车没办法停在小轿车和越野车的停车位里。<br>由此可知 ：定义数据类型就是定义停车位的大小和类型<br>JAVA是一种 <strong>强类型语言</strong> ，<strong>每个变量都必须声明数据类型</strong></p><h4 id="整型数据类型"><a href="#整型数据类型" class="headerlink" title="整型数据类型"></a>整型数据类型</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200350108.png" alt="image-20241003200350108"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200414469.png" alt="image-20241003200414469"></p><p>派生知识点：</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241003200502344.png" alt="image-20241003200502344"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test003</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">age</span> <span class="operator">=</span> <span class="number">18</span>; <span class="comment">//默认是int类型，转换成byte没有损失，所以正常转换了</span></span><br><span class="line">        <span class="type">short</span> <span class="variable">salary</span> <span class="operator">=</span> <span class="number">25000</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">salary2</span> <span class="operator">=</span> <span class="number">50000</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">pekingPopulation</span> <span class="operator">=</span> <span class="number">30000000</span>;</span><br><span class="line"><span class="comment">//      int globalPopulation = 700000000;  表示过大是数会报错</span></span><br><span class="line"><span class="comment">//以上就是整形常量 ，默认的类型是int ，改成long类型需要后面加L/l</span></span><br><span class="line"><span class="comment">//      int globalPopulation = 7000000000L;</span></span><br><span class="line"><span class="comment">//还是报错，因为是把70亿 赋值给int，int 最大只能接受21亿的数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//关于进制，可以定义不同的进制</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="number">65</span>; <span class="comment">//十进制</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="number">065</span>; <span class="comment">//八进制 0开头</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t3</span> <span class="operator">=</span> <span class="number">0x65</span>; <span class="comment">//十六进制 0x开头</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">t4</span> <span class="operator">=</span> <span class="number">0b01000001</span>; <span class="comment">//二进制 0b开头</span></span><br><span class="line">        System.out.println(t1+<span class="string">&quot;\n&quot;</span>+t2+<span class="string">&quot;\n&quot;</span>+t3+<span class="string">&quot;\n&quot;</span>+t4);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="浮点型数据类型"><a href="#浮点型数据类型" class="headerlink" title="浮点型数据类型"></a>浮点型数据类型</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241004083854873.png" alt="image-20241004083854873"></p><p>可以看到浮点数的表数范围非常大，这是因为<strong>浮点数是不精确</strong>的  </p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241004084218697.png" alt="image-20241004084218697"></p><p><strong>需要注意：</strong><br>    指定范围内的整数是有限的，比如0-10，但是0-10之间的小数是无限的。<br>因此，有限的空间存储无限的数据，必然存在误差，所以浮点数不能精确表示。<br>如果需要进行不产生舍入误差的精确计算，就需要引入BigDecimal类。后续再说。</p><p>实操代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        <span class="comment">//测试浮点数</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">3.14</span>;</span><br><span class="line"><span class="comment">/*        float f1 = 3.14;</span></span><br><span class="line"><span class="comment"> 报错java: incompatible types:</span></span><br><span class="line"><span class="comment">possible lossy conversion from double to float</span></span><br><span class="line"><span class="comment">说明浮点常量默认是double*/</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">f1</span> <span class="operator">=</span> <span class="number">3.14F</span>;<span class="comment">//后面加大写的F，通过编译</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="number">314E-2</span>;<span class="comment">//科学计数法 xEn= x * 10^n</span></span><br><span class="line">        System.out.println(d1+<span class="string">&quot;\n&quot;</span>+f1+<span class="string">&quot;\n&quot;</span>+d2);</span><br><span class="line">        <span class="comment">//浮点数是精确的，用于比较要小心。</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">f3</span> <span class="operator">=</span> <span class="number">0.1F</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">d3</span> <span class="operator">=</span> <span class="number">0.1</span>;</span><br><span class="line">        System.out.println(f3 == d3);</span><br><span class="line">        <span class="comment">//输出false 说明不相等</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Char字符集"><a href="#Char字符集" class="headerlink" title="Char字符集"></a>Char字符集</h4><p>说到char字符，首先要注意String类型<br><strong>String是字符串不是基本数据类型！</strong>是一个类！包含在Java.lang包里面，自动引入<br>本质上是一个字符的数组</p><h5 id="ASCII字符集"><a href="#ASCII字符集" class="headerlink" title="ASCII字符集"></a>ASCII字符集</h5><p>ASCII字符集由美国国家标准协会指定，由一个字节的后7位来表示一个字符。（所以一共有2^7 128字符）<br>剩下的最高位一般为0<br>例 字母A在计算机中就是01000001 也就是65<br>ASCII字符非常简单，就是一个简单的查表的过程（如下图）<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121503946.png" alt="image-20241005121503946"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121533973.png" alt="image-20241005121533973"></p><h5 id="字符集的发展过程"><a href="#字符集的发展过程" class="headerlink" title="字符集的发展过程"></a>字符集的发展过程</h5><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121604545.png" alt="image-20241005121604545"></p><p>ISO GB BIG5，都是不同地区自己制定的标准，由于不互通，经常造成乱码问题<br>所以有了Unicode字符集，每个字符都基于了全球独一无二的编码</p><h5 id="Unicode原理"><a href="#Unicode原理" class="headerlink" title="Unicode原理"></a>Unicode原理</h5><p>unicode采用了字符集和编码分开的策略。<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005121931383.png" alt="image-20241005121931383"></p><p>unicode统一采用了两个字节表示一个字符，<strong>包括英文字母</strong><br>但是因为英文占据了互联网信息的绝大部分，所以在传输过程中会造成极大的浪费<br>所以现在主流的UTF-8</p><h5 id="UTF-8"><a href="#UTF-8" class="headerlink" title="UTF-8"></a>UTF-8</h5><p>用1-6个字节来编码表示Unicode字符，西欧字符仍然是一个字节，汉字是三个字节  </p><h4 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h4><p>对照表格<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005122714547.png" alt="image-20241005122714547"></p><h4 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h4><p>布尔类型由两个常量，一个true 一个false组成<br>在内存中占1或4个字节。<br><u>和C的区别</u>：不可以使用0或非0的整数来代替t或者f<br>常用来坐判断逻辑的条件。</p><p>练习代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//测试char</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="string">&#x27;薯&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        System.out.print(c1);</span><br><span class="line">        System.out.print(c2);</span><br><span class="line"></span><br><span class="line">        <span class="type">char</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">c4</span> <span class="operator">=</span> <span class="string">&#x27;片&#x27;</span>;</span><br><span class="line">        System.out.print(c2);</span><br><span class="line">        System.out.println(c3);</span><br><span class="line">        System.out.println(c4);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//字符串不是基本数据类型，是类！</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;\n薯片&quot;</span>;</span><br><span class="line">        <span class="comment">//字符串用双引号，本质上就是一个字符数组</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">&quot;\n\n\&quot;床前\&quot;\t明\&#x27;月光\&#x27;&quot;</span>;</span><br><span class="line">        System.out.println(str2);</span><br><span class="line">        <span class="comment">//布尔类型</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;我在写代码&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="基本运算符"><a href="#基本运算符" class="headerlink" title="基本运算符"></a>基本运算符</h2><h3 id="运算符分类"><a href="#运算符分类" class="headerlink" title="运算符分类"></a>运算符分类</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005130928325.png" alt="image-20241005130928325"></p><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005131146127.png" alt="image-20241005131146127"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========算术运算符=========&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> a + b * <span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">c1</span> <span class="operator">=</span> (a + b) * <span class="number">4</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;c=&quot;</span> + c);</span><br><span class="line">System.out.println(<span class="string">&quot;c1=&quot;</span>+ c1);</span><br><span class="line"><span class="type">int</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">15</span>/<span class="number">4</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="number">15</span>%<span class="number">4</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;d1=&quot;</span>+d1 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;d2=&quot;</span>+d2);</span><br><span class="line"></span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = a ++;  <span class="comment">//先赋值后自增，代码从左往右执行，先把a赋值给a然后a再打印</span></span><br><span class="line">System.out.println(<span class="string">&quot;b=&quot;</span>+b +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;a=&quot;</span>+a);</span><br><span class="line">a = <span class="number">10</span>;</span><br><span class="line">b = ++a;  <span class="comment">//先自增后赋值,--和++同理</span></span><br><span class="line">System.out.println(<span class="string">&quot;b=&quot;</span>+b +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;a=&quot;</span>+a);</span><br></pre></td></tr></table></figure><h3 id="扩展运算符"><a href="#扩展运算符" class="headerlink" title="扩展运算符"></a>扩展运算符</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005132427532.png" alt="image-20241005132427532"></p><p>运算符和表达式完全等效 没有过多的说明，用的情况也少<br>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========拓展运算符=========&quot;</span>);</span><br><span class="line"></span><br><span class="line">a = <span class="number">20</span>;</span><br><span class="line">b = <span class="number">30</span>;</span><br><span class="line">a += b;</span><br><span class="line">System.out.println(<span class="string">&quot;a=&quot;</span>+a + <span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b=&quot;</span>+b);</span><br></pre></td></tr></table></figure><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153134726.png" alt="image-20241005153134726"></p><p>关系运算符的计算结果为布尔值<br>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========关系运算符=========&quot;</span>);</span><br><span class="line"> a = <span class="number">20</span>;</span><br><span class="line"> b = <span class="number">30</span>;</span><br><span class="line"> <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> a&lt;b;</span><br><span class="line"> System.out.println(result);</span><br></pre></td></tr></table></figure><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>这一块基本上用图片来说明</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153620084.png" alt="image-20241005153620084"></p><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153743620.png" alt="image-20241005153743620"><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153828335.png" alt="image-20241005153828335"></p><p> 短路与、或可以节省计算量，提前返回ture或false<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005153957310.png" alt="image-20241005153957310"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005154031303.png" alt="image-20241005154031303"></p><p><strong>关于异或</strong><br>个人理解就是简单的 “不同”<br>A和B不同 结果就是true<br>A和B相同 结果就是false 因为不是 “不同”<br>注意异或的符号是^,幂运算的符号，但是表示的不是幂运算<br>java中幂运算（科学计数法）要用E来表示 比如 xEy 就是x乘10的y次方<br>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========逻辑运算符=========&quot;</span>);</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="literal">true</span> &amp; <span class="literal">false</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b2</span> <span class="operator">=</span> <span class="literal">true</span> | <span class="literal">false</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b3</span> <span class="operator">=</span> !b2;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b4</span> <span class="operator">=</span> <span class="literal">true</span>^<span class="literal">true</span>;</span><br><span class="line">System.out.println(<span class="string">&quot;b1=&quot;</span>+ b1 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b2=&quot;</span>+ b2 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b3=&quot;</span>+ b3 +<span class="string">&quot;\n&quot;</span>+<span class="string">&quot;b4=&quot;</span>+ b4 );</span><br><span class="line"><span class="comment">//短路与、短路或</span></span><br><span class="line"><span class="type">int</span> <span class="variable">w</span> <span class="operator">=</span><span class="number">3</span>/<span class="number">0</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b5</span> <span class="operator">=</span> <span class="number">3</span>&lt;<span class="number">4</span> || (<span class="number">4</span>&lt;<span class="number">4</span>/<span class="number">0</span>); <span class="comment">//这里如果是普通的或的话就会报错，使用了短路就没问题</span></span><br><span class="line">System.out.println(b5);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h2><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005182815752.png" alt="image-20241005182815752"></p><p>例如“3”的二进制：00000000 00000000 00000000 00000011<br>取反就是： 11111111 11111111 11111111 11111100<br> <strong>示例代码：</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">        System.out.println(<span class="string">&quot;==========位运算符=========&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">7</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p1</span> <span class="operator">=</span> m&amp;n;</span><br><span class="line">        System.out.println(<span class="string">&quot;p1=&quot;</span>+p1);</span><br><span class="line"><span class="comment">/* 3 = 00000000 00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="comment">*  7 = 00000000 00000000 00000000 00000000 00000111</span></span><br><span class="line"><span class="comment">* 按为与 直观 的可以看到 上下的都是1的时候才是一所以答案为</span></span><br><span class="line"><span class="comment">* 00000000 00000000 00000000 00000011 = 3*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">p2</span> <span class="operator">=</span> m | n ;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p3</span> <span class="operator">=</span> m^n ;</span><br><span class="line">        <span class="type">int</span> <span class="variable">p4</span> <span class="operator">=</span> ~m;</span><br><span class="line">        System.out.println(<span class="string">&quot;p2=&quot;</span>+p2);</span><br><span class="line">        System.out.println(<span class="string">&quot;p3=&quot;</span>+p3);</span><br><span class="line">        System.out.println(<span class="string">&quot;p4=&quot;</span>+p4);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">m2</span> <span class="operator">=</span> <span class="number">3</span>&lt;&lt;<span class="number">3</span>;<span class="comment">//左移3位 =3*2*2*2</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">m3</span> <span class="operator">=</span> <span class="number">12</span>&gt;&gt;<span class="number">2</span>;<span class="comment">//右移2位 =12/2/2</span></span><br><span class="line">        System.out.println(<span class="string">&quot;m2=&quot;</span>+m2);</span><br><span class="line">        System.out.println(<span class="string">&quot;m3=&quot;</span>+m3);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​     </p><h3 id="字符串连接符"><a href="#字符串连接符" class="headerlink" title="字符串连接符"></a>字符串连接符</h3><p>字符串连接符指的是+在连接字符时自动变为字符串连接符，会失去+原本的加的功能<br>代码示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;==========字符串连接符=========&quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">r1</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">r2</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">System.out.println(r1 + r2);<span class="comment">//正常显示</span></span><br><span class="line">System.out.println(<span class="string">&quot;result is&quot;</span>+r1+r2);<span class="comment">//这里+变成字符串连接符</span></span><br></pre></td></tr></table></figure><h3 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符"></a>条件运算符</h3><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241005185520236.png" alt="image-20241005185520236"><br>条件运算符可以很方便的替代if_else语句中的某些特殊情况</p><p><strong>示例代码</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(&quot;==========条件运算符=========&quot;);</span><br><span class="line">int y1 = 30;</span><br><span class="line">int y2 = 40;</span><br><span class="line">int minY = y1&lt;y2?y1:y2;//返回y1y2中比较小的值</span><br></pre></td></tr></table></figure><p>此致，java中所有的基本运算符都已经学完了</p><h2 id="数据类型自动和强制转换"><a href="#数据类型自动和强制转换" class="headerlink" title="数据类型自动和强制转换"></a>数据类型自动和强制转换</h2><h3 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008080327235.png" alt="image-20241008080327235"></p><p>自动类型转换指容量小的数据类型可以自动转换为容量大的数据类型</p><p><strong>注意</strong>：这里的容量大小，指的不是<u>字节数</u>，而是<u>表数范围</u><br>例如八个字节的long可以自动转换为四个字节的float<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008080511585.png" alt="image-20241008080511585"></p><p>图中的实线表示的是无数据丢失的自动类型转换，虚线表示的是可能会有数据丢失的自动类型转换。</p><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"><span class="comment">/*测试基本数据类型的转换（自动转换，强制转换）</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test006</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//自动类型转换：表数范围小的可以自动转换为表数范围大的</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">a1</span> <span class="operator">=</span> <span class="number">3456</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">a2</span> <span class="operator">=</span> a1;</span><br><span class="line">        System.out.println(<span class="string">&quot;a1=&quot;</span>+ a1 + <span class="string">&quot;\n&quot;</span> + <span class="string">&quot;a2=&quot;</span>+ a2);</span><br><span class="line">        <span class="comment">//整型常量自动赋值给byte/short/char等类型，只要不超表数范围，则可以自动转换</span></span><br><span class="line">        <span class="type">byte</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="number">121</span>;<span class="comment">//legal</span></span><br><span class="line"><span class="comment">//        byte b2 = 200;//illegal 200超过了byte的表数范围，所以不合法</span></span><br><span class="line">        <span class="comment">//算术运算符，两个操作数都是整形的时候，有一个是long，则结果为long，否则结果为int（即使是byte，结果也是int）</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="number">1234</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="number">123</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">c3</span> <span class="operator">=</span> c1 + c2;<span class="comment">//c1是long，所以整个结果全部变成long</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//算术运算符有一个操作数是double，则结果是double</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">d1</span> <span class="operator">=</span> <span class="number">3.14</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">d2</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">d3</span> <span class="operator">=</span> d1+d2;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//强制类型转换</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">m1</span> <span class="operator">=</span> <span class="number">3.98</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m2</span> <span class="operator">=</span> (<span class="type">int</span>)m1;</span><br><span class="line">        System.out.println(<span class="string">&quot;m2=&quot;</span> + m2 );</span><br><span class="line">        <span class="comment">//转型的时候直接把小数丢掉，不会做任何的四舍五入运算。</span></span><br><span class="line"></span><br><span class="line">        <span class="type">char</span> <span class="variable">m3</span> <span class="operator">=</span> <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">m4</span> <span class="operator">=</span> m3 + <span class="number">2</span>;</span><br><span class="line">        <span class="type">char</span> <span class="variable">m5</span> <span class="operator">=</span> (<span class="type">char</span>)m4;</span><br><span class="line">        System.out.println(<span class="string">&quot;m5=&quot;</span>+ m5);</span><br><span class="line">        <span class="comment">//这里体现的基本上就是ASCII编码，C往后两位是E</span></span><br><span class="line">        <span class="comment">/*当将一种类型强制转换成另一种类型</span></span><br><span class="line"><span class="comment">        * 而又超出了目标类型的表数范围</span></span><br><span class="line"><span class="comment">        * 就会被截断成一个完全不同的值</span></span><br><span class="line"><span class="comment">        * */</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">n1</span> <span class="operator">=</span> <span class="number">300</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">n2</span> <span class="operator">=</span> (<span class="type">byte</span>)n1;</span><br><span class="line">        System.out.println(<span class="string">&quot;n2=&quot;</span>+n2);</span><br><span class="line">        <span class="comment">//不要去纠结这个值的意义，这个值没有任何的意义，就是随机截的</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//溢出错误，操作比较大的数，要留意是否溢出。</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">salary</span> <span class="operator">=</span> <span class="number">1000000000</span>;<span class="comment">//10e</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">years</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line"><span class="comment">//        int total1 = salary*years; 出来了负数，说明发生了溢出。</span></span><br><span class="line"><span class="comment">//特别需要注意 溢出不会报异常，还是会正常显示。</span></span><br><span class="line"><span class="comment">/*修改方法1，把salary和year改成int类型</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> <span class="comment">//修改方法2</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">total2</span> <span class="operator">=</span> <span class="number">1L</span>*salary*years;</span><br><span class="line">        System.out.println(total2);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="通过键盘输入"><a href="#通过键盘输入" class="headerlink" title="通过键盘输入"></a>通过键盘输入</h3><h2 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h2><p>流程控制语句有两种结构<br>1、选择结构<br>2、循环结构<br>学会了程序控制语句，我们的一只脚就迈进了程序员的大门。</p><h3 id="编程的本质"><a href="#编程的本质" class="headerlink" title="编程的本质"></a>编程的本质</h3><p>编程的本质就是用代码表达现实世界的逻辑。<br>而现实世界中的任何逻辑，最终都可以拆分成选择结构和循环结构。<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008211552442.png" alt="image-20241008211552442"></p><p>选择结构代表 如果…则…  这样的逻辑<br>例：如果看到红灯 则立即停车<br>循环结构就是选择结构的基础上加上重复执行。<br>任何的编程<br>本质上都是由“变量、选择语句、循环语句”组成</p><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009081542457.png" alt="image-20241009081542457"></p><p><strong>语法结构</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009081559194.png" alt="image-20241009081559194"></p><p><strong>流程图</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009081328179.png" alt="image-20241009081328179"></p><h4 id="if-else语句"><a href="#if-else语句" class="headerlink" title="if else语句"></a>if else语句</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083036459.png" alt="image-20241009083036459"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083036459.png" alt="image-20241009083036459">   </p><h4 id="多分支结构"><a href="#多分支结构" class="headerlink" title="多分支结构"></a>多分支结构</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083313068.png" alt="image-20241009083313068"></p><p> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009083400325.png" alt="image-20241009083400325"> </p><h4 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"><span class="comment">/*流程控制语句</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test010</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(Math.random()<span class="comment">/*这个方法返回一个0-1之间的随机数【0，1）*/</span>);</span><br><span class="line">        <span class="comment">//所以如果要返回一个0-10之间的随机数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random() * <span class="number">10</span>);</span><br><span class="line">        System.out.println(r);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果r小于5，则打印&quot;数比较小&quot;</span></span><br><span class="line">        <span class="keyword">if</span>(r&lt;<span class="number">5</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;数比较小&quot;</span>);</span><br><span class="line">        &#125;<span class="comment">//这里如果不加这个花括号其实也有效，但是限制很大，重点是只对第一句有效。</span></span><br><span class="line">        <span class="comment">//所以为了更规范的写代码，最好还是加上。</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (r&lt;<span class="number">5</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;number is small&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;number is big&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//年龄筛选器</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">100</span>);</span><br><span class="line">        <span class="keyword">if</span> (age&lt;<span class="number">15</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;childhood&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">25</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;teenage&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">45</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;adult&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">65</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;old man&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (age&lt;<span class="number">85</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;get rest&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span>  &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;die&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="特殊练习，数字和字母的转换"><a href="#特殊练习，数字和字母的转换" class="headerlink" title="特殊练习，数字和字母的转换"></a>特殊练习，数字和字母的转换</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test011</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*随机生成字母，aeiou输出元音，其他输出辅音*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">26</span>);</span><br><span class="line">        <span class="type">char</span> <span class="variable">alpha</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        alpha = (<span class="type">char</span>)(alpha + num);</span><br><span class="line">        <span class="keyword">if</span>(alpha == <span class="string">&#x27;a&#x27;</span>|| alpha == <span class="string">&#x27;e&#x27;</span>||alpha == <span class="string">&#x27;i&#x27;</span>||alpha == <span class="string">&#x27;o&#x27;</span>||alpha == <span class="string">&#x27;u&#x27;</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;元音&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;辅音&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Switch语句"><a href="#Switch语句" class="headerlink" title="Switch语句"></a>Switch语句</h3><p> switch语句特别适合做多值判断<br><strong>代码示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*以下是一个简单的判断语句</span></span><br><span class="line"><span class="comment">        * 随机生成了一个值 判断大学几年级*/</span></span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">grade</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (grade == <span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 1&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade ==<span class="number">2</span> ) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 2&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (grade == <span class="number">3</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 3&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;grade 4&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/* 以下是上面代码的switch语句版本*/</span></span><br><span class="line">        <span class="keyword">switch</span> (grade)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 1&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;<span class="comment">//必须要每个case后面跟一个break</span></span><br><span class="line">            <span class="comment">/*break是switch的跳出语句，没有break</span></span><br><span class="line"><span class="comment">            * switch就会一直执行*/</span></span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 2&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 3&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;grade 4&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">12</span>);</span><br><span class="line">        <span class="keyword">if</span> (month ==<span class="number">1</span> || month ==<span class="number">2</span> || month == <span class="number">3</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;spring&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (month ==<span class="number">4</span> || month ==<span class="number">5</span> || month == <span class="number">6</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;summer&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (month ==<span class="number">7</span> || month ==<span class="number">8</span> || month == <span class="number">9</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;autumn&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;winter&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (month)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;spring&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;summer&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;autumn&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//            case 10:</span></span><br><span class="line"><span class="comment">//            case 11:</span></span><br><span class="line"><span class="comment">//            case 12:</span></span><br><span class="line"><span class="comment">//                System.out.println(&quot;winter&quot;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;winter&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="switch的表达式"><a href="#switch的表达式" class="headerlink" title="switch的表达式"></a>switch的表达式</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009185237150.png" alt="image-20241009185237150"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009185312810.png" alt="image-20241009185312810"></p><p>switch语句练习</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test002</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//阿拉伯数字转化成英语。1--》one</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">10</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">Character</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;<span class="comment">//逻辑上来讲没有问题 但是从编译器的角度考虑最好先设置一个空值</span></span><br><span class="line">        <span class="keyword">switch</span> (num)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            Character = <span class="string">&quot;zero&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                Character = <span class="string">&quot;one&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                Character = <span class="string">&quot;two&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                Character = <span class="string">&quot;three&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                Character = <span class="string">&quot;four&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                Character = <span class="string">&quot;five&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                Character = <span class="string">&quot;six&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                Character = <span class="string">&quot;seven&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                Character = <span class="string">&quot;eight&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                Character = <span class="string">&quot;nine&quot;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(Character);</span><br><span class="line">        <span class="comment">/*超市推出积分活动，积分7000以上奖励苹果，5000以上奖励香蕉，3000以上奖励牛奶*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">score</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">10000</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;用户积分：&quot;</span>+ score);</span><br><span class="line">        <span class="comment">/*简单的做法， 用if判断 这里用switch练习*/</span></span><br><span class="line">        <span class="keyword">switch</span> (score/<span class="number">1000</span>)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;apple&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;banana&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;milk&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;none&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010075241955.png" alt="image-20241010075241955"></p><p> 一切的事物，核心都是循环，操作系统的核心是一个接一个的循环<br>屏幕显示是一个循环，键盘监听、鼠标监听，都是循环<br>大到宇宙的运行，也是循环；微观粒子运行，还是循环。<br>人生，也是循环。<br>循环结构分为两个</p><p>while循环和for循环<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010075523742.png" alt="image-20241010075523742"></p><h4 id="whlie的语法结构"><a href="#whlie的语法结构" class="headerlink" title="whlie的语法结构"></a>whlie的语法结构</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010075852717.png" alt="image-20241010075852717"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"><span class="comment">/*用于测试while循环*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test003</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*打印1-100*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">101</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i=&quot;</span>+i);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//计算1+2+...+100</span></span><br><span class="line"></span><br><span class="line">        i =<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">101</span>)&#123;</span><br><span class="line">            <span class="comment">//sum = sum + i;</span></span><br><span class="line">            sum += i ;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;和：&quot;</span>+sum);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h4><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010082020653.png" alt="image-20241010082020653"></p><p>只不过for循环的语法做了一些调整<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010082722211.png" alt="image-20241010082722211"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">        <span class="comment">//for循环</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">0</span> ;i1&lt;<span class="number">10</span>;i1++)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;i1=&quot;</span>+i1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum02</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">8</span>;m&lt;<span class="number">10</span>;m++)&#123;</span><br><span class="line">            sum02 += m;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;sum02=&quot;</span>+ sum02);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="嵌套循环"><a href="#嵌套循环" class="headerlink" title="嵌套循环"></a>嵌套循环</h3><p> 嵌套循环就是大循环里面套着小循环<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010174619193.png" alt="image-20241010174619193"></p><p>这样可以解决更加复杂的问题</p><p>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"><span class="comment">/*测试嵌套循环*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*打印输出十行，每行输出0-9*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>; l &lt;= <span class="number">10</span>; l++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> <span class="number">0</span>; h &lt; <span class="number">10</span>; h++) &#123;</span><br><span class="line">                System.out.print(h + <span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*for循环内部初始化的变量只再for循环内部使用</span></span><br><span class="line"><span class="comment">         * 除了for循环就没有了*/</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;奇\t&quot;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;偶\t&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*输出一个矩形*/</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>; m&lt;<span class="number">6</span> ; m++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span><span class="number">0</span>; n&lt;<span class="number">6</span>;n++)&#123;</span><br><span class="line">            System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*输出一个直角三角形*/</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>; m&lt;<span class="number">6</span> ; m++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span><span class="number">0</span>; n&lt;m;n++)&#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;========&quot;</span>);</span><br><span class="line">        <span class="comment">//输出一个倒直角三角形</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;m&lt;<span class="number">6</span>;m++)&#123;  <span class="comment">//  12345</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> n=<span class="number">5</span>;n&gt;<span class="number">5</span>-m;n--)&#123;<span class="comment">//54321</span></span><br><span class="line">                System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;========&quot;</span>);</span><br><span class="line">        <span class="comment">//输出一个倒直角三角形</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> <span class="number">0</span>;m&lt;<span class="number">6</span>;m++)&#123;  <span class="comment">//  12345</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> n=<span class="number">0</span>;n&lt;<span class="number">5</span>-m;n++)&#123;<span class="comment">//54321</span></span><br><span class="line">                System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*输出一个等腰的三角形*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (j&gt;=num-i &amp;&amp; j&lt;=num+i)&#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;*\t&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="break和continue语句"><a href="#break和continue语句" class="headerlink" title="break和continue语句"></a>break和continue语句</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241010194440523.png" alt="image-20241010194440523"></p><p>这段多说无益，直接上代码，通过代码来了解</p><p>代码示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"><span class="comment">/*break和continue*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test005</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//产生100以内的随机数，知道随机数为88时终止循环</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">100</span>);</span><br><span class="line">            count +=<span class="number">1</span>;</span><br><span class="line">            System.out.println(m);</span><br><span class="line">            <span class="keyword">if</span> (m == <span class="number">88</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;count:&quot;</span>+count);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*测试continue*/</span></span><br><span class="line">        <span class="comment">/*把100-150之间补不能被3整除的数输出，并且每行输出5个*/</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">100</span>;i&lt;<span class="number">151</span>;i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i % <span class="number">3</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    System.out.print(i+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">                    a++;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">if</span> (a % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/*        int a = 0;</span></span><br><span class="line"><span class="comment">        for (int i = 100;i&lt;151;i++) &#123;</span></span><br><span class="line"><span class="comment">            if (i % 3 == 0) &#123;</span></span><br><span class="line"><span class="comment">                continue;</span></span><br><span class="line"><span class="comment">            &#125; else if (a %5 ==0) &#123;</span></span><br><span class="line"><span class="comment">                System.out.println();</span></span><br><span class="line"><span class="comment">            &#125; else &#123;</span></span><br><span class="line"><span class="comment">                System.out.print(i);</span></span><br><span class="line"><span class="comment">                a++;</span></span><br><span class="line"><span class="comment">            &#125; 逻辑问题 */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test006</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        * 抓动物小游戏</span></span><br><span class="line"><span class="comment">        * 随机出现一个动物</span></span><br><span class="line"><span class="comment">        * 如果出现老虎，则游戏结束，如果出现老鹰，就躲起来等待下一个动物出现</span></span><br><span class="line"><span class="comment">        * 如果出现小猫小狗小鸟小乌龟就可以抓住。记数抓住多少个动物</span></span><br><span class="line"><span class="comment">        * 0老鼠1老鹰2小猫3小狗4小鸟*/</span></span><br><span class="line">        <span class="comment">//while(true)</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//抓住动物的数量</span></span><br><span class="line">        <span class="keyword">for</span>(;;)&#123;<span class="comment">//和while(true)等价</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> (<span class="type">int</span>)(Math.random()*<span class="number">5</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">animal</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">switch</span> (num)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    animal = <span class="string">&quot;tiger&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    animal = <span class="string">&quot;eagel&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                    animal = <span class="string">&quot;pussy&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    animal = <span class="string">&quot;doggy&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                    animal = <span class="string">&quot;bird&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    animal=<span class="string">&quot;unknow animal&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (animal ==<span class="string">&quot;tiger&quot;</span>)&#123;</span><br><span class="line">                System.out.println(animal);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (animal == <span class="string">&quot;eagel&quot;</span>) &#123;</span><br><span class="line">        System.out.println(animal);</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        count++;</span><br><span class="line">        System.out.println(animal);</span><br><span class="line">        System.out.println(count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="控制语句综合练习"><a href="#控制语句综合练习" class="headerlink" title="控制语句综合练习"></a>控制语句综合练习</h3><p>练习代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D9;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test007</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">/*使用for循环打印a-z的26个字母*/</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">character</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;i&lt;<span class="number">26</span>;i++)&#123;</span><br><span class="line">            System.out.println(character);</span><br><span class="line">            character++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*打印九九乘法表*/</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> m=<span class="number">1</span>; m&lt;<span class="number">10</span>;m++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span><span class="number">1</span>;n&lt;=m;n++)&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> m*n;</span><br><span class="line">                System.out.print(m+<span class="string">&quot;*&quot;</span>+n+<span class="string">&quot;=&quot;</span>+k+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/*个人理解 这一类问题的关键</span></span><br><span class="line"><span class="comment">* 其实是找到m和n的关系 也就是行和列之间的关系</span></span><br><span class="line"><span class="comment">* 找到了之后就好说*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*薪水计算器</span></span><br><span class="line"><span class="comment">        * 通过键盘输入月薪，每年是几个月的薪水</span></span><br><span class="line"><span class="comment">        * 输出年薪</span></span><br><span class="line"><span class="comment">        * 输出一行字“”如果每年粘性超过十万，恭喜你超过90%的国人</span></span><br><span class="line"><span class="comment">        * 如果年薪超过20万，恭喜你超越98%的国人</span></span><br><span class="line"><span class="comment">        * 知道键盘输入数字88，则退出程序 使用break退出循环</span></span><br><span class="line"><span class="comment">        * 输入中途 键盘输入数字66，则这个用户退出计算不显示 恭喜</span></span><br><span class="line"><span class="comment">        * 直接显示 重新开始计算，然后算下一个用户的年薪*/</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">/*这是面向对象里面的内容，总之通过这个方式可以获得键盘的输入*/</span></span><br><span class="line">        System.out.println(<span class="string">&quot;annual salary calculator&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;enter your salary:&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">monthSalary</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">            System.out.println(<span class="string">&quot;Enter the number of times you are paid in a year:&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">months</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">yearSalary</span> <span class="operator">=</span> monthSalary * months;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;your annual salary:&quot;</span>+ yearSalary );</span><br><span class="line">            <span class="keyword">if</span> (yearSalary&gt;=<span class="number">200000</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;king!&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (yearSalary&gt;=<span class="number">100000</span>)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;victory&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            System.out.println(<span class="string">&quot;enter [88] to exit,enter [66] to continue&quot;</span>);</span><br><span class="line">            <span class="type">int</span> <span class="variable">commandNum</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">88</span>==commandNum)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;exit&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">66</span> == commandNum)&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;please reenter&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="方法的定义-内存结构"><a href="#方法的定义-内存结构" class="headerlink" title="方法的定义_内存结构"></a>方法的定义_内存结构</h2><h3 id="JAVA中的方法与函数的关系"><a href="#JAVA中的方法与函数的关系" class="headerlink" title="JAVA中的方法与函数的关系"></a>JAVA中的方法与函数的关系</h3><p>在 Java 中只使用“方法”（method）这个术语，而没有“函数”（function）的概念。Java 的方法（method）与其他编程语言中的函数（function）非常相似，它们都执行特定的任务并可以返回一个值。但是由于 Java 是面向对象的语言，所有方法必须属于一个类，因此使用“方法”这个词来强调它们是类的成员。</p><h3 id="方法的定义和调用"><a href="#方法的定义和调用" class="headerlink" title="方法的定义和调用"></a>方法的定义和调用</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008085025541.png" alt="image-20241008085025541"></p><h3 id="方法的声明格式"><a href="#方法的声明格式" class="headerlink" title="方法的声明格式"></a>方法的声明格式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*多个修饰符  返回值类型 方法名（形势参数列表）&#123;</span><br><span class="line">多个java语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里修饰符就是public static,对于现在来说不是很重要，只要记住就行<br>具体的情况之后再解释</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008085259515.png" alt="image-20241008085259515"></p><p> 示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D4;</span><br><span class="line"><span class="comment">/*测试方法的定义和调用</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test007</span> &#123;</span><br><span class="line">    <span class="comment">//main方法，程序的入口</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a1</span> <span class="operator">=</span> add(<span class="number">100</span>,<span class="number">200</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a2</span> <span class="operator">=</span> add(<span class="number">200</span>,<span class="number">300</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a3</span> <span class="operator">=</span> add(<span class="number">300</span>,<span class="number">500</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num2</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> add(num1,num2);<span class="comment">//调用时实际传递的参数，实参</span></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;两个数的和&quot;</span>+ sum);</span><br><span class="line"></span><br><span class="line">        printInfo();</span><br><span class="line">        printInfo();</span><br><span class="line">        printInfo();<span class="comment">//可以多次调用</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//两个数求和</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1,<span class="type">int</span> n2<span class="comment">/*形参*/</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//定义新的变量 计算</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> n1 + n2;</span><br><span class="line">        <span class="keyword">return</span> sum;<span class="comment">//返回sum</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印公司信息</span></span><br><span class="line">    <span class="comment">//这类情况比较特殊，没有形参，也没有返回值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;玲珑山车神&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="方法的修饰符"><a href="#方法的修饰符" class="headerlink" title="方法的修饰符"></a>方法的修饰符</h3><p><strong>可见性修饰符：</strong></p><p><code>public</code>—在所有类中可见，在其他包中可以用import导入。<br><code>缺省</code>—就是没有修饰符，在同一个包中的类中可见，在其他包中不能用import导入。</p><p><strong>修饰符：</strong></p><p><code>final</code>—终态类，表示该类不能被继承<br><code>abstract</code>—抽象类，不能新建对象</p><h3 id="方法调用过程"><a href="#方法调用过程" class="headerlink" title="方法调用过程"></a>方法调用过程</h3><p>首先我们有一个叫栈的空间</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008091615217.png" alt="image-20241008091615217"></p><p>最初始的情况他是空的<br>然后看上面的示例代码，当我们执行到main方法（main方法是程序的入口）的时候<br>栈空间内部出现一个关于main方法的栈帧。（stack frame）</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008091705727.png" alt="image-20241008091705727"></p><p>每一个栈帧里面都包含main方法相关的信息<br>生成一个局部变量表，把上文main方法中的局部变量都放到表内</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008092330712.png" alt="image-20241008092330712"></p><p>当程序执行到int sum的时候，这里就需要调用一个新的add方法<br>开辟一个新的栈帧</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008092431525.png" alt="image-20241008092431525"></p><p>然后生成新的局部变量表<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241008092505469.png" alt="image-20241008092505469"></p><p>调用函数的时候，把需要的局部变量的值传递进来。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241011093324455.png" alt="image-20241011093324455"></p><p>当调用printInfo()的时候，也同样会生成printInfo()的栈帧。 <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241011093820561.png" alt="image-20241011093820561"></p><p>打印完了之后直接车从栈里面出去 出栈<br>同时main方法执行完毕，main方法也出栈<br>然后栈就空了，然后整个程序结束执行。</p><h2 id="方法的重载"><a href="#方法的重载" class="headerlink" title="方法的重载"></a>方法的重载</h2><h3 id="overload"><a href="#overload" class="headerlink" title="overload"></a>overload</h3><p>方法的重载，指的是一个类中可以定义多个方法名相同，但参数不同的方法。调用时会根据不同的参数自动匹配对应的方法。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241012075559653.png" alt="image-20241012075559653"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241012075633825.png" alt="image-20241012075633825"></p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D11;</span><br><span class="line"><span class="comment">/*测试方法的重载*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(add(<span class="number">100.25</span>,<span class="number">100</span>));</span><br><span class="line">        System.out.println(add(<span class="number">100</span>,<span class="number">100</span>));</span><br><span class="line">        System.out.println(add(<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>));</span><br><span class="line">        System.out.println(add(<span class="number">100</span>,<span class="number">100.25</span>));</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1 , <span class="type">int</span> n2)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> n1 + n2;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法名相同，参数类型不同，构成重载。</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">add</span><span class="params">(<span class="type">double</span> n1,<span class="type">int</span> n2)</span>&#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> n1+n2;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1 , <span class="type">int</span> n2, <span class="type">int</span> n3)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> n1 + n2 + n3;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法名相同，参数顺序不同，构成重载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">double</span> <span class="title function_">add</span><span class="params">(<span class="type">int</span> n1 , <span class="type">double</span> n2)</span>&#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> n1+n2;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*只有返回值不同不构成重载，会报编译错误*/</span></span><br><span class="line"><span class="comment">//    public static void add(int n1 , double n2)&#123;</span></span><br><span class="line"><span class="comment">//        double sum = n1+n2;</span></span><br><span class="line"><span class="comment">//        return sum;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">/*只有形参名字不一样，同样不构成重载，因为不知道调用的是哪一个*/</span></span><br><span class="line"><span class="comment">//    public static double add(int m1 , double m2)&#123;</span></span><br><span class="line"><span class="comment">//        double sum = m1+m2;</span></span><br><span class="line"><span class="comment">//        return sum;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><h3 id="类的基本元素"><a href="#类的基本元素" class="headerlink" title="类的基本元素"></a>类的基本元素</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013202627105.png" alt="image-20241013202627105"></p><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013203352570.png" alt="image-20241013203352570"></p><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>初始化就是赋一个默认值给这个成员变量，详见下面的成员变量的默认值</p><p>示例代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D13;</span><br><span class="line"><span class="comment">/*建立一个学生类用来表示学生的信息*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">        <span class="comment">/*静态特征（数据），作为学生需要拥有的一些元素*/</span></span><br><span class="line">        <span class="type">int</span> id;</span><br><span class="line">        String name;</span><br><span class="line">        <span class="type">int</span> score;</span><br><span class="line">        <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*方法（动态行为）（对数据的操作）*/</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123;</span><br><span class="line">            System.out.println(name + <span class="string">&quot;is Studying&quot;</span> );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*面向对象编程的好处就是把相关的数据和对他的操作全部都放在一起</span></span><br><span class="line"><span class="comment">        * 这样去调用和定义的时候会非常方便*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="成员变量的默认值"><a href="#成员变量的默认值" class="headerlink" title="成员变量的默认值"></a>成员变量的默认值</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013203930595.png" alt="image-20241013203930595"></p><p>规则：对于数字 可以是0的都赋值为0，对于字符 赋值\u0000 本质也是0<br>对于布尔默认是 false 占一个字节 实际上也是0<br>引用类型： 从现在面向对象开始讲解的新的类型 自定义的类型 都是引用类型。<br>比如上文定义的student 就是一个引用类型</p><h3 id="类和对象的关系"><a href="#类和对象的关系" class="headerlink" title="类和对象的关系"></a>类和对象的关系</h3><p>什么是对象？万物皆对象，在JAVA中，对象就是一类数据的实例化，他们有着一种或几种的相同特征。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241013204949141.png" alt="image-20241013204949141"></p><p><strong>个人理解</strong>：用之前使用的过的写过的代码举例就是，比如说定义了 一个int类型的数据a1<br>那么就是存在一个a1，这个a1就是对象，属于的类是int类<br>比如说上文建立了一个student 的类之后，我再输入下面的语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">/*在main方里面去使用上面的内容*/</span></span><br><span class="line">    <span class="type">Student</span> <span class="variable">stu1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是创建了一个新的对象 这个对象的名字叫stu1 属于student的类<br>同时他也是所谓的引用类型变量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D13;</span><br><span class="line"><span class="comment">/**/</span></span><br><span class="line"><span class="comment">public class BaizhanStudent &#123;</span></span><br><span class="line"><span class="comment">    /*定义一个练习用的student类*/</span></span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String sname;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="comment">/*假设每个学生都需要一台电脑，</span></span><br><span class="line"><span class="comment">    所以这里给每个学生加了一个电脑属性*/</span></span><br><span class="line">    Computer computer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">study</span><span class="params">()</span>&#123;<span class="comment">/*这里定义方法没有写修饰符，默认是公共抽象的，具体后面展开*/</span></span><br><span class="line">        System.out.println(<span class="string">&quot;我正在使用：&quot;</span>+ computer.brand+<span class="string">&quot;学习&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*关于修饰符*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Computer</span> <span class="variable">c1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Computer</span>();<span class="comment">//这些new的本质是构造方法，这个后期再讲。</span></span><br><span class="line">        c1.brand = <span class="string">&quot;lenovo&quot;</span>;</span><br><span class="line">        c1.price = <span class="number">6000</span>;</span><br><span class="line">        <span class="type">Computer</span> <span class="variable">c2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Computer</span>();</span><br><span class="line">        c2.brand = <span class="string">&quot;Republic of Gamers&quot;</span>;</span><br><span class="line">        c2.price = <span class="number">9000</span>;</span><br><span class="line">        <span class="type">Computer</span> <span class="variable">c3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Computer</span>();</span><br><span class="line">        c3.brand = <span class="string">&quot;alienware&quot;</span>;</span><br><span class="line">        c3.price = <span class="number">10000</span>;</span><br><span class="line">        <span class="comment">/*定义computer*/</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*定义baizhanstudent*/</span></span><br><span class="line">        <span class="type">BaizhanStudent</span> <span class="variable">stu01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BaizhanStudent</span>();</span><br><span class="line">        stu01.id = <span class="number">1001</span>;</span><br><span class="line">        stu01.sname = <span class="string">&quot;疯狂小扬哥&quot;</span>;</span><br><span class="line">        stu01.age = <span class="number">18</span>;</span><br><span class="line">        stu01.computer = c1;</span><br><span class="line"></span><br><span class="line">        stu01.study();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">package</span> Y24M10D13;</span><br><span class="line"><span class="comment">/*这是对于computer整个类的定义*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Computer</span> &#123;</span><br><span class="line">    <span class="comment">/*定义电脑类的两个属性，品牌和价格*/</span></span><br><span class="line">    String brand;</span><br><span class="line">    <span class="type">int</span> price;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>以上是这段的示例代码，以下来讲述底层内存中的变化<br>首先内存中有栈和堆<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072610824.png" alt="image-20241014072610824"></p><p>当我们启动哦那这个类进行运算的时候。 内存中首先会做类的加载动作。<br>双引号中的内容，会被优先做处理，在堆中生成。<br> <img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072706630.png" alt="image-20241014072706630"></p><p>然后开始执行main方法，生成栈帧和局部变量表，其中c1 c2 stu1这些都是引用类型（四字节）<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072844614.png" alt="image-20241014072844614"><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014072954550.png" alt="image-20241014072954550"></p><p>  然后创建一个computer对象，并给他的两个属性赋默认值。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014073750285.png" alt="image-20241014073750285"></p><p>然后这个对象会有一个<u><strong>地址</strong></u> 例0x11（0x代表16进制）这个数我随便写的，无特殊含义<br>也可以用十进制写个2345 反正就是一个标记，告诉我们这个对象的地址是多少。<br>然后这里对象就建立完成了，建立完成了之后会把这个值个给c1，也就是那个0x11<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014074129456.png" alt="image-20241014074129456"></p><p>同时这也就意味着，c1这个变量指向了这个对象。<br>这个时候就可以通过c1找到这个对象。<br>这时候就可以通过C1找到这个对象。<br>因为他引用了这个对象的地址。<br>然后再看下一步c1.brand = 联想<br>假设这里给联想一个虚拟的值0x88<br>然后堆中相当于c1.brand = 0x88<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014074730375.png" alt="image-20241014074730375"></p><p>也就是c1.brand引用了0x88，然后c1.price 重新赋值=6000<br>因为c1.price是基本数据类型，基本数据类型是直接赋值给他，引用数据类型才是给地址。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014074826036.png" alt="image-20241014074826036"></p><p>c2h和stu1的定义过程也是同理，这里就不赘述了，直接上结果</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241014075459180.png" alt="image-20241014075459180"></p><p>注意 堆内存中的数据不会清除。因为不确定之后是否还会要被调用</p><h3 id="构造方法constructor"><a href="#构造方法constructor" class="headerlink" title="构造方法constructor"></a>构造方法constructor</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241015084635560.png" alt="image-20241015084635560"></p><p><strong>构造器的定义</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241015085112631.png" alt="image-20241015085112631"></p><p><strong>构造器 的四个要点</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017193612797.png" alt="image-20241017193612797"></p><p><strong>示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D17;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 描述二维空间中的一个点</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Point</span> &#123;</span><br><span class="line">    <span class="type">double</span> x;</span><br><span class="line">    <span class="type">double</span> y;</span><br><span class="line"><span class="comment">//构造器一定返回point对象所以没必要再声明返回值类型</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Point</span><span class="params">(<span class="type">double</span> _x,<span class="type">double</span> _y)</span>&#123;<span class="comment">//这个就是构造器</span></span><br><span class="line">        x = _x;</span><br><span class="line">        y = _y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Point</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Point</span>(<span class="number">3.0</span>,<span class="number">4</span>);<span class="comment">/*这个后面的括号没东西因为是无参的构造器</span></span><br><span class="line"><span class="comment">        当构造器里面加入了参数之后，就变成了有参的构造器，这里就会报错*/</span></span><br><span class="line">        <span class="comment">/*在之前还没有学习构造器的时候，baizhanstudent的时候</span></span><br><span class="line"><span class="comment">        * 也可以自动newStudent类，是因为java的编译器</span></span><br><span class="line"><span class="comment">        * 自动帮助我们添加了 无参构造器。*/</span></span><br><span class="line">        System.out.println(p1.x);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*构造方法的核心作用：初始化对象*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>创建对象的步骤</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017212316194.png" alt="image-20241017212316194"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D17;</span><br><span class="line"><span class="comment">/*模拟网站的账户（用于测试构造方法发的重载*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String uname;</span><br><span class="line">    String pwd;</span><br><span class="line">    <span class="comment">/*以上是用户名和密码*/</span></span><br><span class="line">    User()&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span>  <span class="title function_">User</span><span class="params">(<span class="type">int</span> _id)</span>&#123;<span class="comment">//这里定义了一个构造器 _id是里面的形参</span></span><br><span class="line">        id = _id;<span class="comment">//这里给id赋值_id</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*同名的构造器方法，但是参数不一样*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> _id,String _uname, String _pwd)</span>&#123;</span><br><span class="line">        id = _id;</span><br><span class="line">        uname = _uname;</span><br><span class="line">        pwd = _pwd;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">u1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        <span class="type">User</span> <span class="variable">u2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1001</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">u3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">1001</span>,<span class="string">&quot;13&quot;</span>，<span class="number">123456</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>构造方法的重载</strong></p><p><strong><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017212921519.png" alt="image-20241017212316194"></strong></p><h3 id="内存-栈-和-堆"><a href="#内存-栈-和-堆" class="headerlink" title="内存 栈 和 堆"></a>内存 栈 和 堆</h3><p><strong>java虚拟机完整的内存模型</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017214816354.png" alt="image-20241017214816354"></p><p><strong>简化模型</strong></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017214937026.png" alt="image-20241017214937026"></p><p><strong>栈的特点</strong></p><p>1、栈描述的是方法执行的内部模型。每个方法被调用都会船舰一个栈帧（存储局部变量、操作数、方法出口等）<br>2、栈的存储特性是“线进后出，后进先出”<br>3、栈是由系统自动分配，速度快！栈是一个联系的内存空间！<br>其他特性：<br>4、JVM为每个线程出啊昂建一个栈，用于存放改线程执行方法的信息（实际参数、局部变量等）<br>5、栈属于线程私有，不能实现线程之间的共享</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018195717248.png" alt="image-20241018195717248"></p><p>如同上面的方法，假设main方法中调用了另一个A方法，那么在mian方法上面加入那个调用的A方法的栈帧A<br>然后假设A方法又调用了一个B方法，那么在A方法的上面再加入一个B方法的栈帧B<br>然后最后加入的栈帧B方法执行完了之后最先离开栈帧，然后A方法执行完了之后再离开栈帧，最后是main方法<br>也就是说越早调用的越晚离开。</p><p><strong>堆的特点</strong></p><p>1、堆用于存储创建好的对象和数组（数组也是对象）<br>2、堆是一个不连续的内存空间，分配灵活，速度慢！<br>3、JVM只有一个堆，被所有线程共享。</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018200537074.png" alt="image-20241018200537074"></p><p><strong>方法区</strong></p><p>1、方法区是JAVA虚拟机规范，可以有不同的实现。（比如JDK8是“元数据空间”和堆结合起来<br>2、方法区实际上也是堆，只是用于存储类、常量相关的信息！<br>3、用来存放程序中永远是不变或者唯一的内容。（类信息【class对象，放射机制中会重点讲授】、静态变量、字符串常量等）<br>4、JVM只有一个方法区，被所有线程共享！</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017221125546.png" alt="image-20241017221125546"></p><p><strong>示例代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D17;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="comment">//这是定义类里面的元素</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">show</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;姓名：&quot;</span>+ name + <span class="string">&quot;\t年龄：&quot;</span>+age);</span><br><span class="line">    &#125;</span><br><span class="line">    Person(String _name,<span class="type">int</span> _age)&#123;</span><br><span class="line">        name = _name;</span><br><span class="line">        age = _age;</span><br><span class="line">    &#125;</span><br><span class="line">    Person()&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">p1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        p1.age = <span class="number">24</span>;</span><br><span class="line">        p1.name = <span class="string">&quot;张三&quot;</span>;</span><br><span class="line">        p1.show();</span><br><span class="line"></span><br><span class="line">        <span class="type">Person</span> <span class="variable">p2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;李四&quot;</span>,<span class="number">30</span>);</span><br><span class="line">        p2.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当执行这段代码的时候<br>首先 在堆内存中的方法区生成这个person 类<br>然后固定的字符串也一起存储在方法区</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018204603943.png" alt="image-20241018204603943"></p><p>然后在栈中生成main方法的栈帧<br>然后执行person p1的时候，现在栈帧中生成p1，但是此时p1的值为null，<br>然后执行后半句的时候</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018204918572.png" alt="image-20241018204918572"></p><p>执行后半句的时候，调用构造器，在堆中创建person的对象，然后把地址返回给p1（假设地址为0x23)</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018205832177.png" alt="image-20241018205832177"></p><p>此时栈帧中储存的p1 也就有了值（地址）<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018205953095.png" alt="image-20241018205953095"></p><p>然后执行接下来的语句，把堆内存中的p1对象（0x23对象）中的age赋值24，在吧name的值改为张三的地址</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018210111493.png" alt="image-20241018210111493"></p><p>然后再往下调用show方法打印<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018210440169.png" alt="image-20241018210440169"></p><p>执行完了show方法之后直接出栈<br>P2的过程也是同理</p><h3 id="this-的本质"><a href="#this-的本质" class="headerlink" title="this 的本质"></a>this 的本质</h3><p>this的本质就是”当前对象的地址！”<br>普通方法中，this总是指向调用该方法的对象<br>构造方法中，this总是只想正要初始化的对象</p><h3 id="static的本质"><a href="#static的本质" class="headerlink" title="static的本质"></a>static的本质</h3><p>static关键字核心用法：<br>用static声明的变量为静态成员变量，也成为类变量<br>1、重属于类，只有一份，在类被载入时被显式初始化。<br>2、一般用“类名.属性/方法”来调用<br>3、在static方法中不可直接访问非static的成员</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D19;</span><br><span class="line"><span class="comment">/*this 关键字的本质</span></span><br><span class="line"><span class="comment">* this的用法测试*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String name;</span><br><span class="line">    String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> id,String name)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;正在要初始化的对象：&quot;</span>+ <span class="built_in">this</span>);<span class="comment">//这里实际输出的就是地址</span></span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="comment">// 将形参 id 的值赋给实例变量 id</span></span><br><span class="line">        <span class="comment">/*所以这个代码里面this的意思就是形参的值</span></span><br><span class="line"><span class="comment">        * 具体意思就是形参的值=什么*/</span></span><br><span class="line">        <span class="built_in">this</span>.name =name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">(<span class="type">int</span> id,String name,String pwd)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>(id, name);<span class="comment">//调用重载的构造器，这种调用必须位于构造方法的第一行</span></span><br><span class="line">        <span class="built_in">this</span>.pwd = pwd;</span><br><span class="line">        System.out.println(<span class="string">&quot;正在要初始化的对象：&quot;</span>+ <span class="built_in">this</span>);<span class="comment">//这里实际输出的就是地址</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;要登陆：&quot;</span>+<span class="built_in">this</span>.name+<span class="string">&quot;，密码：&quot;</span>+<span class="built_in">this</span>.pwd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">u1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">101</span>,<span class="string">&quot;薯片&quot;</span>);</span><br><span class="line">        u1.login();</span><br><span class="line">        <span class="type">User</span> <span class="variable">u2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="number">102</span>,<span class="string">&quot;薯条&quot;</span>,<span class="string">&quot;123&quot;</span>);</span><br><span class="line">        u2.login();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数组和算法"><a href="#数组和算法" class="headerlink" title="数组和算法"></a>数组和算法</h2><h3 id="一维数组"><a href="#一维数组" class="headerlink" title="一维数组"></a>一维数组</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241017181748938.png" alt="image-20241017181748938"></p><p><strong>代码示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p><strong>代码示例</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Y24M10D19;</span><br><span class="line"><span class="comment">/*测试static的用法*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestStatic</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">String</span> <span class="variable">company</span> <span class="operator">=</span> <span class="string">&quot;薯片责任有限公司&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="variable">companyId</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;类被初始化的调用&quot;</span>);</span><br><span class="line">        companyId = <span class="number">111222</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*类型: 这不是方法，也不是构造器，而是 静态初始化块（Static Initialization Block）。</span></span><br><span class="line"><span class="comment">作用: 在类被加载到 JVM 时执行。它可以用于初始化静态变量或执行一些一次性的操作。在这个例子中，它打印一条消息并将 companyId 设置为 111222。</span></span><br><span class="line"><span class="comment">特点:</span></span><br><span class="line"><span class="comment">只会在类加载时执行一次，适合进行静态变量的初始化。</span></span><br><span class="line"><span class="comment">可以包含多个静态初始化块，它们的执行顺序是从上到下的。*/</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printCompany</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;公司信息&quot;</span>+company);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/*在static里面不能使用非static的成员*/</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;登录&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        TestStatic.printCompany();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="type">TestStatic</span> <span class="variable">t1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestStatic</span>();</span><br><span class="line">        t1.login();</span><br><span class="line">        <span class="type">TestStatic</span> <span class="variable">t2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TestStatic</span>();</span><br><span class="line">        t2.login();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="package和import"><a href="#package和import" class="headerlink" title="package和import"></a>package和import</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241020225023951.png" alt="image-20241020225023951"></p><h3 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h3><p><strong>冒泡排序</strong></p><p>不断做两两比较，可以从前往后，也可以从后往前，如果从前往后，那就是不断两两比较，如果大的就放到后面，第一轮结束之后可以找出最大的。<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018085343879.png" alt="image-20241018085343879"></p><p>第一轮开始之前是这样</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018085353904.png" alt="image-20241018085353904"></p><p>第一轮结束之后就是这样</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241018085432409.png" alt="image-20241018085432409"></p><p>最后的结果</p><p><strong>代码示例</strong></p><p>​        </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JSP学习笔记</title>
      <link href="/posts/5f366732.html"/>
      <url>/posts/5f366732.html</url>
      
        <content type="html"><![CDATA[<h1 id="速成"><a href="#速成" class="headerlink" title="速成"></a>速成</h1><h2 id="导论"><a href="#导论" class="headerlink" title="导论"></a>导论</h2><h3 id="什么是JSP？"><a href="#什么是JSP？" class="headerlink" title="什么是JSP？"></a>什么是JSP？</h3><p>用处：创建Web应用程序。<br>对比Servlet：功能更多，如表达式语言、JSTL<br>组成：一个JSP页面由HTML和JSP标签组成。JSP页面比Servlet更容易维护，原因是设计与开发分离。<br>额外的功能：表达式语言、自定义标签。</p><h3 id="JSP相对于Servlet的优势"><a href="#JSP相对于Servlet的优势" class="headerlink" title="JSP相对于Servlet的优势"></a>JSP相对于Servlet的优势</h3><h4 id="对Servlet的扩展"><a href="#对Servlet的扩展" class="headerlink" title="对Servlet的扩展"></a>对Servlet的扩展</h4><p>JSP技术是对Servlet的扩展，在JSP中可以用Servlet的所有功能。<br>此外，JSP中还可以使用隐含对象、预定义标签、表达式语言和自定义标签等，使JSP开发更加简单</p><h4 id="易于维护"><a href="#易于维护" class="headerlink" title="易于维护"></a>易于维护</h4><p>JSP业务逻辑和表现逻辑分开，在Servlet技术中，我们将业务逻辑与表现逻辑混合在一起。</p><h4 id="快速开发，不需要重新编译和部署"><a href="#快速开发，不需要重新编译和部署" class="headerlink" title="快速开发，不需要重新编译和部署"></a>快速开发，不需要重新编译和部署</h4><p>JSP页面修改之后，不需要重新编译和部署。</p><h4 id="更少的代码"><a href="#更少的代码" class="headerlink" title="更少的代码"></a>更少的代码</h4><p>JSP中的各类标签可以减少代码</p><h3 id="JSP的目录结构"><a href="#JSP的目录结构" class="headerlink" title="JSP的目录结构"></a>JSP的目录结构</h3><p>JSP页面部署要点：把JSP页面放在<strong>WEB-INF文件夹之外</strong>的目录</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009113256330.png" alt="image-20241009113256330"></p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009113317360.png" alt="image-20241009113317360"></p><h3 id="JSP-API"><a href="#JSP-API" class="headerlink" title="JSP API"></a>JSP API</h3><p>JSP API由两个包组成<br>javax.servlet.jsp<br>javax.servlet.jsp.tagext<br>javax.servlet.jsp包有两个接口和类<br>接口如下<br>JspPage<br>HttpJspPage<br>类如下：<br><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241009113650700.png" alt="image-20241009113650700"></p><h2 id="JSP脚本元素"><a href="#JSP脚本元素" class="headerlink" title="JSP脚本元素"></a>JSP脚本元素</h2><p>JSP中，可以使用脚本元素在jsp页面编写代码。<br>脚本元素提供了在jsp中插入java代码的能力。<br>一共有三种类型的脚本元素</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">脚本标签  &lt;% java source code %&gt;</span><br><span class="line">表达式标签&lt;%= statement%&gt;</span><br><span class="line">声明标签&lt;%! field or method declaration %&gt;</span><br></pre></td></tr></table></figure><h1 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h1><h2 id="JSP和JSTL"><a href="#JSP和JSTL" class="headerlink" title="JSP和JSTL"></a>JSP和JSTL</h2><h3 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h3><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241015213018750.png" alt="image-20241015213018750"></p><h2 id="JSP基础语法"><a href="#JSP基础语法" class="headerlink" title="JSP基础语法"></a>JSP基础语法</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>JSP：javaServer Page  SUN公司提供的动态网页编程技术，是java web 服务器端的动态资源<br>和html相比：html只能提供静态数据，而jsp技术允许在页面中嵌套java代码，为用户提供动态数据<br>相比servlet而言，更容易排版<br>    不管是JSP还是servlet都可以用于开发动态web资源，但是由于这两门技术各自的特点，在长期的软件实践中，人们逐渐把servlet作为web应用中的控制器组件来使用，而把JSP技术作为数据显示模板来使用<br>    其实JSP就是一个Servlet，当我们第一次访问jsp的时候，jsp引擎都会将这个jsp翻译成一个servlet，这个问价存在tomcat（源码目录）中的work目录中</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>在JSP中支持两种注释的语法操作<br>    一种是显示注释，这种注释是允许客户端看见的；另一种是隐式注释，此种注释是客户端无法看见的<br>1、显示注释语法：从HTML风格继承而来<br>2、隐藏注释语法：从JAVA风格继承；JSP自己的注释</p><p>JSP的三种注释方式</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、<span class="comment">//注释，单行注释/*多行注释*/</span></span><br><span class="line"><span class="number">2</span> &lt;!-- HTML风格的注释--&gt;</span><br><span class="line"><span class="number">3</span>、&lt;%-- JSP注释 --%&gt;</span><br></pre></td></tr></table></figure><h3 id="Scriptlet"><a href="#Scriptlet" class="headerlink" title="Scriptlet"></a>Scriptlet</h3><p>在JSP中最重要的部分就是Scriptlet（脚本小程序），所有嵌入HTML代码中的java程序。<br>在jap中一共有三种Scriptlet代码：都必须使用Scriptlet标记出来</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一种&lt;%  %&gt;: java脚本段，可以定义局部变量、编写语句</span><br><span class="line">第二种&lt;%! %&gt;:声明，可以定义全局（成员）变量、方法、类</span><br><span class="line">第三种&lt;%= %&gt;表达式，数据的一个变量或者具体内容</span><br></pre></td></tr></table></figure><p>但是现在不建议这样写（脚本和html写一起），因为这样写会导致页面耦合度非常高。</p><p>通过观察解析为java文件的代码jsp代码理解三种小脚本</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: 薯片菌</span><br><span class="line">  Date: <span class="number">16</span>/<span class="number">10</span>/<span class="number">2024</span></span><br><span class="line">  Time: 上午 <span class="number">7</span>:<span class="number">34</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;scriptlet脚本小程序&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%--</span><br><span class="line">scriptlet 脚本小程序</span><br><span class="line">jsp一共有三种scriptlet脚本小程序：</span><br><span class="line">第一种：java脚本段，可以写java代码定义局部变量编写语句</span><br><span class="line">&lt;%</span><br><span class="line"><span class="comment">//可以写java代码</span></span><br><span class="line">%&gt;</span><br><span class="line">生成的代码在servlet中的service方法体中</span><br><span class="line">第二种：声明，声明全局变量、方法、类等</span><br><span class="line">&lt;%!</span><br><span class="line"><span class="comment">//声明全局变量</span></span><br><span class="line">%&gt;</span><br><span class="line">生成的代码在servlet的类体中</span><br><span class="line">第三种：输出表达式。</span><br><span class="line">&lt;%=  数值  %&gt;</span><br><span class="line">生成的代码在servlet中的service方法体中</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%--第一种--%&gt;</span><br><span class="line">&lt;%</span><br><span class="line"><span class="comment">//定义局部变量</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;Hello  Jsp&quot;</span>;</span><br><span class="line">    <span class="comment">//输出内容到控制台</span></span><br><span class="line">    System.out.println(str);</span><br><span class="line">    <span class="comment">//输出到浏览器</span></span><br><span class="line">    out.print(str);</span><br><span class="line">    out.write(<span class="string">&quot;-----&quot;</span>);</span><br><span class="line">    <span class="comment">//输出全局变量</span></span><br><span class="line">    out.write(<span class="string">&quot;全局变量:&quot;</span>+num);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line"><span class="comment">//声明全局变量</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%--第三种--%&gt;</span><br><span class="line">&lt;%= str%&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="JSP的指令标签"><a href="#JSP的指令标签" class="headerlink" title="JSP的指令标签"></a>JSP的指令标签</h2><h3 id="include静态包含"><a href="#include静态包含" class="headerlink" title="include静态包含"></a>include静态包含</h3><p>使用包含操作，可以将一些重复的代码包含进来继续使用，从正常的页面组成来看，有时可能分为几个区域，而其中的一些区域可能是一直不需要改变的，改变的就其中的一个具体内容区域，现在又两种方法可以实现上述功能。</p><p>​    方法一：再每个JSP页面（HTML）都包含工具栏、头部信息、尾部信息、具体内容<br>​    方法二：将工具栏、头部信息、尾部信息都分成各个独立的文件，使用的时候直接导入<br>​    很明显，第二种方法比第一种更好，第一种会存在很多重复的代码，并且修改很不方便，再JSP中如果想要实现包含操作，有两种做法：静态包含、动态包含，静态包含使用include指令即可，动态包含则需要使用include动作标签。<br>示例代码</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: 薯片菌</span><br><span class="line">  Date: <span class="number">16</span>/<span class="number">10</span>/<span class="number">2024</span></span><br><span class="line">  Time: 上午 <span class="number">8</span>:<span class="number">37</span></span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;底部内容&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;Test005-header.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;h2&gt;主体&lt;/h2&gt;</span><br><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;Test005-footer.jsp&quot;</span>%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>静态包含就是将内容进行了直接的替换，就好比程序中定义的变量一样 是在servlet引擎转译的时，就把此文件内容包含了进去（两个文件的源代码整合到一起，全部放到_jspService方法中），所以只生成了一个servlet,所以两个页面不能有同名的变量。运行效率高一点点。耦合性较高，不够灵活。</p><h3 id="include动态包含"><a href="#include动态包含" class="headerlink" title="include动态包含"></a>include动态包含</h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ <span class="type">include</span> <span class="variable">file</span> <span class="operator">=</span> <span class="string">&quot;要包含的文件路径&quot;</span> %&gt; &lt;/jsp:include&gt;</span><br></pre></td></tr></table></figure><p>动态包含在代码的编译阶段，包含和被包含部分是两个独立的部分，只有当运行时，才会动态包含进来，</p><p><strong>注意</strong>：动态包含，中间不要加任何内容，包括空格，除非确认要使用参数，否则报错！</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: 薯片菌</span><br><span class="line">  Date: <span class="number">16</span>/<span class="number">10</span>/<span class="number">2024</span></span><br><span class="line">  Time: 上午 <span class="number">11</span>:08</span><br><span class="line">  To change <span class="built_in">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;include动态包含&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;%--include 动态包含</span><br><span class="line">格式：</span><br><span class="line">   &lt;%@ <span class="type">include</span> <span class="variable">file</span> <span class="operator">=</span> <span class="string">&quot;要包含的文件路径&quot;</span> %&gt; &lt;/jsp:include&gt;</span><br><span class="line">   特点</span><br><span class="line">   <span class="number">1</span>、动态包含相当于方法的调用</span><br><span class="line">   <span class="number">2</span>、动态包含会生成多个源码文件</span><br><span class="line">   <span class="number">3</span>、可以定义同名变量</span><br><span class="line">   <span class="number">4</span>、效率高，耦合度低</span><br><span class="line">   注：</span><br><span class="line">   当动态包含不需要传递参数时，include双标签之间不要有任何内容，包括换行和空格</span><br><span class="line"></span><br><span class="line">   使用动态包含传递参数</span><br><span class="line">   &lt;jsp:include page=<span class="string">&quot;要包含的页面的路径&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;参数名&quot;</span> value=<span class="string">&quot;参数值&quot;</span>/&gt;</span><br><span class="line">   &lt;/jsp:include&gt;</span><br><span class="line">   注：name属性不支持表达式，value属性支持表达式</span><br><span class="line">   获取参数：</span><br><span class="line">   request.getParameter(name);通过特定参数名获取参数值</span><br><span class="line">   --%&gt;</span><br><span class="line"></span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;Test005-header.jsp&quot;</span>&gt;&lt;/jsp:include&gt;</span><br><span class="line">&lt;h2&gt;主体内容&lt;/h2&gt;</span><br><span class="line">&lt;%</span><br><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;Test005-footer.jsp&quot;</span>&gt;&lt;/jsp:include&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--动态包含传递参数--%&gt;</span><br><span class="line">&lt;%  <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;%&gt;</span><br><span class="line">&lt;jsp:include page=<span class="string">&quot;Test005-footer.jsp&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;uname&quot;</span> value=<span class="string">&quot;admin&quot;</span>/&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;msg&quot;</span> value=<span class="string">&quot;&lt;%=str%&gt;&quot;</span>/&gt;</span><br><span class="line">&lt;/jsp:include&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="JSP四大域对象"><a href="#JSP四大域对象" class="headerlink" title="JSP四大域对象"></a>JSP四大域对象</h2><h3 id="四种属性的范围"><a href="#四种属性的范围" class="headerlink" title="四种属性的范围"></a>四种属性的范围</h3><p>在JSP中提供了四种属性的保存范围，所谓的属性保存范围，指的就是一个设置的对象，可以在多少个页面中保存并可以继续使用<br>就是说属性什么时候失效</p><p>1、page范围<br>        pageCountext：只在一个页面中保存属性，跳转之后无效<br>2、request范围<br>        request：只在一次请求中保存，服务器跳转后依然有效<br>3、session范围<br>        session：在一次会话范围中，无论何种跳转都可以使用<br>4、appliction范围</p><p>​        application: 在整个服务器上保存</p><p><img src="https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/image-20241022103827184.png" alt="image-20241022103827184"></p><h3 id="验证属性范围的特点"><a href="#验证属性范围的特点" class="headerlink" title="验证属性范围的特点"></a>验证属性范围的特点</h3><p>1、page<br>本页面取得，服务器端跳转（ &lt;  jsp:forward  &gt; ）后无效<br>2、request<br>服务器跳转有效，客户端跳转无效<br>如果是客户端跳转，则想打能与发出了两次请求，那么第一次的请求将不存在了；如果希望不管是客户端还是服务器跳转，都能保存的话，就需要继续扩大范围。</p><p>在自己设计的代码中，尽可能多的使用request比较合理</p><p>3、session<br>无论客户端还是服务器端都可以取得，但是现在重新开启一个新的浏览器，则无法取得之前设置的session了，因为每一个seesion只保存在当前的浏览器中，并在相关的页面取得。<br>对于服务器而言，每一个连接到它的客户端都是一个session<br>如果想要让属性设置一次之后，不管是否是新的浏览器打开都能取得则可以使用application<br>4、application<br>所有application属性直接保存在服务器上，所有的用户（每一个session）都可以直接访问取得<br>只要通过application设置的属性，则所有的session都可以取得，表示公共的内容，但是如果此时服务器重启了，则无法取得了，因为关闭服务器后，所有属性都消失了，所以需要重新设置。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库学习笔记</title>
      <link href="/posts/769d2f87.html"/>
      <url>/posts/769d2f87.html</url>
      
        <content type="html"><![CDATA[<h1 id="代码速成"><a href="#代码速成" class="headerlink" title="代码速成"></a>代码速成</h1><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><h3 id="检查数据库名是否存在"><a href="#检查数据库名是否存在" class="headerlink" title="检查数据库名是否存在"></a>检查数据库名是否存在</h3><p>如果需要创建数据库，可能会出现数据库名字重名的现象，我们可以使用如下带啊吗查询数据库名是否存在，存在则删除此数据库。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if exist(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sys.databases <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;DBTEST&#x27;</span>)</span><br><span class="line"><span class="comment">--判断是否存在</span></span><br><span class="line"><span class="keyword">drop</span> database DBTEST</span><br></pre></td></tr></table></figure><p>此代码检查数据库中是否存在“DBTEST”数据库，如果存在则删除此数据库，此处理方式最好只在学习阶段使用，在正式生产环境中慎用，操作不当可能会删除重要数据。</p><h3 id="创建数据库-1"><a href="#创建数据库-1" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建数据库</span></span><br><span class="line"><span class="keyword">create</span> database DBTEST</span><br><span class="line"><span class="keyword">on</span>   <span class="comment">--on代表数据文件</span></span><br><span class="line">(<span class="comment">--on下面是一对英文的括号</span></span><br><span class="line"><span class="comment">--下面是创建数据库时需要设置的数据</span></span><br><span class="line">name <span class="operator">=</span> <span class="string">&#x27;DBTEST&#x27;</span>, <span class="comment">--数据库中需要注意的一点就是字符串不是用双引号而是用单引号。 </span></span><br><span class="line"><span class="comment">/*name代表数据文件的逻辑名称</span></span><br><span class="line"><span class="comment">习惯上这个名称一般和库名保持一致</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">filename <span class="operator">=</span> <span class="string">&#x27;D:\SQL2019\Directory\DBTEST.mdf &#x27;</span>,<span class="comment">--物理路径和名称 </span></span><br><span class="line">size <span class="operator">=</span> <span class="number">5</span>mb,<span class="comment">--文件的初始大小</span></span><br><span class="line">filegrowth <span class="operator">=</span> <span class="number">2</span>MB<span class="comment">--文件增长方式可以写大小，也可以写百分比10%</span></span><br><span class="line"></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">log <span class="keyword">on</span> <span class="comment">--log on 代表日志 文件</span></span><br><span class="line">(</span><br><span class="line">name <span class="operator">=</span> <span class="string">&#x27;DBTEST_log&#x27;</span>,<span class="comment">--日志文件的习惯就是在数据文件的基础上加上一个log</span></span><br><span class="line">filename <span class="operator">=</span> <span class="string">&#x27;D:\SQL2019\Directory\DBTEST_log.ldf &#x27;</span>,<span class="comment">--物理路径和名称 </span></span><br><span class="line">size <span class="operator">=</span> <span class="number">5</span>mb,<span class="comment">--文件的初始大小</span></span><br><span class="line">filegrowth <span class="operator">=</span> <span class="number">2</span>MB<span class="comment">--文件增长方式可以写大小，也可以写百分比10%</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>以上代码创建“DBTEST”数据库，并且风别使用on喝log on规定了数据文件喝日志文件的信息。</p><p>创建数据库也可以按照如下简单语法来创建：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建数据库简写 </span></span><br><span class="line"><span class="keyword">create</span> database DBTEST1</span><br></pre></td></tr></table></figure><p>如果按照上述方式创建数据库，数据库的数据文件喝日志文件的相关信息，全部采用默认值。</p><h3 id="建表"><a href="#建表" class="headerlink" title="建表"></a>建表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"> use DBTEST <span class="comment">--切换数据库</span></span><br><span class="line"> <span class="comment">--创建表的基本语法</span></span><br><span class="line"> <span class="comment">/*create table 表名</span></span><br><span class="line"><span class="comment"> （</span></span><br><span class="line"><span class="comment"> 字段名1 数据类型，</span></span><br><span class="line"><span class="comment"> 字段名2 数据类型</span></span><br><span class="line"><span class="comment"> ）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">/*判断表是否存在和冲突*/</span></span><br><span class="line"> if <span class="keyword">exists</span> (<span class="keyword">select</span><span class="operator">*</span><span class="keyword">from</span> sys.objects <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;Department&#x27;</span> <span class="keyword">and</span> type <span class="operator">=</span> <span class="string">&#x27;U&#x27;</span>)</span><br><span class="line"> <span class="keyword">drop</span> <span class="keyword">table</span> Department</span><br><span class="line"> <span class="comment">--这个操作同样很危险，因为可能会删了表内重要的数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--建表（部门，职级，员工）</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> Department</span><br><span class="line">(</span><br><span class="line"><span class="comment">--部门编号 primary key:主键 唯一标识的一行 无法重复</span></span><br><span class="line"><span class="comment">--identity（1，1） 自动增长，初始值1。增长步长1。</span></span><br><span class="line">DepartmentId <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line"><span class="comment">--部门名称 不能为空值</span></span><br><span class="line">DepartmentName nvarchar(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">--部门描述</span></span><br><span class="line">DepartmentRemark text</span><br><span class="line">)</span><br><span class="line"><span class="comment">/*字符串</span></span><br><span class="line"><span class="comment">char:定长类型的字符串，char（10），无论存储的数据是否到10字节</span></span><br><span class="line"><span class="comment">都占用10字节的内存</span></span><br><span class="line"><span class="comment">char(10)存储&#x27;ab&#x27;,仍然占用10个字节</span></span><br><span class="line"><span class="comment">varchar：变长，varchar(10),最多占用10个字节</span></span><br><span class="line"><span class="comment">varchar(10)存储&#x27;ab&#x27;,占用2个字节</span></span><br><span class="line"><span class="comment">text:长文本 执行效率低</span></span><br><span class="line"><span class="comment">char varchar text 前面加n：加n是存储一个中文字符（2个中文字符），不加的是一个英文字符*/</span></span><br><span class="line"><span class="comment">--建表 职级</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> [Rank]<span class="comment">--rank是sql里面的关键字，所以要用[]括起来</span></span><br><span class="line">(</span><br><span class="line"><span class="comment">--职级编号</span></span><br><span class="line">RankId <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>),</span><br><span class="line"><span class="comment">--职级名称 不能为空值</span></span><br><span class="line">RankName nvarchar(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">--职级描述</span></span><br><span class="line">RankRemark text</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">--建员工表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> People</span><br><span class="line">(</span><br><span class="line">PeopleId <span class="type">int</span> <span class="keyword">primary</span> key <span class="keyword">identity</span>(<span class="number">1</span>,<span class="number">1</span>), <span class="comment">--员工编号</span></span><br><span class="line">PeopleName nvarchar(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">/*下面的性别需要添加一个约束，check就是约束的意思</span></span><br><span class="line"><span class="comment">通过约束限制输入的内容只能是男和女其中的一个</span></span><br><span class="line"><span class="comment">然后再注意一下default的格式，通过dafault自动填写*/</span></span><br><span class="line">PeopleSex nvarchar(<span class="number">1</span>) <span class="keyword">default</span>(<span class="string">&#x27;男&#x27;</span>) <span class="keyword">check</span> (PeopleSex <span class="operator">=</span> <span class="string">&#x27;男&#x27;</span><span class="keyword">or</span> PeopleSex <span class="operator">=</span> <span class="string">&#x27;女&#x27;</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">--上面的性别就算不加not null也会自动把性别写入</span></span><br><span class="line">PeopleBirth datetime <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">/*存储时间分为date 和date time比较常用</span></span><br><span class="line"><span class="comment">其中date只能存储年月日 date time还可以存储时分秒</span></span><br><span class="line"><span class="comment">注意在低版本的sqls里面没有date，所以如果用datetime</span></span><br><span class="line"><span class="comment">则在任何版本的sqls里面都可以正常使用</span></span><br><span class="line"><span class="comment">还有一个small datetime 只能表示最近一段时间*/</span></span><br><span class="line">PeoPleSalary <span class="type">decimal</span>(<span class="number">12</span>,<span class="number">2</span>) <span class="keyword">check</span>(PeoPleSalary <span class="operator">&gt;=</span> <span class="number">1000</span> <span class="keyword">and</span> PeoPleSalary <span class="operator">&lt;=</span> <span class="number">1000000</span>)<span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">/*同样加了一个约束</span></span><br><span class="line"><span class="comment">其中decimal是精确计算的小数，工资这类要精确计算的不使用decimal</span></span><br><span class="line"><span class="comment">decimal后面的数字的意思是计算到12位有效数字和2位小数*/</span></span><br><span class="line">PeoplePhone <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">unique</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">/*unique关键字表示唯一，在这里的意思就是两个手机号不能相同。*/</span></span><br><span class="line">PeopleAddress <span class="type">varchar</span>(<span class="number">300</span>),</span><br><span class="line">PeopleAddTime smalldatetime <span class="keyword">default</span>(getdate()),</span><br><span class="line"><span class="comment">/*入职时间，这里调用了getdate函数可以直接获取当前的时间*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--添加外键,引用外键：将其他表的主键作为自己的字段</span></span><br><span class="line"><span class="comment">--外键的作用 确保添加的每个值得都能在外面的表中找到，如果找不到就无法添加</span></span><br><span class="line">DepartmentId <span class="type">int</span> <span class="keyword">references</span> Department(DepartmentId)<span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line"><span class="comment">/*这里的语法</span></span><br><span class="line"><span class="comment">先设置DepartmentId int 和其他表的一样</span></span><br><span class="line"><span class="comment">然后通过reference 关键字连接到其他表</span></span><br><span class="line"><span class="comment">语法 reference 表名 （属性名）*/</span></span><br><span class="line">RankId <span class="type">int</span> <span class="keyword">references</span> [Rank](RankId)<span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="修改表的结构"><a href="#修改表的结构" class="headerlink" title="修改表的结构"></a>修改表的结构</h3><h2 id="关系模型"><a href="#关系模型" class="headerlink" title="关系模型"></a>关系模型</h2><h2 id="关系数据库规范化理论"><a href="#关系数据库规范化理论" class="headerlink" title="关系数据库规范化理论"></a><strong>关系数据库规范化理论</strong></h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><h3 id="主键"><a href="#主键" class="headerlink" title="主键"></a>主键</h3><p>就是表格中可以唯一标示一行的那个数据对应的那一列，每个表只能有一个个主键</p><p>假设有一个学生信息表：</p><div class="table-container"><table><thead><tr><th>学号 (StudentID)</th><th>姓名 (Name)</th></tr></thead><tbody><tr><td>1001</td><td>张三</td></tr><tr><td>1002</td><td>李四</td></tr></tbody></table></div><p>在这个表中，<strong>学号 (StudentID)</strong> 可以作为主键，因为它唯一标识每个学生，并且每个学号都是非空的。</p><h3 id="候选键"><a href="#候选键" class="headerlink" title="候选键"></a>候选键</h3><p>首先候选键有两个非常重要的属性，唯一性和最小性<br><strong>唯一性</strong><br>就是这个值可以标示出整一行的数据<br>就是说在那个函数关系中，知道候选键之后可以算出所有的属性<br><strong>最小性</strong><br>就是说候选键不可以是多个属性的组合，只能是最小不可分割的。<br>一个表可以有多个候选键还是以学生表为例：</p><div class="table-container"><table><thead><tr><th>学号 (StudentID)</th><th>姓名 (Name)</th><th>身份证号 (IDNumber)</th></tr></thead><tbody><tr><td>1001</td><td>张三</td><td>123456789012345</td></tr><tr><td>1002</td><td>李四</td><td>234567890123456</td></tr></tbody></table></div><ul><li><strong>学号 (StudentID)</strong> 和 <strong>身份证号 (IDNumber)</strong> 都是候选键，因为它们都能唯一标识每个学生，并且它们的值是最小的。<br><strong>姓名 (Name)</strong> 不是候选键，因为两个学生可能有相同的姓名。不满足唯一性。</li></ul><h3 id="函数依赖"><a href="#函数依赖" class="headerlink" title="函数依赖"></a>函数依赖</h3><h4 id="平凡函数依赖"><a href="#平凡函数依赖" class="headerlink" title="平凡函数依赖"></a>平凡函数依赖</h4><p>平凡函数依赖是指，对于一个关系 R<em>R</em> 和属性集 X<em>X</em> 和 Y<em>Y</em>，如果 Y<em>Y</em> 是 X<em>X</em> 的子集（即 Y⊆X<em>Y</em>⊆<em>X</em>），那么 X→Y<em>X</em>→<em>Y</em> 就是一个平凡函数依赖。<br><strong>说人话</strong></p><p>假设我们有一个表：</p><div class="table-container"><table><thead><tr><th>学号 (StudentID)</th><th>姓名 (Name)</th><th>年龄 (Age)</th></tr></thead><tbody><tr><td>1001</td><td>张三</td><td>20</td></tr><tr><td>1002</td><td>李四</td><td>21</td></tr></tbody></table></div><p>对于这个表，我们可以有如下平凡函数依赖：</p><ol><li><code>StudentID → StudentID</code>：显然，<code>StudentID</code> 总是能唯一确定它自己，这是平凡函数依赖。</li><li><code>Name → Name</code>：<code>Name</code> 总是能唯一确定它自己，这也是平凡函数依赖。</li></ol><p><strong>一句话解释</strong><br>自己推自己</p><h4 id="完全函数依赖（Full-Functional-Dependency）"><a href="#完全函数依赖（Full-Functional-Dependency）" class="headerlink" title="完全函数依赖（Full Functional Dependency）"></a><strong>完全函数依赖（Full Functional Dependency）</strong></h4><ul><li><p><strong>定义</strong>：如果属性集 X<em>X</em> 唯一确定了属性集 Y<em>Y</em>，并且没有任何多余的属性可以去掉仍然保持这种确定性，那么就称 Y<em>Y</em> 对 X<em>X</em> 是 <strong>全函数依赖</strong>。</p></li><li><p><strong>特性</strong>：</p><ul><li>在多属性键的情况下，<strong>全函数依赖</strong>表示所有依赖的属性都必须出现在决定属性的属性集 X<em>X</em> 中，否则不算全函数依赖。</li></ul></li><li><p><strong>举例</strong>： 假设有一个学生选课表：</p><p>| 学号 (StudentID) | 课程ID (CourseID) | 成绩 (Grade) |<br>| ———————— | ————————- | —————— |<br>| 1001             | 101               | A            |<br>| 1002             | 102               | B            |</p><p>假设 <code>&#123;StudentID, CourseID&#125;</code> 是这个表的主键，且 <code>Grade</code> 由 <code>StudentID</code> 和 <code>CourseID</code> 唯一确定。这种情况下，<code>Grade</code> 对 <code>&#123;StudentID, CourseID&#125;</code> 是全函数依赖，因为我们需要同时知道 <code>StudentID</code> 和 <code>CourseID</code> 才能确定 <code>Grade</code>。</p></li></ul><p><strong>说人话+一句话解释</strong></p><p>对于每一个Y有唯一的X确定Y，去掉任何一个X，Y的值就会缺失，有Y无法被推导出，这样的关系就是完全函数依赖</p><h4 id="部分函数依赖（Partial-Functional-Dependency）"><a href="#部分函数依赖（Partial-Functional-Dependency）" class="headerlink" title="部分函数依赖（Partial Functional Dependency）"></a><strong>部分函数依赖（Partial Functional Dependency）</strong></h4><ul><li><p><strong>定义</strong>：如果属性集 X 唯一确定了属性集 Y，但是 Y也可以通过 X 的某个 <strong>真子集</strong> 来唯一确定，那么 Y 对 X<em> 就是 <em>*部分函数依赖</em></em>。</p></li><li><p><strong>特性</strong>：</p><ul><li>在候选键（尤其是复合键）的情况下，如果某个属性仅依赖于复合键中的一部分属性而不是全部属性，则称为部分依赖。</li><li>部分依赖通常会导致数据冗余，通常在规范化过程中需要消除。</li></ul></li><li><p><strong>举例</strong>： 假设有一个表：</p><p>| 学号 (StudentID) | 课程ID (CourseID) | 教师 (Teacher) |<br>| ———————— | ————————- | ——————— |<br>| 1001             | 101               | 张老师         |<br>| 1002             | 102               | 李老师         |</p><p>这里，<code>&#123;StudentID, CourseID&#125;</code> 是主键，<code>Teacher</code> 只依赖于 <code>CourseID</code>（即教师与课程ID相关），而与 <code>StudentID</code> 无关。这表示 <code>Teacher</code> 对 <code>&#123;StudentID, CourseID&#125;</code> 存在部分函数依赖。</p></li></ul><p><strong>说人话</strong><br>抛物线，多个X对应同一Y 实际上只需要一半抛物线就可以确定整个Y的集合。</p><h4 id="传递函数依赖（Transitive-Functional-Dependency）"><a href="#传递函数依赖（Transitive-Functional-Dependency）" class="headerlink" title="传递函数依赖（Transitive Functional Dependency）"></a><strong>传递函数依赖（Transitive Functional Dependency）</strong></h4><ul><li><p><strong>定义</strong>：如果 A 唯一确定了B，且 <em>B</em> 唯一确定了 C<em>，那么就说 C</em> 对 <em>A</em> 存在 <strong>传递函数依赖</strong>，<br>即<em>A</em>→<em>C</em> 是传递的。</p></li><li><p><strong>特性</strong>：</p><ul><li>传递依赖不直接存在于数据表中的主键或候选键上，而是通过中介属性进行间接的确定。</li><li>传递依赖是数据库设计中需要避免的依赖之一，因为它可能导致冗余数据和更新异常。</li></ul></li><li><p><strong>举例</strong>： 假设有一个表：</p><p>| 学号 (StudentID) | 学院 (Department) | 学院电话 (DeptPhone) |<br>| ———————— | ————————- | —————————— |<br>| 1001             | 计算机学院        | 1234567890           |<br>| 1002             | 数学学院          | 0987654321           |</p><p>在这个例子中，假设 <code>StudentID</code> 唯一确定 <code>Department</code>（学生属于某个学院），<code>Department</code> 又唯一确定 <code>DeptPhone</code>（学院的电话）。因此，<code>DeptPhone</code> 对 <code>StudentID</code> 存在传递函数依赖，即 <code>StudentID → Department → DeptPhone</code>。</p></li></ul><p><strong>说人话</strong><br>A确定B，B确定C A对于C的关系就是传递函数依赖</p><h4 id="自反函数依赖（Trivial-Functional-Dependency）"><a href="#自反函数依赖（Trivial-Functional-Dependency）" class="headerlink" title="自反函数依赖（Trivial Functional Dependency）"></a><strong>自反函数依赖（Trivial Functional Dependency）</strong></h4><ul><li><p><strong>定义</strong>：如果一个属性集 X<em>X</em> 包含了属性集 Y<em>Y</em>（即 Y⊆X<em>Y</em>⊆<em>X</em>），那么 Y<em>Y</em> 对 X<em>X</em> 就是 <strong>自反函数依赖</strong>，这种依赖是显而易见的。</p></li><li><p><strong>特性</strong>：</p><ul><li>这是最简单的函数依赖类型，表示任何属性集都可以唯一确定它自己的子集。</li><li>自反依赖通常对规范化没有实质意义，因为它是显然成立的。</li></ul></li><li><p><strong>举例</strong>： 假设有一个表：</p><p>| 学号 (StudentID) | 姓名 (Name) |<br>| ———————— | —————- |<br>| 1001             | 张三        |<br>| 1002             | 李四        |</p><p>在这个例子中，<code>StudentID → StudentID</code> 是自反函数依赖，因为任何属性集都可以确定它自己。</p></li></ul><p><strong>说人话</strong></p><p>自己肯定可以确定自己 通过X的值确定X的值</p><h3 id="Armstrong-公理"><a href="#Armstrong-公理" class="headerlink" title="Armstrong**公理**"></a><strong>Armstrong**</strong>公理**</h3><p>A-&gt;BC,则A-&gt;B且 A-&gt;C<br>A-&gt;B且 A-&gt;C,则A-&gt;BC<br>A-&gt;B且 C-&gt;D成立,则AC-&gt;BD</p><h3 id="闭包（Closure）简介"><a href="#闭包（Closure）简介" class="headerlink" title="闭包（Closure）简介"></a>闭包（Closure）简介</h3><p>在函数依赖理论中，<strong>闭包</strong>是指给定一个属性集 X<em>X</em>，通过应用函数依赖集 F<em>F</em> 的所有规则，能够推导出的所有属性的集合。我们用 X+<em>X</em>+ 来表示属性集 X<em>X</em> 的闭包。换句话说，闭包是从 X<em>X</em> 开始，通过应用函数依赖集 F<em>F</em> 逐步推导出所有能够由 X<em>X</em> 确定的属性。<br>设有关系模式R(A,B,C,D,E)， F = {A→C,BC →E,D →C, E →A} 其中 ABCD这些是R的属性 F中欧的东西称为规则或者函数依赖。</p><h4 id="候选键-1"><a href="#候选键-1" class="headerlink" title="候选键"></a>候选键</h4><p>对于给定的关系模式<em>R</em>(<em>A</em>1…，<em>An</em>)和函数依赖集<em>F</em>，可将其属性分为以下四类：<br>L、R、LR、N</p><p>求候选键<br>1、L类属性<br>2、N类属性</p><ul><li><strong>主属性</strong>：关系模式中的主属性是属于候选键的属性，也就是说，它是参与候选键的属性。</li><li><strong>1NF (第一范式)</strong>：关系中的每个属性值都是原子值，没有重复组。题目中没有提到关于非原子值的内容，因此可以假设关系模式已经满足 1NF。</li><li><strong>2NF (第二范式)</strong>：如果一个关系模式满足 1NF，并且每个非主属性完全依赖于每一个候选键，那么它满足 2NF。由于题目中提到的是“属性全是主属性”，即不存在非主属性，因此自动满足 2NF。</li><li><strong>3NF (第三范式)</strong>：如果一个关系模式满足 2NF，并且每个非主属性不传递依赖于候选键，那么它满足 3NF。同样，由于没有非主属性，关系模式自动满足 3NF。</li><li><strong>BCNF (博茨-科得范式)</strong>：如果一个关系模式满足 3NF，并且每个决定因素（即对其他属性有决定作用的属性）都是候选键，那么它满足 BCNF。在题目中，如果所有属性都是主属性，则所有决定因素都是候选键，因此也满足 BCNF。</li></ul><p>组成候选码的属性称为主属性，不参加任何候选码的属性成为非主属性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">-- 检索所有书的书的编号、书名、类型、价格</span><br><span class="line">SELECT title_id, title, type, price FROM titles;</span><br><span class="line"></span><br><span class="line">-- 在titles表中检索所有书的编号、单价、打7折后的价格</span><br><span class="line">SELECT title_id, price, price * 0.7 AS discounted_price FROM titles;</span><br><span class="line"></span><br><span class="line">-- 在authors表中检索所有作者的编号、作者的姓名（firstname与lastname的组合）</span><br><span class="line">SELECT au_id, CONCAT(au_fname, &#x27; &#x27;, au_lname) AS full_name FROM authors;</span><br><span class="line"></span><br><span class="line">-- 查询作者来自哪些州</span><br><span class="line">SELECT DISTINCT state FROM authors;</span><br><span class="line"></span><br><span class="line">-- 查询作者来自哪些州、哪些城市</span><br><span class="line">SELECT DISTINCT state, city FROM authors;</span><br><span class="line"></span><br><span class="line">-- 查询前面6本书的所有信息</span><br><span class="line">SELECT * FROM titles LIMIT 6;</span><br><span class="line"></span><br><span class="line">-- 查询前10%的书的所有信息</span><br><span class="line">WITH TotalCount AS (</span><br><span class="line">    SELECT COUNT(*) AS Total FROM titles</span><br><span class="line">)</span><br><span class="line">SELECT TOP (SELECT Total * 0.1 FROM TotalCount) * </span><br><span class="line">FROM titles</span><br><span class="line">ORDER BY title_id;</span><br><span class="line">-- 查询前面10本书的编号和单价</span><br><span class="line">SELECT TOP 10 title_id, price FROM titles;</span><br><span class="line"></span><br><span class="line">-- 查询书的全部信息，按书的类型和价格升序排列</span><br><span class="line">SELECT * FROM titles ORDER BY type ASC, price ASC;</span><br><span class="line"></span><br><span class="line">-- 查询书的全部信息，按书的类型和价格降序排列</span><br><span class="line">SELECT * FROM titles ORDER BY type DESC, price DESC;</span><br><span class="line"></span><br><span class="line">-- 查询单价最高的10本书的信息</span><br><span class="line">SELECT * FROM titles ORDER BY price DESC LIMIT 10;</span><br><span class="line"></span><br><span class="line">-- 查询单价最高的5本书的信息（显示并列项）</span><br><span class="line">SELECT * FROM titles </span><br><span class="line">WHERE price = (SELECT DISTINCT price FROM titles ORDER BY price DESC LIMIT 5 OFFSET 4);</span><br><span class="line"></span><br><span class="line">-- 检索编号为’F-C16315M’的员工的编号、姓、名、雇佣日期</span><br><span class="line">SELECT emp_id, last_name, first_name, hire_date FROM employees WHERE emp_id = &#x27;F-C16315M&#x27;;</span><br><span class="line"></span><br><span class="line">-- 查询authors表中所有居住在UT州的作者姓名和电话。</span><br><span class="line">SELECT CONCAT(au_fname, &#x27; &#x27;, au_lname) AS full_name, phone </span><br><span class="line">FROM authors WHERE state = &#x27;UT&#x27;;</span><br><span class="line"></span><br><span class="line">-- 查询单价小于10的书的所有信息</span><br><span class="line">SELECT * FROM titles WHERE price &lt; 10;</span><br><span class="line"></span><br><span class="line">-- 查询类型为’business’的书的书名和单价</span><br><span class="line">SELECT title, price FROM titles WHERE type = &#x27;business&#x27;;</span><br><span class="line"></span><br><span class="line">-- 从表 titles 中，查找书名中包含字符串“computer”的书名。</span><br><span class="line">SELECT title FROM titles WHERE title LIKE &#x27;%computer%&#x27;;</span><br><span class="line"></span><br><span class="line">-- 从表 authors 中，查找au_fname以字符“D”打头的作者的姓、名。</span><br><span class="line">SELECT au_lname, au_fname FROM authors WHERE au_fname LIKE &#x27;D%&#x27;;</span><br><span class="line"></span><br><span class="line">-- 从表 authors 中，查找au_id类似于”72?-?”格式的作者的编号、姓、名、电话。</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone FROM authors WHERE au_id LIKE &#x27;72_-_&#x27;;</span><br><span class="line"></span><br><span class="line">-- 从表 authors 中，查找au_id的第2个数字是7的作者的编号、姓、名、电话。</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone FROM authors WHERE au_id LIKE &#x27;_7%&#x27;;</span><br><span class="line"></span><br><span class="line">-- 从表 authors 中，查找au_id只能是”723-?”、 ”724-?”、 ”725-?”格式 的作者的编号、姓、名、电话。</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone FROM authors WHERE au_id REGEXP &#x27;72[3-5]-..&#x27;;</span><br><span class="line"></span><br><span class="line">-- 从表 authors 中，查找au_id的第1个数字是5-9中的一个，第2个数字是1-4中的一个的作者的编号、姓、名、电话。</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone FROM authors WHERE au_id REGEXP &#x27;^[5-9][1-4].*&#x27;;</span><br><span class="line"></span><br><span class="line">-- 从表 authors 中，查找au_id的第1个数字不是5-9中的一个，第2个数字不是1-4中的一个的作者的编号、姓、名、电话。</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone FROM authors WHERE au_id NOT REGEXP &#x27;^[5-9][1-4].*&#x27;;</span><br><span class="line"></span><br><span class="line">-- 查找书名中含有“computer”，或书的编号以“B”打头的书，且价格低于15的书的信息。</span><br><span class="line">SELECT * FROM titles WHERE (title LIKE &#x27;%computer%&#x27; OR title_id LIKE &#x27;B%&#x27;) AND price &lt; 15;</span><br><span class="line"></span><br><span class="line">-- 从titles表中查询单价在15美元到20美元之间的书名和单价</span><br><span class="line">SELECT title, price FROM titles WHERE price BETWEEN 15 AND 20;</span><br><span class="line"></span><br><span class="line">-- 从表 authors 中搜索state位于‘CA’,‘KS’,‘MI’,‘IN’的作者姓名和所在州。</span><br><span class="line">SELECT CONCAT(au_fname, &#x27; &#x27;, au_lname) AS full_name, state </span><br><span class="line">FROM authors WHERE state IN (&#x27;CA&#x27;, &#x27;KS&#x27;, &#x27;MI&#x27;, &#x27;IN&#x27;);</span><br><span class="line"></span><br><span class="line">-- 查询表 titles 中还没有定价格的书名和价格。</span><br><span class="line">SELECT title, price FROM titles WHERE price IS NULL;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">检索编号为&#x27;F-C16315M&#x27;的员工的编号、姓、名、雇佣日期</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT emp_id, last_name, first_name, hire_date </span><br><span class="line">FROM employees </span><br><span class="line">WHERE emp_id = &#x27;F-C16315M&#x27;;</span><br><span class="line">查询authors表中所有居住在UT州的作者姓名和电话。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT CONCAT(au_fname, &#x27; &#x27;, au_lname) AS full_name, phone </span><br><span class="line">FROM authors </span><br><span class="line">WHERE state = &#x27;UT&#x27;;</span><br><span class="line">查询单价小于10的书的所有信息</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT * </span><br><span class="line">FROM titles </span><br><span class="line">WHERE price &lt; 10;</span><br><span class="line">查询类型为&#x27;business&#x27;的书的书名和单价</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT title, price </span><br><span class="line">FROM titles </span><br><span class="line">WHERE type = &#x27;business&#x27;;</span><br><span class="line">从表 titles 中，查找书名中包含字符串“computer”的书名。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT title </span><br><span class="line">FROM titles </span><br><span class="line">WHERE title LIKE &#x27;%computer%&#x27;;</span><br><span class="line">从表 authors 中，查找au_fname以字符“D”打头的作者的姓、名。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT au_lname, au_fname </span><br><span class="line">FROM authors </span><br><span class="line">WHERE au_fname LIKE &#x27;D%&#x27;;</span><br><span class="line">从表 authors 中，查找au_id类似于”72?-?”格式的作者的编号、姓、名、电话。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone </span><br><span class="line">FROM authors </span><br><span class="line">WHERE au_id LIKE &#x27;72__%&#x27;;</span><br><span class="line">从表 authors 中，查找au_id的第2个数字是7的作者的编号、姓、名、电话。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone </span><br><span class="line">FROM authors </span><br><span class="line">WHERE au_id LIKE &#x27;_7%&#x27;;</span><br><span class="line">从表 authors 中，查找au_id只能是”723-?”、 ”724-?”、 ”725-?”格式 的作者的编号、姓、名、电话。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone </span><br><span class="line">FROM authors </span><br><span class="line">WHERE au_id LIKE &#x27;723-%&#x27; OR au_id LIKE &#x27;724-%&#x27; OR au_id LIKE &#x27;725-%&#x27;;</span><br><span class="line">从表 authors 中，查找au_id的第1个数字是5-9中的一个，第2个数字是1-4中的一个的作者的编号、姓、名、电话。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone </span><br><span class="line">FROM authors </span><br><span class="line">WHERE au_id LIKE &#x27;[5-9][1-4]%&#x27;;</span><br><span class="line">从表 authors 中，查找au_id的第1个数字不是5-9中的一个，第2个数字不是1-4中的一个的作者的编号、姓、名、电话。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT au_id, au_lname, au_fname, phone </span><br><span class="line">FROM authors </span><br><span class="line">WHERE au_id NOT LIKE &#x27;[5-9][1-4]%&#x27;;</span><br><span class="line">查找书名中含有“computer”，或书的编号以“B”打头的书，且价格低于15的书的信息。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT * </span><br><span class="line">FROM titles </span><br><span class="line">WHERE (title LIKE &#x27;%computer%&#x27; OR title_id LIKE &#x27;B%&#x27;) </span><br><span class="line">  AND price &lt; 15;</span><br><span class="line">从titles表中查询单价在15美元到20美元之间的书名和单价</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT title, price </span><br><span class="line">FROM titles </span><br><span class="line">WHERE price BETWEEN 15 AND 20;</span><br><span class="line">从表 authors 中搜索state位于‘CA’,‘KS’,‘MI’,‘IN’的作者姓名和所在州。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT CONCAT(au_fname, &#x27; &#x27;, au_lname) AS full_name, state </span><br><span class="line">FROM authors </span><br><span class="line">WHERE state IN (&#x27;CA&#x27;, &#x27;KS&#x27;, &#x27;MI&#x27;, &#x27;IN&#x27;);</span><br><span class="line">查询表 titles 中还没有定价格的书名和价格。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT title, price </span><br><span class="line">FROM titles </span><br><span class="line">WHERE price IS NULL;</span><br><span class="line">自我练习部分（GradeManager数据库）</span><br><span class="line">查询班级表（Class）的全部内容</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT * </span><br><span class="line">FROM Class;</span><br><span class="line">在学生表Student中查询学生姓名、所在班级。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT student_name, class_id </span><br><span class="line">FROM Student;</span><br><span class="line">找出01311班女学生的个人信息</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT * </span><br><span class="line">FROM Student </span><br><span class="line">WHERE class_id = &#x27;01311&#x27; AND gender = &#x27;F&#x27;;</span><br><span class="line">找出所有被学生选修了的课程号</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT DISTINCT course_id </span><br><span class="line">FROM Enrollment;</span><br><span class="line">找出01311班和01312班的学生姓名、性别、出生年份</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT student_name, gender, birth_year </span><br><span class="line">FROM Student </span><br><span class="line">WHERE class_id IN (&#x27;01311&#x27;, &#x27;01312&#x27;);</span><br><span class="line">找出所有姓李的学生的个人信息。</span><br><span class="line"></span><br><span class="line">sql</span><br><span class="line">SELECT * </span><br><span class="line">FROM Student </span><br><span class="line">WHERE student_name LIKE &#x27;李%&#x27;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/4a17b156.html"/>
      <url>/posts/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p><a href="https://site.shupianjun.fun/">薯片の前端小窝</a></p><p>上面的蓝字是一个神奇的传送门，你可以试试看点击一下</p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>吉他自学成长记录</title>
      <link href="/posts/1564132a.html"/>
      <url>/posts/1564132a.html</url>
      
        <content type="html"><![CDATA[<h2 id="这里记录吉他自学生涯，按照时间线发布"><a href="#这里记录吉他自学生涯，按照时间线发布" class="headerlink" title="这里记录吉他自学生涯，按照时间线发布"></a>这里记录吉他自学生涯，按照时间线发布</h2><h2 id="《I-Really-want-to-stay-at-your-house》"><a href="#《I-Really-want-to-stay-at-your-house》" class="headerlink" title="《I Really want to stay at  your house》"></a>《I Really want to stay at  your house》</h2><p>又名寡妇歌</p><p>2023-02-10，看完边缘行者之后，辗转反侧，起身拿起吉他，在屋外录下了这一段</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1FG4y1M743/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《龙卷风》"><a href="#《龙卷风》" class="headerlink" title="《龙卷风》"></a>《龙卷风》</h2><p>原告：周杰伦<br>买早饭的时候看到了不错的风景，有感而发回去录的。<br>有一说一水杉路的锅贴真是一绝。</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1d94y1Y7Bz/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《一路向北-》"><a href="#《一路向北-》" class="headerlink" title="《一路向北 》"></a>《一路向北 》</h2><p>原告:周杰伦<br>不要问为什么不唱，我学吉他第一节课第一次弹唱第一次张嘴之后，老师就告诉我我生来就是干指弹的，干不了弹唱。</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1C94y1x7AT/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《Flower-Dance》"><a href="#《Flower-Dance》" class="headerlink" title="《Flower Dance》"></a>《Flower Dance》</h2><p>薯片吉他生涯前半生的集大成之作<br>第一段可能还只是感情的沉淀<br>第二段开始的变调直接变成了纯粹的秀技</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1tT4y1h7w4/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《sprial》"><a href="#《sprial》" class="headerlink" title="《sprial》"></a>《sprial》</h2><p>第一次尝试vlog形式，明白了vlog是整不好剪</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV1yzqVY5EcP/?vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div><h2 id="《花の塔》"><a href="#《花の塔》" class="headerlink" title="《花の塔》"></a>《花の塔》</h2><p>永远怀念穿蓝色雨衣的少女</p><div align="center" class="aspect-ratio">  <iframe    src="https://www.bilibili.com/video/BV18kD6YPE26/?spm_id_from=333.999.0.0&vd_source=fedbd253b57481c43d1a4fec58d380ac"    scrolling="no"    border="0"    frameborder="no"    framespacing="0"    high_quality="1"    danmaku="1"    allowfullscreen="true"  ></iframe></div>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"薯片菌のBlog","short_name":"薯片菌","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime/runtime.min.js"/>
      <url>/js/runtime/runtime.min.js</url>
      
        <content type="html"><![CDATA[var now = new Date();function createtime() {    var t = new Date("09/08/2024 00:00:00");    now.setTime(now.getTime() + 250);    var e = (now - t) / 1e3 / 60 / 60 / 24,        a = Math.floor(e),        n = (now - t) / 1e3 / 60 / 60 - 24 * a,        r = Math.floor(n);    1 == String(r).length && (r = "0" + r);    var s = (now - t) / 1e3 / 60 - 1440 * a - 60 * r,        i = Math.floor(s);    1 == String(i).length && (i = "0" + i);    var o = (now - t) / 1e3 - 86400 * a - 3600 * r - 60 * i,        l = Math.round(o);    1 == String(l).length && (l = "0" + l);    // 显示站点运行时间和附加句子    let g = `<span class='textTip'> <br> 本站已经平安运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i><br><br>    <span class='quote'>发挥才智，则锋芒毕露。凭借感情，则流于世俗。坚持己见，则多方掣肘。 总之，人世难居。—夏目漱石《草枕》</span>`;    document.getElementById("workboard") && (document.getElementById("workboard").innerHTML = g);}setInterval(() => { createtime(); }, 250);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/app966.css"/>
      <url>/css/app966.css</url>
      
        <content type="html"><![CDATA[/* 这里是设置一个全局透明度，不然不太协调，可以根据自己的喜好修改 */:root {    --card-bg: rgba(255, 255, 255, 0.3);}[data-theme='dark'] #web_bg {  background: url('https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/wp10775144-city-anime-night-sky-wallpapers.jpg');  background-size: cover;}/* 适配手机模式 */@media (max-width: 768px) {[data-theme='dark'] #web_bg {    background: url('https://spjblogimg-1329562662.cos.ap-shanghai.myqcloud.com/img/wp10775144-city-anime-night-sky-wallpapers.jpg');    background-size: cover;  }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;}div#menus {    font-family: "ZhuZiAYuanJWD";}h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;}a.article-title,a.blog-slider__title,a.categoryBar-list-link,h1.post-title {    font-family: ZhuZiAYuanJWD;}.iconfont {    font-family: "iconfont" !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;}/* 时间轴生肖icon */svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;}.icon-zhongbiao::before {    color: #f7c768;}/* bilibli番剧插件 */#article-container .bangumi-tab.bangumi-active {    background: var(--anzhiyu-theme);    color: var(--anzhiyu-ahoverbg);    border-radius: 10px;}a.bangumi-tab:hover {    text-decoration: none !important;}.bangumi-button:hover {    background: var(--anzhiyu-theme) !important;    border-radius: 10px !important;    color: var(--anzhiyu-ahoverbg) !important;}a.bangumi-button.bangumi-nextpage:hover {    text-decoration: none !important;}.bangumi-button {    padding: 5px 10px !important;}a.bangumi-tab {    padding: 5px 10px !important;}svg.icon.faa-tada {    font-size: 1.1em;}.bangumi-info-item {    border-right: 1px solid #f2b94b;}.bangumi-info-item span {    color: #f2b94b;}.bangumi-info-item em {    color: #f2b94b;}/* 解决artitalk的图标问题 */#uploadSource>svg {    width: 1.19em;    height: 1.5em;}/*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */#page-header:not(.not-top-img):before {    background-color: transparent !important;}/* 首页文章卡片 */#recent-posts>.recent-post-item {    background: rgba(255, 255, 255, 0.9);}/* 首页侧栏卡片 */#aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);}/* 文章页面正文背景 */div#post {    background: rgba(255, 255, 255, 0.9);}/* 分页页面 */div#page {    background: rgba(255, 255, 255, 0.9);}/* 归档页面 */div#archive {    background: rgba(255, 255, 255, 0.9);}/* 标签页面 */div#tag {    background: rgba(255, 255, 255, 0.9);}/* 分类页面 */div#category {    background: rgba(255, 255, 255, 0.9);}/*夜间模式伪类遮罩层透明*/[data-theme="dark"] #recent-posts>.recent-post-item {    background: #121212;}[data-theme="dark"] .card-widget {    background: #121212 !important;}[data-theme="dark"] div#post {    background: #121212 !important;}[data-theme="dark"] div#tag {    background: #121212 !important;}[data-theme="dark"] div#archive {    background: #121212 !important;}[data-theme="dark"] div#page {    background: #121212 !important;}[data-theme="dark"] div#category {    background: #121212 !important;}[data-theme="dark"] div#category {    background: transparent !important;}/* 页脚透明 */#footer {    background: transparent !important;}/* 头图透明 */#page-header {    background: transparent !important;}#rightside>div>button {    border-radius: 5px;}/* 滚动条 */::-webkit-scrollbar {    width: 10px;    height: 10px;}::-webkit-scrollbar-thumb {    background-color: #3b70fc;    border-radius: 2em;}::-webkit-scrollbar-corner {    background-color: transparent;}::-moz-selection {    color: #fff;    background-color: #3b70fc;}/* 音乐播放器 *//* .aplayer .aplayer-lrc {    display: none !important;  } */.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /* 鼠标悬停是左侧缩进归零，完全显示按钮 */}.aplayer.aplayer-fixed {    z-index: 999999 !important;}/* 评论框  */.vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;}/* 设置评论框 */.vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;}/* md网站下划线 */#article-container a:hover {    text-decoration: none !important;}#article-container #hpp_talk p img {    display: inline;}/* 404页面 */#error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);}#error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;}#error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #3b70fc;    background-position: center;    background-size: cover;}#error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;}#error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;}#error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;}#error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);}#body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;}#body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;}#body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;}#body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;}#body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--anzhiyu-card-bg);    display: flex;}#body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;}#body-wrap.error .aside-list .aside-list-item .content time {    display: none;}/* 代码框主题 */#article-container figure.highlight {    border-radius: 10px;}/*B站视频适配*//*哔哩哔哩视频适配*/.aspect-ratio {    position: relative;    width: 100%;    height: 0;    padding-bottom: 75%;    margin: 3% auto;    text-align: center;  }  .aspect-ratio iframe {    position: absolute;    width: 100%;    height: 100%;    left: 0;    top: 0;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/title.js"/>
      <url>/js/title.js</url>
      
        <content type="html"><![CDATA[//动态标题var OriginTitile = document.title;var titleTime;document.addEventListener("visibilitychange", function () {  if (document.hidden) {    //离开当前页面时标签显示内容    document.title = "w(ﾟДﾟ)w 不要走！再看看嘛！";    clearTimeout(titleTime);  } else {    //返回当前页面时标签显示内容    document.title = "♪(^∇^*)欢迎肥来❤️！" + OriginTitile;    //两秒后变回正常标题    titleTime = setTimeout(function () {      document.title = OriginTitile;    }, 2000);  }});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/ali_font.js"/>
      <url>/js/ali_font.js</url>
      
        <content type="html"><![CDATA[!(function (c) {    var l,        h,        a,        t,        i,        v =            '<svg><symbol id="icon-dragon_chen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-498.122105 265.620211L431.157895 754.526316V485.052632h-66.074948c-14.470737 110.645895-44.355368 197.066105-102.696421 260.742736l-39.747368-36.432842C306.526316 617.876211 323.368421 462.901895 323.368421 242.526316V215.578947h377.263158v53.894737H377.182316c-0.404211 58.260211-2.209684 112.128-6.359579 161.684211H700.631579v53.894737h-122.152421a481.172211 481.172211 0 0 0 76.826947 119.70021l66.479158-39.855158 27.728842 46.214737-54.460631 32.687158c29.507368 24.953263 63.757474 45.675789 102.80421 58.098526l-16.303158 51.361684c-134.224842-42.711579-222.773895-167.073684-261.551158-268.207157H485.052632v221.857684l68.985263-41.391158 27.728842 46.214737-109.783579 65.886316zM646.736842 377.263158h-215.578947v-53.894737h215.578947v53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-dog_xu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-375.592421 150.393263c33.684211 44.544 75.210105 74.698105 124.739369 90.812632l11.425684 3.718737 10.401684-6.009264C781.204211 727.740632 808.421053 622.565053 808.421053 592.842105h-53.894737c0 22.069895-19.132632 80.869053-33.711158 103.504842-34.816-14.605474-64.538947-39.262316-89.249684-74.13221 48.316632-55.269053 92.079158-117.328842 120.535579-179.900632l-49.044211-22.285473c-23.767579 52.250947-59.742316 104.717474-100.055579 152.656842-24.010105-50.930526-41.148632-115.927579-51.658105-195.395369H700.631579v-53.894737h-155.189895A1848.050526 1848.050526 0 0 1 538.947368 161.684211h-53.894736c0 58.206316 2.155789 112.074105 6.494315 161.68421H323.368421v26.947368c0 216.549053-13.177263 263.545263-100.702316 359.046737l39.747369 36.432842c63.326316-69.093053 92.806737-118.272 105.714526-206.848H485.052632v-53.894736h-111.319579a1742.147368 1742.147368 0 0 0 3.449263-107.789474h120.158316c12.611368 98.250105 35.031579 177.475368 67.395368 238.187789-61.978947 65.536-128.053895 117.975579-173.298526 142.282106l25.519158 47.481263c47.589053-25.573053 114.095158-77.446737 177.55621-142.821053z m125.170526-411.971368l-80.842105-80.842106-38.103579 38.103579 80.842105 80.842106 38.103579-38.103579z" fill="#231F20" ></path></symbol><symbol id="icon-dog" viewBox="0 0 1024 1024"><path d="M894.814316 904.434526l83.240421-183.134315-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939369-185.263158-0.134737-7.922526-0.134737-33.953684-0.134736-55.996631-30.693053 15.306105-70.090105 19.887158-106.09179 19.887157-92.752842 0-163.624421-23.983158-210.647579-71.275789a192.512 192.512 0 0 1-27.944421-36.513684H377.263158v377.263158c342.662737 0 403.105684 51.092211 494.592 128.377263 7.922526 6.682947 15.521684 13.312 22.959158 19.86021z" fill="#85C3DE" ></path><path d="M326.063158 282.947368c0 34.250105-13.231158 44.463158-29.642105 44.463158s-29.642105-10.213053-29.642106-44.463158c0-34.223158 13.231158-44.463158 29.642106-44.463157s29.642105 10.24 29.642105 44.463157zM269.473684 430.295579v311.646316L190.275368 916.210526h59.203369L323.368421 753.637053V377.263158h-26.947368c-119.403789 0-172.732632-53.382737-185.505685-107.789474h35.624421c51.092211 0 68.581053-15.764211 120.535579-62.544842 12.773053-11.506526 28.079158-25.276632 47.023158-41.741474l18.351158-15.952842-69.658947-99.139368-44.085895 30.989474 41.768421 59.472842c-11.183158 9.862737-20.884211 18.593684-29.480421 26.327579C180.736 212.156632 176.235789 215.578947 146.539789 215.578947H53.894737v26.947369c0 88.710737 66.910316 178.149053 215.578947 187.769263z m216.710737-161.414737c2.290526 71.733895 28.698947 136.326737 75.048421 182.918737C618.711579 509.628632 702.437053 538.947368 810.091789 538.947368c18.593684 0 36.190316-1.158737 52.628211-3.449263 3.745684 111.265684 33.630316 170.334316 51.496421 196.015158l-38.507789 84.722526C782.174316 742.049684 688.774737 700.631579 377.263158 700.631579v53.894737c34.277053 0 65.697684 0.512 94.639158 1.509052L374.595368 970.105263h59.203369l96.013474-211.240421c66.182737 4.338526 117.005474 11.829895 157.911578 22.016L626.229895 916.210526h59.176421l54.16421-119.134315c47.616 18.405053 79.737263 42.091789 113.125053 69.739789L805.753263 970.105263h59.203369l113.071157-248.778105-13.824-13.204211c-0.485053-0.458105-45.648842-47.589053-47.939368-185.263158C985.168842 498.553263 1024 447.811368 1024 377.263158c0-95.205053-66.506105-161.684211-161.684211-161.684211v53.894737c65.482105 0 107.789474 42.307368 107.789474 107.789474 0 89.088-87.013053 107.789474-160.013474 107.789474-92.752842 0-163.624421-23.983158-210.647578-71.27579-30.315789-30.504421-45.891368-65.832421-53.35579-98.735158 11.210105 6.952421 22.932211 13.338947 35.274105 19.186527l23.04-48.720843c-92.106105-43.654737-148.992-128.646737-219.243789-243.981473l-46.026105 28.05221c49.448421 81.246316 92.968421 148.506947 147.051789 199.302737z" fill="#231F20" ></path></symbol><symbol id="icon-goat" viewBox="0 0 1024 1024"><path d="M548.378947 646.736842a952.32 952.32 0 0 1 140.90779-161.68421H107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L66.721684 754.526316h417.172211c20.345263-41.472 43.654737-77.446737 64.485052-107.789474z" fill="#F7C768" ></path><path d="M608.256 144.734316C555.762526 115.577263 506.098526 107.789474 485.052632 107.789474V53.894737c32.579368 0 91.270737 11.452632 149.369263 43.735579 75.290947 41.822316 130.694737 94.531368 171.385263 150.878316C755.873684 288.013474 697.101474 323.368421 646.736842 323.368421h-107.789474v-53.894737h107.789474c20.506947 0 48.424421-11.210105 80.437895-31.285895a471.04 471.04 0 0 0-118.918737-93.453473zM832.673684 342.231579c-16.384 0-29.642105 10.24-29.642105 44.463158 0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642105-44.463158c0-34.223158-13.231158-44.463158-29.642105-44.463158zM1024 619.789474C1024 347.109053 901.066105 122.448842 686.753684 3.395368l-26.165895 47.104C914.324211 191.461053 964.688842 440.400842 969.647158 592.842105h-84.506947c-17.92-35.624421-45.352421-69.12-87.013053-101.995789l-16.788211-13.285053-16.734315 13.392842c-66.128842 52.897684-134.629053 127.083789-187.311158 209.677474H102.965895l-8.272842-20.318316C159.043368 617.013895 161.684211 603.109053 161.684211 485.052632v-53.894737h485.052631v-53.894737H161.684211c0-80.384 14.309053-110.026105 66.586947-137.916632l-25.384421-47.535158C123.365053 234.226526 107.789474 291.920842 107.789474 377.263158v107.789474c0 107.600842 0 107.600842-63.649685 169.283368l-13.069473 12.665263L110.618947 862.315789h58.206316l-43.897263-107.789473h103.477895l43.897263 107.789473h58.206316l-43.897263-107.789473h259.47621C508.981895 824.939789 485.052632 899.152842 485.052632 970.105263h53.894736c0-68.688842 27.270737-144.060632 68.958316-215.578947H687.157895c7.410526 0 13.473684 6.063158 13.473684 13.473684V862.315789h53.894737v-94.315789c0-37.160421-30.208-67.368421-67.368421-67.368421h-44.65179c40.771368-58.017684 89.438316-111.427368 138.913684-153.626947C841.512421 600.037053 862.315789 655.225263 862.315789 754.526316h53.894737c0-38.912-2.748632-74.482526-11.102315-107.789474H1024v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-goat_wei" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 50.202947c52.304842 70.925474 136.973474 152.144842 232.528843 190.383158l19.994947-50.041263c-109.271579-43.708632-202.805895-152.629895-238.780632-217.49221H808.421053v-53.894737H538.947368v-53.894737h215.578948v-53.894737h-215.578948V161.684211h-53.894736v161.68421h-215.578948v53.894737h215.578948v53.894737H215.578947v53.894737h255.757474c-35.974737 64.862316-129.536 173.783579-238.807579 217.49221l20.021895 50.041263c95.528421-38.238316 180.197053-119.484632 232.501895-190.383158V808.421053h53.894736v-246.218106z" fill="#231F20" ></path></symbol><symbol id="icon-dragon" viewBox="0 0 1024 1024"><path d="M366.376421 344.441263l152.980211-152.98021c43.142737-43.142737 141.204211-9.216 270.201263 115.738947-15.225263 9.835789-25.114947 15.818105-44.13979 32.256s-38.076632 35.489684-59.418947 56.832c-4.203789 4.203789-51.173053 53.221053-78.740211 82.027789-10.805895-12.126316-22.743579-24.171789-34.654315-36.082526L493.136842 362.792421l-54.218105 54.218105-72.542316-72.569263zM862.315789 512c0 46.834526-45.352421 80.842105-107.789473 80.842105-108.948211 0-189.359158-28.806737-267.129263-56.697263C414.100211 509.871158 344.872421 485.052632 258.182737 485.052632 80.788211 485.052632 0 588.126316 0 683.897263h53.894737C73.216 659.779368 135.302737 646.736842 177.340632 646.736842c77.338947 0 223.124211 23.282526 291.893894 47.912421C547.462737 722.701474 615.989895 754.526316 734.315789 754.526316 862.315789 754.526316 916.210526 670.315789 916.210526 512h-53.894737z" fill="#FF8787" ></path><path d="M552.421053 1024c-69.766737 0-113.825684-13.958737-156.402527-27.459368-54.487579-17.273263-110.807579-35.004632-232.421052-26.516211l-3.826527-53.733053c131.718737-9.458526 195.934316 10.967579 252.52379 28.887579 42.226526 13.365895 78.686316 24.926316 140.126316 24.926316 92.752842 0 148.210526-57.936842 148.210526-113.960421 0-16.949895-5.524211-101.618526-114.634105-101.618526-64.970105 0-112.747789 23.336421-163.328 48.02021C365.325474 830.571789 300.301474 862.315789 204.288 862.315789 85.908211 862.315789 0 787.294316 0 683.897263 0 588.126316 80.788211 485.052632 258.182737 485.052632c86.689684 0 155.917474 24.818526 229.214316 51.09221 45.810526 16.410947 92.564211 33.172211 145.488842 44.166737 9.000421-7.033263 13.850947-16.276211 13.850947-26.758737 0-37.187368-37.672421-74.859789-74.13221-111.265684l-3.287579-3.287579 38.103579-38.103579 3.260631 3.287579C652.853895 446.275368 700.631579 494.026105 700.631579 553.552842c0 12.719158-2.802526 24.926316-7.976421 36.109474A594.997895 594.997895 0 0 0 754.526316 592.842105c62.437053 0 107.789474-34.007579 107.789473-80.842105 0-58.853053-52.870737-110.268632-108.840421-164.702316l-8.057263-7.841684c-19.024842 16.437895-38.076632 35.489684-59.418947 56.832l-38.103579-38.103579c74.805895-74.832842 134.898526-134.898526 268.314947-141.931789V55.619368c-63.407158 7.787789-120.993684 39.424-121.667368 39.801264l-15.818105 8.811789-14.120421-11.344842C731.701895 66.452211 709.712842 53.894737 673.684211 53.894737c-41.418105 0-74.347789 25.869474-109.190737 53.301895-26.624 20.911158-54.137263 42.549895-86.851369 53.194105L469.342316 161.684211h-69.093053l-105.525895 105.525894-38.103579-38.130526L324.015158 161.684211H161.684211V107.789474h303.104c22.231579-8.272842 43.708632-25.168842 66.398315-42.981053C569.829053 34.438737 613.618526 0 673.684211 0c48.909474 0 81.408 17.946947 110.888421 40.097684C813.702737 26.300632 877.729684 0 943.157895 0h26.947368v323.368421h-53.894737v-53.167158c-54.164211 3.098947-92.914526 15.845053-127.002947 36.675369l1.832421 1.778526C852.587789 368.505263 916.210526 430.376421 916.210526 512c0 60.928-43.708632 109.945263-107.789473 127.622737V700.631579h53.894736v-53.894737h53.894737v53.894737h53.894737v53.894737h-53.894737v53.894737h-53.894737v-53.894737h-53.894736c-29.722947 0-53.894737-24.171789-53.894737-53.894737v-53.894737c-118.325895 0-207.063579-31.797895-285.318737-59.877053C400.437895 562.229895 335.494737 538.947368 258.182737 538.947368 117.059368 538.947368 53.894737 611.732211 53.894737 683.897263 53.894737 757.221053 115.738947 808.421053 204.288 808.421053c11.910737 0 23.228632-0.538947 34.034526-1.536C248.454737 796.321684 269.473684 770.640842 269.473684 739.166316c0-33.118316-43.088842-70.979368-58.152421-81.596632l30.935579-44.139789c8.299789 5.793684 81.111579 58.664421 81.111579 125.736421 0 19.429053-4.527158 37.052632-10.994526 52.304842 30.773895-10.051368 58.314105-23.498105 86.662737-37.349053C452.877474 727.848421 508.577684 700.631579 585.997474 700.631579 702.410105 700.631579 754.526316 778.725053 754.526316 856.144842 754.526316 938.657684 678.912 1024 552.421053 1024z m-21.180632-623.104L493.136842 362.792421l137.889684-137.889684 38.103579 38.103579-137.889684 137.889684z m-126.760421-18.351158l-38.103579-38.103579 152.980211-152.98021 38.103579 38.103579-152.980211 152.98021z m282.004211-218.624c15.494737-9.754947 43.331368-31.447579 43.331368-31.447579-25.734737-27.809684-49.556211-33.333895-67.368421-29.07621-19.240421 4.608-37.753263 24.602947-37.753263 24.602947s42.253474 22.447158 61.790316 35.920842z" fill="#231F20" ></path></symbol><symbol id="icon-horse" viewBox="0 0 1024 1024"><path d="M776.003368 646.736842c16.599579-99.947789 43.439158-181.086316 83.213474-256.538947l6.817684-12.934737H269.473684c-36.756211 0-53.894737 54.945684-53.894737 92.05221 0 46.753684 6.656 77.527579 70.278737 176.074106l84.533895 128.269473L498.876632 646.736842h277.126736z" fill="#FFAF6E" ></path><path d="M1024 0v404.210526c0 33.333895 0 134.736842-92.079158 134.736842h-13.824l-78.362947-109.056c-22.743579 49.906526-40.340211 103.046737-53.490527 162.950737h115.092211C937.310316 592.842105 970.105263 625.637053 970.105263 661.638737c0 60.631579-69.389474 154.300632-77.312 164.75621l-43.008-32.471579C875.466105 759.861895 916.210526 693.813895 916.210526 661.638737c0-5.982316-8.919579-14.901895-14.901894-14.901895h-125.332211C761.128421 736.121263 754.526316 840.569263 754.526316 970.105263h-53.894737c0-283.971368 31.097263-453.605053 110.888421-605.049263l20.318316-38.534737 112.801684 156.995369c14.443789-4.419368 25.465263-20.938105 25.465263-79.306106V0h53.894737z m-161.684211 161.684211h53.894737V0h-53.894737v80.842105c-17.381053-14.955789-38.184421-26.947368-80.842105-26.947368h-134.736842v53.894737h134.736842c37.672421 0 80.842105 40.906105 80.842105 53.894737z m-107.789473 0h-215.578948v53.894736h161.684211l53.894737-53.894736zM300.894316 766.544842L400.680421 916.210526h64.754526l-95.043368-142.551579L498.876632 646.736842h167.855157a1212.631579 1212.631579 0 0 1 9.431579-53.894737h-199.383579l-175.885473 173.702737z m109.97221-184.400842l-37.861052-38.319158-132.419369 130.802526C173.729684 571.095579 161.684211 529.812211 161.684211 469.315368 161.684211 398.578526 199.464421 323.368421 269.473684 323.368421h323.368421l53.894737-53.894737H269.473684c-6.709895 0-13.258105 0.565895-19.698526 1.482105C234.927158 249.451789 204.638316 215.578947 160.633263 215.578947 65.967158 215.578947 0 349.291789 0 469.315368c0 70.170947 16.141474 136.650105 49.232842 202.671158L6.197895 723.833263l41.472 34.41179 66.128842-79.737264-8.704-16.033684C83.105684 622.133895 53.894737 558.214737 53.894737 469.315368 53.894737 368.451368 106.765474 269.473684 160.633263 269.473684c13.231158 0 25.815579 9.889684 35.43579 20.533895C142.874947 321.967158 107.789474 388.500211 107.789474 469.315368c0 78.201263 19.698526 130.937263 93.642105 243.981474l-55.296 54.622316L280.899368 970.105263h64.754527l-130.048-195.072 195.260631-192.889263z" fill="#231F20" ></path></symbol><symbol id="icon-monkey_shen" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 134.736842h161.684211v53.894737h53.894737V269.473684h-215.578948V161.684211h-53.894736v107.789473h-215.578948v431.157895h53.894737v-53.894737h161.684211v215.578947h53.894736v-215.578947z m0-161.68421h161.684211v107.789473h-161.684211v-107.789473z m-215.578947 0h161.684211v107.789473h-161.684211v-107.789473z m215.578947-161.684211h161.684211v107.789474h-161.684211v-107.789474z m-215.578947 0h161.684211v107.789474h-161.684211v-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-ox_chou" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#D6B196" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-161.68421 188.631579h-159.555369c13.985684-172.813474 43.115789-357.429895 70.817684-385.158737L700.631579 269.473684H323.368421v53.894737h107.169684c-1.940211 45.756632-8.192 103.962947-15.76421 161.684211H323.368421v53.894736h83.968c-9.862737 68.446316-20.264421 130.128842-25.734737 161.684211H215.578947v53.894737h592.842106v-53.894737z m-346.543158-161.684211h149.800421a3313.717895 3313.717895 0 0 0-16.842105 161.684211h-158.477474c6.036211-35.247158 16.114526-95.636211 25.519158-161.684211z m22.608842-215.578947h171.735579c-15.198316 41.121684-27.405474 100.594526-36.890948 161.684211h-150.123789c7.383579-57.505684 13.419789-115.361684 15.279158-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-monkey" viewBox="0 0 1024 1024"><path d="M757.733053 485.052632H565.894737a80.842105 80.842105 0 0 0-80.842105 80.842105v215.578947c0 40.96 43.546947 99.678316 77.446736 139.210105C596.426105 960.215579 603.055158 970.105263 603.055158 970.105263H754.526316s15.144421-18.674526 45.891368-58.071579S862.315789 809.984 862.315789 717.608421c0-89.573053-47.993263-166.346105-104.582736-232.555789z" fill="#C3D686" ></path><path d="M538.947368 1024h-53.894736c0-32.794947 25.869474-87.417263 77.446736-103.316211C528.599579 881.152 485.052632 822.433684 485.052632 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h80.842105v53.894737h-80.842105a26.947368 26.947368 0 0 0-26.947369 26.947368c0 19.725474 36.675368 77.473684 92.133053 134.736842h88.602947c20.210526-14.147368 88.737684-71.464421 88.737685-198.602105 0-108.382316-93.237895-202.967579-168.151579-278.986105-49.502316-50.202947-88.576-89.842526-98.735158-128.61979-11.749053-44.732632-21.584842-112.586105-26.327579-148.318315H377.263158c-45.136842 0-89.519158 8.434526-121.802105 53.894736H431.157895v53.894737c-97.28 0-107.789474 113.071158-107.789474 161.684211v53.894737h53.894737v161.68421h-53.894737v-107.789474h-26.947368c-170.253474 0-188.631579-94.234947-188.631579-134.736842 0-31.043368 35.220211-72.326737 55.727158-93.722947 2.694737-14.686316 5.847579-28.348632 9.431579-41.013895H161.684211V215.578947h31.528421C239.642947 120.993684 317.224421 107.789474 377.263158 107.789474h185.640421l2.802526 23.794526c0.134737 1.050947 12.719158 106.657684 27.944421 164.756211 6.494316 24.872421 44.624842 63.514947 84.965053 104.448C760.481684 483.813053 862.315789 587.129263 862.315789 717.608421c0 92.375579-31.124211 155.028211-61.898105 194.425263C904.919579 892.146526 970.105263 803.004632 970.105263 673.684211c0-91.405474-42.819368-154.381474-84.237474-215.255579C847.791158 402.458947 808.421053 344.576 808.421053 269.473684c0-119.349895 87.093895-161.684211 161.68421-161.68421v53.894737c-32.417684 0-107.789474 10.509474-107.789474 107.789473 0 58.502737 31.555368 104.933053 68.096 158.639158C974.282105 492.597895 1024 565.679158 1024 673.684211c0 177.286737-108.301474 296.421053-269.473684 296.421052h-161.684211c-37.672421 0-53.894737 40.906105-53.894737 53.894737zM229.214316 269.473684a384.808421 384.808421 0 0 0-14.012632 58.341053l-1.401263 8.488421-6.090105 6.117053c-22.878316 22.932211-44.813474 52.601263-46.026105 62.275368 0 56.805053 53.76 75.264 107.789473 79.386947V431.157895c0-58.691368 13.473684-119.619368 46.511158-161.684211h-86.770526zM323.368421 1024h-53.894737c0-32.794947 25.869474-87.417263 77.446737-103.316211C313.020632 881.152 269.473684 822.433684 269.473684 781.473684c0-44.570947 36.271158-80.842105 80.842105-80.842105h45.16379A188.847158 188.847158 0 0 1 565.894737 592.842105h134.736842v53.894737h-134.736842c-74.293895 0-134.736842 60.442947-134.736842 134.736842v26.516211l-53.894737 0.377263V781.473684c0-9.162105 0.646737-18.135579 1.913263-26.947368H350.315789c-14.848 0-26.947368 12.072421-26.947368 26.947368 0 19.725474 36.675368 77.473684 92.133053 134.736842H431.157895v53.894737h-53.894737c-37.672421 0-53.894737 40.906105-53.894737 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-horse_wu" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 26.947368h269.473685v-53.894736H538.947368v-161.684211h161.684211v-53.894737H411.001263c12.045474-33.28 20.156632-69.793684 20.156632-107.789473h-53.894737c0 121.963789-105.364211 233.391158-106.415158 234.496l38.858105 37.349052c2.883368-3.018105 43.816421-46.133895 77.392842-110.160842H485.052632v161.684211H215.578947v53.894736h269.473685v323.368421h53.894736V538.947368z" fill="#231F20" ></path></symbol><symbol id="icon-ox" viewBox="0 0 1025 1024"><path d="M540.294737 754.526316h215.578947c20.210526 0 35.112421 1.374316 53.894737 4.581052 91.863579 15.656421 145.354105 67.691789 161.684211 86.069895V916.210526h53.894736V635.580632l-7.895579-7.895579c-9.269895-9.269895-36.513684-49.232842-44.032-196.527158H540.294737a161.684211 161.684211 0 0 0-161.684211 161.68421v131.098948c43.304421 20.210526 97.28 30.585263 161.684211 30.585263z" fill="#FFAF6E" ></path><path d="M1025.347368 635.580632V916.210526h-53.894736v-71.033263c-16.330105-18.405053-69.820632-70.413474-161.684211-86.069895V916.210526h-53.894737v-161.68421h-107.789473v215.578947h-53.894737V700.631579h161.68421c100.998737 0 172.570947 38.669474 215.578948 71.868632v-115.738948c-33.684211-43.627789-51.712-137.458526-53.706106-279.498105H701.978947c-76.934737 0-127.218526-26.219789-175.804631-51.550316a1556.048842 1556.048842 0 0 0-26.839579-13.743158c-26.839579 26.004211-66.209684 44.921263-115.738948 55.511579 24.441263 22.986105 60.874105 52.116211 106.469053 72.838737l-22.312421 49.044211c-76.584421-34.816-129.589895-88.926316-150.824421-113.125053-10.644211 0.619789-21.477053 1.024-32.687158 1.024a473.734737 473.734737 0 0 1-123.365053-15.952842l-93.022315 186.314105 68.581052 53.86779C167.882105 579.557053 237.891368 538.947368 324.715789 538.947368v53.894737c-95.986526 0-170.361263 62.490947-171.088842 63.137684l-16.78821 14.282106-136.838737-107.358316 109.729684-219.809684C46.430316 314.448842 1.347368 267.371789 1.347368 199.868632 1.347368 89.815579 121.586526 53.894737 163.031579 53.894737v53.894737c-14.120421 0-107.789474 17.165474-107.789474 92.079158C55.242105 290.465684 192.188632 323.368421 284.240842 323.368421c67.907368 0 122.421895-12.988632 157.696-35.624421-42.711579-14.336-95.097263-23.120842-169.337263-18.324211l-3.503158-53.786947c95.878737-6.117053 160.148211 8.515368 211.429053 28.833684C484.244211 235.439158 486.4 225.818947 486.4 215.578947c0-48.855579-57.829053-76.288-58.394947-76.557473l22.393263-49.017263C454.063158 91.648 540.294737 131.826526 540.294737 215.578947c0 18.566737-3.422316 35.84-9.997474 51.631158 7.060211 3.584 13.985684 7.168 20.776421 10.698106C597.854316 302.322526 638.248421 323.368421 701.978947 323.368421h269.473685v26.947368c0 214.689684 35.220211 266.590316 45.999157 277.369264l7.895579 7.895579z m-729.384421 25.141894l-98.789052 118.541474 86.797473 137.835789 45.594948-28.725894-65.913263-104.690527 37.052631-44.43621C358.642526 785.192421 439.080421 808.421053 540.294737 808.421053v-53.894737c-99.893895 0-175.077053-24.549053-223.474526-72.946527l-20.857264-20.857263z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit_mao" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-377.263158-188.631579h107.789474v323.368421c-20.48 0-39.936-11.264-40.016842-11.317895l-27.728842 46.214737c3.206737 1.940211 32.660211 18.997895 67.745684 18.997895 30.746947 0 53.894737-23.147789 53.894737-53.894737V269.473684h-215.578948v538.947369h53.894737V323.368421z m-107.789473 242.526316v-242.526316h-53.894737v196.904421l-107.789474 40.421053v-243.927579l169.094737-48.316632-14.821053-51.819789L269.473684 276.102737v304.801684l-36.405895 13.662316 18.917053 50.472421 178.741895-67.018105c-5.039158 69.928421-55.269053 106.981053-165.133474 122.933894l7.733895 53.328842C325.712842 746.657684 485.052632 723.536842 485.052632 565.894737z" fill="#231F20" ></path></symbol><symbol id="icon-rabbit" viewBox="0 0 1024 1024"><path d="M680.96 488.744421a1666.667789 1666.667789 0 0 0-54.433684-23.95621c-16.006737 12.234105-33.899789 20.264421-60.631579 20.264421h-80.842105c-36.810105 0-83.644632 30.396632-104.394106 67.772631-42.819368 77.123368-53.409684 117.813895-11.021473 201.701053C397.096421 808.879158 431.157895 876.409263 431.157895 970.105263h338.539789l68.338527-138.859789c20.129684-40.96 24.252632-73.701053 24.252631-110.349474 0.026947-57.397895-25.061053-159.717053-181.328842-232.151579z" fill="#FFBDD8" ></path><path d="M862.315789 720.896c0 36.621474-4.122947 69.389474-24.252631 110.349474L769.697684 970.105263H485.052632v-53.894737h48.370526C507.877053 880.074105 485.052632 833.509053 485.052632 781.473684c0-59.418947 24.171789-113.313684 63.218526-152.360421l38.103579 38.103579A161.091368 161.091368 0 0 0 538.947368 781.473684c0 54.784 35.381895 104.043789 63.514948 134.736842h133.712842l53.490526-108.759579c15.710316-31.851789 18.755368-55.834947 18.755369-86.554947 0-80.976842-63.434105-150.096842-178.607158-195.503158-17.542737 8.138105-38.292211 13.554526-63.919158 13.554526h-80.842105c-13.958737 0-43.924211 15.979789-57.290106 40.016843l-47.104-26.165895C401.408 515.449263 448.242526 485.052632 485.052632 485.052632h80.842105c37.268211 0 57.478737-15.440842 79.090526-36.45979C625.367579 336.195368 549.753263 269.473684 485.052632 269.473684h-107.789474a21.288421 21.288421 0 0 0-5.955369 2.021053A683.762526 683.762526 0 0 0 302.187789 194.021053c-35.84-34.223158-61.763368-58.933895-94.908631-79.440842A42.442105 42.442105 0 0 0 185.478737 107.789474a22.824421 22.824421 0 0 0-17.381053 7.194947c-10.913684 11.425684-6.063158 28.240842 1.428211 39.181474 21.989053 32.121263 47.912421 56.858947 83.752421 91.109052 20.614737 19.671579 49.259789 43.169684 77.392842 63.08379C281.007158 367.400421 215.578947 484.432842 215.578947 592.842105c0 74.482526 24.791579 124.065684 51.065264 176.586106C294.534737 825.209263 323.368421 882.903579 323.368421 970.105263h-53.894737c0-74.482526-24.791579-124.065684-51.065263-176.586105C190.517895 737.738105 161.684211 680.043789 161.684211 592.842105c0-90.866526 42.226526-197.685895 93.453473-274.485894a803.759158 803.759158 0 0 1-39.046737-34.115369C177.852632 247.754105 150.231579 221.399579 125.035789 184.616421c-24.441263-35.759158-22.797474-78.686316 4.069053-106.819368 26.300632-27.567158 70.898526-31.043368 106.522947-9.000421 37.941895 23.444211 65.562947 49.798737 103.774316 86.258526 9.970526 9.512421 33.037474 32.309895 56.93979 60.550737h68.634947c-27.621053-37.780211-60.416-72.730947-88.522105-99.543579-28.833684-27.540211-54.730105-52.116211-84.533895-74.024421L326.305684 0.296421c31.232 23.228632 57.802105 48.532211 87.309474 76.719158 53.840842 51.388632 94.450526 100.594526 121.74821 146.83621 82.836211 26.650947 150.042947 116.870737 165.025685 230.750316l1.724631 13.177263-9.404631 9.404632c-3.772632 3.772632-7.706947 7.653053-11.802948 11.587368C837.227789 561.178947 862.315789 663.498105 862.315789 720.896zM309.463579 754.526316c3.934316 8.057263 7.895579 16.087579 11.991579 24.144842C348.887579 832.970105 377.263158 889.128421 377.263158 970.105263h53.894737c0-93.696-34.061474-161.226105-61.520842-215.578947h-60.173474z m597.90821 53.894737c-3.422316 9.404632-7.814737 19.806316-13.770105 31.959579L829.790316 970.105263h60.065684l52.143158-105.957052c10.778947-21.935158 17.515789-40.016842 21.90821-55.727158h-56.535579zM514.694737 390.736842c0-34.223158-13.231158-44.463158-29.642105-44.463158s-29.642105 10.24-29.642106 44.463158c0 34.250105 13.231158 44.463158 29.642106 44.463158s29.642105-10.213053 29.642105-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rat_zi" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-431.157895 188.631579v-215.578947h269.473685v-53.894737H538.947368v-39.585684c26.543158-18.081684 94.585263-65.050947 177.852632-127.488L700.631579 215.578947H323.368421v53.894737h295.316211a4221.008842 4221.008842 0 0 1-121.640421 85.369263l-11.991579 8.003369V431.157895H242.526316v53.894737h242.526316v215.578947c0 48.343579-13.850947 53.894737-134.736843 53.894737v53.894737c105.391158 0 188.631579 0 188.631579-107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-rat" viewBox="0 0 1024 1024"><path d="M727.659789 431.157895c-132.581053 0-220.348632 47.454316-285.803789 154.354526-19.779368 32.309895-15.845053 76.503579-9.404632 96.579368 3.260632 10.159158 7.760842 18.647579 12.422737 25.546106C464.761263 737.010526 499.927579 754.526316 538.947368 754.526316h66.829474c1.158737 17.893053-1.967158 34.762105-15.144421 53.975579-12.692211 18.539789-37.807158 40.151579-56.32 54.810947 25.249684-0.673684 52.709053-0.997053 83.240421-0.997053C877.487158 862.315789 970.105263 711.922526 970.105263 571.176421 936.421053 512 882.364632 431.157895 727.659789 431.157895z" fill="#85C3DE" ></path><path d="M210.432 1012.897684l-43.573895-31.690105c106.954105-147.051789 185.317053-171.196632 423.828211-172.705684 21.396211-31.258947 16.249263-56.266105 9.377684-89.70779-3.557053-17.138526-7.221895-34.842947-7.221895-54.433684 0-68.958316 25.330526-104.636632 63.407158-136.973474l34.896842 41.040842c-29.453474 25.061053-44.409263 46.780632-44.409263 95.932632 0 14.093474 2.937263 28.402526 6.063158 43.546947 5.901474 28.510316 12.8 62.032842-1.131789 99.462737 166.373053-10.24 264.542316-96.902737 264.542315-236.193684C916.210526 418.330947 827.580632 323.368421 684.921263 323.368421c-83.644632 0-153.303579 29.696-174.187789 39.612632a224.875789 224.875789 0 0 1-20.533895 31.339789l-41.741474-34.115368 20.884211 17.057684-20.911158-16.976842C448.781474 359.828211 485.052632 314.287158 485.052632 262.736842c0-34.816-8.946526-60.766316-26.570106-77.069474-17.515789-16.249263-44.786526-24.602947-81.219368-24.953263V323.368421h-53.894737V109.783579l24.872421-1.913263c64.700632-4.931368 114.095158 7.895579 146.863158 38.238316C524.207158 173.056 538.947368 212.291368 538.947368 262.736842c0 11.102316-1.131789 21.908211-3.072 32.202105 37.268211-12.584421 89.842526-25.465263 149.045895-25.465263C858.165895 269.473684 970.105263 387.907368 970.105263 571.176421 970.105263 711.922526 877.487158 862.315789 617.552842 862.315789c-258.667789 0-311.942737 19.698526-407.120842 150.581895z m19.105684-256.835368c-12.045474 0-24.387368-0.565895-37.025684-1.64379l-22.096842-1.859368-2.425263-22.016C167.747368 728.144842 161.684211 672.444632 161.684211 631.026526c0-103.585684 21.450105-178.903579 53.894736-259.045052V107.789474h53.894737v274.782315l-2.021052 4.904422C235.439158 465.758316 215.578947 533.800421 215.578947 631.026526c0 22.878316 2.101895 51.442526 3.826527 70.979369 99.678316 2.802526 172.813474-35.408842 222.450526-116.493474l48.020211 24.090947c-11.237053 28.133053-11.371789 51.577263-0.377264 67.853474 9.701053 14.282105 28.645053 23.174737 49.448421 23.174737v53.894737c-39.019789 0-74.186105-17.515789-94.073263-46.888421a100.244211 100.244211 0 0 1-12.422737-25.546106c-53.221053 49.178947-121.128421 73.943579-202.913684 73.970527zM379.957895 525.473684c0-34.223158-13.231158-44.463158-29.642106-44.463158s-29.642105 10.24-29.642105 44.463158c0 34.250105 13.231158 44.463158 29.642105 44.463158s29.642105-10.213053 29.642106-44.463158z" fill="#231F20" ></path></symbol><symbol id="icon-rooster_you" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#BBC4C9" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-215.578947-188.631579h-161.684211v-26.947368h161.684211V242.526316H269.473684v53.894737h161.684211v26.947368h-161.684211v485.052632h53.894737v-53.894737h377.263158v53.894737h53.894737V323.368421zM323.368421 646.736842h377.263158v53.894737H323.368421v-53.894737z m0-269.473684h107.789474c0 103.316211-72.784842 107.654737-81.084632 107.789474L350.315789 538.947368c46.592 0 134.736842-33.792 134.736843-161.68421h53.894736v107.789474c0 29.722947 24.171789 53.894737 53.894737 53.894736h107.789474v53.894737H323.368421v-215.578947z m377.263158 0v107.789474h-107.789474v-107.789474h107.789474z m-215.578947-80.842105h53.894736v26.947368h-53.894736v-26.947368z" fill="#231F20" ></path></symbol><symbol id="icon-rooster" viewBox="0 0 1024 1024"><path d="M891.688421 506.421895C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V116.224l-323.368421 195.745684V323.368421c0 78.524632 14.928842 131.664842 29.372632 183.053474 12.611368 44.894316 24.522105 87.282526 24.522105 140.314947 0 101.618526-77.931789 176.693895-168.286316 203.991579l5.416422 11.587368h215.578947c24.333474 0 43.385263-0.242526 58.556631-2.128842C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947z" fill="#FF8787" ></path><path d="M673.684211 354.357895c-16.384 0-29.642105-10.213053-29.642106-44.463158 0-34.223158 13.231158-44.463158 29.642106-44.463158s29.642105 10.24 29.642105 44.463158c0 34.250105-13.258105 44.463158-29.642105 44.463158zM540.106105 970.105263l-50.58021-107.789474h156.05221l50.607158 107.789474h59.553684l-51.60421-109.918316C811.52 846.821053 916.210526 764.550737 916.210526 646.736842c0-53.032421-11.910737-95.420632-24.522105-140.314947C877.244632 455.033263 862.315789 401.893053 862.315789 323.368421V107.789474c0-59.445895-48.343579-107.789474-107.789473-107.789474a107.924211 107.924211 0 0 0-107.789474 106.172632 100.890947 100.890947 0 0 0-24.117895-3.314527 88.710737 88.710737 0 0 0-88.602947 88.602948c0 20.668632 5.227789 39.720421 10.671158 53.921684l-99.489684 59.688421 93.749894 14.470737V377.263158c0 14.416842-5.901474 21.692632-33.360842 49.152l-11.129263 11.129263C398.228211 326.521263 324.985263 269.473684 215.740632 269.473684 96.768 269.473684 0 366.241684 0 485.214316V646.736842h53.894737v-161.522526A162.007579 162.007579 0 0 1 215.740632 323.368421c82.081684 0 140.422737 36.244211 240.64 152.252632l-38.615579 38.615579C367.804632 461.285053 323.098947 431.157895 259.584 431.157895A151.983158 151.983158 0 0 0 107.789474 582.952421V754.526316h53.894737v-171.573895A98.007579 98.007579 0 0 1 259.584 485.052632c46.322526 0 79.629474 20.911158 137.027368 86.016l18.970948 21.530947 128.080842-128.080842C572.200421 435.981474 592.842105 415.366737 592.842105 377.263158v-97.926737l23.309474-14.120421-13.662316-23.04c-0.161684-0.242526-14.578526-24.899368-14.578526-50.688 0-19.132632 15.575579-34.708211 34.70821-34.708211 5.093053 0 26.785684 3.179789 39.558737 18.647579l26.327579 46.026106 39.774316-24.090948-20.372211-49.367579C704.754526 140.449684 700.631579 117.517474 700.631579 107.789474c0-29.722947 24.171789-53.894737 53.894737-53.894737s53.894737 24.171789 53.894737 53.894737v215.578947c0 85.935158 16.680421 145.300211 31.366736 197.632C851.887158 564.008421 862.315789 601.141895 862.315789 646.736842c0 95.285895-99.408842 161.684211-188.631578 161.684211h-209.461895l-68.419369-145.704421C375.242105 618.954105 338.108632 592.842105 296.448 592.842105A80.976842 80.976842 0 0 0 215.578947 673.711158V862.315789h53.894737v-188.604631c0-14.874947 12.099368-26.974316 26.974316-26.974316 20.533895 0 38.965895 14.147368 50.553263 38.858105L480.579368 970.105263h59.526737z" fill="#231F20" ></path></symbol><symbol id="icon-snake_si" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#FF8787" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-242.041263 180.762947l-52.116211-13.797052C657.219368 749.864421 651.425684 754.526316 619.789474 754.526316h-242.526316V485.052632h269.473684v53.894736h53.894737V215.578947H323.368421v538.947369c0 29.722947 24.171789 53.894737 53.894737 53.894737h242.526316c77.689263 0 91.189895-51.065263 108.274526-115.658106zM377.263158 269.473684h269.473684v161.684211H377.263158v-161.684211z" fill="#231F20" ></path></symbol><symbol id="icon-tiger_yin" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#7DD47F" ></path><path d="M970.105263 512c0 224.983579-163.166316 412.186947-377.263158 450.533053v-54.460632C777.135158 870.507789 916.210526 707.206737 916.210526 512c0-222.881684-181.328842-404.210526-404.210526-404.210526S107.789474 289.118316 107.789474 512s181.328842 404.210526 404.210526 404.210526c9.081263 0 18.000842-0.754526 26.947368-1.374315v53.894736c-8.973474 0.538947-17.866105 1.374316-26.947368 1.374316-252.604632 0-458.105263-205.500632-458.105263-458.105263S259.395368 53.894737 512 53.894737s458.105263 205.500632 458.105263 458.105263z m-257.42821 299.250526l-107.789474-53.894737-24.117895 48.208843 107.789474 53.894736 24.117895-48.208842z m-269.473685-5.658947l-24.117894-48.208842-107.789474 53.894737 24.117895 48.208842 107.789473-53.894737zM700.631579 431.157895h-161.684211v-53.894737h107.789474v-53.894737H377.263158v53.894737h107.789474v53.894737h-161.684211v323.368421h53.894737v-53.894737h269.473684v53.894737h53.894737V431.157895z m-161.684211 161.68421h107.789474v53.894737h-107.789474v-53.894737z m-161.68421 0h107.789474v53.894737h-107.789474v-53.894737z m161.68421-107.789473h107.789474v53.894736h-107.789474v-53.894736z m-161.68421 0h107.789474v53.894736h-107.789474v-53.894736zM754.526316 215.578947h-223.097263l-20.803369-62.410105-51.119158 17.057684L474.624 215.578947H269.473684v107.789474h53.894737v-53.894737h377.263158v53.894737h53.894737V215.578947z" fill="#231F20" ></path></symbol><symbol id="icon-snake" viewBox="0 0 1024 1024"><path d="M107.789474 790.474105c0-72.434526 67.880421-91.513263 121.451789-91.513263 74.401684 0 153.815579 34.438737 237.891369 70.925474 50.580211 21.935158 104.609684 45.325474 162.250105 63.083789-52.412632 44.786526-118.784 74.347789-195.152842 83.078737-143.171368 16.357053-326.440421 7.006316-326.440421-125.574737zM377.263158 215.578947c-15.575579 0-30.288842 3.449263-43.654737 9.377685A250.691368 250.691368 0 0 0 323.368421 296.421053c0 115.550316 76.422737 169.391158 137.83579 212.614736 8.138105 5.712842 16.141474 11.371789 23.848421 17.057685V323.368421a107.789474 107.789474 0 0 0-107.789474-107.789474z" fill="#C3D686" ></path><path d="M671.528421 788.857263c44.328421 11.964632 89.626947 19.563789 136.892632 19.56379 89.168842 0 161.684211-60.442947 161.68421-134.736842s-72.515368-134.736842-161.68421-134.736843c-19.078737 0-37.025684 1.509053-54.218106 4.015158-0.754526-101.402947-38.211368-172.355368-79.413894-219.648L673.684211 323.368421a1749.962105 1749.962105 0 0 1-79.036632-1.751579c45.702737 35.866947 108.705684 107.870316 105.984 232.367158 0 0.431158-0.080842 0.808421-0.10779 1.239579-34.923789 10.994526-66.155789 26.731789-95.097263 45.190737a163.085474 163.085474 0 0 0-15.845052-42.388211c-21.557895-39.639579-60.065684-66.775579-97.360842-93.022316C433.098105 423.343158 377.263158 384 377.263158 296.421053c0-130.290526 108.274526-188.631579 215.578947-188.631579 64.134737 0 132.715789 12.045474 214.366316 37.807158C802.330947 180.250947 780.099368 209.381053 700.631579 214.635789V161.684211h-53.894737v53.679157c-63.272421-1.024-104.528842-5.200842-104.986947-5.254736l-5.578106 53.598315C538.408421 263.949474 592.357053 269.473684 673.684211 269.473684c125.170526 0 188.631579-48.128 188.631578-143.063579V106.981053l-18.432-6.144C747.789474 68.823579 668.025263 53.894737 592.842105 53.894737c-158.666105 0-269.473684 99.732211-269.473684 242.526316 0 115.550316 76.422737 169.391158 137.83579 212.614736 33.684211 23.713684 65.509053 46.106947 81.003789 74.698106 9.539368 17.542737 13.285053 33.414737 12.341895 47.750737 21.153684 9.108211 42.118737 17.839158 62.949052 25.977263C671.151158 620.193684 729.977263 592.842105 808.421053 592.842105c59.445895 0 107.789474 36.271158 107.789473 80.842106s-48.343579 80.842105-107.789473 80.842105c-105.472 0-203.237053-42.388211-297.768421-83.429053-94.800842-41.094737-184.346947-79.952842-281.411369-79.952842C122.718316 591.171368 53.894737 644.715789 53.894737 727.578947c0 79.063579 67.098947 136.434526 159.555368 136.434527 142.174316 0 230.426947-66.883368 306.79579-129.886316 31.420632 13.419789 62.787368 26.058105 94.450526 37.133474-47.077053 49.637053-110.969263 82.566737-186.610526 91.270736l5.066105 53.625264c93.453474-7.006316 143.144421 9.350737 195.718737 26.543157 46.457263 15.225263 94.127158 30.854737 169.822316 30.854737 19.994947 0 41.957053-1.077895 66.344421-3.557052l-5.416421-53.625263c-105.283368 10.778947-158.100211-6.548211-213.935158-24.872422-22.150737-7.275789-44.624842-14.632421-70.305684-20.345263a334.848 334.848 0 0 0 96.14821-82.297263z m-458.078316 21.261474C162.573474 810.118737 107.789474 784.276211 107.789474 727.578947c0-60.847158 62.733474-82.539789 121.451789-82.539789 77.850947 0 154.731789 30.288842 235.250526 64.943158-66.263579 52.924632-139.722105 100.136421-251.041684 100.136421z" fill="#231F20" ></path></symbol><symbol id="icon-tiger" viewBox="0 0 1024 1024"><path d="M431.157895 162.250105V134.736842c0-41.552842-39.289263-80.842105-80.842106-80.842105-28.833684 0-57.128421 4.661895-58.314105 4.850526L269.473684 62.490947v83.887158C144.788211 223.824842 89.222737 346.839579 66.991158 431.157895h266.051368c240.747789 0 415.851789 107.789474 415.85179 269.473684-14.848-25.114947-43.924211-53.894737-88.68379-53.894737-67.988211 0-121.263158 71.033263-121.263158 161.684211 0 66.802526 30.477474 119.888842 60.712421 156.16 12.638316 15.171368 36.055579 37.726316 59.014737 58.88 5.066105 0.107789 9.781895 0.538947 15.009685 0.538947 219.297684 0 350.315789-191.811368 350.315789-377.263158C1024 327.545263 679.855158 172.813474 431.157895 162.250105z" fill="#F7C768" ></path><path d="M673.684211 1024c-114.768842 0-188.820211-33.333895-254.167579-62.787368-53.625263-24.144842-99.974737-45.002105-161.28-45.002106-40.448 0-83.590737 23.255579-103.639579 45.16379l-39.747369-36.432842C142.497684 894.787368 199.168 862.315789 258.236632 862.315789c68.392421 0 119.861895 21.288421 172.921263 45.056V673.684211c0-35.166316-17.542737-64.107789-30.639158-80.815158-15.198316 9.835789-32.067368 18.890105-50.741895 26.947368l-21.342316-49.475368C469.800421 509.413053 485.052632 377.317053 485.052632 323.368421V221.642105A597.827368 597.827368 0 0 0 404.210526 215.578947h-26.947368V134.736842c0-12.099368-14.848-26.947368-26.947369-26.947368-9.377684 0-18.836211 0.592842-26.947368 1.347368V269.473684h-53.894737V211.671579c-136.030316 102.912-158.450526 266.886737-161.306947 295.882105 9.135158 9.108211 38.992842 25.061053 71.976421 38.669474l38.103579-59.365053 12.449684-1.589894C321.212632 473.653895 377.263158 392.192 377.263158 323.368421h53.894737c0 88.333474-68.796632 192.242526-180.870737 213.342316l-48.397474 75.398737-20.291368-7.437474C53.894737 557.756632 53.894737 523.317895 53.894737 512c0-50.041263 37.025684-254.733474 215.578947-365.621895V62.490947l22.528-3.745684C293.187368 58.556632 321.482105 53.894737 350.315789 53.894737c41.552842 0 80.842105 39.289263 80.842106 80.842105v27.513263c248.697263 10.563368 592.842105 165.295158 592.842105 484.486737 0 185.451789-131.018105 377.263158-350.315789 377.263158z m-13.473685-323.368421c-36.513684 0-67.368421 49.367579-67.368421 107.789474 0 85.746526 68.096 145.084632 89.465263 161.549473 91.540211-2.533053 164.378947-45.487158 213.827369-107.654737H700.631579v-53.894736h230.238316c8.919579-17.273263 16.357053-35.354947 22.285473-53.894737h-239.885473l-6.467369-17.650527C706.290526 735.582316 692.439579 700.631579 660.210526 700.631579zM485.052632 931.112421c33.926737 14.066526 70.521263 26.597053 114.607157 33.468632C569.424842 928.309895 538.947368 875.223579 538.947368 808.421053c0-90.650947 53.274947-161.684211 121.263158-161.684211 44.759579 0 73.835789 28.779789 88.68379 53.894737h217.007158c2.775579-17.866105 4.203789-35.920842 4.203789-53.894737 0-38.938947-5.658947-74.752-15.925895-107.627789l-126.706526 126.679579-38.103579-38.103579L932.001684 485.052632a367.939368 367.939368 0 0 0-57.775158-81.596632l-154.543158 154.543158-38.103579-38.103579 153.573053-153.573053a537.869474 537.869474 0 0 0-82.593684-56.751158l-140.665263 140.638316-38.103579-38.103579 128.134737-128.134737A794.731789 794.731789 0 0 0 538.947368 231.046737V323.368421c0 50.149053-11.102316 156.698947-95.932631 236.328421 18.378105 23.417263 42.037895 63.407158 42.037895 113.987369v257.42821zM215.578947 431.157895v-53.894737c39.774316 0 53.894737-29.022316 53.894737-53.894737h53.894737c0 53.571368-37.025684 107.789474-107.789474 107.789474z" fill="#231F20" ></path></symbol><symbol id="icon-boar" viewBox="0 0 1024 1024"><path d="M732.079158 377.263158c-107.789474 0-186.421895 31.393684-281.869474 126.841263L180.331789 773.982316C257.724632 807.909053 348.725895 808.421053 485.052632 808.421053h96.013473c55.834947-34.411789 133.551158-53.894737 227.354948-53.894737h121.344L970.105263 680.555789V572.631579c0-94.315789-130.236632-195.368421-238.026105-195.368421z" fill="#FFBDD8" ></path><path d="M808.421053 700.631579v53.894737c-196.446316 0-323.368421 84.641684-323.368421 215.578947h-53.894737c0-163.705263 148.075789-269.473684 377.263158-269.473684z m-323.368421 107.789474v-53.894737c-158.342737 0-245.598316 0-319.649685-49.367579L158.612211 700.631579H80.842105c-21.692632 0-26.624-14.821053-26.947368-26.947368v-82.620632c84.156632-11.183158 161.684211-74.913684 161.68421-186.853053V215.578947H161.684211v161.684211H134.736842c-66.964211 0-134.736842 37.025684-134.736842 107.789474h53.894737c0-42.630737 52.870737-53.894737 80.842105-53.894737h24.629895C147.132632 504.912842 85.153684 538.947368 26.947368 538.947368H0v134.736843c0 32.498526 21.530947 80.842105 80.842105 80.842105h61.682527c32.687158 20.506947 67.125895 33.145263 105.957052 41.013895A232.879158 232.879158 0 0 0 215.578947 916.210526h53.894737c0-41.930105 14.012632-80.303158 39.424-112.505263C358.885053 808.151579 415.959579 808.421053 485.052632 808.421053z m-72.946527-342.420211L323.368421 554.738526V431.157895h-53.894737v253.682526l180.736-180.736-38.103579-38.103579zM323.368421 161.684211h-53.894737v190.032842a769.536 769.536 0 0 1 53.894737-49.098106V161.684211z m323.368421-53.894737c-72.623158 0-146.809263 23.336421-215.578947 58.637473V107.789474h-53.894737v154.138947C458.832842 205.392842 555.331368 161.684211 646.736842 161.684211c148.587789 0 269.473684 120.885895 269.473684 269.473684v235.654737L809.579789 862.315789h61.359158L970.105263 680.555789V431.157895c0-178.310737-145.057684-323.368421-323.368421-323.368421z" fill="#231F20" ></path></symbol><symbol id="icon-boar_hai" viewBox="0 0 1024 1024"><path d="M512 512m-296.421053 0a296.421053 296.421053 0 1 0 592.842106 0 296.421053 296.421053 0 1 0-592.842106 0Z" fill="#85C3DE" ></path><path d="M309.975579 804.756211l-27.136-46.592c103.073684-60.011789 183.026526-132.473263 241.475368-219.24379H350.315789l-13.473684-50.283789c58.88-33.980632 99.435789-117.571368 118.703158-165.295158H242.526316v-53.894737h538.947368v53.894737h-268.18021c-12.395789 34.088421-42.469053 106.603789-90.435369 161.68421h134.009263a680.555789 680.555789 0 0 0 46.349474-107.708631l51.092211 17.057684c-58.421895 175.265684-171.034947 309.490526-344.333474 410.381474z m192.350316-2.937264L467.806316 760.454737c88.414316-73.728 154.516211-158.773895 202.105263-259.907369l48.801684 22.959158a797.372632 797.372632 0 0 1-82.351158 137.781895c32.741053 15.009684 83.456 44.867368 137.647158 101.591579l-38.938947 37.268211c-57.236211-59.877053-109.325474-85.557895-133.766737-95.178106a850.997895 850.997895 0 0 1-98.977684 96.848842z m48.613052-536.872421l-80.842105-53.894737 29.884632-44.840421 80.842105 53.894737-29.884632 44.840421zM512 53.894737C259.395368 53.894737 53.894737 259.395368 53.894737 512s205.500632 458.105263 458.105263 458.105263c9.081263 0 17.973895-0.835368 26.947368-1.374316v-53.894736c-8.946526 0.619789-17.866105 1.374316-26.947368 1.374315-222.881684 0-404.210526-181.328842-404.210526-404.210526S289.118316 107.789474 512 107.789474s404.210526 181.328842 404.210526 404.210526c0 195.206737-139.075368 358.507789-323.368421 396.045474v54.460631c214.096842-38.346105 377.263158-225.549474 377.263158-450.533052C970.105263 259.395368 764.604632 53.894737 512 53.894737z" fill="#231F20" ></path></symbol><symbol id="icon-bilibili1" viewBox="0 0 1129 1024"><path d="M234.909 9.656a80.468 80.468 0 0 1 68.398 0 167.374 167.374 0 0 1 41.843 30.578l160.937 140.82h115.07l160.936-140.82a168.983 168.983 0 0 1 41.843-30.578A80.468 80.468 0 0 1 930.96 76.445a80.468 80.468 0 0 1-17.703 53.914 449.818 449.818 0 0 1-35.406 32.187 232.553 232.553 0 0 1-22.531 18.508h100.585a170.593 170.593 0 0 1 118.289 53.109 171.397 171.397 0 0 1 53.914 118.288v462.693a325.897 325.897 0 0 1-4.024 70.007 178.64 178.64 0 0 1-80.468 112.656 173.007 173.007 0 0 1-92.539 25.75H212.377a341.186 341.186 0 0 1-72.421-4.024A177.835 177.835 0 0 1 28.91 939.065a172.202 172.202 0 0 1-27.36-92.539V388.662a360.498 360.498 0 0 1 0-66.789A177.03 177.03 0 0 1 162.487 178.64h105.414c-16.899-12.07-31.383-26.555-46.672-39.43a80.468 80.468 0 0 1-25.75-65.984 80.468 80.468 0 0 1 39.43-63.57M216.4 321.873a80.468 80.468 0 0 0-63.57 57.937 108.632 108.632 0 0 0 0 30.578v380.615a80.468 80.468 0 0 0 55.523 80.469 106.218 106.218 0 0 0 34.601 5.632h654.208a80.468 80.468 0 0 0 76.444-47.476 112.656 112.656 0 0 0 8.047-53.109v-354.06a135.187 135.187 0 0 0 0-38.625 80.468 80.468 0 0 0-52.304-54.719 129.554 129.554 0 0 0-49.89-7.242H254.22a268.764 268.764 0 0 0-37.82 0z m0 0" fill="#20B0E3" ></path><path d="M348.369 447.404a80.468 80.468 0 0 1 55.523 18.507 80.468 80.468 0 0 1 28.164 59.547v80.468a80.468 80.468 0 0 1-16.094 51.5 80.468 80.468 0 0 1-131.968-9.656 104.609 104.609 0 0 1-10.46-54.719v-80.468a80.468 80.468 0 0 1 70.007-67.593z m416.02 0a80.468 80.468 0 0 1 86.102 75.64v80.468a94.148 94.148 0 0 1-12.07 53.11 80.468 80.468 0 0 1-132.773 0 95.757 95.757 0 0 1-12.875-57.133V519.02a80.468 80.468 0 0 1 70.007-70.812z m0 0" fill="#20B0E3" ></path></symbol><symbol id="icon-yinle" viewBox="0 0 1024 1024"><path d="M512.2976 0a531.2 531.2 0 0 0-512 548.48V960h128V548.48a398.72 398.72 0 0 1 384-411.52 398.72 398.72 0 0 1 384 411.52V960h128V548.48A531.2 531.2 0 0 0 512.2976 0z" fill="#5c8add" ></path><path d="M64.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path><path d="M704.2976 576l256 0 0 448-256 0 0-448Z" fill="#5c8add" ></path></symbol><symbol id="icon-icon-test-copy" viewBox="0 0 1024 1024"><path d="M512 512m-229.517241 0a229.517241 229.517241 0 1 0 459.034482 0 229.517241 229.517241 0 1 0-459.034482 0Z" fill="#5c8add" ></path><path d="M512 1024A512 512 0 1 1 1024 512 512 512 0 0 1 512 1024z m0-141.241379A370.758621 370.758621 0 1 0 141.241379 512 370.758621 370.758621 0 0 0 512 882.758621z" fill="#5c8add" ></path></symbol><symbol id="icon-V" viewBox="0 0 1024 1024"><path d="M1012.47774251 492.58192592L544.94137566 87.22962963a49.96686561 49.96686561 0 0 0-65.88275132 0L11.63784127 492.6975097c-21.03624691 18.26223633-23.3479224 49.93219048-5.08568606 70.96843739 18.03106878 21.03624691 49.93219048 23.3479224 70.96843738 5.08568607L512 191.83294532l434.71057495 376.91868784c9.47786949 8.20644797 21.26741446 12.25188008 32.82579189 12.13629629 14.10122046 0 27.97127337-5.77918871 38.02706173-17.33756613 18.14665256-20.92066314 15.95056084-52.70620106-5.08568606-70.9684374z" fill="#5c8add" ></path><path d="M109.30613051 567.59579541V896.89396825c0 42.53482892 34.90629982 77.44112875 77.44112875 77.44112875h220.76500882V666.30433862c0-25.54401411 20.92066314-46.46467725 46.46467724-46.46467724h116.16169313c25.54401411 0 46.46467725 20.92066314 46.46467725 46.46467724V974.335097h220.76500882c42.53482892 0 77.44112875-34.90629982 77.44112874-77.44112875l0.11558377-329.29817284L512 218.18604586 109.30613051 567.59579541zM848.00203175 197.49655027h-63.91782716c-12.82979894 0-23.23233862 10.40253968-23.23233863 23.23233862v24.27259259l110.49808818 95.70336508V220.72888889h-0.11558377c0-12.82979894-10.40253968-23.23233862-23.23233862-23.23233862zM905.44716754 83.18419754s-34.90629982 56.86721693-89.11508994 100.32671603c152.68616579 13.98563668 127.83565432-133.26809171 127.83565432-133.2680917-134.07717813-10.28695591-132.92134039 102.29164021-131.072 127.83565432 20.92066314-20.92066314 49.70102293-62.64640564 92.35143562-94.89427865zM798.53217637 174.61096297c-19.64924162-16.52847972-40.56990476-43.45949912-51.203612-53.97762258 0 0 32.94137566 20.57391182 56.40488184 49.3542716 2.42725926-18.37782011 6.47269135-93.3916896-93.16052205-85.3008254 0 0-13.98563668 104.71889947 87.95925221 89.92417638z" fill="#5c8add" ></path></symbol><symbol id="icon-zhifeiji" viewBox="0 0 1167 1024"><path d="M41.201759 463.52493L1110.665064 30.117647c10.32605-4.159104 21.942857 0.860504 26.101961 11.043137 1.434174 3.728852 1.864426 7.744538 1.003921 11.616807L949.033691 978.823529c-2.151261 10.89972-12.764146 17.927171-23.663865 15.632493-2.72493-0.573669-5.306443-1.721008-7.601121-3.298599L634.80624 789.79944l-163.065546 133.951821c-16.492997 13.62465-40.87395 11.186555-54.498599-5.306443-3.011765-3.728852-5.306443-7.887955-6.884034-12.477311l-102.973669-313.080112-265.178712-91.787115c-10.469468-3.585434-16.062745-15.058824-12.333893-25.528291 1.864426-5.44986 6.023529-9.895798 11.329972-12.047059z" fill="#FCFDFC" ></path><path d="M929.385512 1023.569748c-3.155182 0-6.453782-0.286835-9.752381-1.003922-6.740616-1.434174-12.907563-4.015686-18.50084-8.031372L635.953579 825.940616l-146.142297 120.040336c-13.911485 11.473389-31.408403 16.779832-49.335574 15.058824-17.927171-1.721008-34.133333-10.32605-45.463305-24.237535-5.306443-6.453782-9.322129-13.768067-11.903642-21.79944l-98.527731-299.598879-251.697479-87.19776c-12.333894-4.302521-22.229692-13.05098-27.966386-24.811204s-6.453782-24.954622-2.151261-37.288515c4.589356-13.337815 14.771989-23.9507 27.82297-29.257143L1099.908761 3.585434c24.954622-10.039216 53.351261 2.007843 63.533894 26.819048 3.585434 8.891877 4.445938 18.644258 2.581513 28.109804L977.143495 984.560224c-4.732773 23.090196-25.098039 39.009524-47.757983 39.009524z m-294.579272-233.770308l282.962465 201.357983c2.294678 1.577591 4.87619 2.72493 7.601121 3.298599 10.89972 2.151261 21.512605-4.87619 23.663865-15.632493L1137.914364 52.777591c0.860504-3.872269 0.430252-7.887955-1.003922-11.616807-4.159104-10.32605-15.919328-15.202241-26.101961-11.043137L41.201759 463.52493c-5.306443 2.151261-9.465546 6.597199-11.47339 12.047059-1.721008 5.019608-1.434174 10.469468 0.860505 15.345658 2.294678 4.87619 6.453782 8.461625 11.473389 10.182633l265.178711 91.787115L410.214644 905.967507c1.434174 4.589356 3.872269 8.748459 6.884033 12.477311 6.597199 8.031373 15.919328 12.907563 26.101961 13.911485 10.32605 1.003922 20.365266-2.007843 28.396639-8.605042l163.208963-133.951821z" fill="#4A4A4A" ></path><path d="M307.097557 592.743978l105.698599 316.091876c6.310364 18.787675 26.532213 28.970308 45.319888 22.659944 4.159104-1.434174 7.887955-3.442017 11.186555-6.166946l164.786555-133.951821-165.360224-118.892997c297.017367-287.982073 447.462185-433.980952 451.191036-437.853222 0.573669-0.573669 2.581513-3.442017 0.430252-7.027451-1.290756-1.577591-3.298599-3.298599-7.027451-2.15126-202.218487 120.327171-404.293557 242.805602-606.22521 367.291877z" fill="#CAE0EE" ></path><path d="M446.786072 934.794398c-5.736695 0-11.329972-1.290756-16.636414-3.872269-8.891877-4.445938-15.632493-12.047059-18.787675-21.512605L305.376549 592.313725l1.003921-0.573669C507.308201 467.684034 711.391114 344.058263 912.60568 224.161345l0.286835-0.143418c3.585434-1.147339 6.310364-0.286835 8.605042 2.581513l0.143417 0.143417c2.438095 4.015686 0.573669 7.457703-0.573669 8.74846-3.872269 4.015686-155.177591 150.87507-450.043698 436.705882l165.503642 119.036414-166.220728 135.09916c-3.442017 2.868347-7.457703 5.019608-11.760225 6.453782-3.728852 1.290756-7.744538 2.007843-11.760224 2.007843z m-137.967507-341.333334l105.268348 314.944538c2.868347 8.748459 9.035294 15.77591 17.210084 19.935014 8.17479 4.159104 17.496919 4.732773 26.245378 1.864426 3.872269-1.290756 7.60112-3.298599 10.756302-5.880112l163.352381-132.804482L466.434252 672.627451l1.290756-1.147339C763.308201 384.932213 915.043775 237.642577 918.772627 233.626891c0 0 2.007843-2.294678 0.286835-5.306443-1.003922-1.290756-2.438095-2.438095-5.306443-1.577591-200.784314 119.610084-404.293557 242.94902-604.934454 366.718207z" fill="#CAE0EE" ></path><path d="M460.840974 924.898599l7.457703-253.561904 165.933894 119.896918-168.658824 135.959664c-1.290756 1.003922-3.011765 0.860504-4.015686-0.430252-0.430252-0.430252-0.717087-1.147339-0.717087-1.864426z" fill="#94C3E2" ></path><path d="M463.709322 929.344538c-1.290756 0-2.438095-0.573669-3.2986-1.577591-0.573669-0.860504-1.003922-1.864426-1.003921-2.868348l7.60112-256.286834 169.519328 122.621848-1.434174 1.147339-168.658823 135.959664c-0.860504 0.717087-1.721008 1.003922-2.72493 1.003922z m6.023529-255.282913l-7.457703 250.836974c0 0.286835 0.143417 0.717087 0.286835 1.003922 0.430252 0.573669 1.434174 0.717087 2.007843 0.286835l167.22465-134.812325-162.061625-117.315406z" fill="#94C3E2" ></path></symbol><symbol id="icon-lianjie" viewBox="0 0 1079 1024"><path d="M695.355535 432.666896c-0.553495-1.10699-0.885592-2.186305-1.383737-3.265619-0.193723-0.193723-0.193723-0.359772-0.359771-0.719543-12.508983-26.318678-39.436506-43.366319-69.325226-41.013966-39.076734 3.265619-68.439634 39.021384-65.312388 79.841627 0.857917 10.516401 3.653066 20.147211 7.998 28.83708 19.78744 46.659613 11.097571 103.448181-25.377737 141.750022l-191.094085 199.950001a118.088119 118.088119 0 0 1-171.998513 0c-47.434506-49.537786-47.434506-130.098956 0-179.636742l71.234782-74.389703-0.52582-0.553494a75.911814 75.911814 0 0 0 24.326097-61.880721c-3.127246-40.820243-37.3609-71.51153-76.437634-68.24591a69.463599 69.463599 0 0 0-46.908685 23.966325l-0.166049-0.193723-72.618519 75.856464c-103.226783 107.793115-103.226783 282.36538 0 390.158495 103.171433 107.793115 270.299193 107.793115 373.498301 0l191.619904-200.1714c80.256748-83.992838 97.636485-208.307773 52.83108-310.289193z" fill="#5c8add" ></path><path d="M1002.047012 80.865592c-103.226783-107.82079-270.382217-107.82079-373.581325 0l-191.619905 200.199075c-80.284423 83.854464-97.66416 208.197074-52.997128 310.233843 0.52582 1.079315 0.857917 2.15863 1.383737 3.26562 0.166048 0.166048 0.166048 0.359772 0.332097 0.719543 12.536658 26.291004 39.46418 43.366319 69.3529 41.013966 39.076734-3.265619 68.439634-39.021384 65.312388-79.869302a78.679288 78.679288 0 0 0-7.998-28.864755c-19.78744-46.631938-11.097571-103.448181 25.377737-141.750022l191.287808-199.839302a118.088119 118.088119 0 0 1 172.026188 0c47.434506 49.537786 47.434506 130.126631 0 179.692091l-71.234782 74.417378 0.52582 0.553495a75.939489 75.939489 0 0 0-24.353772 61.88072c3.15492 40.847917 37.3609 71.51153 76.465309 68.245911a69.463599 69.463599 0 0 0 46.908685-23.938651l0.166049 0.166048 72.646194-75.856464c103.03306-107.82079 103.03306-282.642127 0-390.269194z" fill="#5c8add" ></path></symbol><symbol id="icon-liaotian" viewBox="0 0 1171 1024"><path d="M1068.71699 0.243751H102.193768C46.228437 0.243751 0.500666 45.045267 0.500666 99.74309v696.251622c0 54.697824 45.727771 99.450589 101.693102 99.450589h329.113198l120.851966 114.465677a48.652788 48.652788 0 0 0 66.641644 0l120.851966-114.465677h329.064448c55.965331 0 101.741852-44.752765 101.741852-99.450589V99.74309C1170.458842 45.045267 1124.682321 0.243751 1068.71699 0.243751z m-439.776354 596.849784h-370.989696c-27.933915 0-50.846551-22.425133-50.846551-49.774045 0-27.348912 22.912636-49.725294 50.846551-49.725294h370.989696c27.933915 0 50.846551 22.376382 50.846551 49.725294 0 27.348912-22.912636 49.774045-50.846551 49.774045z m287.18795-211.381252H254.782171a50.456549 50.456549 0 0 1-50.846551-49.725294c0-27.397662 22.912636-49.774045 50.846551-49.774045h661.346415c27.933915 0 50.846551 22.376382 50.846551 49.774045 0 27.348912-22.912636 49.725294-50.846551 49.725294z" fill="#5C8ADD" ></path></symbol><symbol id="icon-xinfeng" viewBox="0 0 1400 1024"><path d="M1301.63733163 214.78520234a207.81921797 207.81921797 0 0 1 7.02423018 52.42036465v489.73590176a205.10753818 205.10753818 0 0 1-205.05853125 205.05853125H283.05853124A205.15654424 205.15654424 0 0 1 77.99999999 756.79444971V267.20556699a201.36672685 201.36672685 0 0 1 7.02423106-52.42036465L586.24393329 562.1905874c69.44187217 51.96297217 146.36536612 49.13694404 214.1736961 0zM1103.60303056 62.0000167H283.05853124A204.50312753 204.50312753 0 0 0 106.37462518 163.41030547l489.71956641 335.75823018c62.43397646 50.77048623 127.85733457 50.31309463 194.62019765 0L1280.28693749 163.41030547A204.68281729 204.68281729 0 0 0 1103.60303056 62.0000167z m0 0" fill="#5c8add" ></path></symbol><symbol id="icon-QQ1" viewBox="0 0 1024 1024"><path d="M0 512a512 512 0 1 0 1024 0A512 512 0 1 0 0 512z" fill="#18ACFC" ></path><path d="M500.113 228.39c118.396-1.518 178.924 61.004 201 156 3.497 15.048 0.15 34.807 0 50 27.143 5.682 33.087 60.106 10 75v1h1c8.26 14.33 19.04 28.125 26 44 7.332 16.723 9.306 35.16 14 55 4.024 17.01-2.287 51.505-10 57-0.771 0.683-2.231 1.312-3 2-14.601-3.016-30.377-16.865-38-27-3.065-4.074-5.275-9.672-10-12-0.395 21.568-12.503 41.15-22 55-3.514 5.123-14.073 13.217-14 18 3.691 2.836 8.305 2.956 13 5 10.513 4.577 25.449 13.168 32 22 2.334 3.146 5.548 7.555 7 11 16.193 38.414-36.527 48.314-63 54-27.185 5.839-77.818-10.224-92-19-8.749-5.414-16.863-18.573-29-19-3.666 2.389-14.438 1.132-20 1-16.829 32.804-101.913 47.868-148 31-14.061-5.146-43.398-17.695-38-40 4.437-18.327 19.947-29.224 35-37 5.759-2.975 18.915-4.419 22-10-13.141-8.988-24.521-28.659-31-44-3.412-8.077-4.193-25.775-9-32-7.789 12.245-32.097 36.91-52 33-3.071-4.553-7.213-9.097-9-15-4.792-15.835-1.81-40.379 2-54 8.117-29.02 16.965-50.623 32-72 4.672-6.643 11.425-12.135 16-19-8.945-9.733-6.951-37.536-1-49 4.002-7.709 9.701-7.413 10-20-1.92-3.022-0.071-8.604-1-13-4.383-20.75 3.273-47.552 9-63 19.8-53.421 53.712-90.466 105-112 11.986-5.033 25.833-7.783 39-11 5.322-1.3 11.969 0.518 16-2z" fill="#FFFFFF" ></path></symbol><symbol id="icon-rss" viewBox="0 0 1024 1024"><path d="M749.61196492 908.06119793C749.61196492 560.41848146 463.58151854 274.36328126 115.93880207 274.36328126V115.93880207c434.50388795 0 792.12239584 357.61850789 792.12239586 792.12239586zM224.55858562 690.72261555a108.91682943 108.91682943 0 0 1 108.69404499 108.74355267C333.25263061 859.29616292 284.24005737 908.06119793 224.31104736 908.06119793 164.48105265 908.06119793 115.96355592 859.41993206 115.96355592 799.46616822s48.69077351-108.71879883 108.61978351-108.74355267zM641.01693522 908.06119793h-153.96879069c0-203.60020956-167.50913289-371.13409627-371.10934246-371.13409629v-153.96879068c288.03550619 0 525.07813313 237.11688843 525.07813315 525.10288697z" fill="#FFA500" ></path></symbol><symbol id="icon-youxiang" viewBox="0 0 1024 1024"><path d="M583.60666667 972h-68.08c-8.43333333 0-15.33333333-6.9-15.33333334-15.33333333V609.52c0-8.43333333 6.9-15.33333333 15.33333334-15.33333333h68.08c8.43333333 0 15.33333333 6.9 15.33333333 15.33333333V956.66666667c0 8.43333333-6.9 15.33333333-15.33333333 15.33333333z" fill="#629FF9" ></path><path d="M294.42 167c-113.62 0-205.77333333 92-205.77333333 205.31333333v336.72h411.39333333V372.31333333c0.15333333-113.31333333-92-205.31333333-205.62-205.31333333z" fill="#2166CC" ></path><path d="M519.97333333 627H216.98666667c-25.45333333 0-46-20.54666667-46-46V393.78c0-25.45333333 20.54666667-46 46-46h302.98666666c25.45333333 0 46 20.54666667 46 46V581c0 25.45333333-20.54666667 46-46 46z" fill="#D2E4FF" ></path><path d="M565.97333333 397a49.22 49.22 0 0 0-49.37333333-49.22H220.36c-27.29333333 0-49.37333333 22.08-49.37333333 49.22v10.27333333l179.4 94.60666667c11.34666667 5.98 24.84 5.98 36.18666666 0l179.4-94.60666667v-10.27333333z" fill="#FFFFFF" ></path><path d="M730.5 167h-427.8v0.46c109.78666667 4.29333333 197.49333333 94.3 197.49333333 205.00666667v336.72h411.39333334c27.29333333 0 49.37333333-22.08 49.37333333-49.22V397c0-126.96-103.19333333-230-230.46-230z" fill="#4E8DF6" ></path><path d="M845.80666667 52H681.12666667c-9.04666667 0-16.40666667 7.36-16.40666667 16.40666667v336.72a24.67133333 24.67133333 0 1 0 49.37333333 0V134.18666667h131.71333334c9.04666667 0 16.40666667-7.36 16.40666666-16.40666667V68.40666667c0-9.04666667-7.36-16.40666667-16.40666666-16.40666667z" fill="#2166CC" ></path><path d="M896.25333333 659.81333333h-35.11333333c-8.43333333 0-15.33333333-6.9-15.33333333-15.33333333v-35.11333333c0-8.43333333 6.9-15.33333333 15.33333333-15.33333334h35.11333333c8.43333333 0 15.33333333 6.9 15.33333334 15.33333334v35.11333333c0 8.58666667-6.9 15.33333333-15.33333334 15.33333333z" fill="#FFFFFF" ></path><path d="M88.8 709.18666667l-24.22666667 131.40666666c-9.66 54.43333333 26.83333333 98.59333333 81.26666667 98.59333334h213.9c54.58666667 0 106.56666667-44.16 116.22666667-98.59333334l23.15333333-131.40666666H88.8z" fill="#2974CE" ></path></symbol><symbol id="icon-gitHub" viewBox="0 0 1049 1024"><path d="M523.6581816 52C262.83923907 52 52 262.8401375 52 523.6581816c0 208.49703047 135.09433812 384.97758117 322.50789391 447.44906532 23.42658172 4.68531653 32.01647887-10.15136894 32.01647796-22.64584583 0-10.93210574-0.78163433-48.41463703-0.78163433-87.45953855-131.18885996 28.11189824-158.5200223-56.22379738-158.52002231-56.22379739-21.08437312-54.66232469-52.3201152-68.71827336-52.3201152-68.71827335-42.94858371-28.89353348 3.12384382-28.89353348 3.12384384-28.89353348 47.63479867 3.12384382 72.62285398 48.41643391 72.62285398 48.4164339 42.16784782 71.84121875 110.10538527 51.53758242 137.43654672 39.04400399 3.90457972-30.45500618 16.3990566-51.5393793 29.67427028-63.25222094-104.64023039-10.93300418-214.74561566-51.53848086-214.74561657-232.70524742 0-51.53848086 18.74126609-93.70632867 48.4164339-126.50444187-4.68621496-11.71284164-21.08527156-60.12837711 4.6844181-124.94207075 0 0 39.82563922-12.49447688 129.62738726 48.41463704 37.48253129-10.15136894 78.08980484-15.61742227 117.91454562-15.61742137s80.43201433 5.46605242 117.91454473 15.61742137c89.80264648-60.90911391 129.62828571-48.41463703 129.62828571-48.41463704 25.76879122 64.81369363 9.37063305 113.22922911 4.68531651 124.94207075 30.45410773 32.79721477 48.41463703 74.96506258 48.41463703 126.50444187 0 181.16676656-110.10538527 220.99150644-215.52545401 232.70524742 17.1797934 14.83668547 32.01647887 42.94858371 32.01647886 87.45953946 0 63.25222094-0.78163433 114.009965-0.78163523 129.62738636 0 12.49447688 8.59079468 27.33116234 32.01737731 22.64584583 187.41265734-62.4705866 322.50699547-238.95203574 322.50699546-447.44996375C995.31636231 262.8401375 783.69369203 52 523.6581816 52z" fill="#663399" ></path><path d="M230.82365863 729.03136735c-0.7807359 2.34310703-4.68531653 3.12384382-7.80916035 1.56237113s-5.46605242-4.68531653-3.90368129-7.02842356c0.7807359-2.34220859 4.68531653-3.12384382 7.80826192-1.56147269s4.68531653 4.68531653 3.90457972 7.02752512z m18.7412661 21.08437312c-2.34220859 2.34220859-7.02752512 0.78163433-9.37063305-2.34310703-3.12294539-3.12294539-3.90457972-7.80826192-1.5614727-10.15136894 2.34220859-2.34220859 6.24678922-0.7807359 9.37063305 2.34310702 3.12384382 3.90457972 3.90457972 8.58899782 1.5614727 10.15136895zM268.30618992 777.44690281c-3.12294539 2.34220859-7.80826192 0-10.15136895-3.90457972-3.12384382-3.90457972-3.12384382-9.37063305 0-10.93210574 3.12384382-2.34310703 7.80916035 0 10.15226739 3.90457972 3.12294539 3.90368129 3.12294539 8.58899782 0 10.93210574z m25.76968965 26.55042555c-2.34220859 3.12294539-7.80916035 2.34220859-12.49447688-1.56237113-3.90457972-3.90368129-5.46605242-9.37063305-2.34220859-11.71284164 2.34220859-3.12384382 7.80826192-2.34310703 12.49447687 1.56147269 3.90368129 3.12384382 4.68531653 8.58989625 2.3422086 11.71374008z m35.1403227 14.83668637c-0.78163433 3.90457972-6.24768766 5.46605242-11.71374008 3.90457972-5.46605242-1.5614727-8.58899782-6.24768766-7.80916036-9.37063305 0.78163433-3.90457972 6.24768766-5.46605242 11.71374009-3.90457972 5.46605242 1.5614727 8.58899782 5.46605242 7.80916035 9.37063305z m38.26416562 3.12384382c0 3.90457972-4.68621496 7.02752512-10.15226738 7.02752512-5.46605242 0-10.15226738-3.12294539-10.15226739-7.02752512s4.68621496-7.02842356 10.15226739-7.02842445c5.46605242 0 10.15226738 3.12384382 10.15226738 7.02842445z m35.92016106-6.24768766c0.78163433 3.90457972-3.12384382 7.80916035-8.58899872 8.58989625-5.46695086 0.78163433-10.15226738-1.5614727-10.93390172-5.46605241-0.77983747-3.90457972 3.12384382-7.80916035 8.5907947-8.58899872 5.46605242-0.78163433 10.15136894 1.56057426 10.93210574 5.46515488z m0 0" fill="#663399" ></path></symbol><symbol id="icon-bilibili" viewBox="0 0 1024 1024"><path d="M832.61667555 181.33447111h-164.32545185l74.45617778-74.45617778c12.84020148-12.84020148 12.84020148-30.8140563 0-43.65425778-12.84020148-12.84020148-30.8140563-12.84020148-43.65425778 0L573.2882963 189.04101925H450.04420741L324.2272237 63.23617185c-10.26730667-12.84020148-25.68040297-15.40096-41.08136295-7.70654815-2.57289482 0-2.57289482 2.57289482-5.13365334 5.13365333-12.84020148 12.84020148-12.84020148 30.8140563 0 43.65425779l77.02907259 77.02907259h-164.32545185c-89.86927408 0-164.32545185 74.45617778-164.32545185 164.32545184v408.24073483c0 87.29637925 74.45617778 161.75255703 164.32545185 161.75255703h25.68040296c0 30.8140563 25.68040297 53.92156445 53.92156444 53.92156444s53.92156445-25.68040297 53.92156445-53.92156444H704.23893333c2.57289482 30.8140563 28.24116148 53.92156445 59.05521778 51.34866964 28.24116148-2.57289482 48.78791111-23.10750815 51.34866964-51.34866964h20.53461333c89.86927408 0 164.32545185-74.45617778 164.32545184-164.32545186V343.09916445c-2.56075852-89.86927408-77.02907259-161.76469333-166.88621037-161.76469334z m-5.13365333 634.19429926H200.99527111c-33.37481482 0-59.05521778-28.24116148-61.61597629-61.61597629l-2.57289482-415.94728297c0-33.37481482 28.24116148-61.6159763 61.6159763-61.61597629h626.48775111c33.37481482 0 59.05521778 28.24116148 61.61597629 61.61597629l2.57289482 415.94728297c-2.57289482 35.93557333-28.24116148 61.6159763-61.6159763 61.61597629z" fill="#ff7299" ></path><path d="M403.82919111 417.55534222l15.40096 77.0290726-205.40681481 38.50846815-15.40096-77.0290726 205.40681481-38.50846815z m197.70026667 77.0290726l15.40096-77.0290726 205.40681481 38.50846815-15.40096 77.0290726-205.40681481-38.50846815z m41.08136297 161.75255703c0 2.57289482 0 7.70654815-2.57289483 10.26730667-12.84020148 28.24116148-41.08136297 46.2150163-74.45617777 48.78791111-20.53461333 0-41.08136297-10.26730667-53.92156445-25.68040296-15.40096 15.40096-33.37481482 25.68040297-53.92156445 25.68040296-30.8140563-2.57289482-59.05521778-20.53461333-74.45617777-48.78791111 0-2.57289482-2.57289482-5.13365333-2.57289481-10.26730667 0-10.26730667 7.70654815-17.97385482 17.97385481-20.53461333h2.57289482c7.70654815 0 12.84020148 2.57289482 15.40096 10.26730666 0 0 20.53461333 28.24116148 38.50846815 28.24116149 35.94770963 0 35.94770963-30.8140563 56.48232296-53.92156445 23.10750815 25.68040297 23.10750815 53.92156445 56.48232296 53.92156445 23.10750815 0 38.50846815-28.24116148 38.50846815-28.24116149 2.57289482-5.13365333 10.26730667-10.26730667 15.40096-10.26730666 10.26730667-2.57289482 17.97385482 5.13365333 20.53461333 15.40096v5.13365333h0.0364089z" fill="#ff7299" ></path></symbol></svg>',        o = (o = document.getElementsByTagName("script"))[o.length - 1].getAttribute("data-injectcss"),        p = function (c, l) {            l.parentNode.insertBefore(c, l);        };    if (o && !c.__iconfont__svg__cssinject__) {        c.__iconfont__svg__cssinject__ = !0;        try {            document.write(                "<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>"            );        } catch (c) {            console && console.log(c);        }    }    function d() {        i || ((i = !0), a());    }    function m() {        try {            t.documentElement.doScroll("left");        } catch (c) {            return void setTimeout(m, 50);        }        d();    }    (l = function () {        var c,            l = document.createElement("div");        (l.innerHTML = v),            (v = null),            (l = l.getElementsByTagName("svg")[0]) &&            (l.setAttribute("aria-hidden", "true"),                (l.style.position = "absolute"),                (l.style.width = 0),                (l.style.height = 0),                (l.style.overflow = "hidden"),                (l = l),                (c = document.body).firstChild ? p(l, c.firstChild) : c.appendChild(l));    }),        document.addEventListener            ? ~["complete", "loaded", "interactive"].indexOf(document.readyState)                ? setTimeout(l, 0)                : ((h = function () {                    document.removeEventListener("DOMContentLoaded", h, !1), l();                }),                    document.addEventListener("DOMContentLoaded", h, !1))            : document.attachEvent &&            ((a = l),                (t = c.document),                (i = !1),                m(),                (t.onreadystatechange = function () {                    "complete" == t.readyState && ((t.onreadystatechange = null), d());                }));})(window);]]></content>
      
    </entry>
    
    
  
</search>
